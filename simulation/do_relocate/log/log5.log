excute 13:40:18.295186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 1)
excute 13:40:18.298181 line       556                     i = i_j[0]
excute 13:40:18.301171 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:18.304129 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.307122 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:40:18.310114 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:18.313106 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:18.317095 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.320088 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:40:18.323079 line       556                     i = i_j[0]
excute 13:40:18.327070 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:18.333055 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.339048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:40:18.343026 line       556                     i = i_j[0]
excute 13:40:18.347029 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:18.350008 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.353000 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:18.356989 line       556                     i = i_j[0]
excute 13:40:18.361011 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:18.363004 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.366961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:18.369955 line       556                     i = i_j[0]
excute 13:40:18.373943 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:18.376935 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.379927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:40:18.382920 line       556                     i = i_j[0]
excute 13:40:18.385911 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:18.389902 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.392894 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:40:18.396884 line       556                     i = i_j[0]
excute 13:40:18.400878 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:18.403865 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.406857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 1)
excute 13:40:18.409850 line       556                     i = i_j[0]
excute 13:40:18.412841 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:18.415833 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.419828 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 1)
excute 13:40:18.422814 line       556                     i = i_j[0]
excute 13:40:18.425808 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:18.428798 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:18.432786 line       555                 for i_j in i_j_list:
excute 13:40:18.435779 line       581             self.write_matrix(
excute 13:40:18.438770 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:18.441762 line       583                 result_file_path,
excute 13:40:18.444756 line       584                 mode='a'
excute 13:40:18.450738 line       488         for t in time_steps:
excute Modified var:.. t = 8
excute 13:40:18.454728 line       489             if (t != self.TIME + 1):
excute 13:40:18.459716 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:18.462707 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:18.468690 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:18.472679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:18.476670 line       494                         if (i == j):
excute 13:40:18.479661 line       495                             continue
excute 13:40:18.482654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:18.487639 line       494                         if (i == j):
excute 13:40:18.490631 line       496                         i_j_list.append((
excute 13:40:18.493626 line       497                             i, j,
excute 13:40:18.498609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.501605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:18.506588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:18.509581 line       494                         if (i == j):
excute 13:40:18.513571 line       496                         i_j_list.append((
excute 13:40:18.516562 line       497                             i, j,
excute 13:40:18.520551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.523545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:40:18.527535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:18.533518 line       494                         if (i == j):
excute 13:40:18.539501 line       496                         i_j_list.append((
excute 13:40:18.545485 line       497                             i, j,
excute 13:40:18.552466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.569426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:40:18.582386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:18.591376 line       494                         if (i == j):
excute 13:40:18.595370 line       496                         i_j_list.append((
excute 13:40:18.598344 line       497                             i, j,
excute 13:40:18.603332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.608317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:18.611309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:18.615299 line       494                         if (i == j):
excute 13:40:18.618291 line       496                         i_j_list.append((
excute 13:40:18.622281 line       497                             i, j,
excute 13:40:18.627266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.629262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1)]
excute 13:40:18.635245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:18.639234 line       494                         if (i == j):
excute 13:40:18.643225 line       496                         i_j_list.append((
excute 13:40:18.648212 line       497                             i, j,
excute 13:40:18.650205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.654196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0)]
excute 13:40:18.659191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:18.673145 line       494                         if (i == j):
excute 13:40:18.678131 line       496                         i_j_list.append((
excute 13:40:18.682120 line       497                             i, j,
excute 13:40:18.688122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.693090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:18.696082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:18.700072 line       494                         if (i == j):
excute 13:40:18.706072 line       496                         i_j_list.append((
excute 13:40:18.710045 line       497                             i, j,
excute 13:40:18.714034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.717026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:40:18.720027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:18.723010 line       494                         if (i == j):
excute 13:40:18.726003 line       496                         i_j_list.append((
excute 13:40:18.728994 line       497                             i, j,
excute 13:40:18.731986 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.734983 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2)]
excute 13:40:18.737970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:18.740964 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:18.742957 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:18.746946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:18.748941 line       494                         if (i == j):
excute 13:40:18.751934 line       496                         i_j_list.append((
excute 13:40:18.755922 line       497                             i, j,
excute 13:40:18.757916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.760908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0)]
excute 13:40:18.763900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:18.766893 line       494                         if (i == j):
excute 13:40:18.769884 line       495                             continue
excute 13:40:18.772876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:18.775870 line       494                         if (i == j):
excute 13:40:18.779858 line       496                         i_j_list.append((
excute 13:40:18.781853 line       497                             i, j,
excute 13:40:18.784845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.787836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:40:18.790829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:18.793831 line       494                         if (i == j):
excute 13:40:18.796813 line       496                         i_j_list.append((
excute 13:40:18.799805 line       497                             i, j,
excute 13:40:18.803794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.807786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:40:18.812771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:18.816760 line       494                         if (i == j):
excute 13:40:18.821748 line       496                         i_j_list.append((
excute 13:40:18.825735 line       497                             i, j,
excute 13:40:18.828728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.830722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:40:18.833714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:18.836707 line       494                         if (i == j):
excute 13:40:18.840697 line       496                         i_j_list.append((
excute 13:40:18.842690 line       497                             i, j,
excute 13:40:18.845682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.848675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1)]
excute 13:40:18.850669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:18.854658 line       494                         if (i == j):
excute 13:40:18.857651 line       496                         i_j_list.append((
excute 13:40:18.860674 line       497                             i, j,
excute 13:40:18.863635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.865660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0)]
excute 13:40:18.868652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:18.871614 line       494                         if (i == j):
excute 13:40:18.874636 line       496                         i_j_list.append((
excute 13:40:18.878599 line       497                             i, j,
excute 13:40:18.881618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.884609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:40:18.887600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:18.890563 line       494                         if (i == j):
excute 13:40:18.893555 line       496                         i_j_list.append((
excute 13:40:18.896579 line       497                             i, j,
excute 13:40:18.899539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.901564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:40:18.904556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:18.907549 line       494                         if (i == j):
excute 13:40:18.910546 line       496                         i_j_list.append((
excute 13:40:18.913532 line       497                             i, j,
excute 13:40:18.916524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.919517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2)]
excute 13:40:18.922509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:18.925470 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:18.928462 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:18.931469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:18.933479 line       494                         if (i == j):
excute 13:40:18.936471 line       496                         i_j_list.append((
excute 13:40:18.939464 line       497                             i, j,
excute 13:40:18.942456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.945427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0)]
excute 13:40:18.947442 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:18.950434 line       494                         if (i == j):
excute 13:40:18.954405 line       496                         i_j_list.append((
excute 13:40:18.957385 line       497                             i, j,
excute 13:40:18.959409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.965364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:40:18.969352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:18.972376 line       494                         if (i == j):
excute 13:40:18.976334 line       495                             continue
excute 13:40:18.979327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:18.982323 line       494                         if (i == j):
excute 13:40:18.986307 line       496                         i_j_list.append((
excute 13:40:18.989331 line       497                             i, j,
excute 13:40:18.992322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:18.994317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:18.997310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:19.001266 line       494                         if (i == j):
excute 13:40:19.004292 line       496                         i_j_list.append((
excute 13:40:19.006285 line       497                             i, j,
excute 13:40:19.010244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.013236 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:19.017224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:19.021215 line       494                         if (i == j):
excute 13:40:19.024236 line       496                         i_j_list.append((
excute 13:40:19.027229 line       497                             i, j,
excute 13:40:19.030222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.033213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1)]
excute 13:40:19.036173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:19.039167 line       494                         if (i == j):
excute 13:40:19.043171 line       496                         i_j_list.append((
excute 13:40:19.045180 line       497                             i, j,
excute 13:40:19.048176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.051166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0)]
excute 13:40:19.054159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:19.057117 line       494                         if (i == j):
excute 13:40:19.060140 line       496                         i_j_list.append((
excute 13:40:19.063132 line       497                             i, j,
excute 13:40:19.066124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.068119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:19.071079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:19.075070 line       494                         if (i == j):
excute 13:40:19.079059 line       496                         i_j_list.append((
excute 13:40:19.082056 line       497                             i, j,
excute 13:40:19.085074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.089033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:19.092027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:19.095015 line       494                         if (i == j):
excute 13:40:19.098007 line       496                         i_j_list.append((
excute 13:40:19.100999 line       497                             i, j,
excute 13:40:19.103992 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.106986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2)]
excute 13:40:19.109977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:19.112970 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:19.115961 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:19.119951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:19.122940 line       494                         if (i == j):
excute 13:40:19.125933 line       496                         i_j_list.append((
excute 13:40:19.128924 line       497                             i, j,
excute 13:40:19.130920 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.133911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0)]
excute 13:40:19.136903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:19.139895 line       494                         if (i == j):
excute 13:40:19.142888 line       496                         i_j_list.append((
excute 13:40:19.145879 line       497                             i, j,
excute 13:40:19.147874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.150866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:40:19.153858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:19.156850 line       494                         if (i == j):
excute 13:40:19.160839 line       496                         i_j_list.append((
excute 13:40:19.162834 line       497                             i, j,
excute 13:40:19.165826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.168818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:19.170813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:19.174802 line       494                         if (i == j):
excute 13:40:19.177794 line       495                             continue
excute 13:40:19.179789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:19.182781 line       494                         if (i == j):
excute 13:40:19.187769 line       496                         i_j_list.append((
excute 13:40:19.189762 line       497                             i, j,
excute 13:40:19.192754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.195746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:19.197741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:19.201730 line       494                         if (i == j):
excute 13:40:19.204724 line       496                         i_j_list.append((
excute 13:40:19.207715 line       497                             i, j,
excute 13:40:19.209741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.212733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1)]
excute 13:40:19.216691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:19.219682 line       494                         if (i == j):
excute 13:40:19.222674 line       496                         i_j_list.append((
excute 13:40:19.225699 line       497                             i, j,
excute 13:40:19.227692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.230684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0)]
excute 13:40:19.233677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:19.236637 line       494                         if (i == j):
excute 13:40:19.239662 line       496                         i_j_list.append((
excute 13:40:19.242653 line       497                             i, j,
excute 13:40:19.245645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.247639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:19.250632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:19.253624 line       494                         if (i == j):
excute 13:40:19.257583 line       496                         i_j_list.append((
excute 13:40:19.260574 line       497                             i, j,
excute 13:40:19.262599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.265592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:19.268584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:19.271544 line       494                         if (i == j):
excute 13:40:19.275536 line       496                         i_j_list.append((
excute 13:40:19.277529 line       497                             i, j,
excute 13:40:19.281517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.283513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2)]
excute 13:40:19.287502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:19.291493 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:19.294515 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:19.297485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:19.300478 line       494                         if (i == j):
excute 13:40:19.303492 line       496                         i_j_list.append((
excute 13:40:19.305485 line       497                             i, j,
excute 13:40:19.308476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.311469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0)]
excute 13:40:19.314428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:19.317422 line       494                         if (i == j):
excute 13:40:19.320414 line       496                         i_j_list.append((
excute 13:40:19.323437 line       497                             i, j,
excute 13:40:19.325431 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.332384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:40:19.339364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:19.344352 line       494                         if (i == j):
excute 13:40:19.347343 line       496                         i_j_list.append((
excute 13:40:19.350335 line       497                             i, j,
excute 13:40:19.353327 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.358315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:40:19.361338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:19.364327 line       494                         if (i == j):
excute 13:40:19.368327 line       496                         i_j_list.append((
excute 13:40:19.371311 line       497                             i, j,
excute 13:40:19.374301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.376295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:40:19.379287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:19.382279 line       494                         if (i == j):
excute 13:40:19.386272 line       495                             continue
excute 13:40:19.390226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:19.393218 line       494                         if (i == j):
excute 13:40:19.397208 line       496                         i_j_list.append((
excute 13:40:19.400199 line       497                             i, j,
excute 13:40:19.403223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.406184 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1)]
excute 13:40:19.408211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:19.412182 line       494                         if (i == j):
excute 13:40:19.415169 line       496                         i_j_list.append((
excute 13:40:19.418151 line       497                             i, j,
excute 13:40:19.421144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.426130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0)]
excute 13:40:19.429124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:19.435107 line       494                         if (i == j):
excute 13:40:19.441092 line       496                         i_j_list.append((
excute 13:40:19.447074 line       497                             i, j,
excute 13:40:19.450066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.453058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:40:19.456050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:19.459042 line       494                         if (i == j):
excute 13:40:19.462034 line       496                         i_j_list.append((
excute 13:40:19.465028 line       497                             i, j,
excute 13:40:19.468020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.471012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:40:19.474004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:19.477994 line       494                         if (i == j):
excute 13:40:19.480985 line       496                         i_j_list.append((
excute 13:40:19.483978 line       497                             i, j,
excute 13:40:19.486970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.488964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2)]
excute 13:40:19.492956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:19.497941 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:19.499965 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:19.503923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:19.506916 line       494                         if (i == j):
excute 13:40:19.509906 line       496                         i_j_list.append((
excute 13:40:19.512898 line       497                             i, j,
excute 13:40:19.515890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.518882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0)]
excute 13:40:19.521874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:19.525865 line       494                         if (i == j):
excute 13:40:19.531848 line       496                         i_j_list.append((
excute 13:40:19.536835 line       497                             i, j,
excute 13:40:19.541821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.544813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:40:19.546809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:19.553789 line       494                         if (i == j):
excute 13:40:19.556780 line       496                         i_j_list.append((
excute 13:40:19.559773 line       497                             i, j,
excute 13:40:19.562764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.564760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:40:19.567751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:19.570743 line       494                         if (i == j):
excute 13:40:19.573735 line       496                         i_j_list.append((
excute 13:40:19.576727 line       497                             i, j,
excute 13:40:19.579719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.582712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:40:19.584707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:19.588697 line       494                         if (i == j):
excute 13:40:19.591692 line       496                         i_j_list.append((
excute 13:40:19.594681 line       497                             i, j,
excute 13:40:19.599667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.602658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:40:19.605650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:19.608643 line       494                         if (i == j):
excute 13:40:19.611634 line       495                             continue
excute 13:40:19.614627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:19.617618 line       494                         if (i == j):
excute 13:40:19.620610 line       496                         i_j_list.append((
excute 13:40:19.623602 line       497                             i, j,
excute 13:40:19.627598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.630585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:40:19.633576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:19.637566 line       494                         if (i == j):
excute 13:40:19.640558 line       496                         i_j_list.append((
excute 13:40:19.644555 line       497                             i, j,
excute 13:40:19.647553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.649566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:40:19.652558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:19.656514 line       494                         if (i == j):
excute 13:40:19.659538 line       496                         i_j_list.append((
excute 13:40:19.662530 line       497                             i, j,
excute 13:40:19.665524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.668516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:40:19.670510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:19.674501 line       494                         if (i == j):
excute 13:40:19.677461 line       496                         i_j_list.append((
excute 13:40:19.680462 line       497                             i, j,
excute 13:40:19.682477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.685468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2)]
excute 13:40:19.688460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:19.691452 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:19.694445 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:19.697438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:19.701396 line       494                         if (i == j):
excute 13:40:19.704387 line       496                         i_j_list.append((
excute 13:40:19.707378 line       497                             i, j,
excute 13:40:19.709373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.712365 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0)]
excute 13:40:19.715390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:19.719380 line       494                         if (i == j):
excute 13:40:19.722340 line       496                         i_j_list.append((
excute 13:40:19.725363 line       497                             i, j,
excute 13:40:19.727356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.730348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:40:19.733340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:19.736334 line       494                         if (i == j):
excute 13:40:19.740290 line       496                         i_j_list.append((
excute 13:40:19.742316 line       497                             i, j,
excute 13:40:19.745309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.748301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:40:19.751261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:19.754255 line       494                         if (i == j):
excute 13:40:19.757248 line       496                         i_j_list.append((
excute 13:40:19.761235 line       497                             i, j,
excute 13:40:19.763231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.766223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:40:19.770210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:19.773204 line       494                         if (i == j):
excute 13:40:19.777192 line       496                         i_j_list.append((
excute 13:40:19.779186 line       497                             i, j,
excute 13:40:19.782178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.785170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:40:19.788162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:19.791154 line       494                         if (i == j):
excute 13:40:19.794146 line       496                         i_j_list.append((
excute 13:40:19.797138 line       497                             i, j,
excute 13:40:19.799133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.803123 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1)]
excute 13:40:19.806114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:19.809106 line       494                         if (i == j):
excute 13:40:19.812098 line       495                             continue
excute 13:40:19.815090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:19.818082 line       494                         if (i == j):
excute 13:40:19.821074 line       496                         i_j_list.append((
excute 13:40:19.824066 line       497                             i, j,
excute 13:40:19.827060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.830052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0)]
excute 13:40:19.833044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:19.837033 line       494                         if (i == j):
excute 13:40:19.841022 line       496                         i_j_list.append((
excute 13:40:19.844015 line       497                             i, j,
excute 13:40:19.847007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.849002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:40:19.851993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:19.855984 line       494                         if (i == j):
excute 13:40:19.858976 line       496                         i_j_list.append((
excute 13:40:19.861997 line       497                             i, j,
excute 13:40:19.863991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.866983 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2)]
excute 13:40:19.869979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:19.872969 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:19.875960 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:19.878952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:19.881944 line       494                         if (i == j):
excute 13:40:19.884936 line       496                         i_j_list.append((
excute 13:40:19.887928 line       497                             i, j,
excute 13:40:19.890895 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.892914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0)]
excute 13:40:19.895906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:19.898899 line       494                         if (i == j):
excute 13:40:19.902856 line       496                         i_j_list.append((
excute 13:40:19.906851 line       497                             i, j,
excute 13:40:19.909837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.912829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:40:19.915824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:19.919811 line       494                         if (i == j):
excute 13:40:19.922802 line       496                         i_j_list.append((
excute 13:40:19.925795 line       497                             i, j,
excute 13:40:19.927789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.930780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:40:19.933773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:19.936765 line       494                         if (i == j):
excute 13:40:19.939758 line       496                         i_j_list.append((
excute 13:40:19.942761 line       497                             i, j,
excute 13:40:19.944776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.947768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:40:19.950759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:19.953752 line       494                         if (i == j):
excute 13:40:19.957712 line       496                         i_j_list.append((
excute 13:40:19.960734 line       497                             i, j,
excute 13:40:19.963694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.966687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:19.969679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:19.972671 line       494                         if (i == j):
excute 13:40:19.975663 line       496                         i_j_list.append((
excute 13:40:19.978655 line       497                             i, j,
excute 13:40:19.982643 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:19.985636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1)]
excute 13:40:19.988628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:19.991621 line       494                         if (i == j):
excute 13:40:19.995611 line       496                         i_j_list.append((
excute 13:40:19.998602 line       497                             i, j,
excute 13:40:20.001594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.003589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0)]
excute 13:40:20.007580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:20.012562 line       494                         if (i == j):
excute 13:40:20.016552 line       495                             continue
excute 13:40:20.019546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:20.022538 line       494                         if (i == j):
excute 13:40:20.029452 line       496                         i_j_list.append((
excute 13:40:20.032442 line       497                             i, j,
excute 13:40:20.035435 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.037429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:40:20.040421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:20.043413 line       494                         if (i == j):
excute 13:40:20.046405 line       496                         i_j_list.append((
excute 13:40:20.049397 line       497                             i, j,
excute 13:40:20.052389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.055381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2)]
excute 13:40:20.058373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:20.061365 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:20.064357 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:20.067350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:20.070341 line       494                         if (i == j):
excute 13:40:20.073333 line       496                         i_j_list.append((
excute 13:40:20.077323 line       497                             i, j,
excute 13:40:20.080315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.083307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0)]
excute 13:40:20.086299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:20.090288 line       494                         if (i == j):
excute 13:40:20.094278 line       496                         i_j_list.append((
excute 13:40:20.097270 line       497                             i, j,
excute 13:40:20.100274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.102255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:40:20.105248 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:20.108240 line       494                         if (i == j):
excute 13:40:20.113228 line       496                         i_j_list.append((
excute 13:40:20.116220 line       497                             i, j,
excute 13:40:20.118213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.121205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:40:20.124197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:20.127190 line       494                         if (i == j):
excute 13:40:20.130181 line       496                         i_j_list.append((
excute 13:40:20.133173 line       497                             i, j,
excute 13:40:20.136165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.139173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:40:20.142150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:20.145143 line       494                         if (i == j):
excute 13:40:20.148134 line       496                         i_j_list.append((
excute 13:40:20.151125 line       497                             i, j,
excute 13:40:20.154117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.157109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:40:20.160101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:20.163093 line       494                         if (i == j):
excute 13:40:20.166085 line       496                         i_j_list.append((
excute 13:40:20.169077 line       497                             i, j,
excute 13:40:20.172069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.174064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1)]
excute 13:40:20.177056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:20.180047 line       494                         if (i == j):
excute 13:40:20.183040 line       496                         i_j_list.append((
excute 13:40:20.186032 line       497                             i, j,
excute 13:40:20.189023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.191019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0)]
excute 13:40:20.194010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:20.197002 line       494                         if (i == j):
excute 13:40:20.200992 line       496                         i_j_list.append((
excute 13:40:20.202987 line       497                             i, j,
excute 13:40:20.205979 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.208971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:40:20.211964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:20.216951 line       494                         if (i == j):
excute 13:40:20.219942 line       495                             continue
excute 13:40:20.222934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:20.225926 line       494                         if (i == j):
excute 13:40:20.229916 line       496                         i_j_list.append((
excute 13:40:20.232908 line       497                             i, j,
excute 13:40:20.235899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.237894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2)]
excute 13:40:20.240885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:20.246074 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:20.249100 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:20.252092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:20.256051 line       494                         if (i == j):
excute 13:40:20.262035 line       496                         i_j_list.append((
excute 13:40:20.268018 line       497                             i, j,
excute 13:40:20.270012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.275000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0)]
excute 13:40:20.280983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:20.284974 line       494                         if (i == j):
excute 13:40:20.288965 line       496                         i_j_list.append((
excute 13:40:20.293948 line       497                             i, j,
excute 13:40:20.296942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.299934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:40:20.302926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:20.306915 line       494                         if (i == j):
excute 13:40:20.309908 line       496                         i_j_list.append((
excute 13:40:20.312929 line       497                             i, j,
excute 13:40:20.315923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.318885 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:40:20.321907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:20.326862 line       494                         if (i == j):
excute 13:40:20.335837 line       496                         i_j_list.append((
excute 13:40:20.340824 line       497                             i, j,
excute 13:40:20.343817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.346810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:40:20.349801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:20.356815 line       494                         if (i == j):
excute 13:40:20.360771 line       496                         i_j_list.append((
excute 13:40:20.363763 line       497                             i, j,
excute 13:40:20.369779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.375731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:40:20.379745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:20.382737 line       494                         if (i == j):
excute 13:40:20.385730 line       496                         i_j_list.append((
excute 13:40:20.388728 line       497                             i, j,
excute 13:40:20.391719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.394710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1)]
excute 13:40:20.398671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:20.402658 line       494                         if (i == j):
excute 13:40:20.406647 line       496                         i_j_list.append((
excute 13:40:20.410637 line       497                             i, j,
excute 13:40:20.413632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.418647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0)]
excute 13:40:20.425630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:20.429587 line       494                         if (i == j):
excute 13:40:20.432577 line       496                         i_j_list.append((
excute 13:40:20.435569 line       497                             i, j,
excute 13:40:20.439591 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.442582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:40:20.445575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:20.449569 line       494                         if (i == j):
excute 13:40:20.452527 line       496                         i_j_list.append((
excute 13:40:20.456514 line       497                             i, j,
excute 13:40:20.460502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:20.466489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 1), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 1), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 2), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 1), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 2), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 1), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:40:20.469479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:20.473470 line       494                         if (i == j):
excute 13:40:20.477460 line       495                             continue
excute 13:40:20.480451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:20.483444 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:20.486436 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 5, 0, 1), (4, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (1, 5, 1, 1), (3, 5, 1, 1), (1, 9, 1, 2), (3, 9, 1, 2), (5, 9, 1, 2), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (0, 5, 2, 1), (2, 5, 2, 1), (7, 5, 2, 1), (8, 5, 2, 1), (9, 5, 2, 1), (0, 9, 2, 2), (2, 9, 2, 2), (7, 9, 2, 2), (8, 9, 2, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 5, 3, 1), (6, 9, 3, 2)]
excute 13:40:20.490457 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:20.493448 line       505                     if (self.RELOCATE):
excute 13:40:20.497405 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:20.499431 line       505                     if (self.RELOCATE):
excute 13:40:20.503390 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:20.506382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:40:20.509405 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:20.513397 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:20.516388 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.519376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:40:20.524336 line       556                     i = i_j[0]
excute 13:40:20.528325 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:20.531315 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.534307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:40:20.537299 line       556                     i = i_j[0]
excute 13:40:20.541289 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:20.544281 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.548271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:40:20.551263 line       556                     i = i_j[0]
excute 13:40:20.555251 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:20.558244 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.561234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:40:20.566230 line       556                     i = i_j[0]
excute 13:40:20.569212 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:20.572204 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.576196 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:40:20.579198 line       556                     i = i_j[0]
excute 13:40:20.582181 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:20.585171 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.589162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:40:20.592155 line       556                     i = i_j[0]
excute 13:40:20.596143 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:20.598137 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.602125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 1)
excute 13:40:20.604121 line       556                     i = i_j[0]
excute 13:40:20.608111 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:20.610105 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.614095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 2)
excute 13:40:20.616089 line       556                     i = i_j[0]
excute 13:40:20.620077 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:20.623071 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.628058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:40:20.632046 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:20.635037 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:20.639027 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.642020 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:40:20.645010 line       556                     i = i_j[0]
excute 13:40:20.648004 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:20.650996 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.653988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:40:20.656978 line       556                     i = i_j[0]
excute 13:40:20.659971 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:20.662963 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.665957 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:40:20.668946 line       556                     i = i_j[0]
excute 13:40:20.671939 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:20.674930 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.677953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:40:20.680947 line       556                     i = i_j[0]
excute 13:40:20.683939 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:20.686930 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.689922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:40:20.692914 line       556                     i = i_j[0]
excute 13:40:20.695906 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:20.698897 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.701890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:40:20.704883 line       556                     i = i_j[0]
excute 13:40:20.707874 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:20.711832 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.715827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:20.717817 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:20.721806 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:20.724798 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.729787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:20.732809 line       556                     i = i_j[0]
excute 13:40:20.735800 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:20.738791 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.741782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:20.744776 line       556                     i = i_j[0]
excute 13:40:20.747770 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:20.750759 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.753752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:20.756742 line       556                     i = i_j[0]
excute 13:40:20.760736 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:20.762727 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.766718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:20.768713 line       556                     i = i_j[0]
excute 13:40:20.772670 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:20.775692 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.778686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:20.781676 line       556                     i = i_j[0]
excute 13:40:20.784670 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:20.787661 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.790651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:20.793644 line       556                     i = i_j[0]
excute 13:40:20.796636 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:20.799628 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.802620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:40:20.805616 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:20.808606 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:20.812595 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.815561 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:40:20.818577 line       556                     i = i_j[0]
excute 13:40:20.821538 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:20.824564 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.827537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:40:20.831514 line       556                     i = i_j[0]
excute 13:40:20.835503 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:20.838493 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.841484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:40:20.844479 line       556                     i = i_j[0]
excute 13:40:20.847470 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:20.850463 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.854452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:40:20.857473 line       556                     i = i_j[0]
excute 13:40:20.860466 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:20.863457 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.866450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:40:20.869441 line       556                     i = i_j[0]
excute 13:40:20.872435 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:20.875427 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.878422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:40:20.881410 line       556                     i = i_j[0]
excute 13:40:20.884401 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:20.887393 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.891352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:40:20.893377 line       556                     i = i_j[0]
excute 13:40:20.896372 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:20.899363 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.903321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 1)
excute 13:40:20.906343 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:20.909303 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:20.912329 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.915321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 1)
excute 13:40:20.919277 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:20.922281 line       557                     j = i_j[1]
excute 13:40:20.925261 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.928286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 2)
excute 13:40:20.931279 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:20.936234 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:20.940223 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.943213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 2)
excute 13:40:20.946207 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:20.949198 line       557                     j = i_j[1]
excute 13:40:20.952191 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.955213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 2)
excute 13:40:20.958204 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:20.961196 line       557                     j = i_j[1]
excute 13:40:20.965160 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:20.968180 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 21
excute 13:40:20.971171 line       560                         if (t_tmp > self.TIME):
excute 13:40:20.974130 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:20.977155 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:20.980114 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:20.982139 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:20.985132 line       569                                     available_vhecles[i][t],
excute 13:40:20.988125 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:20.991117 line       571                                     self.S_capacities[j],
excute 13:40:20.993111 line       572                                     demands[t][i][j],
excute 13:40:20.996103 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 8
calc_contract     13:40:20.999094 call       352     def caluculate_contract(
calc_contract     13:40:21.002089 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:21.003055 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:21.003055 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:21.004052 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:21.005050 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:21.005050 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:21.007076 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:21.008041 line       575                                 rsf += rsf_tmp
excute 13:40:21.011064 line       576                                 rse += rse_tmp
excute 13:40:21.014055 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 8
move_cars     Starting var:.. t_tmp = 21
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:21.017015 call       388     def move_cars(
move_cars     13:40:21.020010 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:21.022005 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     13:40:21.023033 line       399         return available_vhecles
move_cars     13:40:21.024996 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:40:21.027023 line       579                                 success += can_contract
excute Modified var:.. success = 7
excute 13:40:21.031011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:21.034980 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:21.038990 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:21.041980 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.045971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:21.048930 line       556                     i = i_j[0]
excute 13:40:21.051923 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:21.054947 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.057907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:21.060930 line       556                     i = i_j[0]
excute 13:40:21.063892 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:21.066915 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.069906 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:21.072866 line       556                     i = i_j[0]
excute 13:40:21.075891 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:21.078882 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.082840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:21.085831 line       556                     i = i_j[0]
excute 13:40:21.090818 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:21.096805 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.103785 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:21.109767 line       556                     i = i_j[0]
excute 13:40:21.112761 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:21.115753 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.119742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:21.122735 line       556                     i = i_j[0]
excute 13:40:21.125725 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:21.128719 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.131711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:21.134732 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:21.138692 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:21.142711 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.146670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:21.149661 line       556                     i = i_j[0]
excute 13:40:21.152655 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:21.155647 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.159637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:21.162627 line       556                     i = i_j[0]
excute 13:40:21.165621 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:21.167615 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.171604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:21.174594 line       556                     i = i_j[0]
excute 13:40:21.177588 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:21.179583 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.183572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:21.186562 line       556                     i = i_j[0]
excute 13:40:21.192547 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:21.198531 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.201522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:21.205511 line       556                     i = i_j[0]
excute 13:40:21.210499 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:21.213492 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.217482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:40:21.220473 line       556                     i = i_j[0]
excute 13:40:21.223463 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:21.226457 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.230447 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:21.232441 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:21.236448 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:21.239421 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.243412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:21.246403 line       556                     i = i_j[0]
excute 13:40:21.250393 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:21.253384 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.258372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:21.261363 line       556                     i = i_j[0]
excute 13:40:21.266349 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:21.270340 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.276325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:21.279314 line       556                     i = i_j[0]
excute 13:40:21.285299 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:21.290285 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.293277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:21.296269 line       556                     i = i_j[0]
excute 13:40:21.302255 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:21.306245 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.311230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:21.315219 line       556                     i = i_j[0]
excute 13:40:21.323198 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:21.334170 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.342148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:21.349131 line       556                     i = i_j[0]
excute 13:40:21.357109 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:21.366083 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.370075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:40:21.375059 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:21.379051 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:21.387027 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.395006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:40:21.401987 line       556                     i = i_j[0]
excute 13:40:21.408969 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:21.415950 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.421934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:40:21.426920 line       556                     i = i_j[0]
excute 13:40:21.433901 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:21.439886 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.447864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:40:21.452853 line       556                     i = i_j[0]
excute 13:40:21.460830 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:21.465817 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.470803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:21.474793 line       556                     i = i_j[0]
excute 13:40:21.481773 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:21.487757 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.495737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:40:21.501720 line       556                     i = i_j[0]
excute 13:40:21.507705 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:21.513689 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.517678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:40:21.524658 line       556                     i = i_j[0]
excute 13:40:21.531640 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:21.536626 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.543609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:40:21.549591 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:21.557571 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:21.565549 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.572531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:40:21.579512 line       556                     i = i_j[0]
excute 13:40:21.585496 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:21.591480 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.598463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:40:21.604447 line       556                     i = i_j[0]
excute 13:40:21.612427 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:21.617411 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.622400 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:40:21.627384 line       556                     i = i_j[0]
excute 13:40:21.633368 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:21.639351 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.646333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:40:21.652318 line       556                     i = i_j[0]
excute 13:40:21.659299 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:21.666279 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.671266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:40:21.676254 line       556                     i = i_j[0]
excute 13:40:21.681240 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:21.688221 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.695203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:40:21.702185 line       556                     i = i_j[0]
excute 13:40:21.708169 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:21.712158 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.719139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:40:21.723129 line       556                     i = i_j[0]
excute 13:40:21.727117 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:21.730109 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.733100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 1)
excute 13:40:21.736093 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:21.739085 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:21.742077 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.746068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 1)
excute 13:40:21.749059 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:21.752052 line       557                     j = i_j[1]
excute 13:40:21.755043 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.759033 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 1)
excute 13:40:21.762023 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:21.766015 line       557                     j = i_j[1]
excute 13:40:21.769006 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.771998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 1)
excute 13:40:21.774990 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:21.777982 line       557                     j = i_j[1]
excute 13:40:21.780973 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.783967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 1)
excute 13:40:21.786957 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:21.789950 line       557                     j = i_j[1]
excute 13:40:21.792941 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.795933 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:40:21.798925 line       560                         if (t_tmp > self.TIME):
excute 13:40:21.801918 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:21.803943 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:21.806935 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:21.809927 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:21.812910 line       569                                     available_vhecles[i][t],
excute 13:40:21.814914 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:21.817908 line       571                                     self.S_capacities[j],
excute 13:40:21.820898 line       572                                     demands[t][i][j],
excute 13:40:21.823891 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 8
calc_contract     13:40:21.826851 call       352     def caluculate_contract(
calc_contract     13:40:21.829842 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:21.829842 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:21.830852 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:21.831839 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:21.831839 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:21.832837 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:21.833836 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:21.834831 line       575                                 rsf += rsf_tmp
excute 13:40:21.837854 line       576                                 rse += rse_tmp
excute 13:40:21.840846 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 8
move_cars     Starting var:.. t_tmp = 21
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:21.843838 call       388     def move_cars(
move_cars     13:40:21.847794 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:40:21.848826 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:21.850796 line       399         return available_vhecles
move_cars     13:40:21.851817 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:21.853780 line       579                                 success += can_contract
excute Modified var:.. success = 8
excute 13:40:21.857768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 2)
excute 13:40:21.861763 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:21.864782 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:21.868739 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.871731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 2)
excute 13:40:21.874722 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:21.877721 line       557                     j = i_j[1]
excute 13:40:21.880707 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.883700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 2)
excute 13:40:21.887689 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:21.891690 line       557                     j = i_j[1]
excute 13:40:21.894671 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.897663 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 17
excute 13:40:21.901652 line       560                         if (t_tmp > self.TIME):
excute 13:40:21.905643 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:21.908633 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 2
excute 13:40:21.911626 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:21.915614 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:21.918636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 2)
excute 13:40:21.921632 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:21.924594 line       557                     j = i_j[1]
excute 13:40:21.927613 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.930604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:40:21.933599 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:21.936584 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:21.939580 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.943548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:40:21.945565 line       556                     i = i_j[0]
excute 13:40:21.949557 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:21.951548 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.955508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:40:21.958531 line       556                     i = i_j[0]
excute 13:40:21.961490 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:21.966478 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.972463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:21.975485 line       556                     i = i_j[0]
excute 13:40:21.978456 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:21.981471 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.984463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:21.987452 line       556                     i = i_j[0]
excute 13:40:21.991411 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:21.994404 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:21.997397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:40:22.000389 line       556                     i = i_j[0]
excute 13:40:22.004378 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:22.008365 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:22.012354 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:40:22.015346 line       556                     i = i_j[0]
excute 13:40:22.022328 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:22.028313 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:22.031307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 1)
excute 13:40:22.034296 line       556                     i = i_j[0]
excute 13:40:22.038287 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:22.041277 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:22.044270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 2)
excute 13:40:22.047275 line       556                     i = i_j[0]
excute 13:40:22.050255 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:22.053279 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:22.056271 line       555                 for i_j in i_j_list:
excute 13:40:22.059261 line       581             self.write_matrix(
excute 13:40:22.062254 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:22.067242 line       583                 result_file_path,
excute 13:40:22.070227 line       584                 mode='a'
excute 13:40:22.078179 line       488         for t in time_steps:
excute Modified var:.. t = 9
excute 13:40:22.081173 line       489             if (t != self.TIME + 1):
excute 13:40:22.085161 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:22.090147 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:22.095134 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:22.099125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:22.104111 line       494                         if (i == j):
excute 13:40:22.110093 line       495                             continue
excute 13:40:22.115079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:22.120066 line       494                         if (i == j):
excute 13:40:22.124057 line       496                         i_j_list.append((
excute 13:40:22.129047 line       497                             i, j,
excute 13:40:22.134061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.137021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:22.141011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:22.144004 line       494                         if (i == j):
excute 13:40:22.147992 line       496                         i_j_list.append((
excute 13:40:22.150986 line       497                             i, j,
excute 13:40:22.154973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.157965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:40:22.162983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:22.166976 line       494                         if (i == j):
excute 13:40:22.178911 line       496                         i_j_list.append((
excute 13:40:22.183896 line       497                             i, j,
excute 13:40:22.191885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.199859 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:40:22.202846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:22.209827 line       494                         if (i == j):
excute 13:40:22.212819 line       496                         i_j_list.append((
excute 13:40:22.216808 line       497                             i, j,
excute 13:40:22.221795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.225784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:22.230772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:22.234760 line       494                         if (i == j):
excute 13:40:22.240746 line       496                         i_j_list.append((
excute 13:40:22.243736 line       497                             i, j,
excute 13:40:22.246729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.250718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:22.253709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:22.257700 line       494                         if (i == j):
excute 13:40:22.263683 line       496                         i_j_list.append((
excute 13:40:22.268669 line       497                             i, j,
excute 13:40:22.270664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.274654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:22.278644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:22.284628 line       494                         if (i == j):
excute 13:40:22.287619 line       496                         i_j_list.append((
excute 13:40:22.292610 line       497                             i, j,
excute 13:40:22.299591 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.303576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:22.309580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:22.314547 line       494                         if (i == j):
excute 13:40:22.319535 line       496                         i_j_list.append((
excute 13:40:22.322526 line       497                             i, j,
excute 13:40:22.325519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.334503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:40:22.341476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:22.349454 line       494                         if (i == j):
excute 13:40:22.354441 line       496                         i_j_list.append((
excute 13:40:22.359428 line       497                             i, j,
excute 13:40:22.363416 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.367416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:40:22.371395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:22.375393 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:22.378376 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:22.384362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:22.387353 line       494                         if (i == j):
excute 13:40:22.392341 line       496                         i_j_list.append((
excute 13:40:22.395331 line       497                             i, j,
excute 13:40:22.400318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.403318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0)]
excute 13:40:22.408301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:22.412286 line       494                         if (i == j):
excute 13:40:22.416276 line       495                             continue
excute 13:40:22.419267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:22.424253 line       494                         if (i == j):
excute 13:40:22.430238 line       496                         i_j_list.append((
excute 13:40:22.435224 line       497                             i, j,
excute 13:40:22.438216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.443202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:40:22.446195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:22.452181 line       494                         if (i == j):
excute 13:40:22.455174 line       496                         i_j_list.append((
excute 13:40:22.458163 line       497                             i, j,
excute 13:40:22.460157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.463149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:40:22.466141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:22.469134 line       494                         if (i == j):
excute 13:40:22.472126 line       496                         i_j_list.append((
excute 13:40:22.475117 line       497                             i, j,
excute 13:40:22.478110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.480104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:40:22.483096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:22.488084 line       494                         if (i == j):
excute 13:40:22.491076 line       496                         i_j_list.append((
excute 13:40:22.494067 line       497                             i, j,
excute 13:40:22.497059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.500052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:40:22.502046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:22.506035 line       494                         if (i == j):
excute 13:40:22.509028 line       496                         i_j_list.append((
excute 13:40:22.512022 line       497                             i, j,
excute 13:40:22.515012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.518004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:40:22.520997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:22.523989 line       494                         if (i == j):
excute 13:40:22.527978 line       496                         i_j_list.append((
excute 13:40:22.530970 line       497                             i, j,
excute 13:40:22.533962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.536954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:40:22.539946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:22.543937 line       494                         if (i == j):
excute 13:40:22.546928 line       496                         i_j_list.append((
excute 13:40:22.549919 line       497                             i, j,
excute 13:40:22.552912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.555935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:40:22.558893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:22.561887 line       494                         if (i == j):
excute 13:40:22.564878 line       496                         i_j_list.append((
excute 13:40:22.567903 line       497                             i, j,
excute 13:40:22.569896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.572888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:40:22.575881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:22.578851 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:22.581864 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:22.584826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:22.587819 line       494                         if (i == j):
excute 13:40:22.591806 line       496                         i_j_list.append((
excute 13:40:22.594800 line       497                             i, j,
excute 13:40:22.596794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.599786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:40:22.602778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:22.606769 line       494                         if (i == j):
excute 13:40:22.609758 line       496                         i_j_list.append((
excute 13:40:22.612782 line       497                             i, j,
excute 13:40:22.615773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.618738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:40:22.620761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:22.623752 line       494                         if (i == j):
excute 13:40:22.627745 line       495                             continue
excute 13:40:22.629706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:22.634692 line       494                         if (i == j):
excute 13:40:22.637699 line       496                         i_j_list.append((
excute 13:40:22.640675 line       497                             i, j,
excute 13:40:22.642701 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.645693 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:22.648685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:22.651645 line       494                         if (i == j):
excute 13:40:22.655636 line       496                         i_j_list.append((
excute 13:40:22.658630 line       497                             i, j,
excute 13:40:22.661620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.663615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:22.666607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:22.670596 line       494                         if (i == j):
excute 13:40:22.673589 line       496                         i_j_list.append((
excute 13:40:22.676580 line       497                             i, j,
excute 13:40:22.679572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.682565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:22.684559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:22.688550 line       494                         if (i == j):
excute 13:40:22.693534 line       496                         i_j_list.append((
excute 13:40:22.696558 line       497                             i, j,
excute 13:40:22.698551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.701543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:22.704535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:22.707530 line       494                         if (i == j):
excute 13:40:22.711485 line       496                         i_j_list.append((
excute 13:40:22.714479 line       497                             i, j,
excute 13:40:22.718468 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.721459 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:22.724453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:22.727445 line       494                         if (i == j):
excute 13:40:22.731433 line       496                         i_j_list.append((
excute 13:40:22.734425 line       497                             i, j,
excute 13:40:22.737417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.741406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:22.743401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:22.747390 line       494                         if (i == j):
excute 13:40:22.758819 line       496                         i_j_list.append((
excute 13:40:22.761840 line       497                             i, j,
excute 13:40:22.764837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.767829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:40:22.770813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:22.773782 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:22.776806 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:22.779765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:22.782794 line       494                         if (i == j):
excute 13:40:22.785759 line       496                         i_j_list.append((
excute 13:40:22.788772 line       497                             i, j,
excute 13:40:22.790770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.794726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:40:22.797717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:22.801707 line       494                         if (i == j):
excute 13:40:22.804698 line       496                         i_j_list.append((
excute 13:40:22.807697 line       497                             i, j,
excute 13:40:22.809685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.812677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:40:22.815668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:22.818660 line       494                         if (i == j):
excute 13:40:22.821653 line       496                         i_j_list.append((
excute 13:40:22.824644 line       497                             i, j,
excute 13:40:22.827636 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.829631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:22.832623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:22.835615 line       494                         if (i == j):
excute 13:40:22.840603 line       495                             continue
excute 13:40:22.842628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:22.845620 line       494                         if (i == j):
excute 13:40:22.848613 line       496                         i_j_list.append((
excute 13:40:22.851604 line       497                             i, j,
excute 13:40:22.854599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.857559 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:22.860550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:22.864542 line       494                         if (i == j):
excute 13:40:22.867533 line       496                         i_j_list.append((
excute 13:40:22.870524 line       497                             i, j,
excute 13:40:22.873516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.876515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:22.879498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:22.882492 line       494                         if (i == j):
excute 13:40:22.886480 line       496                         i_j_list.append((
excute 13:40:22.892471 line       497                             i, j,
excute 13:40:22.897451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.900442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:22.903434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:22.909418 line       494                         if (i == j):
excute 13:40:22.913407 line       496                         i_j_list.append((
excute 13:40:22.916399 line       497                             i, j,
excute 13:40:22.919392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.921388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:22.925376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:22.928370 line       494                         if (i == j):
excute 13:40:22.931361 line       496                         i_j_list.append((
excute 13:40:22.934354 line       497                             i, j,
excute 13:40:22.937345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.940337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:22.943329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:22.947331 line       494                         if (i == j):
excute 13:40:22.950312 line       496                         i_j_list.append((
excute 13:40:22.952305 line       497                             i, j,
excute 13:40:22.956295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.959287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:40:22.962279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:22.965270 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:22.969259 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:22.972250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:22.974247 line       494                         if (i == j):
excute 13:40:22.978234 line       496                         i_j_list.append((
excute 13:40:22.981228 line       497                             i, j,
excute 13:40:22.984219 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:22.990202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0)]
excute 13:40:22.993195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:22.996188 line       494                         if (i == j):
excute 13:40:22.999180 line       496                         i_j_list.append((
excute 13:40:23.003170 line       497                             i, j,
excute 13:40:23.005163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.008155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:40:23.011147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:23.014139 line       494                         if (i == j):
excute 13:40:23.018129 line       496                         i_j_list.append((
excute 13:40:23.020123 line       497                             i, j,
excute 13:40:23.023115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.026108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:40:23.030097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:23.034086 line       494                         if (i == j):
excute 13:40:23.038085 line       496                         i_j_list.append((
excute 13:40:23.041068 line       497                             i, j,
excute 13:40:23.044060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.047050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:40:23.049046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:23.053037 line       494                         if (i == j):
excute 13:40:23.056026 line       495                             continue
excute 13:40:23.059018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:23.062010 line       494                         if (i == j):
excute 13:40:23.065002 line       496                         i_j_list.append((
excute 13:40:23.067994 line       497                             i, j,
excute 13:40:23.070986 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.073980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:40:23.076970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:23.079962 line       494                         if (i == j):
excute 13:40:23.082954 line       496                         i_j_list.append((
excute 13:40:23.085946 line       497                             i, j,
excute 13:40:23.088938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.091930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:40:23.093925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:23.097914 line       494                         if (i == j):
excute 13:40:23.101908 line       496                         i_j_list.append((
excute 13:40:23.104927 line       497                             i, j,
excute 13:40:23.107890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.110880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:40:23.114871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:23.118859 line       494                         if (i == j):
excute 13:40:23.121850 line       496                         i_j_list.append((
excute 13:40:23.124854 line       497                             i, j,
excute 13:40:23.126837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.129829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:40:23.132820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:23.135813 line       494                         if (i == j):
excute 13:40:23.138805 line       496                         i_j_list.append((
excute 13:40:23.141797 line       497                             i, j,
excute 13:40:23.144788 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.147781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:40:23.150775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:23.153766 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:23.156757 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:23.159750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:23.162742 line       494                         if (i == j):
excute 13:40:23.166731 line       496                         i_j_list.append((
excute 13:40:23.168726 line       497                             i, j,
excute 13:40:23.171718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.174710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0)]
excute 13:40:23.177702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:23.181691 line       494                         if (i == j):
excute 13:40:23.184685 line       496                         i_j_list.append((
excute 13:40:23.188673 line       497                             i, j,
excute 13:40:23.190667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.193659 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:40:23.196651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:23.200641 line       494                         if (i == j):
excute 13:40:23.204630 line       496                         i_j_list.append((
excute 13:40:23.207621 line       497                             i, j,
excute 13:40:23.210613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.213605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:40:23.216597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:23.220587 line       494                         if (i == j):
excute 13:40:23.223578 line       496                         i_j_list.append((
excute 13:40:23.225573 line       497                             i, j,
excute 13:40:23.228565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.231557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:40:23.233552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:23.237548 line       494                         if (i == j):
excute 13:40:23.240547 line       496                         i_j_list.append((
excute 13:40:23.242528 line       497                             i, j,
excute 13:40:23.245519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.248512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:40:23.250506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:23.254496 line       494                         if (i == j):
excute 13:40:23.257487 line       495                             continue
excute 13:40:23.260479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:23.263471 line       494                         if (i == j):
excute 13:40:23.266463 line       496                         i_j_list.append((
excute 13:40:23.269456 line       497                             i, j,
excute 13:40:23.271450 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.274442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:40:23.277434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:23.280427 line       494                         if (i == j):
excute 13:40:23.284428 line       496                         i_j_list.append((
excute 13:40:23.287409 line       497                             i, j,
excute 13:40:23.289403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.293392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:40:23.296385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:23.299377 line       494                         if (i == j):
excute 13:40:23.302368 line       496                         i_j_list.append((
excute 13:40:23.305360 line       497                             i, j,
excute 13:40:23.310347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.313339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:40:23.316331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:23.320320 line       494                         if (i == j):
excute 13:40:23.323313 line       496                         i_j_list.append((
excute 13:40:23.328300 line       497                             i, j,
excute 13:40:23.334285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.339270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:40:23.344256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:23.347247 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:23.350239 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:23.354230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:23.357223 line       494                         if (i == j):
excute 13:40:23.361226 line       496                         i_j_list.append((
excute 13:40:23.364235 line       497                             i, j,
excute 13:40:23.367226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.370232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0)]
excute 13:40:23.373215 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:23.376206 line       494                         if (i == j):
excute 13:40:23.379162 line       496                         i_j_list.append((
excute 13:40:23.382155 line       497                             i, j,
excute 13:40:23.385146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.388139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:40:23.391130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:23.395134 line       494                         if (i == j):
excute 13:40:23.398112 line       496                         i_j_list.append((
excute 13:40:23.401105 line       497                             i, j,
excute 13:40:23.404095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.407088 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:40:23.410082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:23.414071 line       494                         if (i == j):
excute 13:40:23.417061 line       496                         i_j_list.append((
excute 13:40:23.420053 line       497                             i, j,
excute 13:40:23.423045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.425040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:40:23.428064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:23.431055 line       494                         if (i == j):
excute 13:40:23.435017 line       496                         i_j_list.append((
excute 13:40:23.438032 line       497                             i, j,
excute 13:40:23.440031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.443023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:40:23.446015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:23.449974 line       494                         if (i == j):
excute 13:40:23.452966 line       496                         i_j_list.append((
excute 13:40:23.455959 line       497                             i, j,
excute 13:40:23.458951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.463937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:40:23.467930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:23.471915 line       494                         if (i == j):
excute 13:40:23.474906 line       495                             continue
excute 13:40:23.477898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:23.480890 line       494                         if (i == j):
excute 13:40:23.483882 line       496                         i_j_list.append((
excute 13:40:23.486874 line       497                             i, j,
excute 13:40:23.489866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.492860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:40:23.496849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:23.499842 line       494                         if (i == j):
excute 13:40:23.503831 line       496                         i_j_list.append((
excute 13:40:23.507818 line       497                             i, j,
excute 13:40:23.509813 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.514832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:40:23.517825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:23.520815 line       494                         if (i == j):
excute 13:40:23.524775 line       496                         i_j_list.append((
excute 13:40:23.527765 line       497                             i, j,
excute 13:40:23.530757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.532752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:40:23.535744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:23.538735 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:23.541759 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:23.545720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:23.547714 line       494                         if (i == j):
excute 13:40:23.551704 line       496                         i_j_list.append((
excute 13:40:23.554695 line       497                             i, j,
excute 13:40:23.557716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.560709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0)]
excute 13:40:23.563701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:23.566662 line       494                         if (i == j):
excute 13:40:23.569656 line       496                         i_j_list.append((
excute 13:40:23.573644 line       497                             i, j,
excute 13:40:23.576636 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.579628 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:40:23.582621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:23.586610 line       494                         if (i == j):
excute 13:40:23.589632 line       496                         i_j_list.append((
excute 13:40:23.592624 line       497                             i, j,
excute 13:40:23.595616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.597610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:40:23.600570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:23.606555 line       494                         if (i == j):
excute 13:40:23.611542 line       496                         i_j_list.append((
excute 13:40:23.614565 line       497                             i, j,
excute 13:40:23.618555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.621547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:40:23.624538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:23.627499 line       494                         if (i == j):
excute 13:40:23.630523 line       496                         i_j_list.append((
excute 13:40:23.633515 line       497                             i, j,
excute 13:40:23.637477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.639498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:23.642490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:23.645482 line       494                         if (i == j):
excute 13:40:23.649473 line       496                         i_j_list.append((
excute 13:40:23.652434 line       497                             i, j,
excute 13:40:23.655426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.661408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:23.664400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:23.670385 line       494                         if (i == j):
excute 13:40:23.676368 line       496                         i_j_list.append((
excute 13:40:23.678364 line       497                             i, j,
excute 13:40:23.682351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.685346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:23.688335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:23.691327 line       494                         if (i == j):
excute 13:40:23.694319 line       495                             continue
excute 13:40:23.697312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:23.700303 line       494                         if (i == j):
excute 13:40:23.703295 line       496                         i_j_list.append((
excute 13:40:23.706287 line       497                             i, j,
excute 13:40:23.709286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.711306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:40:23.715266 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:23.719257 line       494                         if (i == j):
excute 13:40:23.723276 line       496                         i_j_list.append((
excute 13:40:23.726267 line       497                             i, j,
excute 13:40:23.728261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.731254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:40:23.734245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:23.737236 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:23.740233 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:23.743220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:23.746181 line       494                         if (i == j):
excute 13:40:23.750172 line       496                         i_j_list.append((
excute 13:40:23.752165 line       497                             i, j,
excute 13:40:23.755157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.758149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0)]
excute 13:40:23.764133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:23.768123 line       494                         if (i == j):
excute 13:40:23.771116 line       496                         i_j_list.append((
excute 13:40:23.775105 line       497                             i, j,
excute 13:40:23.781089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.783083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:40:23.787074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:23.790067 line       494                         if (i == j):
excute 13:40:23.793057 line       496                         i_j_list.append((
excute 13:40:23.796050 line       497                             i, j,
excute 13:40:23.799052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.801036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:40:23.804028 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:23.807020 line       494                         if (i == j):
excute 13:40:23.811009 line       496                         i_j_list.append((
excute 13:40:23.814006 line       497                             i, j,
excute 13:40:23.815996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.818988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:40:23.822979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:23.826999 line       494                         if (i == j):
excute 13:40:23.829958 line       496                         i_j_list.append((
excute 13:40:23.832981 line       497                             i, j,
excute 13:40:23.835976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.838971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:40:23.841957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:23.844917 line       494                         if (i == j):
excute 13:40:23.847941 line       496                         i_j_list.append((
excute 13:40:23.850934 line       497                             i, j,
excute 13:40:23.853927 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.856917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:40:23.861534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:23.867263 line       494                         if (i == j):
excute 13:40:23.870218 line       496                         i_j_list.append((
excute 13:40:23.873210 line       497                             i, j,
excute 13:40:23.876203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.879195 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:40:23.882217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:23.886177 line       494                         if (i == j):
excute 13:40:23.889168 line       496                         i_j_list.append((
excute 13:40:23.892191 line       497                             i, j,
excute 13:40:23.894186 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.897177 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:40:23.900169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:23.904135 line       494                         if (i == j):
excute 13:40:23.907123 line       495                             continue
excute 13:40:23.910123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:23.912138 line       494                         if (i == j):
excute 13:40:23.917092 line       496                         i_j_list.append((
excute 13:40:23.919087 line       497                             i, j,
excute 13:40:23.922078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.927068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:40:23.929062 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:23.933060 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:23.936044 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:23.939036 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:23.942026 line       494                         if (i == j):
excute 13:40:23.945019 line       496                         i_j_list.append((
excute 13:40:23.948011 line       497                             i, j,
excute 13:40:23.951003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.954992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0)]
excute 13:40:23.956987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:23.960992 line       494                         if (i == j):
excute 13:40:23.964966 line       496                         i_j_list.append((
excute 13:40:23.967959 line       497                             i, j,
excute 13:40:23.970950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.973942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:40:23.975936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:23.979927 line       494                         if (i == j):
excute 13:40:23.983913 line       496                         i_j_list.append((
excute 13:40:23.986907 line       497                             i, j,
excute 13:40:23.988902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:23.992890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:40:23.994886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:23.998876 line       494                         if (i == j):
excute 13:40:24.001866 line       496                         i_j_list.append((
excute 13:40:24.004893 line       497                             i, j,
excute 13:40:24.007883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:24.010874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:40:24.013865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:24.016858 line       494                         if (i == j):
excute 13:40:24.020815 line       496                         i_j_list.append((
excute 13:40:24.022809 line       497                             i, j,
excute 13:40:24.027797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:24.029791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:24.032782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:24.035774 line       494                         if (i == j):
excute 13:40:24.039764 line       496                         i_j_list.append((
excute 13:40:24.041759 line       497                             i, j,
excute 13:40:24.044750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:24.047742 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:24.050735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:24.053726 line       494                         if (i == j):
excute 13:40:24.057716 line       496                         i_j_list.append((
excute 13:40:24.059713 line       497                             i, j,
excute 13:40:24.063715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:24.066694 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:40:24.069685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:24.072677 line       494                         if (i == j):
excute 13:40:24.075667 line       496                         i_j_list.append((
excute 13:40:24.079659 line       497                             i, j,
excute 13:40:24.082651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:24.085644 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:40:24.088636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:24.091658 line       494                         if (i == j):
excute 13:40:24.095619 line       496                         i_j_list.append((
excute 13:40:24.097641 line       497                             i, j,
excute 13:40:24.100634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:24.104592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:40:24.107592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:24.110574 line       494                         if (i == j):
excute 13:40:24.113566 line       495                             continue
excute 13:40:24.116558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:24.123222 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:24.126250 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:40:24.131241 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:24.135213 line       505                     if (self.RELOCATE):
excute 13:40:24.139186 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:24.142209 line       505                     if (self.RELOCATE):
excute 13:40:24.145179 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:24.148161 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:40:24.151153 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:24.155145 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.158146 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.161126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:40:24.164118 line       556                     i = i_j[0]
excute 13:40:24.167110 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.170102 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.173094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:40:24.176086 line       556                     i = i_j[0]
excute 13:40:24.180076 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:24.182070 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.185062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:40:24.188054 line       556                     i = i_j[0]
excute 13:40:24.192043 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:24.194038 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.197030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:40:24.200022 line       556                     i = i_j[0]
excute 13:40:24.203014 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:24.206006 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.208997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:40:24.211990 line       556                     i = i_j[0]
excute 13:40:24.215981 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.218971 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.221964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:40:24.224955 line       556                     i = i_j[0]
excute 13:40:24.227948 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:24.230976 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.234929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:40:24.237920 line       556                     i = i_j[0]
excute 13:40:24.240913 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.243905 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.246897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:40:24.249888 line       556                     i = i_j[0]
excute 13:40:24.253886 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.255908 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.259866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:40:24.261889 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:24.265846 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.268838 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.271830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:40:24.275819 line       556                     i = i_j[0]
excute 13:40:24.278812 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:24.281804 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.284796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:40:24.287787 line       556                     i = i_j[0]
excute 13:40:24.290780 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:24.293772 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.296764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:40:24.299756 line       556                     i = i_j[0]
excute 13:40:24.302748 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:24.305740 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.308734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:40:24.311724 line       556                     i = i_j[0]
excute 13:40:24.314716 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:24.317708 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.320702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:40:24.323692 line       556                     i = i_j[0]
excute 13:40:24.327682 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.333667 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.340650 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:40:24.344637 line       556                     i = i_j[0]
excute 13:40:24.348625 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:24.351617 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.354609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:40:24.357602 line       556                     i = i_j[0]
excute 13:40:24.361591 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.363585 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.367574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:40:24.370566 line       556                     i = i_j[0]
excute 13:40:24.373590 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.377548 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.380540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:24.383531 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:24.386524 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.390514 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.393506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:24.396497 line       556                     i = i_j[0]
excute 13:40:24.399489 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.402482 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.406471 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:24.408465 line       556                     i = i_j[0]
excute 13:40:24.412455 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:24.414449 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.418439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:24.420432 line       556                     i = i_j[0]
excute 13:40:24.424423 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:24.426448 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.430408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:24.433430 line       556                     i = i_j[0]
excute 13:40:24.437389 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:24.440381 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.444373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:24.446396 line       556                     i = i_j[0]
excute 13:40:24.450386 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.453377 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.457335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:24.460328 line       556                     i = i_j[0]
excute 13:40:24.464319 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:24.467307 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.471299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:24.477282 line       556                     i = i_j[0]
excute 13:40:24.480273 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.483265 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.487254 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:24.490246 line       556                     i = i_j[0]
excute 13:40:24.493252 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.496230 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.499222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:24.502214 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:24.505209 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.509197 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.512188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:24.515179 line       556                     i = i_j[0]
excute 13:40:24.518171 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:24.521164 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.525153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:24.528144 line       556                     i = i_j[0]
excute 13:40:24.531136 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:24.534128 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.537128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:24.540112 line       556                     i = i_j[0]
excute 13:40:24.545114 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:24.548092 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.551084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:24.555074 line       556                     i = i_j[0]
excute 13:40:24.561058 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:24.564051 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.567041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:24.571031 line       556                     i = i_j[0]
excute 13:40:24.574025 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.578012 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.581003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:24.583995 line       556                     i = i_j[0]
excute 13:40:24.586997 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:24.590011 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.593003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:24.595997 line       556                     i = i_j[0]
excute 13:40:24.598991 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.601979 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.606937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:24.611922 line       556                     i = i_j[0]
excute 13:40:24.617905 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.620897 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.623888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:24.626881 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:24.629873 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.633862 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.637853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:24.640877 line       556                     i = i_j[0]
excute 13:40:24.643836 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.648826 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.651850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:24.654842 line       556                     i = i_j[0]
excute 13:40:24.657800 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:24.660790 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.663782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:24.666774 line       556                     i = i_j[0]
excute 13:40:24.669766 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:24.672758 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.676748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:24.678742 line       556                     i = i_j[0]
excute 13:40:24.682740 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:24.684727 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.687718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:24.690710 line       556                     i = i_j[0]
excute 13:40:24.693702 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.696694 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.699686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:24.702678 line       556                     i = i_j[0]
excute 13:40:24.705670 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:24.708662 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.712653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:40:24.715643 line       556                     i = i_j[0]
excute 13:40:24.718635 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.721628 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.724619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:40:24.727611 line       556                     i = i_j[0]
excute 13:40:24.730604 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.733596 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.736587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:40:24.739580 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:24.745567 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.749554 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.754540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:40:24.757532 line       556                     i = i_j[0]
excute 13:40:24.760529 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.763522 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.766513 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:40:24.769500 line       556                     i = i_j[0]
excute 13:40:24.772492 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:24.775485 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.778476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:40:24.781468 line       556                     i = i_j[0]
excute 13:40:24.784460 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:24.787451 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.790444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:40:24.793435 line       556                     i = i_j[0]
excute 13:40:24.796428 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:24.799420 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.802412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:40:24.805404 line       556                     i = i_j[0]
excute 13:40:24.808395 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.811387 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.814379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:40:24.817404 line       556                     i = i_j[0]
excute 13:40:24.821370 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:24.823388 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.827350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:40:24.830339 line       556                     i = i_j[0]
excute 13:40:24.833329 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.836321 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.839313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:40:24.842305 line       556                     i = i_j[0]
excute 13:40:24.845297 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.848289 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.852280 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:24.856274 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:24.859260 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.862251 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.865243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:24.868236 line       556                     i = i_j[0]
excute 13:40:24.871228 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.874220 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.877211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:24.880204 line       556                     i = i_j[0]
excute 13:40:24.883196 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:24.886188 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.890190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:24.892172 line       556                     i = i_j[0]
excute 13:40:24.896161 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:24.898156 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.902145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:24.905137 line       556                     i = i_j[0]
excute 13:40:24.908132 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:24.911121 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.914114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:24.917105 line       556                     i = i_j[0]
excute 13:40:24.920097 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:24.923089 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.926081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:24.929073 line       556                     i = i_j[0]
excute 13:40:24.932065 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:24.935057 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.938049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:24.941041 line       556                     i = i_j[0]
excute 13:40:24.944033 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:24.947025 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.950017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:24.954008 line       556                     i = i_j[0]
excute 13:40:24.957996 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:24.960987 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.966973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:40:24.970963 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:24.973956 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:24.977943 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.980945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:40:24.983958 line       556                     i = i_j[0]
excute 13:40:24.986919 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:24.989913 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:24.993900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:40:24.995894 line       556                     i = i_j[0]
excute 13:40:24.999890 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:25.001879 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.005868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:40:25.008892 line       556                     i = i_j[0]
excute 13:40:25.012851 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:25.015861 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.018836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:25.021861 line       556                     i = i_j[0]
excute 13:40:25.024849 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:25.027840 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.031803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:40:25.034825 line       556                     i = i_j[0]
excute 13:40:25.037783 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:25.040806 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.043769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:40:25.046758 line       556                     i = i_j[0]
excute 13:40:25.049750 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:25.052742 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.056732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:40:25.060723 line       556                     i = i_j[0]
excute 13:40:25.063713 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:25.066705 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.069697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:40:25.072689 line       556                     i = i_j[0]
excute 13:40:25.076679 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:25.079673 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.082662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:40:25.085654 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:25.088646 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:25.091638 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.094630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:40:25.097622 line       556                     i = i_j[0]
excute 13:40:25.100614 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:25.103606 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.107596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:40:25.110589 line       556                     i = i_j[0]
excute 13:40:25.113612 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:25.116604 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.120564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:25.123585 line       556                     i = i_j[0]
excute 13:40:25.126546 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:25.129569 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.132532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:25.135521 line       556                     i = i_j[0]
excute 13:40:25.138514 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:25.141505 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.144498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:40:25.147521 line       556                     i = i_j[0]
excute 13:40:25.150513 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:25.153506 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.157464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:40:25.160456 line       556                     i = i_j[0]
excute 13:40:25.164445 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:25.166471 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.170429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:40:25.172455 line       556                     i = i_j[0]
excute 13:40:25.176446 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:25.178440 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.182397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:40:25.185388 line       556                     i = i_j[0]
excute 13:40:25.188381 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:25.191371 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.194366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:40:25.197392 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:25.200380 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:25.204343 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.207332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:40:25.210355 line       556                     i = i_j[0]
excute 13:40:25.213315 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:25.216337 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.220296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:40:25.223294 line       556                     i = i_j[0]
excute 13:40:25.226280 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:25.229270 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.232264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:25.235286 line       556                     i = i_j[0]
excute 13:40:25.238249 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:25.241270 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.244232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:25.247254 line       556                     i = i_j[0]
excute 13:40:25.250218 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:25.254206 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.260188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:25.267169 line       556                     i = i_j[0]
excute 13:40:25.271168 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:25.274153 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.280134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:40:25.283126 line       556                     i = i_j[0]
excute 13:40:25.287123 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:25.289111 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.292103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:40:25.295095 line       556                     i = i_j[0]
excute 13:40:25.298086 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:25.301079 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.304071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:40:25.307062 line       556                     i = i_j[0]
excute 13:40:25.310054 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:25.313046 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:25.316040 line       555                 for i_j in i_j_list:
excute 13:40:25.319030 line       581             self.write_matrix(
excute 13:40:25.321026 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:25.324017 line       583                 result_file_path,
excute 13:40:25.331997 line       584                 mode='a'
excute 13:40:25.341970 line       488         for t in time_steps:
excute Modified var:.. t = 10
excute 13:40:25.345960 line       489             if (t != self.TIME + 1):
excute 13:40:25.349949 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:25.352940 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:25.359923 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:25.364910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:25.373885 line       494                         if (i == j):
excute 13:40:25.379869 line       495                             continue
excute 13:40:25.382864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:25.385855 line       494                         if (i == j):
excute 13:40:25.388846 line       496                         i_j_list.append((
excute 13:40:25.392836 line       497                             i, j,
excute 13:40:25.394830 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.399816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:25.402807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:25.406798 line       494                         if (i == j):
excute 13:40:25.409788 line       496                         i_j_list.append((
excute 13:40:25.412780 line       497                             i, j,
excute 13:40:25.415773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.418764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2)]
excute 13:40:25.421758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:25.424749 line       494                         if (i == j):
excute 13:40:25.433727 line       496                         i_j_list.append((
excute 13:40:25.440706 line       497                             i, j,
excute 13:40:25.448685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.456670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0)]
excute 13:40:25.462648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:25.465639 line       494                         if (i == j):
excute 13:40:25.471624 line       496                         i_j_list.append((
excute 13:40:25.476621 line       497                             i, j,
excute 13:40:25.480599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.483592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:25.486583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:25.490574 line       494                         if (i == j):
excute 13:40:25.493567 line       496                         i_j_list.append((
excute 13:40:25.496557 line       497                             i, j,
excute 13:40:25.499548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.502542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:25.505534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:25.509522 line       494                         if (i == j):
excute 13:40:25.512515 line       496                         i_j_list.append((
excute 13:40:25.515506 line       497                             i, j,
excute 13:40:25.518498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.521492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1)]
excute 13:40:25.525480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:25.529469 line       494                         if (i == j):
excute 13:40:25.532461 line       496                         i_j_list.append((
excute 13:40:25.536450 line       497                             i, j,
excute 13:40:25.540440 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.547433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1)]
excute 13:40:25.551409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:25.554402 line       494                         if (i == j):
excute 13:40:25.561383 line       496                         i_j_list.append((
excute 13:40:25.564377 line       497                             i, j,
excute 13:40:25.567367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.570359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1)]
excute 13:40:25.575347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:25.579335 line       494                         if (i == j):
excute 13:40:25.582329 line       496                         i_j_list.append((
excute 13:40:25.586317 line       497                             i, j,
excute 13:40:25.589310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.592301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0)]
excute 13:40:25.595293 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:25.598285 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:25.601277 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:25.607261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:25.610254 line       494                         if (i == j):
excute 13:40:25.616237 line       496                         i_j_list.append((
excute 13:40:25.620226 line       497                             i, j,
excute 13:40:25.626211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.631200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0)]
excute 13:40:25.637182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:25.642174 line       494                         if (i == j):
excute 13:40:25.647155 line       495                             continue
excute 13:40:25.650147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:25.653139 line       494                         if (i == j):
excute 13:40:25.656130 line       496                         i_j_list.append((
excute 13:40:25.659121 line       497                             i, j,
excute 13:40:25.662115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.665105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2)]
excute 13:40:25.668102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:25.671090 line       494                         if (i == j):
excute 13:40:25.674082 line       496                         i_j_list.append((
excute 13:40:25.679069 line       497                             i, j,
excute 13:40:25.682061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.685052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0)]
excute 13:40:25.688045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:25.692033 line       494                         if (i == j):
excute 13:40:25.695025 line       496                         i_j_list.append((
excute 13:40:25.698017 line       497                             i, j,
excute 13:40:25.700012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.703004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:40:25.705996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:25.708988 line       494                         if (i == j):
excute 13:40:25.711981 line       496                         i_j_list.append((
excute 13:40:25.714974 line       497                             i, j,
excute 13:40:25.717964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.720957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:40:25.722951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:25.726942 line       494                         if (i == j):
excute 13:40:25.729934 line       496                         i_j_list.append((
excute 13:40:25.731927 line       497                             i, j,
excute 13:40:25.734918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.737912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1)]
excute 13:40:25.739906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:25.742898 line       494                         if (i == j):
excute 13:40:25.746887 line       496                         i_j_list.append((
excute 13:40:25.748881 line       497                             i, j,
excute 13:40:25.751874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.755864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1)]
excute 13:40:25.760850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:25.767831 line       494                         if (i == j):
excute 13:40:25.772819 line       496                         i_j_list.append((
excute 13:40:25.777808 line       497                             i, j,
excute 13:40:25.782826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.786812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1)]
excute 13:40:25.789804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:25.792788 line       494                         if (i == j):
excute 13:40:25.795792 line       496                         i_j_list.append((
excute 13:40:25.798781 line       497                             i, j,
excute 13:40:25.801773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.803766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0)]
excute 13:40:25.806758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:25.809750 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:25.812742 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:25.815735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:25.818726 line       494                         if (i == j):
excute 13:40:25.821698 line       496                         i_j_list.append((
excute 13:40:25.824713 line       497                             i, j,
excute 13:40:25.827671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.829698 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:40:25.832691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:25.835685 line       494                         if (i == j):
excute 13:40:25.839640 line       496                         i_j_list.append((
excute 13:40:25.842631 line       497                             i, j,
excute 13:40:25.844657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.847649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:40:25.850642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:25.853603 line       494                         if (i == j):
excute 13:40:25.856627 line       495                             continue
excute 13:40:25.859621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:25.862609 line       494                         if (i == j):
excute 13:40:25.865571 line       496                         i_j_list.append((
excute 13:40:25.868561 line       497                             i, j,
excute 13:40:25.870587 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.873580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:25.876572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:25.879534 line       494                         if (i == j):
excute 13:40:25.883524 line       496                         i_j_list.append((
excute 13:40:25.886513 line       497                             i, j,
excute 13:40:25.888508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.891500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:25.894493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:25.897484 line       494                         if (i == j):
excute 13:40:25.900476 line       496                         i_j_list.append((
excute 13:40:25.903468 line       497                             i, j,
excute 13:40:25.906460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.909452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:25.912445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:25.915438 line       494                         if (i == j):
excute 13:40:25.918459 line       496                         i_j_list.append((
excute 13:40:25.921451 line       497                             i, j,
excute 13:40:25.924444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.927405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:40:25.929432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:25.933388 line       494                         if (i == j):
excute 13:40:25.936382 line       496                         i_j_list.append((
excute 13:40:25.939373 line       497                             i, j,
excute 13:40:25.941398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.944392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1)]
excute 13:40:25.947387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:25.950343 line       494                         if (i == j):
excute 13:40:25.953369 line       496                         i_j_list.append((
excute 13:40:25.956358 line       497                             i, j,
excute 13:40:25.959351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.962342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1)]
excute 13:40:25.965336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:25.968297 line       494                         if (i == j):
excute 13:40:25.971288 line       496                         i_j_list.append((
excute 13:40:25.974311 line       497                             i, j,
excute 13:40:25.977271 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:25.979266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:40:25.982258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:25.987246 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:25.989239 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:25.993228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:25.995223 line       494                         if (i == j):
excute 13:40:25.999212 line       496                         i_j_list.append((
excute 13:40:26.006998 line       497                             i, j,
excute 13:40:26.010987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.013979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:40:26.016971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:26.020961 line       494                         if (i == j):
excute 13:40:26.023954 line       496                         i_j_list.append((
excute 13:40:26.026944 line       497                             i, j,
excute 13:40:26.029967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.032961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:40:26.035951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:26.038911 line       494                         if (i == j):
excute 13:40:26.041936 line       496                         i_j_list.append((
excute 13:40:26.044896 line       497                             i, j,
excute 13:40:26.047888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.050881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2)]
excute 13:40:26.054868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:26.058858 line       494                         if (i == j):
excute 13:40:26.061852 line       495                             continue
excute 13:40:26.064843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:26.067856 line       494                         if (i == j):
excute 13:40:26.070828 line       496                         i_j_list.append((
excute 13:40:26.073817 line       497                             i, j,
excute 13:40:26.076810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.079834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0)]
excute 13:40:26.082826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:26.085786 line       494                         if (i == j):
excute 13:40:26.090776 line       496                         i_j_list.append((
excute 13:40:26.092769 line       497                             i, j,
excute 13:40:26.095761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.098753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:26.101745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:26.105735 line       494                         if (i == j):
excute 13:40:26.108730 line       496                         i_j_list.append((
excute 13:40:26.111719 line       497                             i, j,
excute 13:40:26.114710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.117709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1)]
excute 13:40:26.120694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:26.125680 line       494                         if (i == j):
excute 13:40:26.130668 line       496                         i_j_list.append((
excute 13:40:26.132662 line       497                             i, j,
excute 13:40:26.135653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.138646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1)]
excute 13:40:26.141636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:26.144630 line       494                         if (i == j):
excute 13:40:26.147622 line       496                         i_j_list.append((
excute 13:40:26.150614 line       497                             i, j,
excute 13:40:26.155601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.158594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1)]
excute 13:40:26.161584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:26.164576 line       494                         if (i == j):
excute 13:40:26.167568 line       496                         i_j_list.append((
excute 13:40:26.170560 line       497                             i, j,
excute 13:40:26.173552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.176545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0)]
excute 13:40:26.179541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:26.182562 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:26.184553 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:26.188522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:26.191505 line       494                         if (i == j):
excute 13:40:26.195495 line       496                         i_j_list.append((
excute 13:40:26.197519 line       497                             i, j,
excute 13:40:26.200511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.203503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0)]
excute 13:40:26.206466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:26.209457 line       494                         if (i == j):
excute 13:40:26.212448 line       496                         i_j_list.append((
excute 13:40:26.215441 line       497                             i, j,
excute 13:40:26.218433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.222421 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:40:26.224417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:26.228407 line       494                         if (i == j):
excute 13:40:26.231399 line       496                         i_j_list.append((
excute 13:40:26.234391 line       497                             i, j,
excute 13:40:26.237383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.240375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2)]
excute 13:40:26.243366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:26.246359 line       494                         if (i == j):
excute 13:40:26.249351 line       496                         i_j_list.append((
excute 13:40:26.253341 line       497                             i, j,
excute 13:40:26.257328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.261318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0)]
excute 13:40:26.264311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:26.270293 line       494                         if (i == j):
excute 13:40:26.276277 line       495                             continue
excute 13:40:26.279270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:26.284256 line       494                         if (i == j):
excute 13:40:26.292234 line       496                         i_j_list.append((
excute 13:40:26.297221 line       497                             i, j,
excute 13:40:26.300213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.303207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:40:26.306197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:26.311184 line       494                         if (i == j):
excute 13:40:26.317169 line       496                         i_j_list.append((
excute 13:40:26.320163 line       497                             i, j,
excute 13:40:26.323154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.331133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1)]
excute 13:40:26.341105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:26.349085 line       494                         if (i == j):
excute 13:40:26.353075 line       496                         i_j_list.append((
excute 13:40:26.359057 line       497                             i, j,
excute 13:40:26.362048 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.366038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1)]
excute 13:40:26.369033 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:26.373019 line       494                         if (i == j):
excute 13:40:26.377008 line       496                         i_j_list.append((
excute 13:40:26.383991 line       497                             i, j,
excute 13:40:26.390971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.398951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1)]
excute 13:40:26.405931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:26.410918 line       494                         if (i == j):
excute 13:40:26.417899 line       496                         i_j_list.append((
excute 13:40:26.421887 line       497                             i, j,
excute 13:40:26.426875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.431862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0)]
excute 13:40:26.436848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:26.442833 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:26.448816 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:26.454800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:26.459787 line       494                         if (i == j):
excute 13:40:26.468763 line       496                         i_j_list.append((
excute 13:40:26.473750 line       497                             i, j,
excute 13:40:26.480731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.486714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0)]
excute 13:40:26.492700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:26.501689 line       494                         if (i == j):
excute 13:40:26.506661 line       496                         i_j_list.append((
excute 13:40:26.510651 line       497                             i, j,
excute 13:40:26.516634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.521621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:40:26.528603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:26.535584 line       494                         if (i == j):
excute 13:40:26.539573 line       496                         i_j_list.append((
excute 13:40:26.544560 line       497                             i, j,
excute 13:40:26.549548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.553536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2)]
excute 13:40:26.558523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:26.563510 line       494                         if (i == j):
excute 13:40:26.570490 line       496                         i_j_list.append((
excute 13:40:26.577473 line       497                             i, j,
excute 13:40:26.582459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.588443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0)]
excute 13:40:26.592432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:26.598416 line       494                         if (i == j):
excute 13:40:26.603403 line       496                         i_j_list.append((
excute 13:40:26.608390 line       497                             i, j,
excute 13:40:26.615370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.621355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:40:26.627338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:26.633323 line       494                         if (i == j):
excute 13:40:26.639306 line       495                             continue
excute 13:40:26.646289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:26.650277 line       494                         if (i == j):
excute 13:40:26.656261 line       496                         i_j_list.append((
excute 13:40:26.663243 line       497                             i, j,
excute 13:40:26.668231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.673218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1)]
excute 13:40:26.679200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:26.686182 line       494                         if (i == j):
excute 13:40:26.692168 line       496                         i_j_list.append((
excute 13:40:26.698149 line       497                             i, j,
excute 13:40:26.704134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.709121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1)]
excute 13:40:26.715104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:26.721090 line       494                         if (i == j):
excute 13:40:26.724080 line       496                         i_j_list.append((
excute 13:40:26.728070 line       497                             i, j,
excute 13:40:26.731061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.734053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1)]
excute 13:40:26.738042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:26.741035 line       494                         if (i == j):
excute 13:40:26.745024 line       496                         i_j_list.append((
excute 13:40:26.748016 line       497                             i, j,
excute 13:40:26.751008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.754000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0)]
excute 13:40:26.756992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:26.760983 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:26.763974 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:26.767962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:26.769957 line       494                         if (i == j):
excute 13:40:26.773949 line       496                         i_j_list.append((
excute 13:40:26.776938 line       497                             i, j,
excute 13:40:26.779931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.781925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0)]
excute 13:40:26.784917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:26.787910 line       494                         if (i == j):
excute 13:40:26.791901 line       496                         i_j_list.append((
excute 13:40:26.793894 line       497                             i, j,
excute 13:40:26.796886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.799878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:40:26.802870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:26.805863 line       494                         if (i == j):
excute 13:40:26.808854 line       496                         i_j_list.append((
excute 13:40:26.812847 line       497                             i, j,
excute 13:40:26.815834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.817829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2)]
excute 13:40:26.820854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:26.823846 line       494                         if (i == j):
excute 13:40:26.827804 line       496                         i_j_list.append((
excute 13:40:26.829828 line       497                             i, j,
excute 13:40:26.832821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.835812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0)]
excute 13:40:26.838805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:26.850416 line       494                         if (i == j):
excute 13:40:26.853412 line       496                         i_j_list.append((
excute 13:40:26.857403 line       497                             i, j,
excute 13:40:26.859396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.862388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:40:26.865380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:26.868372 line       494                         if (i == j):
excute 13:40:26.871364 line       496                         i_j_list.append((
excute 13:40:26.874356 line       497                             i, j,
excute 13:40:26.877348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.880345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:40:26.882366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:26.886357 line       494                         if (i == j):
excute 13:40:26.889317 line       495                             continue
excute 13:40:26.892339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:26.895333 line       494                         if (i == j):
excute 13:40:26.899291 line       496                         i_j_list.append((
excute 13:40:26.905277 line       497                             i, j,
excute 13:40:26.908266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.914250 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1)]
excute 13:40:26.917243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:26.924225 line       494                         if (i == j):
excute 13:40:26.930207 line       496                         i_j_list.append((
excute 13:40:26.933224 line       497                             i, j,
excute 13:40:26.935225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.938217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1)]
excute 13:40:26.941211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:26.944204 line       494                         if (i == j):
excute 13:40:26.948159 line       496                         i_j_list.append((
excute 13:40:26.950186 line       497                             i, j,
excute 13:40:26.953177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.956137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0)]
excute 13:40:26.959129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:26.963121 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:26.966113 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:26.969105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:26.972097 line       494                         if (i == j):
excute 13:40:26.975089 line       496                         i_j_list.append((
excute 13:40:26.978081 line       497                             i, j,
excute 13:40:26.981073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:26.984065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0)]
excute 13:40:26.987056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:26.994036 line       494                         if (i == j):
excute 13:40:27.000021 line       496                         i_j_list.append((
excute 13:40:27.006011 line       497                             i, j,
excute 13:40:27.010020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.013018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:40:27.015980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:27.019976 line       494                         if (i == j):
excute 13:40:27.022970 line       496                         i_j_list.append((
excute 13:40:27.025983 line       497                             i, j,
excute 13:40:27.028945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.031937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2)]
excute 13:40:27.034929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:27.038918 line       494                         if (i == j):
excute 13:40:27.042909 line       496                         i_j_list.append((
excute 13:40:27.044902 line       497                             i, j,
excute 13:40:27.048891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.052977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0)]
excute 13:40:27.056003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:27.058995 line       494                         if (i == j):
excute 13:40:27.062988 line       496                         i_j_list.append((
excute 13:40:27.064979 line       497                             i, j,
excute 13:40:27.067970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.070966 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:27.074922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:27.079940 line       494                         if (i == j):
excute 13:40:27.085894 line       496                         i_j_list.append((
excute 13:40:27.088885 line       497                             i, j,
excute 13:40:27.091877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.094869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:27.097861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:27.100853 line       494                         if (i == j):
excute 13:40:27.103845 line       496                         i_j_list.append((
excute 13:40:27.106837 line       497                             i, j,
excute 13:40:27.109829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.112821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1)]
excute 13:40:27.116809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:27.121795 line       494                         if (i == j):
excute 13:40:27.125785 line       495                             continue
excute 13:40:27.128810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:27.131801 line       494                         if (i == j):
excute 13:40:27.134795 line       496                         i_j_list.append((
excute 13:40:27.137787 line       497                             i, j,
excute 13:40:27.140777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.143768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1)]
excute 13:40:27.146729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:27.149722 line       494                         if (i == j):
excute 13:40:27.152744 line       496                         i_j_list.append((
excute 13:40:27.155736 line       497                             i, j,
excute 13:40:27.158731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.161723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0)]
excute 13:40:27.164712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:27.167704 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:27.170696 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:27.173688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:27.176681 line       494                         if (i == j):
excute 13:40:27.179673 line       496                         i_j_list.append((
excute 13:40:27.182666 line       497                             i, j,
excute 13:40:27.185659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.188649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0)]
excute 13:40:27.191612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:27.194602 line       494                         if (i == j):
excute 13:40:27.197624 line       496                         i_j_list.append((
excute 13:40:27.200616 line       497                             i, j,
excute 13:40:27.203614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.206602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:40:27.209562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:27.212554 line       494                         if (i == j):
excute 13:40:27.216556 line       496                         i_j_list.append((
excute 13:40:27.218537 line       497                             i, j,
excute 13:40:27.222527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.225552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2)]
excute 13:40:27.228542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:27.231534 line       494                         if (i == j):
excute 13:40:27.234526 line       496                         i_j_list.append((
excute 13:40:27.237517 line       497                             i, j,
excute 13:40:27.240509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.243502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0)]
excute 13:40:27.246496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:27.250973 line       494                         if (i == j):
excute 13:40:27.254753 line       496                         i_j_list.append((
excute 13:40:27.257775 line       497                             i, j,
excute 13:40:27.260747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.263727 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:40:27.265752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:27.269710 line       494                         if (i == j):
excute 13:40:27.272703 line       496                         i_j_list.append((
excute 13:40:27.275694 line       497                             i, j,
excute 13:40:27.278686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.281678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:40:27.283673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:27.287662 line       494                         if (i == j):
excute 13:40:27.290654 line       496                         i_j_list.append((
excute 13:40:27.293646 line       497                             i, j,
excute 13:40:27.295641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.298633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1)]
excute 13:40:27.301625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:27.304617 line       494                         if (i == j):
excute 13:40:27.307609 line       496                         i_j_list.append((
excute 13:40:27.311598 line       497                             i, j,
excute 13:40:27.313593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.316585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1)]
excute 13:40:27.319576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:27.322569 line       494                         if (i == j):
excute 13:40:27.327557 line       495                             continue
excute 13:40:27.332544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:27.338531 line       494                         if (i == j):
excute 13:40:27.342520 line       496                         i_j_list.append((
excute 13:40:27.346537 line       497                             i, j,
excute 13:40:27.349528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.352526 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0)]
excute 13:40:27.355516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:27.359472 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:27.362462 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:27.365454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:27.369445 line       494                         if (i == j):
excute 13:40:27.372468 line       496                         i_j_list.append((
excute 13:40:27.376431 line       497                             i, j,
excute 13:40:27.378421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.382408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0)]
excute 13:40:27.385403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:27.388395 line       494                         if (i == j):
excute 13:40:27.391386 line       496                         i_j_list.append((
excute 13:40:27.395376 line       497                             i, j,
excute 13:40:27.398398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.401393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:40:27.404383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:27.407343 line       494                         if (i == j):
excute 13:40:27.410334 line       496                         i_j_list.append((
excute 13:40:27.413326 line       497                             i, j,
excute 13:40:27.416318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.419311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2)]
excute 13:40:27.422303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:27.426294 line       494                         if (i == j):
excute 13:40:27.431279 line       496                         i_j_list.append((
excute 13:40:27.434301 line       497                             i, j,
excute 13:40:27.437293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.440288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2), (9, 3, 3, 0)]
excute 13:40:27.443280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:27.446270 line       494                         if (i == j):
excute 13:40:27.450229 line       496                         i_j_list.append((
excute 13:40:27.453252 line       497                             i, j,
excute 13:40:27.456246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.459238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:27.462196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:27.465187 line       494                         if (i == j):
excute 13:40:27.469177 line       496                         i_j_list.append((
excute 13:40:27.471171 line       497                             i, j,
excute 13:40:27.474163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.477155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:27.480147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:27.483141 line       494                         if (i == j):
excute 13:40:27.487131 line       496                         i_j_list.append((
excute 13:40:27.490123 line       497                             i, j,
excute 13:40:27.493114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.495110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:40:27.498101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:27.502089 line       494                         if (i == j):
excute 13:40:27.506080 line       496                         i_j_list.append((
excute 13:40:27.510068 line       497                             i, j,
excute 13:40:27.513059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.516051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 1)]
excute 13:40:27.519043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:27.522035 line       494                         if (i == j):
excute 13:40:27.526029 line       496                         i_j_list.append((
excute 13:40:27.530016 line       497                             i, j,
excute 13:40:27.533007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:27.535998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 2), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 1, 0), (1, 2, 1, 2), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 2), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 2), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 2), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 2), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 1), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 2), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 1), (9, 8, 3, 1)]
excute 13:40:27.538990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:27.541983 line       494                         if (i == j):
excute 13:40:27.544975 line       495                             continue
excute 13:40:27.547966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:27.550958 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:27.553950 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(4, 0, 0, 0), (4, 1, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 9, 0, 0), (4, 6, 0, 1), (4, 7, 0, 1), (4, 8, 0, 1), (4, 2, 0, 2), (1, 0, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 9, 1, 0), (1, 6, 1, 1), (1, 7, 1, 1), (1, 8, 1, 1), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (1, 2, 1, 2), (3, 2, 1, 2), (0, 1, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 9, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 9, 2, 0), (0, 6, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (5, 6, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (7, 6, 2, 1), (7, 8, 2, 1), (8, 6, 2, 1), (8, 7, 2, 1), (0, 2, 2, 2), (5, 2, 2, 2), (7, 2, 2, 2), (8, 2, 2, 2), (6, 0, 3, 0), (6, 1, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 1), (9, 6, 3, 1), (9, 7, 3, 1), (9, 8, 3, 1), (6, 2, 3, 2), (9, 2, 3, 2)]
excute 13:40:27.556942 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:27.559937 line       505                     if (self.RELOCATE):
excute 13:40:27.563926 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:27.566917 line       505                     if (self.RELOCATE):
excute 13:40:27.569914 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:27.572901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:40:27.575894 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:27.579881 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:27.582875 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.585866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:40:27.589886 line       556                     i = i_j[0]
excute 13:40:27.592878 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:27.595869 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.598862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:40:27.601854 line       556                     i = i_j[0]
excute 13:40:27.605845 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:27.608808 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.611797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:40:27.614819 line       556                     i = i_j[0]
excute 13:40:27.617780 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:27.620774 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.624765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:40:27.627786 line       556                     i = i_j[0]
excute 13:40:27.630776 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:27.634737 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.638724 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 1)
excute 13:40:27.641715 line       556                     i = i_j[0]
excute 13:40:27.644708 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:27.647699 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.650691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 1)
excute 13:40:27.654714 line       556                     i = i_j[0]
excute 13:40:27.657700 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:27.660697 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.663692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 1)
excute 13:40:27.666651 line       556                     i = i_j[0]
excute 13:40:27.670639 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:27.673632 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.676624 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 15
excute 13:40:27.680613 line       560                         if (t_tmp > self.TIME):
excute 13:40:27.683635 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:27.686627 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:27.689619 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:27.692611 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:27.694606 line       569                                     available_vhecles[i][t],
excute 13:40:27.697598 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:27.700590 line       571                                     self.S_capacities[j],
excute 13:40:27.703585 line       572                                     demands[t][i][j],
excute 13:40:27.706577 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 10
calc_contract     13:40:27.709541 call       352     def caluculate_contract(
calc_contract     13:40:27.712538 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:27.713525 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:27.714522 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:27.715540 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:27.715540 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:27.716516 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:27.716516 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:27.717522 line       575                                 rsf += rsf_tmp
excute 13:40:27.720540 line       576                                 rse += rse_tmp
excute 13:40:27.723528 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 4
move_cars     Starting var:.. j = 8
move_cars     Starting var:.. t = 10
move_cars     Starting var:.. t_tmp = 15
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:27.726521 call       388     def move_cars(
move_cars     13:40:27.730479 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:27.731508 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:27.733483 line       399         return available_vhecles
move_cars     13:40:27.734500 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:27.737464 line       579                                 success += can_contract
excute Modified var:.. success = 9
excute 13:40:27.740483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 2)
excute 13:40:27.744474 line       556                     i = i_j[0]
excute 13:40:27.747436 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:27.750457 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.753417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:40:27.756440 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:27.759435 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:27.763423 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.766392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:40:27.769406 line       556                     i = i_j[0]
excute 13:40:27.772399 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:27.775392 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.778384 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:40:27.781374 line       556                     i = i_j[0]
excute 13:40:27.785353 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:27.787358 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.791351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:40:27.794308 line       556                     i = i_j[0]
excute 13:40:27.797333 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:27.800292 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.803316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:40:27.806276 line       556                     i = i_j[0]
excute 13:40:27.809300 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:27.812260 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.815287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:27.817278 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:27.821268 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:27.824228 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.827219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:27.830212 line       556                     i = i_j[0]
excute 13:40:27.833204 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:27.837194 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.841184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:27.844206 line       556                     i = i_j[0]
excute 13:40:27.847199 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:27.850193 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.853182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:27.856174 line       556                     i = i_j[0]
excute 13:40:27.860151 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:27.862158 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.866117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:27.869107 line       556                     i = i_j[0]
excute 13:40:27.872101 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:27.875100 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.878085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 1)
excute 13:40:27.881107 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:27.884075 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:27.887095 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.890086 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 21
excute 13:40:27.893075 line       560                         if (t_tmp > self.TIME):
excute 13:40:27.896068 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:27.899060 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:27.902051 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:27.905044 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:27.908035 line       569                                     available_vhecles[i][t],
excute 13:40:27.911031 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:27.914023 line       571                                     self.S_capacities[j],
excute 13:40:27.916980 line       572                                     demands[t][i][j],
excute 13:40:27.919972 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 10
calc_contract     13:40:27.922963 call       352     def caluculate_contract(
calc_contract     13:40:27.925957 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:27.925957 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:27.926955 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:27.927959 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:27.928982 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:27.928982 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:27.929980 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:27.930975 line       575                                 rsf += rsf_tmp
excute 13:40:27.933966 line       576                                 rse += rse_tmp
excute 13:40:27.936958 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 10
move_cars     Starting var:.. t_tmp = 21
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:27.939951 call       388     def move_cars(
move_cars     13:40:27.944907 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:27.946901 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:27.947930 line       399         return available_vhecles
move_cars     13:40:27.948927 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:27.950924 line       579                                 success += can_contract
excute Modified var:.. success = 10
excute 13:40:27.954910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 1)
excute 13:40:27.958904 line       556                     i = i_j[0]
excute 13:40:27.961861 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:27.967845 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.970868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 1)
excute 13:40:27.973859 line       556                     i = i_j[0]
excute 13:40:27.977819 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:27.981810 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.985807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 1)
excute 13:40:27.988790 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:27.992778 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:27.995769 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:27.999760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 1)
excute 13:40:28.002751 line       556                     i = i_j[0]
excute 13:40:28.005742 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.008767 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.012725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 1)
excute 13:40:28.015747 line       556                     i = i_j[0]
excute 13:40:28.019706 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.022699 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.026689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 2)
excute 13:40:28.029680 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:28.033676 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:28.037657 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.040658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 2)
excute 13:40:28.044640 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:28.047633 line       557                     j = i_j[1]
excute 13:40:28.050654 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.053646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:28.056638 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:28.060597 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.063620 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.067580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:28.070604 line       556                     i = i_j[0]
excute 13:40:28.074593 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.077552 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.083535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:28.086529 line       556                     i = i_j[0]
excute 13:40:28.090518 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.094505 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.097499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:28.100492 line       556                     i = i_j[0]
excute 13:40:28.103483 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:28.106475 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.110465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:28.112459 line       556                     i = i_j[0]
excute 13:40:28.116448 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:28.120437 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.126422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:28.129448 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:28.133417 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:28.136425 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.140417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:28.143406 line       556                     i = i_j[0]
excute 13:40:28.147366 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.151353 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.155344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:28.158335 line       556                     i = i_j[0]
excute 13:40:28.161329 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.164321 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.167312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:28.171299 line       556                     i = i_j[0]
excute 13:40:28.174326 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.177318 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.181273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:28.183299 line       556                     i = i_j[0]
excute 13:40:28.187258 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:28.190284 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.193276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:40:28.196264 line       556                     i = i_j[0]
excute 13:40:28.200227 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:28.206269 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.209264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:40:28.212255 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:28.216246 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:28.220236 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.223227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:40:28.227216 line       556                     i = i_j[0]
excute 13:40:28.230208 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.233200 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.236193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:40:28.240182 line       556                     i = i_j[0]
excute 13:40:28.243172 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.247163 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.251153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:40:28.254145 line       556                     i = i_j[0]
excute 13:40:28.261125 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.264117 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.269104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:40:28.272094 line       556                     i = i_j[0]
excute 13:40:28.278080 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:28.284064 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.290049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:28.293040 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:28.297029 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:28.301018 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.304012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:28.307002 line       556                     i = i_j[0]
excute 13:40:28.309995 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.312987 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.316983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:28.319969 line       556                     i = i_j[0]
excute 13:40:28.322959 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.329942 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.336922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:28.341909 line       556                     i = i_j[0]
excute 13:40:28.346896 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.349888 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.355873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:28.359862 line       556                     i = i_j[0]
excute 13:40:28.363853 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:28.366842 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.370831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:28.373825 line       556                     i = i_j[0]
excute 13:40:28.378812 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:28.381804 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.385794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:40:28.388785 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:28.391777 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:28.395766 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.399754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:40:28.402746 line       556                     i = i_j[0]
excute 13:40:28.406741 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.409728 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.412720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:40:28.415713 line       556                     i = i_j[0]
excute 13:40:28.418704 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.422694 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.425687 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:28.428679 line       556                     i = i_j[0]
excute 13:40:28.432668 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.435659 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.438652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:40:28.441643 line       556                     i = i_j[0]
excute 13:40:28.445634 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:28.448623 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.452614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:40:28.457600 line       556                     i = i_j[0]
excute 13:40:28.461589 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:28.464582 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.468570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 1)
excute 13:40:28.471575 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:28.474554 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:28.477547 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.481537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 1)
excute 13:40:28.484528 line       556                     i = i_j[0]
excute 13:40:28.487527 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.490512 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.493504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 1)
excute 13:40:28.496526 line       556                     i = i_j[0]
excute 13:40:28.499519 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.502510 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.506502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:40:28.509461 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:28.513451 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:28.516442 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.519465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:40:28.522456 line       556                     i = i_j[0]
excute 13:40:28.526416 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.529440 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.532433 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 26
excute 13:40:28.535422 line       560                         if (t_tmp > self.TIME):
excute 13:40:28.539381 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:28.541406 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 3
excute 13:40:28.544398 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:28.548391 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:28.551380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:40:28.554349 line       556                     i = i_j[0]
excute 13:40:28.558339 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.562320 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.565312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 1)
excute 13:40:28.568305 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:28.571296 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:28.575287 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.579274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 1)
excute 13:40:28.582267 line       556                     i = i_j[0]
excute 13:40:28.585260 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.588251 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.592247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 1)
excute 13:40:28.595232 line       556                     i = i_j[0]
excute 13:40:28.599222 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.602214 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.606202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 1)
excute 13:40:28.609195 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:28.613196 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:28.616177 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.619169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 1)
excute 13:40:28.623159 line       556                     i = i_j[0]
excute 13:40:28.627147 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.630169 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.634128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 1)
excute 13:40:28.637120 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:28.640111 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:28.643134 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.647093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 1)
excute 13:40:28.650087 line       556                     i = i_j[0]
excute 13:40:28.654112 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.657099 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.662086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 2)
excute 13:40:28.665068 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:28.668041 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:28.671061 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.675019 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 19
excute 13:40:28.678042 line       560                         if (t_tmp > self.TIME):
excute 13:40:28.681036 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:28.684027 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 4
excute 13:40:28.687017 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:28.690009 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:28.693001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 2)
excute 13:40:28.695993 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:28.699962 line       557                     j = i_j[1]
excute 13:40:28.702944 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.705937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 2)
excute 13:40:28.709924 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:28.713915 line       557                     j = i_j[1]
excute 13:40:28.716938 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.719929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 2)
excute 13:40:28.722922 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:28.725913 line       557                     j = i_j[1]
excute 13:40:28.729885 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.732894 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 18
excute 13:40:28.735887 line       560                         if (t_tmp > self.TIME):
excute 13:40:28.738878 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:28.741870 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 5
excute 13:40:28.744866 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:28.748821 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:28.750846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:40:28.753838 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:28.757798 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:28.760822 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.766773 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:40:28.769764 line       556                     i = i_j[0]
excute 13:40:28.773754 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.776745 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.780736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:28.786721 line       556                     i = i_j[0]
excute 13:40:28.792730 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.795723 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.798712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:28.801711 line       556                     i = i_j[0]
excute 13:40:28.805668 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.807694 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.811686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:40:28.814675 line       556                     i = i_j[0]
excute 13:40:28.818648 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:28.820659 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.824631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:40:28.827644 line       556                     i = i_j[0]
excute 13:40:28.830634 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:28.833625 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.837585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:40:28.840609 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:28.843601 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:28.847567 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.850550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:40:28.853573 line       556                     i = i_j[0]
excute 13:40:28.856567 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:28.859558 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.863522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:28.867503 line       556                     i = i_j[0]
excute 13:40:28.870497 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:28.873489 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.877478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:28.881467 line       556                     i = i_j[0]
excute 13:40:28.884460 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:28.888449 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.895429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:28.898445 line       556                     i = i_j[0]
excute 13:40:28.902411 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:28.905415 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.908394 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 1)
excute 13:40:28.911418 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:28.914410 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.918399 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.922358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 1)
excute 13:40:28.925381 line       556                     i = i_j[0]
excute 13:40:28.928365 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.931334 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.934326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:40:28.938318 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:28.941307 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:28.944300 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.948289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 1)
excute 13:40:28.951281 line       556                     i = i_j[0]
excute 13:40:28.955269 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:28.958260 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.961253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 1)
excute 13:40:28.964275 line       556                     i = i_j[0]
excute 13:40:28.968236 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:28.971261 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.975217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 2)
excute 13:40:28.978239 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:28.981231 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:28.985189 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:28.988182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 2)
excute 13:40:28.991204 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:28.994196 line       557                     j = i_j[1]
excute 13:40:28.997188 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:29.000182 line       555                 for i_j in i_j_list:
excute 13:40:29.003174 line       581             self.write_matrix(
excute 13:40:29.006163 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:29.010124 line       583                 result_file_path,
excute 13:40:29.013116 line       584                 mode='a'
excute 13:40:29.019272 line       488         for t in time_steps:
excute Modified var:.. t = 11
excute 13:40:29.023261 line       489             if (t != self.TIME + 1):
excute 13:40:29.027248 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:29.030240 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:29.034231 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:29.037222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:29.042209 line       494                         if (i == j):
excute 13:40:29.046197 line       495                             continue
excute 13:40:29.049189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:29.054175 line       494                         if (i == j):
excute 13:40:29.060161 line       496                         i_j_list.append((
excute 13:40:29.062155 line       497                             i, j,
excute 13:40:29.067141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.072130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:29.077118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:29.081107 line       494                         if (i == j):
excute 13:40:29.085094 line       496                         i_j_list.append((
excute 13:40:29.088085 line       497                             i, j,
excute 13:40:29.093071 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.096063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:40:29.101050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:29.105044 line       494                         if (i == j):
excute 13:40:29.111025 line       496                         i_j_list.append((
excute 13:40:29.121995 line       497                             i, j,
excute 13:40:29.132968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.138952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:40:29.146931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:29.151915 line       494                         if (i == j):
excute 13:40:29.155910 line       496                         i_j_list.append((
excute 13:40:29.158896 line       497                             i, j,
excute 13:40:29.162885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.167871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:29.170864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:29.177846 line       494                         if (i == j):
excute 13:40:29.180839 line       496                         i_j_list.append((
excute 13:40:29.183829 line       497                             i, j,
excute 13:40:29.187820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.192805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:29.197793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:29.202779 line       494                         if (i == j):
excute 13:40:29.207766 line       496                         i_j_list.append((
excute 13:40:29.212753 line       497                             i, j,
excute 13:40:29.217739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.220731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:29.225717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:29.229708 line       494                         if (i == j):
excute 13:40:29.234695 line       496                         i_j_list.append((
excute 13:40:29.240687 line       497                             i, j,
excute 13:40:29.245664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.248657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:29.250650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:29.254640 line       494                         if (i == j):
excute 13:40:29.257631 line       496                         i_j_list.append((
excute 13:40:29.263627 line       497                             i, j,
excute 13:40:29.266608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.269600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:40:29.272592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:29.276582 line       494                         if (i == j):
excute 13:40:29.281569 line       496                         i_j_list.append((
excute 13:40:29.284560 line       497                             i, j,
excute 13:40:29.287552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.290544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:40:29.293539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:29.296529 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:29.299520 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:29.302513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:29.305504 line       494                         if (i == j):
excute 13:40:29.308496 line       496                         i_j_list.append((
excute 13:40:29.311488 line       497                             i, j,
excute 13:40:29.314479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.317471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0)]
excute 13:40:29.320464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:29.323457 line       494                         if (i == j):
excute 13:40:29.327447 line       495                             continue
excute 13:40:29.334429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:29.339414 line       494                         if (i == j):
excute 13:40:29.344402 line       496                         i_j_list.append((
excute 13:40:29.347392 line       497                             i, j,
excute 13:40:29.350384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.356368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:40:29.360358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:29.367368 line       494                         if (i == j):
excute 13:40:29.373326 line       496                         i_j_list.append((
excute 13:40:29.377312 line       497                             i, j,
excute 13:40:29.381314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.385292 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:40:29.388283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:29.392273 line       494                         if (i == j):
excute 13:40:29.396263 line       496                         i_j_list.append((
excute 13:40:29.399254 line       497                             i, j,
excute 13:40:29.403244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.406235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:40:29.409227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:29.412220 line       494                         if (i == j):
excute 13:40:29.416208 line       496                         i_j_list.append((
excute 13:40:29.419201 line       497                             i, j,
excute 13:40:29.422193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.425184 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:40:29.428176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:29.432167 line       494                         if (i == j):
excute 13:40:29.435157 line       496                         i_j_list.append((
excute 13:40:29.438149 line       497                             i, j,
excute 13:40:29.441141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.444133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:40:29.447125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:29.450117 line       494                         if (i == j):
excute 13:40:29.454106 line       496                         i_j_list.append((
excute 13:40:29.457101 line       497                             i, j,
excute 13:40:29.460093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.466075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:40:29.469099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:29.473070 line       494                         if (i == j):
excute 13:40:29.476049 line       496                         i_j_list.append((
excute 13:40:29.479074 line       497                             i, j,
excute 13:40:29.482066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.486022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:40:29.490011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:29.493012 line       494                         if (i == j):
excute 13:40:29.496992 line       496                         i_j_list.append((
excute 13:40:29.499983 line       497                             i, j,
excute 13:40:29.502980 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.505002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:40:29.508960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:29.512952 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:29.515946 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:29.518933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:29.521925 line       494                         if (i == j):
excute 13:40:29.524917 line       496                         i_j_list.append((
excute 13:40:29.528919 line       497                             i, j,
excute 13:40:29.530903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.534890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0)]
excute 13:40:29.536916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:29.540908 line       494                         if (i == j):
excute 13:40:29.543867 line       496                         i_j_list.append((
excute 13:40:29.546891 line       497                             i, j,
excute 13:40:29.549872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.551877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:40:29.555868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:29.558836 line       494                         if (i == j):
excute 13:40:29.561821 line       495                             continue
excute 13:40:29.565809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:29.568802 line       494                         if (i == j):
excute 13:40:29.571794 line       496                         i_j_list.append((
excute 13:40:29.574785 line       497                             i, j,
excute 13:40:29.577778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.581766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:29.586752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:29.592737 line       494                         if (i == j):
excute 13:40:29.598721 line       496                         i_j_list.append((
excute 13:40:29.601712 line       497                             i, j,
excute 13:40:29.605702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.611712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:29.614679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:29.619672 line       494                         if (i == j):
excute 13:40:29.623653 line       496                         i_j_list.append((
excute 13:40:29.625650 line       497                             i, j,
excute 13:40:29.628642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.631634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:29.634626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:29.639612 line       494                         if (i == j):
excute 13:40:29.644600 line       496                         i_j_list.append((
excute 13:40:29.647589 line       497                             i, j,
excute 13:40:29.651578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.653573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:29.657563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:29.660555 line       494                         if (i == j):
excute 13:40:29.663546 line       496                         i_j_list.append((
excute 13:40:29.666538 line       497                             i, j,
excute 13:40:29.668533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.672524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:29.674517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:29.680610 line       494                         if (i == j):
excute 13:40:29.683608 line       496                         i_j_list.append((
excute 13:40:29.686601 line       497                             i, j,
excute 13:40:29.689593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.695584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:29.699566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:29.702563 line       494                         if (i == j):
excute 13:40:29.705580 line       496                         i_j_list.append((
excute 13:40:29.708580 line       497                             i, j,
excute 13:40:29.712532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.714525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:40:29.717517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:29.720509 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:29.723501 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:29.727490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:29.729485 line       494                         if (i == j):
excute 13:40:29.732477 line       496                         i_j_list.append((
excute 13:40:29.735469 line       497                             i, j,
excute 13:40:29.738461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.741453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:40:29.744444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:29.747437 line       494                         if (i == j):
excute 13:40:29.750428 line       496                         i_j_list.append((
excute 13:40:29.753421 line       497                             i, j,
excute 13:40:29.756413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.759405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:40:29.762397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:29.766387 line       494                         if (i == j):
excute 13:40:29.769390 line       496                         i_j_list.append((
excute 13:40:29.772405 line       497                             i, j,
excute 13:40:29.775395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.778386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:29.781378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:29.784370 line       494                         if (i == j):
excute 13:40:29.787362 line       495                             continue
excute 13:40:29.790354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:29.793346 line       494                         if (i == j):
excute 13:40:29.798303 line       496                         i_j_list.append((
excute 13:40:29.801324 line       497                             i, j,
excute 13:40:29.804285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.806311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:29.809304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:29.812294 line       494                         if (i == j):
excute 13:40:29.816254 line       496                         i_j_list.append((
excute 13:40:29.819277 line       497                             i, j,
excute 13:40:29.821270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.824263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:29.827255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:29.830247 line       494                         if (i == j):
excute 13:40:29.834206 line       496                         i_j_list.append((
excute 13:40:29.837228 line       497                             i, j,
excute 13:40:29.840220 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.843213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:29.846184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:29.849166 line       494                         if (i == j):
excute 13:40:29.852188 line       496                         i_j_list.append((
excute 13:40:29.855181 line       497                             i, j,
excute 13:40:29.858172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.861164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:29.864156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:29.867149 line       494                         if (i == j):
excute 13:40:29.870140 line       496                         i_j_list.append((
excute 13:40:29.873132 line       497                             i, j,
excute 13:40:29.876124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.879117 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:29.882109 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:29.885100 line       494                         if (i == j):
excute 13:40:29.888092 line       496                         i_j_list.append((
excute 13:40:29.891084 line       497                             i, j,
excute 13:40:29.894076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.897068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:40:29.902026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:29.905015 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:29.908007 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:29.910999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:29.913991 line       494                         if (i == j):
excute 13:40:29.917981 line       496                         i_j_list.append((
excute 13:40:29.920972 line       497                             i, j,
excute 13:40:29.923965 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.925959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0)]
excute 13:40:29.928951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:29.931943 line       494                         if (i == j):
excute 13:40:29.934935 line       496                         i_j_list.append((
excute 13:40:29.937928 line       497                             i, j,
excute 13:40:29.940919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.943911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:40:29.946904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:29.949896 line       494                         if (i == j):
excute 13:40:29.952887 line       496                         i_j_list.append((
excute 13:40:29.955911 line       497                             i, j,
excute 13:40:29.958903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.961866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:40:29.964855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:29.967847 line       494                         if (i == j):
excute 13:40:29.971838 line       496                         i_j_list.append((
excute 13:40:29.973832 line       497                             i, j,
excute 13:40:29.976824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:29.979815 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:40:29.983804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:29.987797 line       494                         if (i == j):
excute 13:40:29.990788 line       495                             continue
excute 13:40:29.993778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:29.997768 line       494                         if (i == j):
excute 13:40:30.003756 line       496                         i_j_list.append((
excute 13:40:30.006744 line       497                             i, j,
excute 13:40:30.009736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.013726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:40:30.016717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:30.019710 line       494                         if (i == j):
excute 13:40:30.022700 line       496                         i_j_list.append((
excute 13:40:30.026690 line       497                             i, j,
excute 13:40:30.029682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.031677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:40:30.034669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:30.037660 line       494                         if (i == j):
excute 13:40:30.041650 line       496                         i_j_list.append((
excute 13:40:30.043646 line       497                             i, j,
excute 13:40:30.046637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.049629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:40:30.052621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:30.055614 line       494                         if (i == j):
excute 13:40:30.059603 line       496                         i_j_list.append((
excute 13:40:30.062594 line       497                             i, j,
excute 13:40:30.064589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.067581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:40:30.070573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:30.074562 line       494                         if (i == j):
excute 13:40:30.077554 line       496                         i_j_list.append((
excute 13:40:30.080547 line       497                             i, j,
excute 13:40:30.083539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.085533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:40:30.089523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:30.095507 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:30.097501 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:30.101491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:30.104484 line       494                         if (i == j):
excute 13:40:30.109469 line       496                         i_j_list.append((
excute 13:40:30.111464 line       497                             i, j,
excute 13:40:30.114456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.117447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0)]
excute 13:40:30.120440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:30.123431 line       494                         if (i == j):
excute 13:40:30.127421 line       496                         i_j_list.append((
excute 13:40:30.129416 line       497                             i, j,
excute 13:40:30.132408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.135400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:40:30.138392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:30.142381 line       494                         if (i == j):
excute 13:40:30.146371 line       496                         i_j_list.append((
excute 13:40:30.149376 line       497                             i, j,
excute 13:40:30.152354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.155346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:40:30.158338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:30.161330 line       494                         if (i == j):
excute 13:40:30.165320 line       496                         i_j_list.append((
excute 13:40:30.167314 line       497                             i, j,
excute 13:40:30.170306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.173298 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:40:30.176290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:30.181307 line       494                         if (i == j):
excute 13:40:30.184304 line       496                         i_j_list.append((
excute 13:40:30.187295 line       497                             i, j,
excute 13:40:30.190287 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.192283 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:40:30.195274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:30.199276 line       494                         if (i == j):
excute 13:40:30.202256 line       495                             continue
excute 13:40:30.205247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:30.208242 line       494                         if (i == j):
excute 13:40:30.212229 line       496                         i_j_list.append((
excute 13:40:30.215253 line       497                             i, j,
excute 13:40:30.218244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.222203 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:40:30.224228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:30.228222 line       494                         if (i == j):
excute 13:40:30.231180 line       496                         i_j_list.append((
excute 13:40:30.234172 line       497                             i, j,
excute 13:40:30.237163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.243147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:40:30.246139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:30.249132 line       494                         if (i == j):
excute 13:40:30.253135 line       496                         i_j_list.append((
excute 13:40:30.256112 line       497                             i, j,
excute 13:40:30.259103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.262128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:40:30.265121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:30.268114 line       494                         if (i == j):
excute 13:40:30.272069 line       496                         i_j_list.append((
excute 13:40:30.274064 line       497                             i, j,
excute 13:40:30.278053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.281047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:40:30.283040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:30.287029 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:30.290021 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:30.293014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:30.296005 line       494                         if (i == j):
excute 13:40:30.298997 line       496                         i_j_list.append((
excute 13:40:30.301997 line       497                             i, j,
excute 13:40:30.304987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.307007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0)]
excute 13:40:30.310968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:30.313990 line       494                         if (i == j):
excute 13:40:30.317979 line       496                         i_j_list.append((
excute 13:40:30.320975 line       497                             i, j,
excute 13:40:30.323961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.328919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:40:30.333905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:30.337896 line       494                         if (i == j):
excute 13:40:30.340887 line       496                         i_j_list.append((
excute 13:40:30.344876 line       497                             i, j,
excute 13:40:30.347900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.350890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:40:30.353882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:30.357872 line       494                         if (i == j):
excute 13:40:30.361831 line       496                         i_j_list.append((
excute 13:40:30.364853 line       497                             i, j,
excute 13:40:30.367845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.370838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:40:30.373799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:30.377800 line       494                         if (i == j):
excute 13:40:30.380780 line       496                         i_j_list.append((
excute 13:40:30.384774 line       497                             i, j,
excute 13:40:30.386765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.390754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:40:30.393746 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:30.396738 line       494                         if (i == j):
excute 13:40:30.401726 line       496                         i_j_list.append((
excute 13:40:30.404716 line       497                             i, j,
excute 13:40:30.406709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.409701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:40:30.414690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:30.418679 line       494                         if (i == j):
excute 13:40:30.422669 line       495                             continue
excute 13:40:30.425658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:30.427655 line       494                         if (i == j):
excute 13:40:30.431642 line       496                         i_j_list.append((
excute 13:40:30.434636 line       497                             i, j,
excute 13:40:30.437629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.440621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:40:30.443612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:30.447602 line       494                         if (i == j):
excute 13:40:30.450600 line       496                         i_j_list.append((
excute 13:40:30.453585 line       497                             i, j,
excute 13:40:30.457575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.460567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:40:30.463559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:30.467549 line       494                         if (i == j):
excute 13:40:30.470541 line       496                         i_j_list.append((
excute 13:40:30.474528 line       497                             i, j,
excute 13:40:30.477522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.480513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:40:30.483505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:30.487496 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:30.490486 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:30.493480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:30.496469 line       494                         if (i == j):
excute 13:40:30.499464 line       496                         i_j_list.append((
excute 13:40:30.502455 line       497                             i, j,
excute 13:40:30.505446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.508470 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0)]
excute 13:40:30.511432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:30.515421 line       494                         if (i == j):
excute 13:40:30.519410 line       496                         i_j_list.append((
excute 13:40:30.522431 line       497                             i, j,
excute 13:40:30.525423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.528386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:40:30.532375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:30.535367 line       494                         if (i == j):
excute 13:40:30.538359 line       496                         i_j_list.append((
excute 13:40:30.542351 line       497                             i, j,
excute 13:40:30.545340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.548332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:40:30.551324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:30.555312 line       494                         if (i == j):
excute 13:40:30.559302 line       496                         i_j_list.append((
excute 13:40:30.561297 line       497                             i, j,
excute 13:40:30.564289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.567280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:40:30.570272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:30.574264 line       494                         if (i == j):
excute 13:40:30.577254 line       496                         i_j_list.append((
excute 13:40:30.580246 line       497                             i, j,
excute 13:40:30.583239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.586229 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:30.589232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:30.592229 line       494                         if (i == j):
excute 13:40:30.595206 line       496                         i_j_list.append((
excute 13:40:30.598198 line       497                             i, j,
excute 13:40:30.601190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.604182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:30.607175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:30.610166 line       494                         if (i == j):
excute 13:40:30.613188 line       496                         i_j_list.append((
excute 13:40:30.616184 line       497                             i, j,
excute 13:40:30.620140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.627121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:30.630113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:30.637097 line       494                         if (i == j):
excute 13:40:30.643078 line       495                             continue
excute 13:40:30.646070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:30.651058 line       494                         if (i == j):
excute 13:40:30.655046 line       496                         i_j_list.append((
excute 13:40:30.658039 line       497                             i, j,
excute 13:40:30.661031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.664023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:40:30.667015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:30.670007 line       494                         if (i == j):
excute 13:40:30.673997 line       496                         i_j_list.append((
excute 13:40:30.676988 line       497                             i, j,
excute 13:40:30.680978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.683969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:40:30.685963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:30.689954 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:30.692946 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:30.695937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:30.698929 line       494                         if (i == j):
excute 13:40:30.701921 line       496                         i_j_list.append((
excute 13:40:30.704912 line       497                             i, j,
excute 13:40:30.707905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.710897 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0)]
excute 13:40:30.714885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:30.717879 line       494                         if (i == j):
excute 13:40:30.721867 line       496                         i_j_list.append((
excute 13:40:30.726855 line       497                             i, j,
excute 13:40:30.729845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.732837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0)]
excute 13:40:30.735829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:30.738821 line       494                         if (i == j):
excute 13:40:30.741813 line       496                         i_j_list.append((
excute 13:40:30.744805 line       497                             i, j,
excute 13:40:30.747797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.750790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:40:30.752784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:30.756773 line       494                         if (i == j):
excute 13:40:30.759765 line       496                         i_j_list.append((
excute 13:40:30.762757 line       497                             i, j,
excute 13:40:30.765749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.768741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:40:30.771734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:30.774726 line       494                         if (i == j):
excute 13:40:30.777717 line       496                         i_j_list.append((
excute 13:40:30.780709 line       497                             i, j,
excute 13:40:30.784698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.787693 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:40:30.790684 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:30.793677 line       494                         if (i == j):
excute 13:40:30.797667 line       496                         i_j_list.append((
excute 13:40:30.800658 line       497                             i, j,
excute 13:40:30.803649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.806641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:40:30.810632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:30.813624 line       494                         if (i == j):
excute 13:40:30.816615 line       496                         i_j_list.append((
excute 13:40:30.819607 line       497                             i, j,
excute 13:40:30.822599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.826592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:40:30.830576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:30.834568 line       494                         if (i == j):
excute 13:40:30.837557 line       496                         i_j_list.append((
excute 13:40:30.840581 line       497                             i, j,
excute 13:40:30.843573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.846565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:40:30.849557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:30.853515 line       494                         if (i == j):
excute 13:40:30.856506 line       495                             continue
excute 13:40:30.859500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:30.862490 line       494                         if (i == j):
excute 13:40:30.865482 line       496                         i_j_list.append((
excute 13:40:30.868474 line       497                             i, j,
excute 13:40:30.871466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.874458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:40:30.877450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:30.880442 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:30.883466 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:30.887427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:30.890419 line       494                         if (i == j):
excute 13:40:30.894405 line       496                         i_j_list.append((
excute 13:40:30.897399 line       497                             i, j,
excute 13:40:30.900389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.903381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0)]
excute 13:40:30.906373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:30.909365 line       494                         if (i == j):
excute 13:40:30.912357 line       496                         i_j_list.append((
excute 13:40:30.916347 line       497                             i, j,
excute 13:40:30.919338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.922330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:40:30.925323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:30.951346 line       494                         if (i == j):
excute 13:40:30.955333 line       496                         i_j_list.append((
excute 13:40:30.958324 line       497                             i, j,
excute 13:40:30.962316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.967302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:40:30.970293 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:30.974282 line       494                         if (i == j):
excute 13:40:30.977274 line       496                         i_j_list.append((
excute 13:40:30.981265 line       497                             i, j,
excute 13:40:30.984257 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:30.988246 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:40:30.991238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:30.995228 line       494                         if (i == j):
excute 13:40:30.999217 line       496                         i_j_list.append((
excute 13:40:31.003209 line       497                             i, j,
excute 13:40:31.006198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:31.010186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:40:31.013210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:31.017193 line       494                         if (i == j):
excute 13:40:31.020160 line       496                         i_j_list.append((
excute 13:40:31.023187 line       497                             i, j,
excute 13:40:31.027143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:31.030165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:40:31.034124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:31.037146 line       494                         if (i == j):
excute 13:40:31.041135 line       496                         i_j_list.append((
excute 13:40:31.044129 line       497                             i, j,
excute 13:40:31.047122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:31.050111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:40:31.053103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:31.057062 line       494                         if (i == j):
excute 13:40:31.060088 line       496                         i_j_list.append((
excute 13:40:31.063079 line       497                             i, j,
excute 13:40:31.066068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:31.069060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:40:31.072052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:31.076038 line       494                         if (i == j):
excute 13:40:31.079003 line       496                         i_j_list.append((
excute 13:40:31.082028 line       497                             i, j,
excute 13:40:31.085018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:31.087978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:40:31.090970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:31.093962 line       494                         if (i == j):
excute 13:40:31.097951 line       495                             continue
excute 13:40:31.100944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:31.103935 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:31.106928 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:40:31.110919 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:31.113910 line       505                     if (self.RELOCATE):
excute 13:40:31.118898 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:31.121890 line       505                     if (self.RELOCATE):
excute 13:40:31.124879 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:31.127873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:31.130865 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:31.136849 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:31.141835 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.144826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:31.147818 line       556                     i = i_j[0]
excute 13:40:31.151810 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:31.153802 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.157792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:31.160784 line       556                     i = i_j[0]
excute 13:40:31.163775 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:31.166769 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.169759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:31.172751 line       556                     i = i_j[0]
excute 13:40:31.176754 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:31.178735 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.182734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:31.185717 line       556                     i = i_j[0]
excute 13:40:31.188709 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:31.191700 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.194707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:31.197717 line       556                     i = i_j[0]
excute 13:40:31.201677 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:31.203704 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.207660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:31.210652 line       556                     i = i_j[0]
excute 13:40:31.215651 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:31.218631 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.222634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:31.225612 line       556                     i = i_j[0]
excute 13:40:31.228604 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:31.232592 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.235584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:31.238579 line       556                     i = i_j[0]
excute 13:40:31.242597 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:31.245590 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.249547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:40:31.252539 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:31.258523 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:31.263510 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.268496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:40:31.272486 line       556                     i = i_j[0]
excute 13:40:31.278470 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:31.281464 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.287448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:40:31.292432 line       556                     i = i_j[0]
excute 13:40:31.296424 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:31.301408 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.304402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:40:31.308391 line       556                     i = i_j[0]
excute 13:40:31.313376 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:31.319360 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.323349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:31.333323 line       556                     i = i_j[0]
excute 13:40:31.347292 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:31.352273 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.359253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:40:31.365249 line       556                     i = i_j[0]
excute 13:40:31.372219 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:31.376210 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.382193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:40:31.387179 line       556                     i = i_j[0]
excute 13:40:31.394164 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:31.401142 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.409130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:40:31.416102 line       556                     i = i_j[0]
excute 13:40:31.422086 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:31.430064 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.434053 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:40:31.439040 line       556                     i = i_j[0]
excute 13:40:31.444028 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:31.451009 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.455995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:40:31.462975 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:31.470957 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:31.477936 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.485915 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:40:31.492897 line       556                     i = i_j[0]
excute 13:40:31.496886 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:31.502869 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.508854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:40:31.514838 line       556                     i = i_j[0]
excute 13:40:31.522816 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:31.529798 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.535782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:40:31.540768 line       556                     i = i_j[0]
excute 13:40:31.546752 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:31.550742 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.557723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:40:31.562710 line       556                     i = i_j[0]
excute 13:40:31.568695 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:31.573680 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.579666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:40:31.586645 line       556                     i = i_j[0]
excute 13:40:31.592630 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:31.596619 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.604598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:40:31.611578 line       556                     i = i_j[0]
excute 13:40:31.618564 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:31.626549 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.633521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:40:31.640502 line       556                     i = i_j[0]
excute 13:40:31.647485 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:31.653467 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.661446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:40:31.668427 line       556                     i = i_j[0]
excute 13:40:31.675409 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:31.682390 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.689374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:31.695354 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:31.703334 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:31.712311 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.718294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:31.721285 line       556                     i = i_j[0]
excute 13:40:31.725275 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:31.729264 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.733258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:31.736246 line       556                     i = i_j[0]
excute 13:40:31.739237 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:31.742230 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.745222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:31.748213 line       556                     i = i_j[0]
excute 13:40:31.751205 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:31.755195 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.758186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:31.762176 line       556                     i = i_j[0]
excute 13:40:31.766165 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:31.769157 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.772149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:31.775141 line       556                     i = i_j[0]
excute 13:40:31.778132 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:31.781125 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.784117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:31.787109 line       556                     i = i_j[0]
excute 13:40:31.791099 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:31.793093 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.797082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:31.800074 line       556                     i = i_j[0]
excute 13:40:31.803067 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:31.806058 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.809051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:31.812043 line       556                     i = i_j[0]
excute 13:40:31.815034 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:31.818026 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.822017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:40:31.825008 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:31.831990 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:31.836975 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.840966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:40:31.843958 line       556                     i = i_j[0]
excute 13:40:31.846950 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:31.849941 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.853932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:40:31.856923 line       556                     i = i_j[0]
excute 13:40:31.859916 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:31.863904 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.866899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:40:31.869888 line       556                     i = i_j[0]
excute 13:40:31.872880 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:31.875904 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.878895 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:40:31.881890 line       556                     i = i_j[0]
excute 13:40:31.885848 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:31.888868 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.891861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:40:31.894852 line       556                     i = i_j[0]
excute 13:40:31.898836 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:31.901802 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.904795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:40:31.907786 line       556                     i = i_j[0]
excute 13:40:31.910778 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:31.913770 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.917760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:40:31.920752 line       556                     i = i_j[0]
excute 13:40:31.924741 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:31.927734 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.930725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:40:31.933718 line       556                     i = i_j[0]
excute 13:40:31.936709 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:31.939701 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.942693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:31.945685 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:31.948677 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:31.952666 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.955660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:31.958650 line       556                     i = i_j[0]
excute 13:40:31.962640 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:31.965635 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.969622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:31.972613 line       556                     i = i_j[0]
excute 13:40:31.975605 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:31.978597 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.981590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:31.984581 line       556                     i = i_j[0]
excute 13:40:31.987573 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:31.990565 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:31.994555 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:31.997552 line       556                     i = i_j[0]
excute 13:40:32.000540 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:32.003531 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.006523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:32.009515 line       556                     i = i_j[0]
excute 13:40:32.013504 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:32.016496 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.019488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:32.022481 line       556                     i = i_j[0]
excute 13:40:32.026470 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:32.029461 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.032453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:40:32.035445 line       556                     i = i_j[0]
excute 13:40:32.039435 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:32.042432 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.045418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:40:32.048411 line       556                     i = i_j[0]
excute 13:40:32.051403 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:32.054394 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.058385 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:32.061376 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:32.064368 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:32.070352 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.073343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:32.076336 line       556                     i = i_j[0]
excute 13:40:32.079327 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:32.082320 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.086310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:32.089303 line       556                     i = i_j[0]
excute 13:40:32.092294 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:32.095286 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.098277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:32.102267 line       556                     i = i_j[0]
excute 13:40:32.107253 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:32.112249 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.115232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:32.118224 line       556                     i = i_j[0]
excute 13:40:32.122214 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:32.124209 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.128198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:32.131189 line       556                     i = i_j[0]
excute 13:40:32.135179 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:32.141169 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.145152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:32.148144 line       556                     i = i_j[0]
excute 13:40:32.152133 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:32.155126 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.159115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:32.162107 line       556                     i = i_j[0]
excute 13:40:32.165104 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:32.168091 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.172081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:32.175072 line       556                     i = i_j[0]
excute 13:40:32.179061 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:32.182053 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.185045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:40:32.188037 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:32.191029 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:32.195020 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.198011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:40:32.201002 line       556                     i = i_j[0]
excute 13:40:32.203995 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:32.206986 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.209978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:40:32.212970 line       556                     i = i_j[0]
excute 13:40:32.216960 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:32.219952 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.223942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:40:32.226934 line       556                     i = i_j[0]
excute 13:40:32.229926 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:32.232918 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.235925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:32.238901 line       556                     i = i_j[0]
excute 13:40:32.241894 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:32.244885 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.248876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:40:32.251867 line       556                     i = i_j[0]
excute 13:40:32.254860 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:32.257851 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.261842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:40:32.264867 line       556                     i = i_j[0]
excute 13:40:32.267825 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:32.270816 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.275803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:40:32.278795 line       556                     i = i_j[0]
excute 13:40:32.282784 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:32.285776 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.288768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:40:32.291759 line       556                     i = i_j[0]
excute 13:40:32.295292 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:32.298286 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.302275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:40:32.305267 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:32.308260 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:32.311251 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.315242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:40:32.318234 line       556                     i = i_j[0]
excute 13:40:32.321225 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:32.324217 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.332197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:40:32.337184 line       556                     i = i_j[0]
excute 13:40:32.341173 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:32.344164 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.349150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:40:32.352142 line       556                     i = i_j[0]
excute 13:40:32.357144 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:32.360121 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.364134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:40:32.367102 line       556                     i = i_j[0]
excute 13:40:32.373088 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:32.377076 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.383061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:40:32.386053 line       556                     i = i_j[0]
excute 13:40:32.389047 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:32.392036 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.396041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:40:32.400015 line       556                     i = i_j[0]
excute 13:40:32.403007 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:32.406997 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.409989 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:40:32.412981 line       556                     i = i_j[0]
excute 13:40:32.416970 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:32.419962 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.422955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:40:32.425946 line       556                     i = i_j[0]
excute 13:40:32.428938 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:32.432926 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.435920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:40:32.438912 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:32.442902 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:32.445894 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.449883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:40:32.453873 line       556                     i = i_j[0]
excute 13:40:32.456864 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:32.459856 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.466837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:40:32.470825 line       556                     i = i_j[0]
excute 13:40:32.474815 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:32.481798 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.485788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:32.488779 line       556                     i = i_j[0]
excute 13:40:32.492774 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:32.495760 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.499750 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:32.502742 line       556                     i = i_j[0]
excute 13:40:32.505734 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:32.509723 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.513712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:40:32.516702 line       556                     i = i_j[0]
excute 13:40:32.519694 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:32.522686 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.526681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:40:32.530666 line       556                     i = i_j[0]
excute 13:40:32.533658 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:32.536651 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.540639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:40:32.544629 line       556                     i = i_j[0]
excute 13:40:32.547622 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:32.550613 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.554601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:40:32.557593 line       556                     i = i_j[0]
excute 13:40:32.561589 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:32.563577 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:32.567567 line       555                 for i_j in i_j_list:
excute 13:40:32.570559 line       581             self.write_matrix(
excute 13:40:32.572553 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:32.575545 line       583                 result_file_path,
excute 13:40:32.578537 line       584                 mode='a'
excute 13:40:32.585519 line       488         for t in time_steps:
excute Modified var:.. t = 12
excute 13:40:32.589507 line       489             if (t != self.TIME + 1):
excute 13:40:32.594495 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:32.597489 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:32.603472 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:32.608470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:32.614444 line       494                         if (i == j):
excute 13:40:32.619428 line       495                             continue
excute 13:40:32.622422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:32.627406 line       494                         if (i == j):
excute 13:40:32.633394 line       496                         i_j_list.append((
excute 13:40:32.638378 line       497                             i, j,
excute 13:40:32.642369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.646357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:32.651344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:32.656330 line       494                         if (i == j):
excute 13:40:32.660326 line       496                         i_j_list.append((
excute 13:40:32.665306 line       497                             i, j,
excute 13:40:32.669294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.673287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:40:32.678271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:32.681263 line       494                         if (i == j):
excute 13:40:32.698218 line       496                         i_j_list.append((
excute 13:40:32.703205 line       497                             i, j,
excute 13:40:32.716171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.721156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:40:32.726142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:32.733126 line       494                         if (i == j):
excute 13:40:32.739115 line       496                         i_j_list.append((
excute 13:40:32.744094 line       497                             i, j,
excute 13:40:32.747086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.752073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:32.756063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:32.762048 line       494                         if (i == j):
excute 13:40:32.766037 line       496                         i_j_list.append((
excute 13:40:32.769030 line       497                             i, j,
excute 13:40:32.774015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.779999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:32.783989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:32.790971 line       494                         if (i == j):
excute 13:40:32.798950 line       496                         i_j_list.append((
excute 13:40:32.803937 line       497                             i, j,
excute 13:40:32.807925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.810917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:32.815903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:32.823887 line       494                         if (i == j):
excute 13:40:32.832859 line       496                         i_j_list.append((
excute 13:40:32.836849 line       497                             i, j,
excute 13:40:32.840836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.845826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1)]
excute 13:40:32.850809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:32.854799 line       494                         if (i == j):
excute 13:40:32.859786 line       496                         i_j_list.append((
excute 13:40:32.864772 line       497                             i, j,
excute 13:40:32.867766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.872751 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0)]
excute 13:40:32.875744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:32.880731 line       494                         if (i == j):
excute 13:40:32.885716 line       496                         i_j_list.append((
excute 13:40:32.889706 line       497                             i, j,
excute 13:40:32.892697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.897685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:40:32.901675 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:32.906662 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:32.911647 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:32.917632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:32.921621 line       494                         if (i == j):
excute 13:40:32.928602 line       496                         i_j_list.append((
excute 13:40:32.932591 line       497                             i, j,
excute 13:40:32.937594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.940571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1)]
excute 13:40:32.943561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:32.947551 line       494                         if (i == j):
excute 13:40:32.950543 line       495                             continue
excute 13:40:32.953535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:32.956526 line       494                         if (i == j):
excute 13:40:32.959519 line       496                         i_j_list.append((
excute 13:40:32.963509 line       497                             i, j,
excute 13:40:32.965503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.968495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0)]
excute 13:40:32.971487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:32.975477 line       494                         if (i == j):
excute 13:40:32.978469 line       496                         i_j_list.append((
excute 13:40:32.981461 line       497                             i, j,
excute 13:40:32.984453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:32.987446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:40:32.990438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:32.994428 line       494                         if (i == j):
excute 13:40:32.998415 line       496                         i_j_list.append((
excute 13:40:33.001407 line       497                             i, j,
excute 13:40:33.004399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.007391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:40:33.010383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:33.014375 line       494                         if (i == j):
excute 13:40:33.018361 line       496                         i_j_list.append((
excute 13:40:33.020358 line       497                             i, j,
excute 13:40:33.024358 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.027339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:40:33.031329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:33.034320 line       494                         if (i == j):
excute 13:40:33.038310 line       496                         i_j_list.append((
excute 13:40:33.041301 line       497                             i, j,
excute 13:40:33.044294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.047285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:40:33.051275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:33.055266 line       494                         if (i == j):
excute 13:40:33.059254 line       496                         i_j_list.append((
excute 13:40:33.062244 line       497                             i, j,
excute 13:40:33.064241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.067232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1)]
excute 13:40:33.070224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:33.074214 line       494                         if (i == j):
excute 13:40:33.078203 line       496                         i_j_list.append((
excute 13:40:33.081195 line       497                             i, j,
excute 13:40:33.084188 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.087192 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0)]
excute 13:40:33.090169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:33.093161 line       494                         if (i == j):
excute 13:40:33.096153 line       496                         i_j_list.append((
excute 13:40:33.101142 line       497                             i, j,
excute 13:40:33.104134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.108121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:40:33.111114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:33.114105 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:33.117097 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:33.120089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:33.123081 line       494                         if (i == j):
excute 13:40:33.126073 line       496                         i_j_list.append((
excute 13:40:33.129065 line       497                             i, j,
excute 13:40:33.132057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.135050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1)]
excute 13:40:33.139040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:33.143029 line       494                         if (i == j):
excute 13:40:33.146022 line       496                         i_j_list.append((
excute 13:40:33.150011 line       497                             i, j,
excute 13:40:33.153004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.155996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0)]
excute 13:40:33.158987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:33.161980 line       494                         if (i == j):
excute 13:40:33.165967 line       495                             continue
excute 13:40:33.167963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:33.170955 line       494                         if (i == j):
excute 13:40:33.174945 line       496                         i_j_list.append((
excute 13:40:33.177937 line       497                             i, j,
excute 13:40:33.180928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.182923 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:40:33.186913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:33.189904 line       494                         if (i == j):
excute 13:40:33.193894 line       496                         i_j_list.append((
excute 13:40:33.197883 line       497                             i, j,
excute 13:40:33.200873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.205862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:40:33.208854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:33.211845 line       494                         if (i == j):
excute 13:40:33.216833 line       496                         i_j_list.append((
excute 13:40:33.219823 line       497                             i, j,
excute 13:40:33.222816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.225806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:40:33.228800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:33.231791 line       494                         if (i == j):
excute 13:40:33.234782 line       496                         i_j_list.append((
excute 13:40:33.237775 line       497                             i, j,
excute 13:40:33.240766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.243759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:40:33.246750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:33.249743 line       494                         if (i == j):
excute 13:40:33.252734 line       496                         i_j_list.append((
excute 13:40:33.255727 line       497                             i, j,
excute 13:40:33.258719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.261710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1)]
excute 13:40:33.264702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:33.267695 line       494                         if (i == j):
excute 13:40:33.270687 line       496                         i_j_list.append((
excute 13:40:33.273679 line       497                             i, j,
excute 13:40:33.277669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.279664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0)]
excute 13:40:33.282655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:33.286646 line       494                         if (i == j):
excute 13:40:33.289637 line       496                         i_j_list.append((
excute 13:40:33.293629 line       497                             i, j,
excute 13:40:33.295620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.298612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:40:33.301604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:33.305594 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:33.309614 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:33.313576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:33.316595 line       494                         if (i == j):
excute 13:40:33.319557 line       496                         i_j_list.append((
excute 13:40:33.322579 line       497                             i, j,
excute 13:40:33.325572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.330530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1)]
excute 13:40:33.335515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:33.340510 line       494                         if (i == j):
excute 13:40:33.343492 line       496                         i_j_list.append((
excute 13:40:33.348515 line       497                             i, j,
excute 13:40:33.351502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.354462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0)]
excute 13:40:33.357454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:33.360453 line       494                         if (i == j):
excute 13:40:33.364438 line       496                         i_j_list.append((
excute 13:40:33.367460 line       497                             i, j,
excute 13:40:33.370452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.373446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:33.376436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:33.380394 line       494                         if (i == j):
excute 13:40:33.383385 line       495                             continue
excute 13:40:33.386377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:33.389369 line       494                         if (i == j):
excute 13:40:33.393360 line       496                         i_j_list.append((
excute 13:40:33.396351 line       497                             i, j,
excute 13:40:33.398346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.402350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:33.404363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:33.408321 line       494                         if (i == j):
excute 13:40:33.412343 line       496                         i_j_list.append((
excute 13:40:33.415331 line       497                             i, j,
excute 13:40:33.418324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.421316 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:33.424308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:33.428273 line       494                         if (i == j):
excute 13:40:33.431259 line       496                         i_j_list.append((
excute 13:40:33.434281 line       497                             i, j,
excute 13:40:33.437273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.440265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:33.446220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:33.449212 line       494                         if (i == j):
excute 13:40:33.453201 line       496                         i_j_list.append((
excute 13:40:33.457191 line       497                             i, j,
excute 13:40:33.460180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.462206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1)]
excute 13:40:33.466164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:33.469158 line       494                         if (i == j):
excute 13:40:33.472180 line       496                         i_j_list.append((
excute 13:40:33.475172 line       497                             i, j,
excute 13:40:33.478164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.481156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0)]
excute 13:40:33.484151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:33.487141 line       494                         if (i == j):
excute 13:40:33.490131 line       496                         i_j_list.append((
excute 13:40:33.493123 line       497                             i, j,
excute 13:40:33.496118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.499107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:40:33.502100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:33.506059 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:33.509083 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:33.513041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:33.517030 line       494                         if (i == j):
excute 13:40:33.520023 line       496                         i_j_list.append((
excute 13:40:33.524012 line       497                             i, j,
excute 13:40:33.527033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.529995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1)]
excute 13:40:33.532987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:33.536975 line       494                         if (i == j):
excute 13:40:33.539969 line       496                         i_j_list.append((
excute 13:40:33.543958 line       497                             i, j,
excute 13:40:33.546950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.549942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0)]
excute 13:40:33.552935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:33.556929 line       494                         if (i == j):
excute 13:40:33.559916 line       496                         i_j_list.append((
excute 13:40:33.562938 line       497                             i, j,
excute 13:40:33.565929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.568896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:40:33.570916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:33.574875 line       494                         if (i == j):
excute 13:40:33.577897 line       496                         i_j_list.append((
excute 13:40:33.580890 line       497                             i, j,
excute 13:40:33.583881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.586874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:40:33.589865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:33.593857 line       494                         if (i == j):
excute 13:40:33.596815 line       495                             continue
excute 13:40:33.599838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:33.602830 line       494                         if (i == j):
excute 13:40:33.606789 line       496                         i_j_list.append((
excute 13:40:33.608815 line       497                             i, j,
excute 13:40:33.611810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.615766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:40:33.618789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:33.621779 line       494                         if (i == j):
excute 13:40:33.625739 line       496                         i_j_list.append((
excute 13:40:33.628761 line       497                             i, j,
excute 13:40:33.631743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.634714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:40:33.637709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:33.642727 line       494                         if (i == j):
excute 13:40:33.646683 line       496                         i_j_list.append((
excute 13:40:33.649681 line       497                             i, j,
excute 13:40:33.652667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.655660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1)]
excute 13:40:33.658651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:33.662641 line       494                         if (i == j):
excute 13:40:33.666628 line       496                         i_j_list.append((
excute 13:40:33.668654 line       497                             i, j,
excute 13:40:33.671646 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.674638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0)]
excute 13:40:33.677630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:33.681590 line       494                         if (i == j):
excute 13:40:33.684612 line       496                         i_j_list.append((
excute 13:40:33.687603 line       497                             i, j,
excute 13:40:33.690596 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.693589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:40:33.696580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:33.699575 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:33.702564 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:33.706555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:33.709514 line       494                         if (i == j):
excute 13:40:33.712506 line       496                         i_j_list.append((
excute 13:40:33.716497 line       497                             i, j,
excute 13:40:33.720485 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.723477 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1)]
excute 13:40:33.726469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:33.729461 line       494                         if (i == j):
excute 13:40:33.732484 line       496                         i_j_list.append((
excute 13:40:33.735476 line       497                             i, j,
excute 13:40:33.738468 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.741459 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0)]
excute 13:40:33.744452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:33.747446 line       494                         if (i == j):
excute 13:40:33.751408 line       496                         i_j_list.append((
excute 13:40:33.754425 line       497                             i, j,
excute 13:40:33.757388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.760379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:40:33.764369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:33.767361 line       494                         if (i == j):
excute 13:40:33.771350 line       496                         i_j_list.append((
excute 13:40:33.774343 line       497                             i, j,
excute 13:40:33.778330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.781323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:40:33.784316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:33.788306 line       494                         if (i == j):
excute 13:40:33.791297 line       496                         i_j_list.append((
excute 13:40:33.795285 line       497                             i, j,
excute 13:40:33.798278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.801271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:40:33.804261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:33.807253 line       494                         if (i == j):
excute 13:40:33.810246 line       495                             continue
excute 13:40:33.813238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:33.817227 line       494                         if (i == j):
excute 13:40:33.821216 line       496                         i_j_list.append((
excute 13:40:33.824241 line       497                             i, j,
excute 13:40:33.827233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.830223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:40:33.833214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:33.837172 line       494                         if (i == j):
excute 13:40:33.840167 line       496                         i_j_list.append((
excute 13:40:33.844154 line       497                             i, j,
excute 13:40:33.847147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.850140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1)]
excute 13:40:33.853132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:33.857120 line       494                         if (i == j):
excute 13:40:33.860113 line       496                         i_j_list.append((
excute 13:40:33.863104 line       497                             i, j,
excute 13:40:33.866097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.870085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0)]
excute 13:40:33.872081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:33.876070 line       494                         if (i == j):
excute 13:40:33.880059 line       496                         i_j_list.append((
excute 13:40:33.882054 line       497                             i, j,
excute 13:40:33.886043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.889034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:40:33.892026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:33.895017 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:33.898009 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:33.902000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:33.903994 line       494                         if (i == j):
excute 13:40:33.907983 line       496                         i_j_list.append((
excute 13:40:33.910974 line       497                             i, j,
excute 13:40:33.913967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.916961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1)]
excute 13:40:33.919954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:33.923942 line       494                         if (i == j):
excute 13:40:33.927930 line       496                         i_j_list.append((
excute 13:40:33.930922 line       497                             i, j,
excute 13:40:33.932917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.935909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0)]
excute 13:40:33.938901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:33.942898 line       494                         if (i == j):
excute 13:40:33.945887 line       496                         i_j_list.append((
excute 13:40:33.948905 line       497                             i, j,
excute 13:40:33.951899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.954892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:40:33.957852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:33.961840 line       494                         if (i == j):
excute 13:40:33.968821 line       496                         i_j_list.append((
excute 13:40:33.971844 line       497                             i, j,
excute 13:40:33.974835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.977805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:40:33.980790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:33.984780 line       494                         if (i == j):
excute 13:40:33.988771 line       496                         i_j_list.append((
excute 13:40:33.991762 line       497                             i, j,
excute 13:40:33.995748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:33.998743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:40:34.001732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:34.004724 line       494                         if (i == j):
excute 13:40:34.008714 line       496                         i_j_list.append((
excute 13:40:34.011737 line       497                             i, j,
excute 13:40:34.014730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.017721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:40:34.020713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:34.024673 line       494                         if (i == j):
excute 13:40:34.029670 line       495                             continue
excute 13:40:34.032651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:34.035644 line       494                         if (i == j):
excute 13:40:34.038636 line       496                         i_j_list.append((
excute 13:40:34.041628 line       497                             i, j,
excute 13:40:34.045615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.048609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1)]
excute 13:40:34.051601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:34.055591 line       494                         if (i == j):
excute 13:40:34.059582 line       496                         i_j_list.append((
excute 13:40:34.065561 line       497                             i, j,
excute 13:40:34.068553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.071545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0)]
excute 13:40:34.074537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:34.078527 line       494                         if (i == j):
excute 13:40:34.082517 line       496                         i_j_list.append((
excute 13:40:34.085532 line       497                             i, j,
excute 13:40:34.088500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.091524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:40:34.094517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:34.097504 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:34.100500 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:34.104458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:34.106487 line       494                         if (i == j):
excute 13:40:34.110443 line       496                         i_j_list.append((
excute 13:40:34.113466 line       497                             i, j,
excute 13:40:34.116458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.119418 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1)]
excute 13:40:34.122410 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:34.125404 line       494                         if (i == j):
excute 13:40:34.129393 line       496                         i_j_list.append((
excute 13:40:34.132415 line       497                             i, j,
excute 13:40:34.137372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.140363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0)]
excute 13:40:34.144353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:34.148343 line       494                         if (i == j):
excute 13:40:34.151335 line       496                         i_j_list.append((
excute 13:40:34.155324 line       497                             i, j,
excute 13:40:34.158316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.161307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:40:34.165296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:34.168293 line       494                         if (i == j):
excute 13:40:34.172277 line       496                         i_j_list.append((
excute 13:40:34.175269 line       497                             i, j,
excute 13:40:34.178260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.181252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:40:34.185241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:34.188233 line       494                         if (i == j):
excute 13:40:34.192224 line       496                         i_j_list.append((
excute 13:40:34.195215 line       497                             i, j,
excute 13:40:34.198207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.201199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:34.204224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:34.207215 line       494                         if (i == j):
excute 13:40:34.211179 line       496                         i_j_list.append((
excute 13:40:34.214197 line       497                             i, j,
excute 13:40:34.217188 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.220181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:34.223173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:34.226166 line       494                         if (i == j):
excute 13:40:34.230124 line       496                         i_j_list.append((
excute 13:40:34.234146 line       497                             i, j,
excute 13:40:34.237140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.240127 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:34.243119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:34.246111 line       494                         if (i == j):
excute 13:40:34.250074 line       495                             continue
excute 13:40:34.253097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:34.256052 line       494                         if (i == j):
excute 13:40:34.259044 line       496                         i_j_list.append((
excute 13:40:34.263035 line       497                             i, j,
excute 13:40:34.265060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.268052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:40:34.271045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:34.275002 line       494                         if (i == j):
excute 13:40:34.278992 line       496                         i_j_list.append((
excute 13:40:34.281984 line       497                             i, j,
excute 13:40:34.287999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.290991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:40:34.293983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:34.296974 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:34.299966 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:34.303926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:34.306949 line       494                         if (i == j):
excute 13:40:34.309941 line       496                         i_j_list.append((
excute 13:40:34.312932 line       497                             i, j,
excute 13:40:34.315924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.318916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1)]
excute 13:40:34.321910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:34.325866 line       494                         if (i == j):
excute 13:40:34.334843 line       496                         i_j_list.append((
excute 13:40:34.341826 line       497                             i, j,
excute 13:40:34.345815 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.349802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0)]
excute 13:40:34.352795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:34.355786 line       494                         if (i == j):
excute 13:40:34.359775 line       496                         i_j_list.append((
excute 13:40:34.362767 line       497                             i, j,
excute 13:40:34.365761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.368753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0)]
excute 13:40:34.372742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:34.376733 line       494                         if (i == j):
excute 13:40:34.380722 line       496                         i_j_list.append((
excute 13:40:34.383713 line       497                             i, j,
excute 13:40:34.386705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.389697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0)]
excute 13:40:34.392689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:34.396678 line       494                         if (i == j):
excute 13:40:34.401666 line       496                         i_j_list.append((
excute 13:40:34.404658 line       497                             i, j,
excute 13:40:34.407647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.410643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:40:34.413642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:34.416624 line       494                         if (i == j):
excute 13:40:34.419615 line       496                         i_j_list.append((
excute 13:40:34.422607 line       497                             i, j,
excute 13:40:34.425599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.428591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:40:34.431583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:34.434575 line       494                         if (i == j):
excute 13:40:34.437567 line       496                         i_j_list.append((
excute 13:40:34.443586 line       497                             i, j,
excute 13:40:34.446575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.449570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:40:34.452559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:34.456550 line       494                         if (i == j):
excute 13:40:34.459514 line       496                         i_j_list.append((
excute 13:40:34.462535 line       497                             i, j,
excute 13:40:34.465527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.468516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1)]
excute 13:40:34.471509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:34.475466 line       494                         if (i == j):
excute 13:40:34.478460 line       495                             continue
excute 13:40:34.481451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:34.484444 line       494                         if (i == j):
excute 13:40:34.488440 line       496                         i_j_list.append((
excute 13:40:34.490428 line       497                             i, j,
excute 13:40:34.494417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.496412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0)]
excute 13:40:34.500401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:34.503393 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:34.507382 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:34.511372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:34.514361 line       494                         if (i == j):
excute 13:40:34.517354 line       496                         i_j_list.append((
excute 13:40:34.520346 line       497                             i, j,
excute 13:40:34.523338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.527327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1)]
excute 13:40:34.530347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:34.533314 line       494                         if (i == j):
excute 13:40:34.536338 line       496                         i_j_list.append((
excute 13:40:34.539329 line       497                             i, j,
excute 13:40:34.543286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.546308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0)]
excute 13:40:34.549303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:34.552295 line       494                         if (i == j):
excute 13:40:34.557250 line       496                         i_j_list.append((
excute 13:40:34.560241 line       497                             i, j,
excute 13:40:34.563233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.566225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:40:34.569217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:34.573207 line       494                         if (i == j):
excute 13:40:34.577195 line       496                         i_j_list.append((
excute 13:40:34.580195 line       497                             i, j,
excute 13:40:34.582213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.585207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:40:34.589162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:34.592156 line       494                         if (i == j):
excute 13:40:34.596146 line       496                         i_j_list.append((
excute 13:40:34.599138 line       497                             i, j,
excute 13:40:34.602130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.605121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:40:34.608113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:34.611106 line       494                         if (i == j):
excute 13:40:34.615094 line       496                         i_j_list.append((
excute 13:40:34.619084 line       497                             i, j,
excute 13:40:34.622075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.625068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:40:34.628066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:34.633044 line       494                         if (i == j):
excute 13:40:34.637035 line       496                         i_j_list.append((
excute 13:40:34.641025 line       497                             i, j,
excute 13:40:34.644016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.648006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:40:34.650998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:34.654987 line       494                         if (i == j):
excute 13:40:34.658990 line       496                         i_j_list.append((
excute 13:40:34.661967 line       497                             i, j,
excute 13:40:34.663963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.666955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 1)]
excute 13:40:34.669947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:34.673937 line       494                         if (i == j):
excute 13:40:34.676929 line       496                         i_j_list.append((
excute 13:40:34.679920 line       497                             i, j,
excute 13:40:34.682912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:34.685934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 1), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 3, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 1), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 1), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 1), (8, 9, 2, 0), (9, 0, 2, 1), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 1), (9, 8, 2, 0)]
excute 13:40:34.688929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:34.692885 line       494                         if (i == j):
excute 13:40:34.695877 line       495                             continue
excute 13:40:34.698868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:34.701861 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:34.704852 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (2, 0, 1, 1), (2, 7, 1, 1), (3, 0, 1, 1), (3, 7, 1, 1), (4, 0, 1, 1), (4, 7, 1, 1), (5, 0, 1, 1), (5, 7, 1, 1), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 1, 2, 0), (8, 2, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 9, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 8, 2, 0), (0, 7, 2, 1), (1, 0, 2, 1), (1, 7, 2, 1), (7, 0, 2, 1), (8, 0, 2, 1), (8, 7, 2, 1), (9, 0, 2, 1), (9, 7, 2, 1), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (6, 0, 3, 1), (6, 7, 3, 1)]
excute 13:40:34.707845 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:34.711834 line       505                     if (self.RELOCATE):
excute 13:40:34.715824 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:34.718847 line       505                     if (self.RELOCATE):
excute 13:40:34.721838 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:34.724831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:40:34.727823 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:34.731782 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:34.734804 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.738762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:40:34.740787 line       556                     i = i_j[0]
excute 13:40:34.744761 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:34.748736 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.752742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:40:34.755748 line       556                     i = i_j[0]
excute 13:40:34.758740 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:34.761732 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.765691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:40:34.768717 line       556                     i = i_j[0]
excute 13:40:34.771705 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:34.774698 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.778657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:40:34.781678 line       556                     i = i_j[0]
excute 13:40:34.785639 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:34.787663 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.791622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:40:34.794645 line       556                     i = i_j[0]
excute 13:40:34.797636 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:34.800635 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.804621 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:40:34.807610 line       556                     i = i_j[0]
excute 13:40:34.810570 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:34.813593 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.817552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:34.819578 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:34.823541 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:34.826559 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.830520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:34.833540 line       556                     i = i_j[0]
excute 13:40:34.836532 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:34.839524 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.843483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:34.846507 line       556                     i = i_j[0]
excute 13:40:34.850467 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:34.854487 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.858476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:34.861466 line       556                     i = i_j[0]
excute 13:40:34.864451 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:34.867449 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.871409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:34.874407 line       556                     i = i_j[0]
excute 13:40:34.877391 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:34.880383 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.883375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:34.886367 line       556                     i = i_j[0]
excute 13:40:34.890357 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:34.893348 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.896340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:34.899333 line       556                     i = i_j[0]
excute 13:40:34.903322 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:34.906314 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.909306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:40:34.912298 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:34.916287 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:34.920277 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.923268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:40:34.926261 line       556                     i = i_j[0]
excute 13:40:34.930250 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:34.932245 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.936234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:40:34.939225 line       556                     i = i_j[0]
excute 13:40:34.942218 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:34.945210 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.949200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:34.952191 line       556                     i = i_j[0]
excute 13:40:34.957180 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:34.961169 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.965171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:40:34.968150 line       556                     i = i_j[0]
excute 13:40:34.972139 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:34.975131 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:34.982112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:40:34.988097 line       556                     i = i_j[0]
excute 13:40:34.992086 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:34.996076 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.000065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:40:35.003056 line       556                     i = i_j[0]
excute 13:40:35.007045 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:35.010036 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.014026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:40:35.017018 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:35.033975 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:35.036964 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.040954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:40:35.043945 line       556                     i = i_j[0]
excute 13:40:35.046938 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:35.049930 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.053920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:40:35.057911 line       556                     i = i_j[0]
excute 13:40:35.060933 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:35.063927 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.067884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:40:35.070907 line       556                     i = i_j[0]
excute 13:40:35.073867 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:35.076859 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.080850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:40:35.083839 line       556                     i = i_j[0]
excute 13:40:35.088827 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:35.094810 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.099814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:40:35.102791 line       556                     i = i_j[0]
excute 13:40:35.106778 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:35.109772 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.113761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:40:35.117750 line       556                     i = i_j[0]
excute 13:40:35.120742 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:35.123735 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.127724 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 1)
excute 13:40:35.131713 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:35.134706 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.139692 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.142689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 1)
excute 13:40:35.145674 line       556                     i = i_j[0]
excute 13:40:35.149663 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.152658 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.156646 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 28
excute 13:40:35.160637 line       560                         if (t_tmp > self.TIME):
excute 13:40:35.164624 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:35.167618 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:35.170610 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:35.173602 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:35.176594 line       569                                     available_vhecles[i][t],
excute 13:40:35.179586 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:35.182592 line       571                                     self.S_capacities[j],
excute 13:40:35.187562 line       572                                     demands[t][i][j],
excute 13:40:35.191554 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 12
calc_contract     13:40:35.196571 call       352     def caluculate_contract(
calc_contract     13:40:35.199533 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:35.200532 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:35.201540 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:35.202524 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:35.202524 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:35.203521 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:35.204517 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:35.204517 line       575                                 rsf += rsf_tmp
excute 13:40:35.207510 line       576                                 rse += rse_tmp
excute 13:40:35.210502 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 7
move_cars     Starting var:.. t = 12
move_cars     Starting var:.. t_tmp = 28
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:35.214493 call       388     def move_cars(
move_cars     13:40:35.218480 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:35.219479 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:35.221473 line       399         return available_vhecles
move_cars     13:40:35.222470 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:35.224465 line       579                                 success += can_contract
excute Modified var:.. success = 11
excute 13:40:35.228454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 1)
excute 13:40:35.231446 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:35.234438 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.238428 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.241419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 1)
excute 13:40:35.244411 line       556                     i = i_j[0]
excute 13:40:35.247404 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.250426 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.254417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 1)
excute 13:40:35.257407 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:35.262366 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.265386 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.269345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 1)
excute 13:40:35.272368 line       556                     i = i_j[0]
excute 13:40:35.275359 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.278322 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.282311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 1)
excute 13:40:35.285302 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:35.289293 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.292285 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.296272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 1)
excute 13:40:35.298298 line       556                     i = i_j[0]
excute 13:40:35.302256 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.305279 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.308271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:35.311266 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:35.315254 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:35.318245 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.322203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:35.325195 line       556                     i = i_j[0]
excute 13:40:35.331180 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:35.337165 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.342149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:35.345141 line       556                     i = i_j[0]
excute 13:40:35.350128 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:35.353120 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.357110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:35.360101 line       556                     i = i_j[0]
excute 13:40:35.366086 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:35.369109 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.373070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:35.376058 line       556                     i = i_j[0]
excute 13:40:35.379050 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:35.383039 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.386032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:35.389023 line       556                     i = i_j[0]
excute 13:40:35.392015 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:35.395007 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.398997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:35.401988 line       556                     i = i_j[0]
excute 13:40:35.405979 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:35.408970 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.411963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:35.414954 line       556                     i = i_j[0]
excute 13:40:35.417946 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:35.420938 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.424929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:40:35.427951 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:35.430912 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:35.434901 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.439281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:40:35.442306 line       556                     i = i_j[0]
excute 13:40:35.445299 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:35.449259 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.452253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:40:35.456240 line       556                     i = i_j[0]
excute 13:40:35.463221 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:35.471202 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.479178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:40:35.482169 line       556                     i = i_j[0]
excute 13:40:35.486160 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:35.489153 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.492144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:40:35.495136 line       556                     i = i_j[0]
excute 13:40:35.499125 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:35.503118 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.506107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:40:35.510096 line       556                     i = i_j[0]
excute 13:40:35.514086 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:35.517107 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.521104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:40:35.524056 line       556                     i = i_j[0]
excute 13:40:35.528047 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:35.531070 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.534062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:35.537054 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:35.541014 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:35.544036 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.547993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:35.550986 line       556                     i = i_j[0]
excute 13:40:35.553980 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:35.557000 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.559995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:35.562985 line       556                     i = i_j[0]
excute 13:40:35.566942 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:35.569965 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.574929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:35.577944 line       556                     i = i_j[0]
excute 13:40:35.580938 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:35.583929 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.587888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:35.590911 line       556                     i = i_j[0]
excute 13:40:35.593901 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:35.596893 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.600853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:35.603877 line       556                     i = i_j[0]
excute 13:40:35.606868 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:35.609860 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.613818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:35.616842 line       556                     i = i_j[0]
excute 13:40:35.619801 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:35.622825 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.626783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:35.628809 line       556                     i = i_j[0]
excute 13:40:35.632767 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:35.635791 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.641774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 0)
excute 13:40:35.645764 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:35.648760 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:35.652747 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.656703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:40:35.659696 line       556                     i = i_j[0]
excute 13:40:35.662688 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:35.665709 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.669669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:40:35.672692 line       556                     i = i_j[0]
excute 13:40:35.676682 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:35.679674 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.683632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:35.686655 line       556                     i = i_j[0]
excute 13:40:35.689646 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:35.692637 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.696629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:40:35.699588 line       556                     i = i_j[0]
excute 13:40:35.703578 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:35.705573 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.709561 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:40:35.712553 line       556                     i = i_j[0]
excute 13:40:35.716575 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:35.719536 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.723526 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:40:35.726518 line       556                     i = i_j[0]
excute 13:40:35.729509 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:35.732501 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.736491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:40:35.739482 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:35.742475 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:35.746465 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.749455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:40:35.752477 line       556                     i = i_j[0]
excute 13:40:35.756437 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:35.759428 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.762422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:40:35.765413 line       556                     i = i_j[0]
excute 13:40:35.769403 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:35.772395 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.776383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:40:35.780404 line       556                     i = i_j[0]
excute 13:40:35.784362 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:35.787386 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.790378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:40:35.793369 line       556                     i = i_j[0]
excute 13:40:35.797329 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:35.800350 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.803344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:40:35.806335 line       556                     i = i_j[0]
excute 13:40:35.810293 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:35.813285 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.816276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:40:35.819301 line       556                     i = i_j[0]
excute 13:40:35.822292 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:35.825283 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.829273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 1)
excute 13:40:35.832265 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:35.835227 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.839215 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.842237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 1)
excute 13:40:35.845230 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:35.849189 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.852211 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.856170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 1)
excute 13:40:35.859194 line       556                     i = i_j[0]
excute 13:40:35.862186 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.865176 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.869136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 1)
excute 13:40:35.872159 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:35.875131 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.879112 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.883100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 1)
excute 13:40:35.886091 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:35.890081 line       557                     j = i_j[1]
excute 13:40:35.894068 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.897062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 1)
excute 13:40:35.900053 line       556                     i = i_j[0]
excute 13:40:35.904044 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:35.907034 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.911025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 1)
excute 13:40:35.914016 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:35.918005 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:35.921994 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:35.924986 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 19
excute 13:40:35.928013 line       560                         if (t_tmp > self.TIME):
excute 13:40:35.931969 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:35.934958 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:35.940942 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:35.943934 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:35.950915 line       569                                     available_vhecles[i][t],
excute 13:40:35.954904 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:35.958895 line       571                                     self.S_capacities[j],
excute 13:40:35.963883 line       572                                     demands[t][i][j],
excute 13:40:35.966875 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 12
calc_contract     13:40:35.969867 call       352     def caluculate_contract(
calc_contract     13:40:35.972858 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:35.972858 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:35.973857 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:35.974854 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:35.975849 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:35.975849 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:35.976853 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:35.977858 line       575                                 rsf += rsf_tmp
excute 13:40:35.980837 line       576                                 rse += rse_tmp
excute 13:40:35.984826 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 12
move_cars     Starting var:.. t_tmp = 19
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:35.989822 call       388     def move_cars(
move_cars     13:40:35.993804 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     13:40:35.994801 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     13:40:35.996795 line       399         return available_vhecles
move_cars     13:40:35.998790 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:40:36.000784 line       579                                 success += can_contract
excute Modified var:.. success = 12
excute 13:40:36.004775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 1)
excute 13:40:36.008761 line       556                     i = i_j[0]
excute 13:40:36.011754 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:36.015742 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.018735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:40:36.021728 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:36.025719 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:36.029706 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.033695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:40:36.036688 line       556                     i = i_j[0]
excute 13:40:36.039678 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:36.043669 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.046662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:36.050651 line       556                     i = i_j[0]
excute 13:40:36.053641 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:36.057634 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.060622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:36.063616 line       556                     i = i_j[0]
excute 13:40:36.067605 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:36.070598 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.073589 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:40:36.077579 line       556                     i = i_j[0]
excute 13:40:36.081569 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:36.085557 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.089555 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:40:36.092539 line       556                     i = i_j[0]
excute 13:40:36.095531 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:36.098523 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.102511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:40:36.105504 line       556                     i = i_j[0]
excute 13:40:36.108495 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:36.111488 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.115478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 1)
excute 13:40:36.118468 line       556                     i = i_j[0]
excute 13:40:36.121461 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:36.124452 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.128444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 1)
excute 13:40:36.131432 line       556                     i = i_j[0]
excute 13:40:36.135422 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:36.139412 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:36.145396 line       555                 for i_j in i_j_list:
excute 13:40:36.148389 line       581             self.write_matrix(
excute 13:40:36.152379 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:36.155371 line       583                 result_file_path,
excute 13:40:36.158363 line       584                 mode='a'
excute 13:40:36.163795 line       488         for t in time_steps:
excute Modified var:.. t = 13
excute 13:40:36.168781 line       489             if (t != self.TIME + 1):
excute 13:40:36.171774 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:36.174766 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:36.180749 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:36.183743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:36.188729 line       494                         if (i == j):
excute 13:40:36.194713 line       495                             continue
excute 13:40:36.198700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:36.201693 line       494                         if (i == j):
excute 13:40:36.204686 line       496                         i_j_list.append((
excute 13:40:36.207676 line       497                             i, j,
excute 13:40:36.210669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.215656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1)]
excute 13:40:36.218649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:36.222641 line       494                         if (i == j):
excute 13:40:36.225633 line       496                         i_j_list.append((
excute 13:40:36.228623 line       497                             i, j,
excute 13:40:36.232613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.235604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1)]
excute 13:40:36.238596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:36.243583 line       494                         if (i == j):
excute 13:40:36.249567 line       496                         i_j_list.append((
excute 13:40:36.257544 line       497                             i, j,
excute 13:40:36.268518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.278489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0)]
excute 13:40:36.285471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:36.291454 line       494                         if (i == j):
excute 13:40:36.299433 line       496                         i_j_list.append((
excute 13:40:36.302433 line       497                             i, j,
excute 13:40:36.308409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.314393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:36.321373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:36.328355 line       494                         if (i == j):
excute 13:40:36.337331 line       496                         i_j_list.append((
excute 13:40:36.345310 line       497                             i, j,
excute 13:40:36.351295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.355285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:36.361266 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:36.370247 line       494                         if (i == j):
excute 13:40:36.377225 line       496                         i_j_list.append((
excute 13:40:36.387197 line       497                             i, j,
excute 13:40:36.395176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.401162 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:36.416133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:36.424099 line       494                         if (i == j):
excute 13:40:36.431082 line       496                         i_j_list.append((
excute 13:40:36.437064 line       497                             i, j,
excute 13:40:36.443050 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.450029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:36.457010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:36.464990 line       494                         if (i == j):
excute 13:40:36.471971 line       496                         i_j_list.append((
excute 13:40:36.477955 line       497                             i, j,
excute 13:40:36.482941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.488925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1)]
excute 13:40:36.495907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:36.502888 line       494                         if (i == j):
excute 13:40:36.514857 line       496                         i_j_list.append((
excute 13:40:36.519843 line       497                             i, j,
excute 13:40:36.524828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.529816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1)]
excute 13:40:36.533805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:36.538793 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:36.543778 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:36.549762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:36.555748 line       494                         if (i == j):
excute 13:40:36.560734 line       496                         i_j_list.append((
excute 13:40:36.565719 line       497                             i, j,
excute 13:40:36.571706 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.576690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0)]
excute 13:40:36.582677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:36.588659 line       494                         if (i == j):
excute 13:40:36.593645 line       495                             continue
excute 13:40:36.600627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:36.605612 line       494                         if (i == j):
excute 13:40:36.612595 line       496                         i_j_list.append((
excute 13:40:36.619576 line       497                             i, j,
excute 13:40:36.623565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.629550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1)]
excute 13:40:36.635534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:36.641518 line       494                         if (i == j):
excute 13:40:36.647503 line       496                         i_j_list.append((
excute 13:40:36.651491 line       497                             i, j,
excute 13:40:36.658475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.663458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0)]
excute 13:40:36.670440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:36.676424 line       494                         if (i == j):
excute 13:40:36.681410 line       496                         i_j_list.append((
excute 13:40:36.687394 line       497                             i, j,
excute 13:40:36.691384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.696371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:40:36.700361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:36.707342 line       494                         if (i == j):
excute 13:40:36.714324 line       496                         i_j_list.append((
excute 13:40:36.723300 line       497                             i, j,
excute 13:40:36.729282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.736270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:40:36.743247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:36.750227 line       494                         if (i == j):
excute 13:40:36.756211 line       496                         i_j_list.append((
excute 13:40:36.761198 line       497                             i, j,
excute 13:40:36.768179 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.773166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:40:36.776157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:36.780146 line       494                         if (i == j):
excute 13:40:36.784137 line       496                         i_j_list.append((
excute 13:40:36.787128 line       497                             i, j,
excute 13:40:36.790121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.793112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:40:36.795106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:36.799095 line       494                         if (i == j):
excute 13:40:36.802087 line       496                         i_j_list.append((
excute 13:40:36.805079 line       497                             i, j,
excute 13:40:36.807074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.810066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1)]
excute 13:40:36.813058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:36.817049 line       494                         if (i == j):
excute 13:40:36.820041 line       496                         i_j_list.append((
excute 13:40:36.824029 line       497                             i, j,
excute 13:40:36.827024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.830014 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1)]
excute 13:40:36.833006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:36.835997 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:36.838989 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:36.842978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:36.844973 line       494                         if (i == j):
excute 13:40:36.848963 line       496                         i_j_list.append((
excute 13:40:36.850957 line       497                             i, j,
excute 13:40:36.853949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.856941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0)]
excute 13:40:36.859932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:36.862924 line       494                         if (i == j):
excute 13:40:36.866914 line       496                         i_j_list.append((
excute 13:40:36.869906 line       497                             i, j,
excute 13:40:36.871901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.874893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:40:36.877885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:36.880876 line       494                         if (i == j):
excute 13:40:36.884866 line       495                             continue
excute 13:40:36.886861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:36.889853 line       494                         if (i == j):
excute 13:40:36.892845 line       496                         i_j_list.append((
excute 13:40:36.895837 line       497                             i, j,
excute 13:40:36.898829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.901821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:40:36.904812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:36.907818 line       494                         if (i == j):
excute 13:40:36.910796 line       496                         i_j_list.append((
excute 13:40:36.913789 line       497                             i, j,
excute 13:40:36.917778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.920770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:36.923764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:36.928750 line       494                         if (i == j):
excute 13:40:36.931753 line       496                         i_j_list.append((
excute 13:40:36.934734 line       497                             i, j,
excute 13:40:36.936728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.940717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:36.943710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:36.946702 line       494                         if (i == j):
excute 13:40:36.949693 line       496                         i_j_list.append((
excute 13:40:36.953683 line       497                             i, j,
excute 13:40:36.956675 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.959667 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:36.963657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:36.968653 line       494                         if (i == j):
excute 13:40:36.971634 line       496                         i_j_list.append((
excute 13:40:36.974626 line       497                             i, j,
excute 13:40:36.977619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:36.980611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:36.984600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:36.987592 line       494                         if (i == j):
excute 13:40:36.991582 line       496                         i_j_list.append((
excute 13:40:36.994578 line       497                             i, j,
excute 13:40:36.997597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.000590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:40:37.003581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:37.007539 line       494                         if (i == j):
excute 13:40:37.011528 line       496                         i_j_list.append((
excute 13:40:37.014543 line       497                             i, j,
excute 13:40:37.017544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.020505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1)]
excute 13:40:37.023497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:37.029480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:37.032471 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:37.035464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:37.038456 line       494                         if (i == j):
excute 13:40:37.042445 line       496                         i_j_list.append((
excute 13:40:37.045445 line       497                             i, j,
excute 13:40:37.047432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.050423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0)]
excute 13:40:37.053415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:37.057405 line       494                         if (i == j):
excute 13:40:37.060397 line       496                         i_j_list.append((
excute 13:40:37.063389 line       497                             i, j,
excute 13:40:37.066380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.070402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1)]
excute 13:40:37.073394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:37.076388 line       494                         if (i == j):
excute 13:40:37.080345 line       496                         i_j_list.append((
excute 13:40:37.083368 line       497                             i, j,
excute 13:40:37.086328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.089346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1)]
excute 13:40:37.092314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:37.095319 line       494                         if (i == j):
excute 13:40:37.098327 line       495                             continue
excute 13:40:37.101319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:37.104279 line       494                         if (i == j):
excute 13:40:37.108305 line       496                         i_j_list.append((
excute 13:40:37.111262 line       497                             i, j,
excute 13:40:37.114254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.116282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0)]
excute 13:40:37.120238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:37.124226 line       494                         if (i == j):
excute 13:40:37.127221 line       496                         i_j_list.append((
excute 13:40:37.131209 line       497                             i, j,
excute 13:40:37.134199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.137191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:37.140183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:37.143176 line       494                         if (i == j):
excute 13:40:37.146167 line       496                         i_j_list.append((
excute 13:40:37.150157 line       497                             i, j,
excute 13:40:37.154147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.157138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:37.160130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:37.163122 line       494                         if (i == j):
excute 13:40:37.166114 line       496                         i_j_list.append((
excute 13:40:37.176509 line       497                             i, j,
excute 13:40:37.179562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.182551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:37.185543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:37.188535 line       494                         if (i == j):
excute 13:40:37.192514 line       496                         i_j_list.append((
excute 13:40:37.194520 line       497                             i, j,
excute 13:40:37.198509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.201469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1)]
excute 13:40:37.203498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:37.207454 line       494                         if (i == j):
excute 13:40:37.210459 line       496                         i_j_list.append((
excute 13:40:37.213438 line       497                             i, j,
excute 13:40:37.216463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.219455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1)]
excute 13:40:37.222444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:37.225436 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:37.228428 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:37.233385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:37.235378 line       494                         if (i == j):
excute 13:40:37.239368 line       496                         i_j_list.append((
excute 13:40:37.241363 line       497                             i, j,
excute 13:40:37.244354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.247346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0)]
excute 13:40:37.250338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:37.254328 line       494                         if (i == j):
excute 13:40:37.257320 line       496                         i_j_list.append((
excute 13:40:37.260311 line       497                             i, j,
excute 13:40:37.263304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.265298 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1)]
excute 13:40:37.268290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:37.272280 line       494                         if (i == j):
excute 13:40:37.275271 line       496                         i_j_list.append((
excute 13:40:37.278264 line       497                             i, j,
excute 13:40:37.281256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.284247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1)]
excute 13:40:37.287239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:37.290232 line       494                         if (i == j):
excute 13:40:37.293224 line       496                         i_j_list.append((
excute 13:40:37.296215 line       497                             i, j,
excute 13:40:37.299207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.302199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0)]
excute 13:40:37.304195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:37.308184 line       494                         if (i == j):
excute 13:40:37.311176 line       495                             continue
excute 13:40:37.314167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:37.317168 line       494                         if (i == j):
excute 13:40:37.320152 line       496                         i_j_list.append((
excute 13:40:37.323178 line       497                             i, j,
excute 13:40:37.327135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.333117 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:40:37.342095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:37.346084 line       494                         if (i == j):
excute 13:40:37.351070 line       496                         i_j_list.append((
excute 13:40:37.354062 line       497                             i, j,
excute 13:40:37.358053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.361042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:40:37.364034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:37.368025 line       494                         if (i == j):
excute 13:40:37.371016 line       496                         i_j_list.append((
excute 13:40:37.375011 line       497                             i, j,
excute 13:40:37.377998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.380995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:40:37.383981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:37.386980 line       494                         if (i == j):
excute 13:40:37.389965 line       496                         i_j_list.append((
excute 13:40:37.392959 line       497                             i, j,
excute 13:40:37.395949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.398942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1)]
excute 13:40:37.402932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:37.405925 line       494                         if (i == j):
excute 13:40:37.408915 line       496                         i_j_list.append((
excute 13:40:37.411906 line       497                             i, j,
excute 13:40:37.414898 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.417890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1)]
excute 13:40:37.420883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:37.423875 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:37.426866 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:37.430856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:37.432882 line       494                         if (i == j):
excute 13:40:37.436841 line       496                         i_j_list.append((
excute 13:40:37.439833 line       497                             i, j,
excute 13:40:37.442825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.445816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0)]
excute 13:40:37.448808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:37.452797 line       494                         if (i == j):
excute 13:40:37.456786 line       496                         i_j_list.append((
excute 13:40:37.459778 line       497                             i, j,
excute 13:40:37.462802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.465794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1)]
excute 13:40:37.468787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:37.471781 line       494                         if (i == j):
excute 13:40:37.475738 line       496                         i_j_list.append((
excute 13:40:37.477730 line       497                             i, j,
excute 13:40:37.480722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.483714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1)]
excute 13:40:37.486707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:37.489698 line       494                         if (i == j):
excute 13:40:37.492690 line       496                         i_j_list.append((
excute 13:40:37.495682 line       497                             i, j,
excute 13:40:37.498674 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.501666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0)]
excute 13:40:37.504658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:37.508650 line       494                         if (i == j):
excute 13:40:37.511640 line       496                         i_j_list.append((
excute 13:40:37.514632 line       497                             i, j,
excute 13:40:37.517624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.520617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:40:37.523608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:37.527598 line       494                         if (i == j):
excute 13:40:37.530591 line       495                             continue
excute 13:40:37.533582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:37.536573 line       494                         if (i == j):
excute 13:40:37.539566 line       496                         i_j_list.append((
excute 13:40:37.542558 line       497                             i, j,
excute 13:40:37.546547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.549538 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:40:37.552530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:37.556520 line       494                         if (i == j):
excute 13:40:37.559511 line       496                         i_j_list.append((
excute 13:40:37.562504 line       497                             i, j,
excute 13:40:37.565496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.568487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:40:37.571479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:37.574472 line       494                         if (i == j):
excute 13:40:37.577464 line       496                         i_j_list.append((
excute 13:40:37.580456 line       497                             i, j,
excute 13:40:37.583447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.586439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1)]
excute 13:40:37.589433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:37.592424 line       494                         if (i == j):
excute 13:40:37.596424 line       496                         i_j_list.append((
excute 13:40:37.598408 line       497                             i, j,
excute 13:40:37.601399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.604391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1)]
excute 13:40:37.607384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:37.610375 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:37.613368 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:37.617359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:37.620358 line       494                         if (i == j):
excute 13:40:37.623343 line       496                         i_j_list.append((
excute 13:40:37.626334 line       497                             i, j,
excute 13:40:37.629326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.631321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0)]
excute 13:40:37.634312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:37.638301 line       494                         if (i == j):
excute 13:40:37.641304 line       496                         i_j_list.append((
excute 13:40:37.644285 line       497                             i, j,
excute 13:40:37.648279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.651269 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1)]
excute 13:40:37.655257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:37.658249 line       494                         if (i == j):
excute 13:40:37.662237 line       496                         i_j_list.append((
excute 13:40:37.664232 line       497                             i, j,
excute 13:40:37.667224 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.670216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1)]
excute 13:40:37.673208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:37.676199 line       494                         if (i == j):
excute 13:40:37.680189 line       496                         i_j_list.append((
excute 13:40:37.683181 line       497                             i, j,
excute 13:40:37.686189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.688168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0)]
excute 13:40:37.691160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:37.695150 line       494                         if (i == j):
excute 13:40:37.698141 line       496                         i_j_list.append((
excute 13:40:37.701133 line       497                             i, j,
excute 13:40:37.703128 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.706120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:40:37.709112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:37.713104 line       494                         if (i == j):
excute 13:40:37.717091 line       496                         i_j_list.append((
excute 13:40:37.719085 line       497                             i, j,
excute 13:40:37.722077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.725069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:40:37.728061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:37.731053 line       494                         if (i == j):
excute 13:40:37.734045 line       495                             continue
excute 13:40:37.737037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:37.740029 line       494                         if (i == j):
excute 13:40:37.743021 line       496                         i_j_list.append((
excute 13:40:37.746013 line       497                             i, j,
excute 13:40:37.751001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.753993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:40:37.756984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:37.760974 line       494                         if (i == j):
excute 13:40:37.763965 line       496                         i_j_list.append((
excute 13:40:37.766957 line       497                             i, j,
excute 13:40:37.769949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.772941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1)]
excute 13:40:37.775933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:37.778925 line       494                         if (i == j):
excute 13:40:37.782915 line       496                         i_j_list.append((
excute 13:40:37.784910 line       497                             i, j,
excute 13:40:37.787901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.790893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1)]
excute 13:40:37.793885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:37.796877 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:37.799869 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:37.802861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:37.805853 line       494                         if (i == j):
excute 13:40:37.808845 line       496                         i_j_list.append((
excute 13:40:37.811837 line       497                             i, j,
excute 13:40:37.814829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.817821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0)]
excute 13:40:37.820813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:37.823805 line       494                         if (i == j):
excute 13:40:37.827794 line       496                         i_j_list.append((
excute 13:40:37.830786 line       497                             i, j,
excute 13:40:37.833778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.837769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1)]
excute 13:40:37.840760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:37.843762 line       494                         if (i == j):
excute 13:40:37.846744 line       496                         i_j_list.append((
excute 13:40:37.853727 line       497                             i, j,
excute 13:40:37.856719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.859709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1)]
excute 13:40:37.862702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:37.866692 line       494                         if (i == j):
excute 13:40:37.871677 line       496                         i_j_list.append((
excute 13:40:37.877661 line       497                             i, j,
excute 13:40:37.880653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.883645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0)]
excute 13:40:37.886637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:37.890628 line       494                         if (i == j):
excute 13:40:37.893619 line       496                         i_j_list.append((
excute 13:40:37.896610 line       497                             i, j,
excute 13:40:37.899603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.902594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:37.905587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:37.908579 line       494                         if (i == j):
excute 13:40:37.912570 line       496                         i_j_list.append((
excute 13:40:37.915560 line       497                             i, j,
excute 13:40:37.918552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.921544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:37.924536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:37.928525 line       494                         if (i == j):
excute 13:40:37.931518 line       496                         i_j_list.append((
excute 13:40:37.934510 line       497                             i, j,
excute 13:40:37.937502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.940494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:37.942522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:37.946480 line       494                         if (i == j):
excute 13:40:37.949471 line       495                             continue
excute 13:40:37.953459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:37.959442 line       494                         if (i == j):
excute 13:40:37.964430 line       496                         i_j_list.append((
excute 13:40:37.968419 line       497                             i, j,
excute 13:40:37.972410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.975400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1)]
excute 13:40:37.978394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:37.981384 line       494                         if (i == j):
excute 13:40:37.985375 line       496                         i_j_list.append((
excute 13:40:37.988365 line       497                             i, j,
excute 13:40:37.990360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:37.994350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1)]
excute 13:40:37.996376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:38.000336 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:38.003358 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:38.007317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:38.010309 line       494                         if (i == j):
excute 13:40:38.014296 line       496                         i_j_list.append((
excute 13:40:38.017288 line       497                             i, j,
excute 13:40:38.020313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.023273 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0)]
excute 13:40:38.026264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:38.030256 line       494                         if (i == j):
excute 13:40:38.033280 line       496                         i_j_list.append((
excute 13:40:38.036269 line       497                             i, j,
excute 13:40:38.039261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.042252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1)]
excute 13:40:38.045245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:38.049203 line       494                         if (i == j):
excute 13:40:38.052197 line       496                         i_j_list.append((
excute 13:40:38.058180 line       497                             i, j,
excute 13:40:38.061172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.064163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1)]
excute 13:40:38.067154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:38.071144 line       494                         if (i == j):
excute 13:40:38.074136 line       496                         i_j_list.append((
excute 13:40:38.077127 line       497                             i, j,
excute 13:40:38.080120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.083112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0)]
excute 13:40:38.086104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:38.089099 line       494                         if (i == j):
excute 13:40:38.092088 line       496                         i_j_list.append((
excute 13:40:38.095080 line       497                             i, j,
excute 13:40:38.098072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.102180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0)]
excute 13:40:38.105174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:38.109164 line       494                         if (i == j):
excute 13:40:38.112155 line       496                         i_j_list.append((
excute 13:40:38.115147 line       497                             i, j,
excute 13:40:38.119137 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.122129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:40:38.125142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:38.128110 line       494                         if (i == j):
excute 13:40:38.131134 line       496                         i_j_list.append((
excute 13:40:38.134126 line       497                             i, j,
excute 13:40:38.137118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.140112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0)]
excute 13:40:38.143104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:38.147061 line       494                         if (i == j):
excute 13:40:38.151065 line       496                         i_j_list.append((
excute 13:40:38.154043 line       497                             i, j,
excute 13:40:38.158031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.163018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0)]
excute 13:40:38.166009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:38.169001 line       494                         if (i == j):
excute 13:40:38.172991 line       495                             continue
excute 13:40:38.176014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:38.179006 line       494                         if (i == j):
excute 13:40:38.181967 line       496                         i_j_list.append((
excute 13:40:38.184990 line       497                             i, j,
excute 13:40:38.187984 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.190976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1)]
excute 13:40:38.193966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:38.196958 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:38.199950 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:38.202942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:38.206901 line       494                         if (i == j):
excute 13:40:38.209926 line       496                         i_j_list.append((
excute 13:40:38.212915 line       497                             i, j,
excute 13:40:38.216873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.219865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0)]
excute 13:40:38.222857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:38.227150 line       494                         if (i == j):
excute 13:40:38.231156 line       496                         i_j_list.append((
excute 13:40:38.233137 line       497                             i, j,
excute 13:40:38.236129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.239120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1)]
excute 13:40:38.242112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:38.246102 line       494                         if (i == j):
excute 13:40:38.249094 line       496                         i_j_list.append((
excute 13:40:38.252086 line       497                             i, j,
excute 13:40:38.256075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.259073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1)]
excute 13:40:38.262061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:38.266083 line       494                         if (i == j):
excute 13:40:38.270039 line       496                         i_j_list.append((
excute 13:40:38.273062 line       497                             i, j,
excute 13:40:38.276054 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.279046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1), (9, 3, 3, 0)]
excute 13:40:38.282037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:38.285030 line       494                         if (i == j):
excute 13:40:38.289021 line       496                         i_j_list.append((
excute 13:40:38.292012 line       497                             i, j,
excute 13:40:38.294971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.297963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:38.300955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:38.304945 line       494                         if (i == j):
excute 13:40:38.307936 line       496                         i_j_list.append((
excute 13:40:38.310928 line       497                             i, j,
excute 13:40:38.313921 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.316912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:38.319905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:38.322897 line       494                         if (i == j):
excute 13:40:38.327886 line       496                         i_j_list.append((
excute 13:40:38.334865 line       497                             i, j,
excute 13:40:38.338855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.341877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:40:38.344870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:38.349826 line       494                         if (i == j):
excute 13:40:38.353814 line       496                         i_j_list.append((
excute 13:40:38.356809 line       497                             i, j,
excute 13:40:38.359797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.362789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:40:38.366792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:38.369804 line       494                         if (i == j):
excute 13:40:38.373763 line       496                         i_j_list.append((
excute 13:40:38.376784 line       497                             i, j,
excute 13:40:38.379776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:38.383769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 1), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 1), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 1), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 1), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 1), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 1), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (8, 9, 2, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 1)]
excute 13:40:38.386757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:38.389752 line       494                         if (i == j):
excute 13:40:38.393709 line       495                             continue
excute 13:40:38.396731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:38.399724 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:38.402685 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 0, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (4, 0, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (5, 0, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (3, 1, 1, 1), (3, 2, 1, 1), (3, 8, 1, 1), (3, 9, 1, 1), (4, 1, 1, 1), (4, 2, 1, 1), (4, 8, 1, 1), (4, 9, 1, 1), (5, 1, 1, 1), (5, 2, 1, 1), (5, 8, 1, 1), (5, 9, 1, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (1, 0, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (7, 0, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (8, 0, 2, 0), (8, 3, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 0), (8, 7, 2, 0), (0, 1, 2, 1), (0, 2, 2, 1), (0, 8, 2, 1), (0, 9, 2, 1), (1, 2, 2, 1), (1, 8, 2, 1), (1, 9, 2, 1), (2, 1, 2, 1), (2, 8, 2, 1), (2, 9, 2, 1), (7, 1, 2, 1), (7, 2, 2, 1), (7, 8, 2, 1), (7, 9, 2, 1), (8, 1, 2, 1), (8, 2, 2, 1), (8, 9, 2, 1), (6, 0, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (9, 0, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (6, 1, 3, 1), (6, 2, 3, 1), (6, 8, 3, 1), (6, 9, 3, 1), (9, 1, 3, 1), (9, 2, 3, 1), (9, 8, 3, 1)]
excute 13:40:38.406675 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:38.410662 line       505                     if (self.RELOCATE):
excute 13:40:38.413655 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:38.416648 line       505                     if (self.RELOCATE):
excute 13:40:38.420637 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:38.424624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:38.427619 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:38.430611 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:38.434598 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.438587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:38.440584 line       556                     i = i_j[0]
excute 13:40:38.444573 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:38.447565 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.451552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:38.455545 line       556                     i = i_j[0]
excute 13:40:38.458536 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:38.464521 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.469510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:38.472533 line       556                     i = i_j[0]
excute 13:40:38.476521 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:38.479511 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.483468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:38.486459 line       556                     i = i_j[0]
excute 13:40:38.489456 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:38.492475 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.495467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:40:38.499458 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:38.503415 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:38.506407 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.510404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:40:38.513419 line       556                     i = i_j[0]
excute 13:40:38.517377 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:38.520369 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.523362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:38.526353 line       556                     i = i_j[0]
excute 13:40:38.530378 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:38.533369 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.536358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:40:38.539349 line       556                     i = i_j[0]
excute 13:40:38.543310 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:38.546301 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.549293 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:40:38.552316 line       556                     i = i_j[0]
excute 13:40:38.556283 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:38.559264 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.562257 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:40:38.565280 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:38.568272 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:38.573261 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.576251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:40:38.579242 line       556                     i = i_j[0]
excute 13:40:38.583202 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:38.586194 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.589185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:40:38.592177 line       556                     i = i_j[0]
excute 13:40:38.595168 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:38.598161 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.601153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:40:38.604145 line       556                     i = i_j[0]
excute 13:40:38.608134 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:38.611126 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.614119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:40:38.617109 line       556                     i = i_j[0]
excute 13:40:38.620102 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:38.623094 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.626086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 1)
excute 13:40:38.629078 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:38.633067 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:38.637057 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.640051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 1)
excute 13:40:38.643073 line       556                     i = i_j[0]
excute 13:40:38.646064 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:38.649056 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.655010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 1)
excute 13:40:38.659030 line       556                     i = i_j[0]
excute 13:40:38.662022 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:38.665013 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.668998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 1)
excute 13:40:38.671967 line       556                     i = i_j[0]
excute 13:40:38.675954 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:38.678947 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.681938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 1)
excute 13:40:38.684930 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:38.688920 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:38.691912 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.695902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 1)
excute 13:40:38.698893 line       556                     i = i_j[0]
excute 13:40:38.701916 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:38.704907 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.708903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 1)
excute 13:40:38.711858 line       556                     i = i_j[0]
excute 13:40:38.715846 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:38.718838 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.721831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:40:38.724824 line       556                     i = i_j[0]
excute 13:40:38.728811 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:38.731805 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.735796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 1)
excute 13:40:38.738787 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:38.741779 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:38.745769 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.748760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 1)
excute 13:40:38.752748 line       556                     i = i_j[0]
excute 13:40:38.755742 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:38.758734 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.762723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 1)
excute 13:40:38.765714 line       556                     i = i_j[0]
excute 13:40:38.770700 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:38.773691 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.779676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 1)
excute 13:40:38.782667 line       556                     i = i_j[0]
excute 13:40:38.789650 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:38.793639 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.798625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:38.800651 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:38.804624 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:38.807633 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.811624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:38.814585 line       556                     i = i_j[0]
excute 13:40:38.817576 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:38.820568 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.824558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:38.827549 line       556                     i = i_j[0]
excute 13:40:38.831539 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:38.834530 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.838521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:38.841510 line       556                     i = i_j[0]
excute 13:40:38.844502 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:38.847531 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.850518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:38.853510 line       556                     i = i_j[0]
excute 13:40:38.857500 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:38.860491 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.863483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:40:38.866475 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:38.870466 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:38.873456 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.877415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:40:38.881404 line       556                     i = i_j[0]
excute 13:40:38.884395 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:38.887390 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.891379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:40:38.895366 line       556                     i = i_j[0]
excute 13:40:38.898360 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:38.902349 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.906338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:40:38.908334 line       556                     i = i_j[0]
excute 13:40:38.912323 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:38.915315 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.919304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:40:38.923294 line       556                     i = i_j[0]
excute 13:40:38.926286 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:38.929277 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.933265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:40:38.936258 line       556                     i = i_j[0]
excute 13:40:38.940262 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:38.943240 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.947230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:38.950220 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:38.955208 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:38.958198 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.962191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:38.965181 line       556                     i = i_j[0]
excute 13:40:38.968173 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:38.971164 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.975153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:38.977148 line       556                     i = i_j[0]
excute 13:40:38.981139 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:38.985128 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:38.988119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:38.991111 line       556                     i = i_j[0]
excute 13:40:38.995100 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:38.997095 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.001086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:39.004085 line       556                     i = i_j[0]
excute 13:40:39.007069 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:39.011060 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.014055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:39.017073 line       556                     i = i_j[0]
excute 13:40:39.021064 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:39.024054 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.027020 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:39.030039 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:39.033997 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:39.037987 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.041976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:39.044998 line       556                     i = i_j[0]
excute 13:40:39.047990 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:39.050982 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.054939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:39.057963 line       556                     i = i_j[0]
excute 13:40:39.060955 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:39.063948 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.067939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:39.070930 line       556                     i = i_j[0]
excute 13:40:39.073890 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:39.076880 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.079872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:39.082865 line       556                     i = i_j[0]
excute 13:40:39.087855 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:39.090845 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.093842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:40:39.096860 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:39.099851 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:39.103809 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.121831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 0)
excute 13:40:39.124825 line       556                     i = i_j[0]
excute 13:40:39.127817 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:39.130809 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.134800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:39.136793 line       556                     i = i_j[0]
excute 13:40:39.140785 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:39.143774 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.146766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:40:39.150759 line       556                     i = i_j[0]
excute 13:40:39.155746 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:39.158736 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.162727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 0)
excute 13:40:39.165717 line       556                     i = i_j[0]
excute 13:40:39.169708 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:39.172699 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.176688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:40:39.179681 line       556                     i = i_j[0]
excute 13:40:39.183670 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:39.188656 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.192645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 1)
excute 13:40:39.195637 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:39.199628 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:39.202619 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.206608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 1)
excute 13:40:39.210598 line       556                     i = i_j[0]
excute 13:40:39.214588 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:39.217580 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.220572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 1)
excute 13:40:39.224568 line       556                     i = i_j[0]
excute 13:40:39.227552 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:39.231542 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.234533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 1)
excute 13:40:39.237528 line       556                     i = i_j[0]
excute 13:40:39.240518 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:39.243510 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.247499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 1)
excute 13:40:39.250491 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:39.254480 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:39.257471 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.261463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 1)
excute 13:40:39.264454 line       556                     i = i_j[0]
excute 13:40:39.268444 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:39.271435 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.275430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 1)
excute 13:40:39.278447 line       556                     i = i_j[0]
excute 13:40:39.281438 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:39.284433 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.288389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:40:39.292381 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:39.295371 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:39.298393 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.302385 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:40:39.305356 line       556                     i = i_j[0]
excute 13:40:39.308345 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:39.311361 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.314351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:40:39.317342 line       556                     i = i_j[0]
excute 13:40:39.320334 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:39.323327 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.329280 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 1)
excute 13:40:39.336261 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:39.340250 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:39.344239 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.347232 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 28
excute 13:40:39.351221 line       560                         if (t_tmp > self.TIME):
excute 13:40:39.355242 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:39.358233 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 6
excute 13:40:39.361225 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:39.365183 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:39.368177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 1)
excute 13:40:39.372165 line       556                     i = i_j[0]
excute 13:40:39.376156 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:39.379148 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.383137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 1)
excute 13:40:39.387125 line       556                     i = i_j[0]
excute 13:40:39.390133 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:39.394109 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.398098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 1)
excute 13:40:39.401089 line       556                     i = i_j[0]
excute 13:40:39.405081 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:39.408070 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.412060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 1)
excute 13:40:39.415050 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:39.418043 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:39.422032 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.425025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 1)
excute 13:40:39.429014 line       556                     i = i_j[0]
excute 13:40:39.432006 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:39.435995 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.438986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 1)
excute 13:40:39.441980 line       556                     i = i_j[0]
excute 13:40:39.445970 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:39.448960 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.452951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:40:39.455942 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:39.459931 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:39.463921 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.466912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:40:39.469903 line       556                     i = i_j[0]
excute 13:40:39.472895 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:39.475888 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.479878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:40:39.482870 line       556                     i = i_j[0]
excute 13:40:39.485862 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:39.488852 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.491845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:40:39.495834 line       556                     i = i_j[0]
excute 13:40:39.499824 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:39.505806 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.510796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:40:39.513787 line       556                     i = i_j[0]
excute 13:40:39.516779 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:39.520768 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.526751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:40:39.529743 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:39.532735 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:39.536725 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.539716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:39.542707 line       556                     i = i_j[0]
excute 13:40:39.545700 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:39.548692 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.551684 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:39.555675 line       556                     i = i_j[0]
excute 13:40:39.558667 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:39.561657 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.564649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:39.567641 line       556                     i = i_j[0]
excute 13:40:39.570633 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:39.573626 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.577615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:40:39.580607 line       556                     i = i_j[0]
excute 13:40:39.583599 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:39.586590 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.589583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:40:39.592575 line       556                     i = i_j[0]
excute 13:40:39.595566 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:39.600554 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.604544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 1)
excute 13:40:39.607535 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:39.610527 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:39.614517 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.617510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 1)
excute 13:40:39.620531 line       556                     i = i_j[0]
excute 13:40:39.624491 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:39.626516 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.630475 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 25
excute 13:40:39.633498 line       560                         if (t_tmp > self.TIME):
excute 13:40:39.637455 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:39.640447 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:39.642441 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:39.645433 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:39.649423 line       569                                     available_vhecles[i][t],
excute 13:40:39.652417 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:39.656436 line       571                                     self.S_capacities[j],
excute 13:40:39.659430 line       572                                     demands[t][i][j],
excute 13:40:39.662422 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 13
calc_contract     13:40:39.665412 call       352     def caluculate_contract(
calc_contract     13:40:39.668373 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:39.668373 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:39.669382 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:39.670368 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:39.671366 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:39.671366 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:39.672395 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:39.673393 line       575                                 rsf += rsf_tmp
excute 13:40:39.676383 line       576                                 rse += rse_tmp
excute 13:40:39.679375 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 2
move_cars     Starting var:.. t = 13
move_cars     Starting var:.. t_tmp = 25
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:39.682368 call       388     def move_cars(
move_cars     13:40:39.686325 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:39.688320 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:39.689350 line       399         return available_vhecles
move_cars     13:40:39.690348 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:40:39.693306 line       579                                 success += can_contract
excute Modified var:.. success = 13
excute 13:40:39.696298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 1)
excute 13:40:39.700290 line       556                     i = i_j[0]
excute 13:40:39.704278 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:39.708267 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.712256 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 28
excute 13:40:39.715249 line       560                         if (t_tmp > self.TIME):
excute 13:40:39.719239 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:39.722231 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 7
excute 13:40:39.725222 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:39.729210 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 5
excute 13:40:39.732204 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:39.735194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 1)
excute 13:40:39.738187 line       556                     i = i_j[0]
excute 13:40:39.742177 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:39.745169 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.748161 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 24
excute 13:40:39.752150 line       560                         if (t_tmp > self.TIME):
excute 13:40:39.755143 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:39.759131 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 8
excute 13:40:39.762121 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:39.765119 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:39.768137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 1)
excute 13:40:39.771134 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:39.775121 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:39.778112 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.782104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 1)
excute 13:40:39.785093 line       556                     i = i_j[0]
excute 13:40:39.788053 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:39.791077 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.794068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 1)
excute 13:40:39.797060 line       556                     i = i_j[0]
excute 13:40:39.801051 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:39.805009 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:39.808020 line       555                 for i_j in i_j_list:
excute 13:40:39.811024 line       581             self.write_matrix(
excute 13:40:39.814018 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:39.817006 line       583                 result_file_path,
excute 13:40:39.819999 line       584                 mode='a'
excute 13:40:39.824955 line       488         for t in time_steps:
excute Modified var:.. t = 14
excute 13:40:39.829940 line       489             if (t != self.TIME + 1):
excute 13:40:39.835924 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:39.838918 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:39.842908 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:39.845900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:39.849889 line       494                         if (i == j):
excute 13:40:39.852881 line       495                             continue
excute 13:40:39.855873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:39.858864 line       494                         if (i == j):
excute 13:40:39.862856 line       496                         i_j_list.append((
excute 13:40:39.865847 line       497                             i, j,
excute 13:40:39.868839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:39.871828 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1)]
excute 13:40:39.874821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:39.877813 line       494                         if (i == j):
excute 13:40:39.880808 line       496                         i_j_list.append((
excute 13:40:39.884795 line       497                             i, j,
excute 13:40:39.887787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:39.891777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0)]
excute 13:40:39.894769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:39.898760 line       494                         if (i == j):
excute 13:40:39.916709 line       496                         i_j_list.append((
excute 13:40:39.920706 line       497                             i, j,
excute 13:40:39.927685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:39.934664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2)]
excute 13:40:39.938651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:39.941643 line       494                         if (i == j):
excute 13:40:39.949628 line       496                         i_j_list.append((
excute 13:40:39.955605 line       497                             i, j,
excute 13:40:39.959595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:39.964581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0)]
excute 13:40:39.971563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:39.977547 line       494                         if (i == j):
excute 13:40:39.981538 line       496                         i_j_list.append((
excute 13:40:39.984528 line       497                             i, j,
excute 13:40:39.987521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:39.991511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:39.994502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:39.999488 line       494                         if (i == j):
excute 13:40:40.002482 line       496                         i_j_list.append((
excute 13:40:40.006472 line       497                             i, j,
excute 13:40:40.011456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.018437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2)]
excute 13:40:40.021433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:40.027417 line       494                         if (i == j):
excute 13:40:40.034397 line       496                         i_j_list.append((
excute 13:40:40.037388 line       497                             i, j,
excute 13:40:40.040380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.044368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0)]
excute 13:40:40.047360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:40.053343 line       494                         if (i == j):
excute 13:40:40.057335 line       496                         i_j_list.append((
excute 13:40:40.060325 line       497                             i, j,
excute 13:40:40.063319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.066310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:40:40.069303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:40.073303 line       494                         if (i == j):
excute 13:40:40.077283 line       496                         i_j_list.append((
excute 13:40:40.080273 line       497                             i, j,
excute 13:40:40.083264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.087254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:40:40.089247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:40.093237 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:40.096229 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:40.099221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:40.102214 line       494                         if (i == j):
excute 13:40:40.107201 line       496                         i_j_list.append((
excute 13:40:40.110192 line       497                             i, j,
excute 13:40:40.113185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.117174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0)]
excute 13:40:40.120165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:40.123156 line       494                         if (i == j):
excute 13:40:40.127146 line       495                             continue
excute 13:40:40.130139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:40.132132 line       494                         if (i == j):
excute 13:40:40.138120 line       496                         i_j_list.append((
excute 13:40:40.142106 line       497                             i, j,
excute 13:40:40.145098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.151082 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:40:40.157068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:40.164050 line       494                         if (i == j):
excute 13:40:40.168039 line       496                         i_j_list.append((
excute 13:40:40.171028 line       497                             i, j,
excute 13:40:40.174020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.177012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2)]
excute 13:40:40.180004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:40.182996 line       494                         if (i == j):
excute 13:40:40.186987 line       496                         i_j_list.append((
excute 13:40:40.189978 line       497                             i, j,
excute 13:40:40.192980 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.194964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0)]
excute 13:40:40.197956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:40.200948 line       494                         if (i == j):
excute 13:40:40.204938 line       496                         i_j_list.append((
excute 13:40:40.207930 line       497                             i, j,
excute 13:40:40.209924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.213915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:40:40.218903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:40.221892 line       494                         if (i == j):
excute 13:40:40.224885 line       496                         i_j_list.append((
excute 13:40:40.227877 line       497                             i, j,
excute 13:40:40.230868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.233860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2)]
excute 13:40:40.236852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:40.239877 line       494                         if (i == j):
excute 13:40:40.243867 line       496                         i_j_list.append((
excute 13:40:40.245860 line       497                             i, j,
excute 13:40:40.248852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.251844 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0)]
excute 13:40:40.254836 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:40.258796 line       494                         if (i == j):
excute 13:40:40.262785 line       496                         i_j_list.append((
excute 13:40:40.265777 line       497                             i, j,
excute 13:40:40.268769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.272758 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:40:40.275750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:40.279739 line       494                         if (i == j):
excute 13:40:40.282732 line       496                         i_j_list.append((
excute 13:40:40.285724 line       497                             i, j,
excute 13:40:40.289713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.292706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:40:40.295696 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:40.298688 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:40.301712 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:40.304672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:40.307695 line       494                         if (i == j):
excute 13:40:40.311653 line       496                         i_j_list.append((
excute 13:40:40.313681 line       497                             i, j,
excute 13:40:40.316673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.320630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0)]
excute 13:40:40.323622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:40.331601 line       494                         if (i == j):
excute 13:40:40.339578 line       496                         i_j_list.append((
excute 13:40:40.342602 line       497                             i, j,
excute 13:40:40.345595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.349585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:40:40.353575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:40.357530 line       494                         if (i == j):
excute 13:40:40.360522 line       495                             continue
excute 13:40:40.363514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:40.366506 line       494                         if (i == j):
excute 13:40:40.370499 line       496                         i_j_list.append((
excute 13:40:40.373487 line       497                             i, j,
excute 13:40:40.376479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.379471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2)]
excute 13:40:40.382466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:40.386455 line       494                         if (i == j):
excute 13:40:40.389447 line       496                         i_j_list.append((
excute 13:40:40.393437 line       497                             i, j,
excute 13:40:40.396427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.399419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0)]
excute 13:40:40.402441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:40.406433 line       494                         if (i == j):
excute 13:40:40.409393 line       496                         i_j_list.append((
excute 13:40:40.412417 line       497                             i, j,
excute 13:40:40.415407 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.418400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:40.421361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:40.426378 line       494                         if (i == j):
excute 13:40:40.429341 line       496                         i_j_list.append((
excute 13:40:40.432362 line       497                             i, j,
excute 13:40:40.435354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.438346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2)]
excute 13:40:40.441341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:40.444299 line       494                         if (i == j):
excute 13:40:40.447321 line       496                         i_j_list.append((
excute 13:40:40.450313 line       497                             i, j,
excute 13:40:40.453306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.456297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0)]
excute 13:40:40.459290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:40.463280 line       494                         if (i == j):
excute 13:40:40.467268 line       496                         i_j_list.append((
excute 13:40:40.469263 line       497                             i, j,
excute 13:40:40.472255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.476932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:40.479926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:40.482918 line       494                         if (i == j):
excute 13:40:40.485910 line       496                         i_j_list.append((
excute 13:40:40.488902 line       497                             i, j,
excute 13:40:40.491894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.494886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:40:40.497878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:40.500870 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:40.503862 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:40.506854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:40.509846 line       494                         if (i == j):
excute 13:40:40.513836 line       496                         i_j_list.append((
excute 13:40:40.516828 line       497                             i, j,
excute 13:40:40.519819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.522812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:40:40.526819 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:40.529833 line       494                         if (i == j):
excute 13:40:40.533782 line       496                         i_j_list.append((
excute 13:40:40.536774 line       497                             i, j,
excute 13:40:40.539773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.542760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1)]
excute 13:40:40.545753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:40.548745 line       494                         if (i == j):
excute 13:40:40.552731 line       496                         i_j_list.append((
excute 13:40:40.555725 line       497                             i, j,
excute 13:40:40.558717 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.562707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0)]
excute 13:40:40.565699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:40.568692 line       494                         if (i == j):
excute 13:40:40.571683 line       495                             continue
excute 13:40:40.574707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:40.577696 line       494                         if (i == j):
excute 13:40:40.580690 line       496                         i_j_list.append((
excute 13:40:40.583681 line       497                             i, j,
excute 13:40:40.586673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.589664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:40.592656 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:40.595648 line       494                         if (i == j):
excute 13:40:40.599608 line       496                         i_j_list.append((
excute 13:40:40.602598 line       497                             i, j,
excute 13:40:40.604625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.607617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:40.610609 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:40.614567 line       494                         if (i == j):
excute 13:40:40.617560 line       496                         i_j_list.append((
excute 13:40:40.620583 line       497                             i, j,
excute 13:40:40.623577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.626545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2)]
excute 13:40:40.629530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:40.633516 line       494                         if (i == j):
excute 13:40:40.637507 line       496                         i_j_list.append((
excute 13:40:40.641495 line       497                             i, j,
excute 13:40:40.644488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.647480 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0)]
excute 13:40:40.651470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:40.655486 line       494                         if (i == j):
excute 13:40:40.658450 line       496                         i_j_list.append((
excute 13:40:40.661472 line       497                             i, j,
excute 13:40:40.664467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.667429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:40.672412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:40.675435 line       494                         if (i == j):
excute 13:40:40.679428 line       496                         i_j_list.append((
excute 13:40:40.682417 line       497                             i, j,
excute 13:40:40.685409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.688373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:40:40.690395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:40.694388 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:40.697381 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:40.700355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:40.703361 line       494                         if (i == j):
excute 13:40:40.706353 line       496                         i_j_list.append((
excute 13:40:40.709344 line       497                             i, j,
excute 13:40:40.712340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.716309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0)]
excute 13:40:40.718321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:40.722280 line       494                         if (i == j):
excute 13:40:40.725304 line       496                         i_j_list.append((
excute 13:40:40.728295 line       497                             i, j,
excute 13:40:40.732254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.735276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1)]
excute 13:40:40.738267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:40.741259 line       494                         if (i == j):
excute 13:40:40.744251 line       496                         i_j_list.append((
excute 13:40:40.747243 line       497                             i, j,
excute 13:40:40.750236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.753228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0)]
excute 13:40:40.757185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:40.760192 line       494                         if (i == j):
excute 13:40:40.763201 line       496                         i_j_list.append((
excute 13:40:40.766163 line       497                             i, j,
excute 13:40:40.769155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.772147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2)]
excute 13:40:40.776137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:40.779159 line       494                         if (i == j):
excute 13:40:40.782151 line       495                             continue
excute 13:40:40.785146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:40.788135 line       494                         if (i == j):
excute 13:40:40.792092 line       496                         i_j_list.append((
excute 13:40:40.794118 line       497                             i, j,
excute 13:40:40.797110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.800102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0)]
excute 13:40:40.803093 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:40.806086 line       494                         if (i == j):
excute 13:40:40.810045 line       496                         i_j_list.append((
excute 13:40:40.813067 line       497                             i, j,
excute 13:40:40.816040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.818054 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2)]
excute 13:40:40.821046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:40.825037 line       494                         if (i == j):
excute 13:40:40.828029 line       496                         i_j_list.append((
excute 13:40:40.831021 line       497                             i, j,
excute 13:40:40.834978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.837971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0)]
excute 13:40:40.840963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:40.844954 line       494                         if (i == j):
excute 13:40:40.847944 line       496                         i_j_list.append((
excute 13:40:40.850936 line       497                             i, j,
excute 13:40:40.854926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.857918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:40:40.860909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:40.863901 line       494                         if (i == j):
excute 13:40:40.867890 line       496                         i_j_list.append((
excute 13:40:40.870881 line       497                             i, j,
excute 13:40:40.876897 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.879857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:40:40.886838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:40.889830 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:40.892823 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:40.896813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:40.899803 line       494                         if (i == j):
excute 13:40:40.902796 line       496                         i_j_list.append((
excute 13:40:40.905788 line       497                             i, j,
excute 13:40:40.908779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.911772 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0)]
excute 13:40:40.914763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:40.917757 line       494                         if (i == j):
excute 13:40:40.921746 line       496                         i_j_list.append((
excute 13:40:40.923742 line       497                             i, j,
excute 13:40:40.927731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.930723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1)]
excute 13:40:40.933715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:40.938703 line       494                         if (i == j):
excute 13:40:40.941725 line       496                         i_j_list.append((
excute 13:40:40.944718 line       497                             i, j,
excute 13:40:40.947708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.950700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0)]
excute 13:40:40.953691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:40.957649 line       494                         if (i == j):
excute 13:40:40.961640 line       496                         i_j_list.append((
excute 13:40:40.964633 line       497                             i, j,
excute 13:40:40.967623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.970615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2)]
excute 13:40:40.973607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:40.976599 line       494                         if (i == j):
excute 13:40:40.979590 line       496                         i_j_list.append((
excute 13:40:40.982582 line       497                             i, j,
excute 13:40:40.985606 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:40.988598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0)]
excute 13:40:40.991590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:40.995548 line       494                         if (i == j):
excute 13:40:40.998542 line       495                             continue
excute 13:40:41.001563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:41.004557 line       494                         if (i == j):
excute 13:40:41.008514 line       496                         i_j_list.append((
excute 13:40:41.011505 line       497                             i, j,
excute 13:40:41.014498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.017489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2)]
excute 13:40:41.020481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:41.023474 line       494                         if (i == j):
excute 13:40:41.027465 line       496                         i_j_list.append((
excute 13:40:41.030456 line       497                             i, j,
excute 13:40:41.034446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.037468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0)]
excute 13:40:41.041438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:41.044418 line       494                         if (i == j):
excute 13:40:41.047442 line       496                         i_j_list.append((
excute 13:40:41.050433 line       497                             i, j,
excute 13:40:41.053425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.056417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:40:41.059409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:41.063400 line       494                         if (i == j):
excute 13:40:41.066390 line       496                         i_j_list.append((
excute 13:40:41.069382 line       497                             i, j,
excute 13:40:41.072344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.075336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:40:41.078328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:41.082318 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:41.085341 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:41.088333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:41.091324 line       494                         if (i == j):
excute 13:40:41.094316 line       496                         i_j_list.append((
excute 13:40:41.097308 line       497                             i, j,
excute 13:40:41.100299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.103291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0)]
excute 13:40:41.106283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:41.110272 line       494                         if (i == j):
excute 13:40:41.113238 line       496                         i_j_list.append((
excute 13:40:41.116257 line       497                             i, j,
excute 13:40:41.119217 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.122240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1)]
excute 13:40:41.125233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:41.129191 line       494                         if (i == j):
excute 13:40:41.132184 line       496                         i_j_list.append((
excute 13:40:41.135206 line       497                             i, j,
excute 13:40:41.138172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.141159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0)]
excute 13:40:41.145149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:41.148140 line       494                         if (i == j):
excute 13:40:41.152163 line       496                         i_j_list.append((
excute 13:40:41.155124 line       497                             i, j,
excute 13:40:41.158116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.161108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2)]
excute 13:40:41.164100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:41.168088 line       494                         if (i == j):
excute 13:40:41.174071 line       496                         i_j_list.append((
excute 13:40:41.177094 line       497                             i, j,
excute 13:40:41.180087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.183078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0)]
excute 13:40:41.186072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:41.190029 line       494                         if (i == j):
excute 13:40:41.193022 line       496                         i_j_list.append((
excute 13:40:41.196043 line       497                             i, j,
excute 13:40:41.199006 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.201030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:40:41.204023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:41.208013 line       494                         if (i == j):
excute 13:40:41.211005 line       495                             continue
excute 13:40:41.213996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:41.216988 line       494                         if (i == j):
excute 13:40:41.220979 line       496                         i_j_list.append((
excute 13:40:41.223937 line       497                             i, j,
excute 13:40:41.226931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.228956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:40:41.231947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:41.235939 line       494                         if (i == j):
excute 13:40:41.238929 line       496                         i_j_list.append((
excute 13:40:41.241921 line       497                             i, j,
excute 13:40:41.245881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.249870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:40:41.252862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:41.255855 line       494                         if (i == j):
excute 13:40:41.260840 line       496                         i_j_list.append((
excute 13:40:41.266824 line       497                             i, j,
excute 13:40:41.272807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.279789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:40:41.282780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:41.286769 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:41.289762 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:41.294750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:41.302728 line       494                         if (i == j):
excute 13:40:41.306717 line       496                         i_j_list.append((
excute 13:40:41.309710 line       497                             i, j,
excute 13:40:41.313698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.317688 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0)]
excute 13:40:41.320682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:41.331650 line       494                         if (i == j):
excute 13:40:41.342621 line       496                         i_j_list.append((
excute 13:40:41.346610 line       497                             i, j,
excute 13:40:41.352594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.356583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1)]
excute 13:40:41.359574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:41.363564 line       494                         if (i == j):
excute 13:40:41.369549 line       496                         i_j_list.append((
excute 13:40:41.373539 line       497                             i, j,
excute 13:40:41.380519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.385516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0)]
excute 13:40:41.391490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:41.400466 line       494                         if (i == j):
excute 13:40:41.407448 line       496                         i_j_list.append((
excute 13:40:41.414428 line       497                             i, j,
excute 13:40:41.419415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.426397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2)]
excute 13:40:41.430386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:41.435375 line       494                         if (i == j):
excute 13:40:41.441357 line       496                         i_j_list.append((
excute 13:40:41.447342 line       497                             i, j,
excute 13:40:41.453325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.462301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0)]
excute 13:40:41.469281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:41.475266 line       494                         if (i == j):
excute 13:40:41.480253 line       496                         i_j_list.append((
excute 13:40:41.486237 line       497                             i, j,
excute 13:40:41.492220 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.498215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:41.503191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:41.509175 line       494                         if (i == j):
excute 13:40:41.515160 line       496                         i_j_list.append((
excute 13:40:41.519149 line       497                             i, j,
excute 13:40:41.524135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.529121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2)]
excute 13:40:41.535106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:41.540092 line       494                         if (i == j):
excute 13:40:41.547074 line       495                             continue
excute 13:40:41.553058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:41.558045 line       494                         if (i == j):
excute 13:40:41.566023 line       496                         i_j_list.append((
excute 13:40:41.571010 line       497                             i, j,
excute 13:40:41.577992 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.582979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0)]
excute 13:40:41.587966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:41.593948 line       494                         if (i == j):
excute 13:40:41.600931 line       496                         i_j_list.append((
excute 13:40:41.605917 line       497                             i, j,
excute 13:40:41.610903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.615891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:40:41.620876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:41.626860 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:41.632845 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:41.638829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:41.644812 line       494                         if (i == j):
excute 13:40:41.651794 line       496                         i_j_list.append((
excute 13:40:41.659773 line       497                             i, j,
excute 13:40:41.666755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.672739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0)]
excute 13:40:41.679719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:41.687698 line       494                         if (i == j):
excute 13:40:41.693682 line       496                         i_j_list.append((
excute 13:40:41.698669 line       497                             i, j,
excute 13:40:41.702659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.709639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1)]
excute 13:40:41.715629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:41.719615 line       494                         if (i == j):
excute 13:40:41.722605 line       496                         i_j_list.append((
excute 13:40:41.726594 line       497                             i, j,
excute 13:40:41.729586 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.733575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0)]
excute 13:40:41.737565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:41.741555 line       494                         if (i == j):
excute 13:40:41.744546 line       496                         i_j_list.append((
excute 13:40:41.747538 line       497                             i, j,
excute 13:40:41.751528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.754520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2)]
excute 13:40:41.757510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:41.762499 line       494                         if (i == j):
excute 13:40:41.768489 line       496                         i_j_list.append((
excute 13:40:41.771474 line       497                             i, j,
excute 13:40:41.776459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.780451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0)]
excute 13:40:41.783444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:41.787433 line       494                         if (i == j):
excute 13:40:41.791421 line       496                         i_j_list.append((
excute 13:40:41.794413 line       497                             i, j,
excute 13:40:41.797406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.801393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0)]
excute 13:40:41.804385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:41.808375 line       494                         if (i == j):
excute 13:40:41.811366 line       496                         i_j_list.append((
excute 13:40:41.814359 line       497                             i, j,
excute 13:40:41.817351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.820343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2)]
excute 13:40:41.823335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:41.827325 line       494                         if (i == j):
excute 13:40:41.831326 line       496                         i_j_list.append((
excute 13:40:41.835306 line       497                             i, j,
excute 13:40:41.838296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.842285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0)]
excute 13:40:41.847698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:41.850724 line       494                         if (i == j):
excute 13:40:41.854683 line       495                             continue
excute 13:40:41.857709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:41.860697 line       494                         if (i == j):
excute 13:40:41.865689 line       496                         i_j_list.append((
excute 13:40:41.868645 line       497                             i, j,
excute 13:40:41.870673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.873665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0)]
excute 13:40:41.876654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:41.880614 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:41.883637 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:41.886599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:41.890588 line       494                         if (i == j):
excute 13:40:41.894575 line       496                         i_j_list.append((
excute 13:40:41.897569 line       497                             i, j,
excute 13:40:41.900561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.903553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0)]
excute 13:40:41.906545 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:41.910536 line       494                         if (i == j):
excute 13:40:41.913527 line       496                         i_j_list.append((
excute 13:40:41.917516 line       497                             i, j,
excute 13:40:41.920508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.923499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1)]
excute 13:40:41.926492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:41.930481 line       494                         if (i == j):
excute 13:40:41.934469 line       496                         i_j_list.append((
excute 13:40:41.936465 line       497                             i, j,
excute 13:40:41.940454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.943446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0)]
excute 13:40:41.946438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:41.950432 line       494                         if (i == j):
excute 13:40:41.953419 line       496                         i_j_list.append((
excute 13:40:41.956411 line       497                             i, j,
excute 13:40:41.960401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.964393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 2)]
excute 13:40:41.967412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:41.971402 line       494                         if (i == j):
excute 13:40:41.975360 line       496                         i_j_list.append((
excute 13:40:41.977388 line       497                             i, j,
excute 13:40:41.980377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:41.983369 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 2), (9, 4, 3, 0)]
excute 13:40:41.986361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:41.990340 line       494                         if (i == j):
excute 13:40:41.993312 line       496                         i_j_list.append((
excute 13:40:41.996305 line       497                             i, j,
excute 13:40:41.999297 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:42.002289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 2), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:42.005281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:42.009271 line       494                         if (i == j):
excute 13:40:42.012260 line       496                         i_j_list.append((
excute 13:40:42.015254 line       497                             i, j,
excute 13:40:42.018244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:42.022236 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 2), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 2)]
excute 13:40:42.025260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:42.029215 line       494                         if (i == j):
excute 13:40:42.032239 line       496                         i_j_list.append((
excute 13:40:42.035200 line       497                             i, j,
excute 13:40:42.038193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:42.042183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 2), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 2), (9, 7, 3, 0)]
excute 13:40:42.045173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:42.048186 line       494                         if (i == j):
excute 13:40:42.051188 line       496                         i_j_list.append((
excute 13:40:42.055146 line       497                             i, j,
excute 13:40:42.058138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:42.060134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 1), (0, 2, 2, 0), (0, 3, 2, 2), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 2), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 2), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 2), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 2), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 2), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 2), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 2), (4, 5, 1, 0), (4, 6, 1, 2), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 2), (5, 4, 1, 0), (5, 6, 1, 2), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 2), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 2), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 2), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 1, 2, 1), (8, 2, 2, 0), (8, 3, 2, 2), (8, 4, 2, 0), (8, 5, 2, 0), (8, 6, 2, 2), (8, 7, 2, 0), (8, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 2), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 2), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:40:42.063156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:42.068112 line       494                         if (i == j):
excute 13:40:42.071103 line       495                             continue
excute 13:40:42.074097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:42.077089 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:42.081078 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 0, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 2, 1, 0), (4, 5, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 2, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (3, 1, 1, 1), (4, 1, 1, 1), (5, 1, 1, 1), (3, 6, 1, 2), (4, 3, 1, 2), (4, 6, 1, 2), (5, 3, 1, 2), (5, 6, 1, 2), (0, 2, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (7, 0, 2, 0), (7, 2, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 2, 0), (8, 2, 2, 0), (8, 4, 2, 0), (8, 5, 2, 0), (8, 7, 2, 0), (8, 9, 2, 0), (0, 1, 2, 1), (2, 1, 2, 1), (7, 1, 2, 1), (8, 1, 2, 1), (0, 3, 2, 2), (0, 6, 2, 2), (1, 3, 2, 2), (1, 6, 2, 2), (2, 3, 2, 2), (2, 6, 2, 2), (7, 3, 2, 2), (7, 6, 2, 2), (8, 3, 2, 2), (8, 6, 2, 2), (9, 0, 3, 0), (9, 2, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 1, 3, 1), (9, 3, 3, 2), (9, 6, 3, 2), (6, 0, 4, 0), (6, 2, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (6, 1, 4, 1), (6, 3, 4, 2)]
excute 13:40:42.084076 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:42.087061 line       505                     if (self.RELOCATE):
excute 13:40:42.091084 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:42.094076 line       505                     if (self.RELOCATE):
excute 13:40:42.097049 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:42.100057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:42.103049 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:42.106042 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.110001 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.113027 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:42.115985 line       556                     i = i_j[0]
excute 13:40:42.119973 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.122996 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.126955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:42.129977 line       556                     i = i_j[0]
excute 13:40:42.132963 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.135962 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.138954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:42.141948 line       556                     i = i_j[0]
excute 13:40:42.145918 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.148927 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.151918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:42.155880 line       556                     i = i_j[0]
excute 13:40:42.158870 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.161892 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.164884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:42.168843 line       556                     i = i_j[0]
excute 13:40:42.172834 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.176820 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.179815 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:42.182806 line       556                     i = i_j[0]
excute 13:40:42.186796 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.189788 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.192778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:40:42.195802 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:42.198794 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.202753 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.205777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:40:42.208737 line       556                     i = i_j[0]
excute 13:40:42.212726 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.216748 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.220718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:42.223716 line       556                     i = i_j[0]
excute 13:40:42.226691 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.229713 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.232706 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:40:42.235694 line       556                     i = i_j[0]
excute 13:40:42.239685 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.242661 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.245637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:40:42.248663 line       556                     i = i_j[0]
excute 13:40:42.251653 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.254645 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.258603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:40:42.261628 line       556                     i = i_j[0]
excute 13:40:42.264621 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.267610 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.271569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:40:42.275558 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:42.278551 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.282539 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.286529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:40:42.289521 line       556                     i = i_j[0]
excute 13:40:42.293511 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.296503 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.299495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:40:42.302486 line       556                     i = i_j[0]
excute 13:40:42.306477 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.309468 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.312459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:40:42.315452 line       556                     i = i_j[0]
excute 13:40:42.318444 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.321436 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.324428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:40:42.331409 line       556                     i = i_j[0]
excute 13:40:42.338390 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.341415 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.345371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:40:42.348395 line       556                     i = i_j[0]
excute 13:40:42.352351 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.356343 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.359334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 1)
excute 13:40:42.363324 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:42.367314 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:42.371333 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.376301 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 1)
excute 13:40:42.379281 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:42.383303 line       557                     j = i_j[1]
excute 13:40:42.387259 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.390283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 1)
excute 13:40:42.393280 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:42.396266 line       557                     j = i_j[1]
excute 13:40:42.400224 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.403250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 2)
excute 13:40:42.406239 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:42.410202 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:42.413189 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.417179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 2)
excute 13:40:42.419204 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:42.423163 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:42.426186 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.430169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 2)
excute 13:40:42.433140 line       556                     i = i_j[0]
excute 13:40:42.436128 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:42.439154 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.442143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 2)
excute 13:40:42.445138 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:42.449125 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:42.453084 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.456109 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 23
excute 13:40:42.459097 line       560                         if (t_tmp > self.TIME):
excute 13:40:42.463058 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:42.466047 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:42.469042 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:42.472033 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:42.476022 line       569                                     available_vhecles[i][t],
excute 13:40:42.479045 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:42.482037 line       571                                     self.S_capacities[j],
excute 13:40:42.485030 line       572                                     demands[t][i][j],
excute 13:40:42.488023 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 14
calc_contract     13:40:42.491012 call       352     def caluculate_contract(
calc_contract     13:40:42.494005 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:42.495003 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:42.496004 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:42.496966 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:42.496966 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:42.496966 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:42.497963 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:42.498960 line       575                                 rsf += rsf_tmp
excute 13:40:42.501982 line       576                                 rse += rse_tmp
excute 13:40:42.504975 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 14
move_cars     Starting var:.. t_tmp = 23
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:42.508934 call       388     def move_cars(
move_cars     13:40:42.512954 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:42.513952 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:42.514948 line       399         return available_vhecles
move_cars     13:40:42.516930 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:40:42.518908 line       579                                 success += can_contract
excute Modified var:.. success = 14
excute 13:40:42.522898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 2)
excute 13:40:42.526887 line       556                     i = i_j[0]
excute 13:40:42.529909 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:42.533866 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.536859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:42.539882 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:42.542873 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.546863 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.550822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:42.553813 line       556                     i = i_j[0]
excute 13:40:42.557828 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.560793 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.564784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:42.567776 line       556                     i = i_j[0]
excute 13:40:42.570773 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.573762 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.577751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:42.581741 line       556                     i = i_j[0]
excute 13:40:42.586726 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.589716 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.593706 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:42.597696 line       556                     i = i_j[0]
excute 13:40:42.600687 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.603680 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.607671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:42.610663 line       556                     i = i_j[0]
excute 13:40:42.614652 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.617644 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.622517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:40:42.625511 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:42.628503 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.632493 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.635485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:40:42.639475 line       556                     i = i_j[0]
excute 13:40:42.642467 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.645458 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.649481 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:40:42.652471 line       556                     i = i_j[0]
excute 13:40:42.656455 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.659454 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.662432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:40:42.665436 line       556                     i = i_j[0]
excute 13:40:42.669394 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.674383 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.678371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:40:42.684355 line       556                     i = i_j[0]
excute 13:40:42.688344 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.691335 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.698323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:40:42.705300 line       556                     i = i_j[0]
excute 13:40:42.709289 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.712305 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.716269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:40:42.719292 line       556                     i = i_j[0]
excute 13:40:42.722284 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.725276 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.729236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:42.732228 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:42.736218 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.740205 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.743197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:42.746191 line       556                     i = i_j[0]
excute 13:40:42.755009 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.758054 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.762043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:42.765033 line       556                     i = i_j[0]
excute 13:40:42.769022 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.772014 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.775007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:42.778965 line       556                     i = i_j[0]
excute 13:40:42.786943 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.792927 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.796919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:40:42.799908 line       556                     i = i_j[0]
excute 13:40:42.802899 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.805891 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.809881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:40:42.812872 line       556                     i = i_j[0]
excute 13:40:42.815870 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.818857 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.821848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:42.824841 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:42.828830 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.831821 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.835812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:42.838836 line       556                     i = i_j[0]
excute 13:40:42.842795 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.845819 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.848808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:42.851804 line       556                     i = i_j[0]
excute 13:40:42.855792 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.858781 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.862741 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:42.865763 line       556                     i = i_j[0]
excute 13:40:42.868756 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.871747 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.875706 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:42.878730 line       556                     i = i_j[0]
excute 13:40:42.881720 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:42.884712 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.889682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:42.892659 line       556                     i = i_j[0]
excute 13:40:42.895651 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.898678 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.902635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 2, 0)
excute 13:40:42.905657 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:42.908650 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:42.912611 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.916611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 2, 0)
excute 13:40:42.919619 line       556                     i = i_j[0]
excute 13:40:42.923578 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:42.926571 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.929594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 2, 0)
excute 13:40:42.932585 line       556                     i = i_j[0]
excute 13:40:42.936549 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:42.939566 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.942558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 2, 0)
excute 13:40:42.945550 line       556                     i = i_j[0]
excute 13:40:42.949508 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:42.952536 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.956491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 2, 0)
excute 13:40:42.959514 line       556                     i = i_j[0]
excute 13:40:42.964468 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:42.969455 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.973444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 2, 0)
excute 13:40:42.976435 line       556                     i = i_j[0]
excute 13:40:42.979427 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:42.982428 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:42.986409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 1)
excute 13:40:42.989401 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:42.994392 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:42.998378 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.002368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:40:43.005393 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:43.009361 line       557                     j = i_j[1]
excute 13:40:43.012371 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.016329 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 19
excute 13:40:43.019320 line       560                         if (t_tmp > self.TIME):
excute 13:40:43.022345 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:43.026335 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 9
excute 13:40:43.029328 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:43.032320 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:43.036295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 1)
excute 13:40:43.040265 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:43.043259 line       557                     j = i_j[1]
excute 13:40:43.047249 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.054232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 2, 1)
excute 13:40:43.060211 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:43.064202 line       557                     j = i_j[1]
excute 13:40:43.067224 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.070217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 2)
excute 13:40:43.073209 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:43.077168 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.080189 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.084150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 2)
excute 13:40:43.087171 line       556                     i = i_j[0]
excute 13:40:43.091129 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:43.095119 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.099107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 2)
excute 13:40:43.102099 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:43.105092 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.108083 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.112073 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 2)
excute 13:40:43.115065 line       556                     i = i_j[0]
excute 13:40:43.118057 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:43.122064 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.125040 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 25
excute 13:40:43.128066 line       560                         if (t_tmp > self.TIME):
excute 13:40:43.132021 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:43.135043 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:43.138035 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:43.141030 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:43.144018 line       569                                     available_vhecles[i][t],
excute 13:40:43.147012 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:43.150005 line       571                                     self.S_capacities[j],
excute 13:40:43.152995 line       572                                     demands[t][i][j],
excute 13:40:43.156953 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 14
calc_contract     13:40:43.159950 call       352     def caluculate_contract(
calc_contract     13:40:43.162970 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:43.162970 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:43.163968 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:43.164967 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:43.165931 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:43.166938 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 1
calc_contract     13:40:43.167961 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:43.168924 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 1]
excute Modified var:.. rse_tmp = 1
excute 13:40:43.169920 line       575                                 rsf += rsf_tmp
excute 13:40:43.175940 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 10
excute 13:40:43.178926 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 14
move_cars     Starting var:.. t_tmp = 25
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:43.181918 call       388     def move_cars(
move_cars     13:40:43.185876 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:43.187903 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:43.188904 line       399         return available_vhecles
move_cars     13:40:43.190862 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:40:43.192892 line       579                                 success += can_contract
excute Modified var:.. success = 15
excute 13:40:43.212281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 2)
excute 13:40:43.215272 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:43.219261 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.222253 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.226243 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 21
excute 13:40:43.229235 line       560                         if (t_tmp > self.TIME):
excute 13:40:43.232226 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:43.236219 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 11
excute 13:40:43.240237 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:43.244196 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:43.247197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 2)
excute 13:40:43.250188 line       556                     i = i_j[0]
excute 13:40:43.253204 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:43.256194 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.260154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 2)
excute 13:40:43.263177 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:43.267148 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.270125 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.274131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 2)
excute 13:40:43.277139 line       556                     i = i_j[0]
excute 13:40:43.280134 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:43.283122 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.287082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 2, 2)
excute 13:40:43.291071 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:43.294062 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.298052 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.302040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 2, 2)
excute 13:40:43.305032 line       556                     i = i_j[0]
excute 13:40:43.308056 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:43.311048 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.315008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:40:43.318029 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:43.321022 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:43.324979 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.334954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:40:43.339971 line       556                     i = i_j[0]
excute 13:40:43.343930 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:43.346952 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.353904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:43.356895 line       556                     i = i_j[0]
excute 13:40:43.360885 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:43.363875 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.370859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:43.373850 line       556                     i = i_j[0]
excute 13:40:43.377838 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:43.383822 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.387811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:40:43.390802 line       556                     i = i_j[0]
excute 13:40:43.393794 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:43.397784 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.402773 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:40:43.406762 line       556                     i = i_j[0]
excute 13:40:43.409752 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:43.412744 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.416734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 1)
excute 13:40:43.419726 line       556                     i = i_j[0]
excute 13:40:43.423715 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:43.426706 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.429716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 2)
excute 13:40:43.432691 line       556                     i = i_j[0]
excute 13:40:43.435683 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.438675 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.442664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 2)
excute 13:40:43.445656 line       556                     i = i_j[0]
excute 13:40:43.448648 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:43.452637 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.455630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:40:43.458621 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:43.462611 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:43.466601 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.469594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:40:43.472585 line       556                     i = i_j[0]
excute 13:40:43.476584 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:43.479565 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.482559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:40:43.485550 line       556                     i = i_j[0]
excute 13:40:43.489550 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:43.492531 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.496522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:40:43.499513 line       556                     i = i_j[0]
excute 13:40:43.502505 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:43.507492 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.511480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:40:43.514473 line       556                     i = i_j[0]
excute 13:40:43.517464 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:43.520456 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.524453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:40:43.527438 line       556                     i = i_j[0]
excute 13:40:43.530430 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:43.533421 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.537413 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:40:43.540404 line       556                     i = i_j[0]
excute 13:40:43.543395 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:43.546387 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.550378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 1)
excute 13:40:43.553368 line       556                     i = i_j[0]
excute 13:40:43.557359 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:43.560356 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.563342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 2)
excute 13:40:43.566334 line       556                     i = i_j[0]
excute 13:40:43.570324 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:43.573316 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:43.576323 line       555                 for i_j in i_j_list:
excute 13:40:43.579299 line       581             self.write_matrix(
excute 13:40:43.582291 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:43.585283 line       583                 result_file_path,
excute 13:40:43.588275 line       584                 mode='a'
excute 13:40:43.594449 line       488         for t in time_steps:
excute Modified var:.. t = 15
excute 13:40:43.598433 line       489             if (t != self.TIME + 1):
excute 13:40:43.602422 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:43.606427 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:43.612395 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:43.618379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:43.624363 line       494                         if (i == j):
excute 13:40:43.627354 line       495                             continue
excute 13:40:43.630346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:43.634337 line       494                         if (i == j):
excute 13:40:43.637330 line       496                         i_j_list.append((
excute 13:40:43.640321 line       497                             i, j,
excute 13:40:43.643313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.646305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:43.651291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:43.655280 line       494                         if (i == j):
excute 13:40:43.658271 line       496                         i_j_list.append((
excute 13:40:43.661263 line       497                             i, j,
excute 13:40:43.664255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.668245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:40:43.673233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:43.690186 line       494                         if (i == j):
excute 13:40:43.698168 line       496                         i_j_list.append((
excute 13:40:43.704155 line       497                             i, j,
excute 13:40:43.710134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.716116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:40:43.721103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:43.725092 line       494                         if (i == j):
excute 13:40:43.729091 line       496                         i_j_list.append((
excute 13:40:43.732074 line       497                             i, j,
excute 13:40:43.735066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.738058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:43.744042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:43.747033 line       494                         if (i == j):
excute 13:40:43.751024 line       496                         i_j_list.append((
excute 13:40:43.754017 line       497                             i, j,
excute 13:40:43.759999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.762991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:43.773963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:43.785930 line       494                         if (i == j):
excute 13:40:43.790917 line       496                         i_j_list.append((
excute 13:40:43.793908 line       497                             i, j,
excute 13:40:43.799894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.803886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:43.809878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:43.814854 line       494                         if (i == j):
excute 13:40:43.820838 line       496                         i_j_list.append((
excute 13:40:43.823829 line       497                             i, j,
excute 13:40:43.827818 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.830811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:43.834801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:43.838790 line       494                         if (i == j):
excute 13:40:43.841781 line       496                         i_j_list.append((
excute 13:40:43.844772 line       497                             i, j,
excute 13:40:43.847764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.850756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:40:43.853748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:43.857738 line       494                         if (i == j):
excute 13:40:43.860731 line       496                         i_j_list.append((
excute 13:40:43.863722 line       497                             i, j,
excute 13:40:43.866713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.869707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1)]
excute 13:40:43.872697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:43.875690 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:43.878682 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:43.881674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:43.885663 line       494                         if (i == j):
excute 13:40:43.888656 line       496                         i_j_list.append((
excute 13:40:43.891647 line       497                             i, j,
excute 13:40:43.894640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.896634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2)]
excute 13:40:43.900626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:43.903614 line       494                         if (i == j):
excute 13:40:43.906607 line       495                             continue
excute 13:40:43.909599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:43.913588 line       494                         if (i == j):
excute 13:40:43.921568 line       496                         i_j_list.append((
excute 13:40:43.925556 line       497                             i, j,
excute 13:40:43.929547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.932537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0)]
excute 13:40:43.936527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:43.939521 line       494                         if (i == j):
excute 13:40:43.942511 line       496                         i_j_list.append((
excute 13:40:43.945503 line       497                             i, j,
excute 13:40:43.948495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.951487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:40:43.954480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:43.958469 line       494                         if (i == j):
excute 13:40:43.961461 line       496                         i_j_list.append((
excute 13:40:43.965450 line       497                             i, j,
excute 13:40:43.967444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.970436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:40:43.973428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:43.977418 line       494                         if (i == j):
excute 13:40:43.980410 line       496                         i_j_list.append((
excute 13:40:43.983401 line       497                             i, j,
excute 13:40:43.986393 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:43.989385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:40:43.992378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:43.995369 line       494                         if (i == j):
excute 13:40:43.998362 line       496                         i_j_list.append((
excute 13:40:44.001353 line       497                             i, j,
excute 13:40:44.004345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.007337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:40:44.010330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:44.013322 line       494                         if (i == j):
excute 13:40:44.017311 line       496                         i_j_list.append((
excute 13:40:44.022299 line       497                             i, j,
excute 13:40:44.025290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.028282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:40:44.031274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:44.034266 line       494                         if (i == j):
excute 13:40:44.038256 line       496                         i_j_list.append((
excute 13:40:44.041248 line       497                             i, j,
excute 13:40:44.044239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.047232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:40:44.050224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:44.053216 line       494                         if (i == j):
excute 13:40:44.057206 line       496                         i_j_list.append((
excute 13:40:44.060197 line       497                             i, j,
excute 13:40:44.063189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.066181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1)]
excute 13:40:44.069173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:44.073164 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:44.076155 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:44.080146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:44.083135 line       494                         if (i == j):
excute 13:40:44.086140 line       496                         i_j_list.append((
excute 13:40:44.089150 line       497                             i, j,
excute 13:40:44.092142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.095135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2)]
excute 13:40:44.098130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:44.101122 line       494                         if (i == j):
excute 13:40:44.105078 line       496                         i_j_list.append((
excute 13:40:44.108102 line       497                             i, j,
excute 13:40:44.111092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.114086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0)]
excute 13:40:44.117069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:44.121036 line       494                         if (i == j):
excute 13:40:44.126022 line       495                             continue
excute 13:40:44.130011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:44.133002 line       494                         if (i == j):
excute 13:40:44.135995 line       496                         i_j_list.append((
excute 13:40:44.139018 line       497                             i, j,
excute 13:40:44.142009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.145001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:44.147994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:44.151959 line       494                         if (i == j):
excute 13:40:44.154974 line       496                         i_j_list.append((
excute 13:40:44.157966 line       497                             i, j,
excute 13:40:44.160959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.163950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:44.166942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:44.170907 line       494                         if (i == j):
excute 13:40:44.173893 line       496                         i_j_list.append((
excute 13:40:44.176916 line       497                             i, j,
excute 13:40:44.179908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.182869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:44.188854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:44.191845 line       494                         if (i == j):
excute 13:40:44.194868 line       496                         i_j_list.append((
excute 13:40:44.197861 line       497                             i, j,
excute 13:40:44.200852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.203843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:44.206835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:44.210802 line       494                         if (i == j):
excute 13:40:44.214785 line       496                         i_j_list.append((
excute 13:40:44.220767 line       497                             i, j,
excute 13:40:44.224756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.231740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:44.235728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:44.238719 line       494                         if (i == j):
excute 13:40:44.242709 line       496                         i_j_list.append((
excute 13:40:44.245702 line       497                             i, j,
excute 13:40:44.248693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.250720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:44.253711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:44.258671 line       494                         if (i == j):
excute 13:40:44.262656 line       496                         i_j_list.append((
excute 13:40:44.265681 line       497                             i, j,
excute 13:40:44.268675 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.271663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1)]
excute 13:40:44.274623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:44.277615 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:44.281604 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:44.284596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:44.287588 line       494                         if (i == j):
excute 13:40:44.290580 line       496                         i_j_list.append((
excute 13:40:44.293573 line       497                             i, j,
excute 13:40:44.296564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.299556 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2)]
excute 13:40:44.302549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:44.306539 line       494                         if (i == j):
excute 13:40:44.309531 line       496                         i_j_list.append((
excute 13:40:44.312521 line       497                             i, j,
excute 13:40:44.315513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.318506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0)]
excute 13:40:44.324490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:44.331472 line       494                         if (i == j):
excute 13:40:44.344441 line       496                         i_j_list.append((
excute 13:40:44.347460 line       497                             i, j,
excute 13:40:44.350453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.355409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:44.358400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:44.362389 line       494                         if (i == j):
excute 13:40:44.365382 line       495                             continue
excute 13:40:44.369372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:44.373361 line       494                         if (i == j):
excute 13:40:44.376354 line       496                         i_j_list.append((
excute 13:40:44.380343 line       497                             i, j,
excute 13:40:44.383335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.387324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:44.391313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:44.395302 line       494                         if (i == j):
excute 13:40:44.398294 line       496                         i_j_list.append((
excute 13:40:44.402282 line       497                             i, j,
excute 13:40:44.404277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.407268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:44.410260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:44.414262 line       494                         if (i == j):
excute 13:40:44.417243 line       496                         i_j_list.append((
excute 13:40:44.420233 line       497                             i, j,
excute 13:40:44.423225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.426217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:44.429211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:44.432202 line       494                         if (i == j):
excute 13:40:44.435193 line       496                         i_j_list.append((
excute 13:40:44.438186 line       497                             i, j,
excute 13:40:44.443173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.447162 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:44.450154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:44.454143 line       494                         if (i == j):
excute 13:40:44.457135 line       496                         i_j_list.append((
excute 13:40:44.460128 line       497                             i, j,
excute 13:40:44.465115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.470101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:44.473093 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:44.476085 line       494                         if (i == j):
excute 13:40:44.480075 line       496                         i_j_list.append((
excute 13:40:44.482068 line       497                             i, j,
excute 13:40:44.486065 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.489051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1)]
excute 13:40:44.492043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:44.495036 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:44.500022 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:44.504010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:44.508054 line       494                         if (i == j):
excute 13:40:44.511990 line       496                         i_j_list.append((
excute 13:40:44.515982 line       497                             i, j,
excute 13:40:44.521071 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.524954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2)]
excute 13:40:44.527946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:44.531935 line       494                         if (i == j):
excute 13:40:44.534927 line       496                         i_j_list.append((
excute 13:40:44.537919 line       497                             i, j,
excute 13:40:44.540911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.543903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0)]
excute 13:40:44.547893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:44.551893 line       494                         if (i == j):
excute 13:40:44.555873 line       496                         i_j_list.append((
excute 13:40:44.558864 line       497                             i, j,
excute 13:40:44.561856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.571056 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:40:44.574079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:44.578041 line       494                         if (i == j):
excute 13:40:44.581031 line       496                         i_j_list.append((
excute 13:40:44.585052 line       497                             i, j,
excute 13:40:44.588044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.591037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:40:44.594027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:44.597987 line       494                         if (i == j):
excute 13:40:44.600979 line       495                             continue
excute 13:40:44.604002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:44.606993 line       494                         if (i == j):
excute 13:40:44.609985 line       496                         i_j_list.append((
excute 13:40:44.612977 line       497                             i, j,
excute 13:40:44.615939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.619958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:40:44.622950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:44.626909 line       494                         if (i == j):
excute 13:40:44.629902 line       496                         i_j_list.append((
excute 13:40:44.632924 line       497                             i, j,
excute 13:40:44.636914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.639906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:40:44.642899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:44.645891 line       494                         if (i == j):
excute 13:40:44.650846 line       496                         i_j_list.append((
excute 13:40:44.653836 line       497                             i, j,
excute 13:40:44.656830 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.659823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:40:44.663811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:44.666804 line       494                         if (i == j):
excute 13:40:44.670793 line       496                         i_j_list.append((
excute 13:40:44.674781 line       497                             i, j,
excute 13:40:44.677774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.680798 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:40:44.686753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:44.690755 line       494                         if (i == j):
excute 13:40:44.693730 line       496                         i_j_list.append((
excute 13:40:44.696757 line       497                             i, j,
excute 13:40:44.699745 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.702738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1)]
excute 13:40:44.705731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:44.708722 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:44.712680 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:44.715704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:44.718694 line       494                         if (i == j):
excute 13:40:44.722687 line       496                         i_j_list.append((
excute 13:40:44.725645 line       497                             i, j,
excute 13:40:44.728637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.731630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2)]
excute 13:40:44.734623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:44.737615 line       494                         if (i == j):
excute 13:40:44.741613 line       496                         i_j_list.append((
excute 13:40:44.744596 line       497                             i, j,
excute 13:40:44.747588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.751576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0)]
excute 13:40:44.754602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:44.758558 line       494                         if (i == j):
excute 13:40:44.761582 line       496                         i_j_list.append((
excute 13:40:44.764542 line       497                             i, j,
excute 13:40:44.767534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.771524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:40:44.774514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:44.777508 line       494                         if (i == j):
excute 13:40:44.781497 line       496                         i_j_list.append((
excute 13:40:44.785486 line       497                             i, j,
excute 13:40:44.788479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.791473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:40:44.793465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:44.797455 line       494                         if (i == j):
excute 13:40:44.800447 line       496                         i_j_list.append((
excute 13:40:44.803438 line       497                             i, j,
excute 13:40:44.806431 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.809422 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:40:44.813412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:44.816403 line       494                         if (i == j):
excute 13:40:44.819396 line       495                             continue
excute 13:40:44.823384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:44.826376 line       494                         if (i == j):
excute 13:40:44.829368 line       496                         i_j_list.append((
excute 13:40:44.832391 line       497                             i, j,
excute 13:40:44.835384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.838374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:40:44.841367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:44.845326 line       494                         if (i == j):
excute 13:40:44.848352 line       496                         i_j_list.append((
excute 13:40:44.851340 line       497                             i, j,
excute 13:40:44.857294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.860286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:40:44.863279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:44.866271 line       494                         if (i == j):
excute 13:40:44.870259 line       496                         i_j_list.append((
excute 13:40:44.873251 line       497                             i, j,
excute 13:40:44.876244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.879235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:40:44.883225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:44.886218 line       494                         if (i == j):
excute 13:40:44.890206 line       496                         i_j_list.append((
excute 13:40:44.893199 line       497                             i, j,
excute 13:40:44.896190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.900179 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1)]
excute 13:40:44.903172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:44.907162 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:44.910153 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:44.913144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:44.916137 line       494                         if (i == j):
excute 13:40:44.920126 line       496                         i_j_list.append((
excute 13:40:44.923118 line       497                             i, j,
excute 13:40:44.926110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.929102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2)]
excute 13:40:44.932095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:44.935086 line       494                         if (i == j):
excute 13:40:44.939076 line       496                         i_j_list.append((
excute 13:40:44.942068 line       497                             i, j,
excute 13:40:44.945073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.948051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0)]
excute 13:40:44.951043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:44.954037 line       494                         if (i == j):
excute 13:40:44.958025 line       496                         i_j_list.append((
excute 13:40:44.962015 line       497                             i, j,
excute 13:40:44.965006 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.967998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:40:44.970991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:44.974014 line       494                         if (i == j):
excute 13:40:44.978005 line       496                         i_j_list.append((
excute 13:40:44.980995 line       497                             i, j,
excute 13:40:44.983986 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:44.986973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:40:44.989939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:44.992932 line       494                         if (i == j):
excute 13:40:44.996929 line       496                         i_j_list.append((
excute 13:40:45.000909 line       497                             i, j,
excute 13:40:45.003902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.006894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:40:45.010914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:45.013909 line       494                         if (i == j):
excute 13:40:45.017865 line       496                         i_j_list.append((
excute 13:40:45.020889 line       497                             i, j,
excute 13:40:45.023880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.026871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:40:45.029863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:45.033855 line       494                         if (i == j):
excute 13:40:45.037813 line       495                             continue
excute 13:40:45.040805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:45.043796 line       494                         if (i == j):
excute 13:40:45.047784 line       496                         i_j_list.append((
excute 13:40:45.050807 line       497                             i, j,
excute 13:40:45.053799 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.056791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:40:45.060750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:45.067065 line       494                         if (i == j):
excute 13:40:45.071084 line       496                         i_j_list.append((
excute 13:40:45.074075 line       497                             i, j,
excute 13:40:45.077075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.080066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:40:45.083056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:45.087015 line       494                         if (i == j):
excute 13:40:45.090037 line       496                         i_j_list.append((
excute 13:40:45.093032 line       497                             i, j,
excute 13:40:45.096024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.099980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1)]
excute 13:40:45.103003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:45.105995 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:45.108988 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:45.112960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:45.115968 line       494                         if (i == j):
excute 13:40:45.118960 line       496                         i_j_list.append((
excute 13:40:45.122919 line       497                             i, j,
excute 13:40:45.125911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.128904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2)]
excute 13:40:45.131909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:45.135883 line       494                         if (i == j):
excute 13:40:45.138877 line       496                         i_j_list.append((
excute 13:40:45.141898 line       497                             i, j,
excute 13:40:45.144890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.147882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0)]
excute 13:40:45.150875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:45.154834 line       494                         if (i == j):
excute 13:40:45.158823 line       496                         i_j_list.append((
excute 13:40:45.161846 line       497                             i, j,
excute 13:40:45.165803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.168797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:40:45.171789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:45.175778 line       494                         if (i == j):
excute 13:40:45.179767 line       496                         i_j_list.append((
excute 13:40:45.184753 line       497                             i, j,
excute 13:40:45.189739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.192733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:40:45.195723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:45.199714 line       494                         if (i == j):
excute 13:40:45.203704 line       496                         i_j_list.append((
excute 13:40:45.207693 line       497                             i, j,
excute 13:40:45.210685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.214674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:45.217667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:45.221654 line       494                         if (i == j):
excute 13:40:45.225646 line       496                         i_j_list.append((
excute 13:40:45.228635 line       497                             i, j,
excute 13:40:45.230632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.233623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:45.237613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:45.240605 line       494                         if (i == j):
excute 13:40:45.244594 line       496                         i_j_list.append((
excute 13:40:45.248584 line       497                             i, j,
excute 13:40:45.251576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.254568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:45.257558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:45.261549 line       494                         if (i == j):
excute 13:40:45.265537 line       495                             continue
excute 13:40:45.270526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:45.273516 line       494                         if (i == j):
excute 13:40:45.277505 line       496                         i_j_list.append((
excute 13:40:45.280496 line       497                             i, j,
excute 13:40:45.287478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.290469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:40:45.296453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:45.300445 line       494                         if (i == j):
excute 13:40:45.304451 line       496                         i_j_list.append((
excute 13:40:45.307426 line       497                             i, j,
excute 13:40:45.310418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.313410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1)]
excute 13:40:45.317399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:45.320392 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:45.324381 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:45.331362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:45.337346 line       494                         if (i == j):
excute 13:40:45.341335 line       496                         i_j_list.append((
excute 13:40:45.344326 line       497                             i, j,
excute 13:40:45.347318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.350310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2)]
excute 13:40:45.354301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:45.360409 line       494                         if (i == j):
excute 13:40:45.364401 line       496                         i_j_list.append((
excute 13:40:45.367394 line       497                             i, j,
excute 13:40:45.372381 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.375373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0)]
excute 13:40:45.379361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:45.382353 line       494                         if (i == j):
excute 13:40:45.386343 line       496                         i_j_list.append((
excute 13:40:45.389334 line       497                             i, j,
excute 13:40:45.392328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.395318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:40:45.398311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:45.402302 line       494                         if (i == j):
excute 13:40:45.406292 line       496                         i_j_list.append((
excute 13:40:45.409281 line       497                             i, j,
excute 13:40:45.412273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.415265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:40:45.418257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:45.422248 line       494                         if (i == j):
excute 13:40:45.425239 line       496                         i_j_list.append((
excute 13:40:45.428230 line       497                             i, j,
excute 13:40:45.431222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.434217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:40:45.437206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:45.440199 line       494                         if (i == j):
excute 13:40:45.443190 line       496                         i_j_list.append((
excute 13:40:45.446183 line       497                             i, j,
excute 13:40:45.449174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.452166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:40:45.455159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:45.459148 line       494                         if (i == j):
excute 13:40:45.463137 line       496                         i_j_list.append((
excute 13:40:45.467128 line       497                             i, j,
excute 13:40:45.470119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.474109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:40:45.477100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:45.481091 line       494                         if (i == j):
excute 13:40:45.484082 line       496                         i_j_list.append((
excute 13:40:45.487073 line       497                             i, j,
excute 13:40:45.490065 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.493057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:40:45.496049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:45.500040 line       494                         if (i == j):
excute 13:40:45.503031 line       495                             continue
excute 13:40:45.506023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:45.510012 line       494                         if (i == j):
excute 13:40:45.514001 line       496                         i_j_list.append((
excute 13:40:45.516993 line       497                             i, j,
excute 13:40:45.520017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.523012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1)]
excute 13:40:45.526981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:45.529990 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:45.532982 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:45.536942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:45.539966 line       494                         if (i == j):
excute 13:40:45.543923 line       496                         i_j_list.append((
excute 13:40:45.546945 line       497                             i, j,
excute 13:40:45.549937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.552929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2)]
excute 13:40:45.555923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:45.559912 line       494                         if (i == j):
excute 13:40:45.562870 line       496                         i_j_list.append((
excute 13:40:45.565863 line       497                             i, j,
excute 13:40:45.568855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.571847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0)]
excute 13:40:45.575838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:45.579829 line       494                         if (i == j):
excute 13:40:45.583815 line       496                         i_j_list.append((
excute 13:40:45.586839 line       497                             i, j,
excute 13:40:45.589801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.592792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:40:45.595784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:45.603552 line       494                         if (i == j):
excute 13:40:45.606533 line       496                         i_j_list.append((
excute 13:40:45.609525 line       497                             i, j,
excute 13:40:45.612516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.615508 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:40:45.618500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:45.621493 line       494                         if (i == j):
excute 13:40:45.625482 line       496                         i_j_list.append((
excute 13:40:45.628474 line       497                             i, j,
excute 13:40:45.631466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.634458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:45.637453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:45.641442 line       494                         if (i == j):
excute 13:40:45.644434 line       496                         i_j_list.append((
excute 13:40:45.648423 line       497                             i, j,
excute 13:40:45.652412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.655404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:45.659393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:45.662386 line       494                         if (i == j):
excute 13:40:45.666376 line       496                         i_j_list.append((
excute 13:40:45.669368 line       497                             i, j,
excute 13:40:45.672360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.675350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:40:45.680336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:45.683329 line       494                         if (i == j):
excute 13:40:45.688314 line       496                         i_j_list.append((
excute 13:40:45.692305 line       497                             i, j,
excute 13:40:45.695296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.698293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:40:45.701280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:45.704282 line       494                         if (i == j):
excute 13:40:45.708275 line       496                         i_j_list.append((
excute 13:40:45.711261 line       497                             i, j,
excute 13:40:45.715244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:45.719231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 2), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 2), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 2, 2), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 4, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 2), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 2), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 2), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:40:45.722225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:45.726216 line       494                         if (i == j):
excute 13:40:45.730204 line       495                             continue
excute 13:40:45.733197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:45.736189 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:45.739181 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (3, 9, 1, 1), (4, 9, 1, 1), (8, 9, 1, 1), (3, 0, 1, 2), (4, 0, 1, 2), (8, 0, 1, 2), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (0, 9, 2, 1), (2, 9, 2, 1), (5, 9, 2, 1), (7, 9, 2, 1), (2, 0, 2, 2), (5, 0, 2, 2), (7, 0, 2, 2), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (1, 9, 3, 1), (1, 0, 3, 2), (9, 0, 3, 2), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (6, 0, 4, 2)]
excute 13:40:45.742173 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:45.745165 line       505                     if (self.RELOCATE):
excute 13:40:45.749153 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:45.752146 line       505                     if (self.RELOCATE):
excute 13:40:45.756145 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:45.760124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:45.763115 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:45.766108 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:45.771094 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.774086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:45.778076 line       556                     i = i_j[0]
excute 13:40:45.783064 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:45.786054 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.789046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:45.792038 line       556                     i = i_j[0]
excute 13:40:45.796028 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:45.799019 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.802011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:45.805003 line       556                     i = i_j[0]
excute 13:40:45.808993 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:45.811984 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.814976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:45.817968 line       556                     i = i_j[0]
excute 13:40:45.821958 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:45.824950 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.827942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:45.830934 line       556                     i = i_j[0]
excute 13:40:45.834924 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:45.837914 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.841904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:45.843899 line       556                     i = i_j[0]
excute 13:40:45.847888 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:45.850880 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.853871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:40:45.857861 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:45.860854 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:45.864851 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.867835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:40:45.870826 line       556                     i = i_j[0]
excute 13:40:45.873818 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:45.876810 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.880800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:40:45.884794 line       556                     i = i_j[0]
excute 13:40:45.887784 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:45.891772 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.894764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:45.897756 line       556                     i = i_j[0]
excute 13:40:45.902744 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:45.905735 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.908736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:40:45.911719 line       556                     i = i_j[0]
excute 13:40:45.915707 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:45.919695 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.922687 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:40:45.925679 line       556                     i = i_j[0]
excute 13:40:45.934729 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:45.937739 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.941698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:40:45.944721 line       556                     i = i_j[0]
excute 13:40:45.948679 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:45.951670 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.954669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:40:45.957687 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:45.963639 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:45.968626 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.972615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:40:45.975609 line       556                     i = i_j[0]
excute 13:40:45.978599 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:45.981621 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.985581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:40:45.989569 line       556                     i = i_j[0]
excute 13:40:45.993554 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:45.996549 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:45.999542 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:40:46.003532 line       556                     i = i_j[0]
excute 13:40:46.006523 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:46.010514 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.013504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:40:46.017494 line       556                     i = i_j[0]
excute 13:40:46.020485 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:46.023478 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.027467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:40:46.030459 line       556                     i = i_j[0]
excute 13:40:46.034453 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:46.037440 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.040433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:40:46.043425 line       556                     i = i_j[0]
excute 13:40:46.047414 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:46.050406 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.053398 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 1)
excute 13:40:46.057388 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:46.060380 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:46.064370 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.067361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:40:46.070352 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:46.074344 line       557                     j = i_j[1]
excute 13:40:46.077334 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.080326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 1)
excute 13:40:46.083318 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:46.087345 line       557                     j = i_j[1]
excute 13:40:46.091296 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.094288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 2)
excute 13:40:46.097280 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:46.101270 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:46.104262 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.108252 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 28
excute 13:40:46.110246 line       560                         if (t_tmp > self.TIME):
excute 13:40:46.114235 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:46.117228 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:46.120252 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 6
excute 13:40:46.123242 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:46.127202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 2)
excute 13:40:46.130227 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:46.133216 line       557                     j = i_j[1]
excute 13:40:46.137175 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.140166 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 2)
excute 13:40:46.143158 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:46.146149 line       557                     j = i_j[1]
excute 13:40:46.150140 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.153132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:46.156123 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:46.160114 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:46.163105 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.167094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:46.170086 line       556                     i = i_j[0]
excute 13:40:46.174076 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:46.177067 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.180059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:46.187054 line       556                     i = i_j[0]
excute 13:40:46.191032 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:46.196018 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.200007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:46.202999 line       556                     i = i_j[0]
excute 13:40:46.205991 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:46.209979 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.213972 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:46.216993 line       556                     i = i_j[0]
excute 13:40:46.220951 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:46.223941 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.226934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:46.229926 line       556                     i = i_j[0]
excute 13:40:46.233915 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:46.236911 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.239899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:46.242924 line       556                     i = i_j[0]
excute 13:40:46.246881 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:46.249873 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.252890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:46.255856 line       556                     i = i_j[0]
excute 13:40:46.259847 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:46.265833 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.271814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:46.276801 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:46.282787 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:46.290764 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.300737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:46.304727 line       556                     i = i_j[0]
excute 13:40:46.308717 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:46.314701 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.319688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:46.323689 line       556                     i = i_j[0]
excute 13:40:46.333650 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:46.343622 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.350605 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:46.359580 line       556                     i = i_j[0]
excute 13:40:46.364567 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:46.371550 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.375539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:46.379526 line       556                     i = i_j[0]
excute 13:40:46.387508 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:46.392492 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.403463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:46.411443 line       556                     i = i_j[0]
excute 13:40:46.419431 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:46.427399 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.435377 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:40:46.442358 line       556                     i = i_j[0]
excute 13:40:46.447346 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:46.454328 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.460310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:40:46.468290 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:46.473277 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:46.479260 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.487238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:40:46.492225 line       556                     i = i_j[0]
excute 13:40:46.497211 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:46.504193 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.510177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:40:46.514166 line       556                     i = i_j[0]
excute 13:40:46.519153 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:46.525138 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.530124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:40:46.535110 line       556                     i = i_j[0]
excute 13:40:46.540098 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:46.545083 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.551068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:40:46.555058 line       556                     i = i_j[0]
excute 13:40:46.563035 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:46.568022 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.575007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:40:46.579990 line       556                     i = i_j[0]
excute 13:40:46.585975 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:46.591958 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.596945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:40:46.604925 line       556                     i = i_j[0]
excute 13:40:46.612904 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:46.616892 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.622876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:46.627863 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:46.635841 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:46.643820 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.649803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:46.655789 line       556                     i = i_j[0]
excute 13:40:46.663766 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:46.669750 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.675736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:46.681719 line       556                     i = i_j[0]
excute 13:40:46.687703 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:46.692690 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.698674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:46.703660 line       556                     i = i_j[0]
excute 13:40:46.711640 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:46.716626 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.721612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:46.726599 line       556                     i = i_j[0]
excute 13:40:46.731590 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:46.734577 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.738568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:46.741558 line       556                     i = i_j[0]
excute 13:40:46.745548 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:46.749538 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.752530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:46.756519 line       556                     i = i_j[0]
excute 13:40:46.760509 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:46.763501 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.767492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 1)
excute 13:40:46.770482 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:46.774472 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:46.778461 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.782451 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 22
excute 13:40:46.785442 line       560                         if (t_tmp > self.TIME):
excute 13:40:46.788434 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:46.791427 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 12
excute 13:40:46.794417 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:46.798408 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:46.802395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:40:46.806385 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:46.813367 line       557                     j = i_j[1]
excute 13:40:46.816358 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.820347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 1)
excute 13:40:46.823339 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:46.827329 line       557                     j = i_j[1]
excute 13:40:46.831320 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.835310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 1)
excute 13:40:46.838301 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:46.842291 line       557                     j = i_j[1]
excute 13:40:46.846281 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.849270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 2)
excute 13:40:46.852262 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:46.856254 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:46.860243 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.864232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 2)
excute 13:40:46.867224 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:46.871214 line       557                     j = i_j[1]
excute 13:40:46.875203 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.878195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 2)
excute 13:40:46.881187 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:46.884179 line       557                     j = i_j[1]
excute 13:40:46.888168 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.892157 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:40:46.895149 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:46.899139 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:46.904124 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.907124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:40:46.910109 line       556                     i = i_j[0]
excute 13:40:46.915097 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:46.918087 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.922077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:40:46.925069 line       556                     i = i_j[0]
excute 13:40:46.929058 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:46.932050 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.935042 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:40:46.938033 line       556                     i = i_j[0]
excute 13:40:46.942024 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:46.945016 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.948007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:40:46.950999 line       556                     i = i_j[0]
excute 13:40:46.954989 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:46.957979 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.961969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:40:46.964960 line       556                     i = i_j[0]
excute 13:40:46.967953 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:46.970945 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.974934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:40:46.977926 line       556                     i = i_j[0]
excute 13:40:46.980918 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:46.983910 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:46.987900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:40:46.989894 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:46.993884 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:46.996875 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.000865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:40:47.003857 line       556                     i = i_j[0]
excute 13:40:47.008846 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:47.011837 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.015826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:47.020811 line       556                     i = i_j[0]
excute 13:40:47.027794 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:47.033778 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.037766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:47.040758 line       556                     i = i_j[0]
excute 13:40:47.044748 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:47.047741 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.050731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:47.053755 line       556                     i = i_j[0]
excute 13:40:47.057713 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:47.060705 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.063697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:40:47.066689 line       556                     i = i_j[0]
excute 13:40:47.070678 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:47.073670 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.077660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:40:47.080652 line       556                     i = i_j[0]
excute 13:40:47.083643 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:47.087633 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.090625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:40:47.093617 line       556                     i = i_j[0]
excute 13:40:47.097606 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:47.100598 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.103590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 1)
excute 13:40:47.106582 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:47.110573 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:47.114561 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.119549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 2)
excute 13:40:47.123549 line       556                     i = i_j[0]
excute 13:40:47.126530 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:47.130519 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.134508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 2)
excute 13:40:47.137501 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:47.140492 line       557                     j = i_j[1]
excute 13:40:47.144482 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.148470 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:40:47.152461 line       560                         if (t_tmp > self.TIME):
excute 13:40:47.155452 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:47.158444 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 13
excute 13:40:47.162435 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:47.165427 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 7
excute 13:40:47.169415 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:47.172441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:40:47.175430 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:47.179395 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:47.183378 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.189364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:40:47.192384 line       556                     i = i_j[0]
excute 13:40:47.195376 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:47.198370 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.202328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:40:47.206316 line       556                     i = i_j[0]
excute 13:40:47.209309 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:47.213299 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.217286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:40:47.220278 line       556                     i = i_j[0]
excute 13:40:47.223271 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:47.227261 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.231251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:40:47.234241 line       556                     i = i_j[0]
excute 13:40:47.238230 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:47.241222 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.244226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:40:47.247206 line       556                     i = i_j[0]
excute 13:40:47.250198 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:47.253190 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.257181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:40:47.261170 line       556                     i = i_j[0]
excute 13:40:47.264161 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:47.267153 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.271142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 1)
excute 13:40:47.274134 line       556                     i = i_j[0]
excute 13:40:47.278124 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:47.281128 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.284108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 2)
excute 13:40:47.287099 line       556                     i = i_j[0]
excute 13:40:47.302239 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:47.305262 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:47.309219 line       555                 for i_j in i_j_list:
excute 13:40:47.312242 line       581             self.write_matrix(
excute 13:40:47.315234 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:47.318228 line       583                 result_file_path,
excute 13:40:47.322209 line       584                 mode='a'
excute 13:40:47.329166 line       488         for t in time_steps:
excute Modified var:.. t = 16
excute 13:40:47.337147 line       489             if (t != self.TIME + 1):
excute 13:40:47.347117 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:47.351108 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:47.359086 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:47.362079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:47.367065 line       494                         if (i == j):
excute 13:40:47.372051 line       495                             continue
excute 13:40:47.375044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:47.379065 line       494                         if (i == j):
excute 13:40:47.383024 line       496                         i_j_list.append((
excute 13:40:47.387011 line       497                             i, j,
excute 13:40:47.390003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.392996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:47.395988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:47.399983 line       494                         if (i == j):
excute 13:40:47.404962 line       496                         i_j_list.append((
excute 13:40:47.407954 line       497                             i, j,
excute 13:40:47.410948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.413938 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1)]
excute 13:40:47.422917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:47.429896 line       494                         if (i == j):
excute 13:40:47.439870 line       496                         i_j_list.append((
excute 13:40:47.447853 line       497                             i, j,
excute 13:40:47.455841 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.460814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0)]
excute 13:40:47.467797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:47.472782 line       494                         if (i == j):
excute 13:40:47.477768 line       496                         i_j_list.append((
excute 13:40:47.481760 line       497                             i, j,
excute 13:40:47.485747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.488740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:47.491730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:47.495723 line       494                         if (i == j):
excute 13:40:47.499714 line       496                         i_j_list.append((
excute 13:40:47.505700 line       497                             i, j,
excute 13:40:47.508686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.513673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:47.516664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:47.521651 line       494                         if (i == j):
excute 13:40:47.525641 line       496                         i_j_list.append((
excute 13:40:47.530627 line       497                             i, j,
excute 13:40:47.535614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.542597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:47.548607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:47.556557 line       494                         if (i == j):
excute 13:40:47.561544 line       496                         i_j_list.append((
excute 13:40:47.564538 line       497                             i, j,
excute 13:40:47.567528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.572515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1)]
excute 13:40:47.576505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:47.580493 line       494                         if (i == j):
excute 13:40:47.586481 line       496                         i_j_list.append((
excute 13:40:47.589469 line       497                             i, j,
excute 13:40:47.594456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.598445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1)]
excute 13:40:47.601437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:47.607421 line       494                         if (i == j):
excute 13:40:47.612410 line       496                         i_j_list.append((
excute 13:40:47.616398 line       497                             i, j,
excute 13:40:47.619391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.623379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0)]
excute 13:40:47.626371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:47.630360 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:47.636350 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:47.647316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:47.656299 line       494                         if (i == j):
excute 13:40:47.663272 line       496                         i_j_list.append((
excute 13:40:47.668259 line       497                             i, j,
excute 13:40:47.674244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.678233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0)]
excute 13:40:47.682222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:47.686211 line       494                         if (i == j):
excute 13:40:47.689205 line       495                             continue
excute 13:40:47.693195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:47.696186 line       494                         if (i == j):
excute 13:40:47.702170 line       496                         i_j_list.append((
excute 13:40:47.705160 line       497                             i, j,
excute 13:40:47.708153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.712141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1)]
excute 13:40:47.717128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:47.721120 line       494                         if (i == j):
excute 13:40:47.724109 line       496                         i_j_list.append((
excute 13:40:47.728100 line       497                             i, j,
excute 13:40:47.733086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.736077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0)]
excute 13:40:47.740067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:47.746052 line       494                         if (i == j):
excute 13:40:47.751038 line       496                         i_j_list.append((
excute 13:40:47.753032 line       497                             i, j,
excute 13:40:47.758019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.761012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:40:47.767992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:47.774982 line       494                         if (i == j):
excute 13:40:47.779961 line       496                         i_j_list.append((
excute 13:40:47.782953 line       497                             i, j,
excute 13:40:47.785943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.788936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:40:47.791927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:47.795917 line       494                         if (i == j):
excute 13:40:47.798909 line       496                         i_j_list.append((
excute 13:40:47.801901 line       497                             i, j,
excute 13:40:47.804892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.807884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:40:47.810877 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:47.813869 line       494                         if (i == j):
excute 13:40:47.817858 line       496                         i_j_list.append((
excute 13:40:47.819853 line       497                             i, j,
excute 13:40:47.822845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.825837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1)]
excute 13:40:47.828829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:47.832818 line       494                         if (i == j):
excute 13:40:47.835826 line       496                         i_j_list.append((
excute 13:40:47.839800 line       497                             i, j,
excute 13:40:47.841794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.844786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1)]
excute 13:40:47.847778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:47.852767 line       494                         if (i == j):
excute 13:40:47.856756 line       496                         i_j_list.append((
excute 13:40:47.859747 line       497                             i, j,
excute 13:40:47.862739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.865730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0)]
excute 13:40:47.867725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:47.871715 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:47.874706 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:47.877699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:47.880690 line       494                         if (i == j):
excute 13:40:47.884688 line       496                         i_j_list.append((
excute 13:40:47.887672 line       497                             i, j,
excute 13:40:47.889697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.892692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:40:47.895684 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:47.899672 line       494                         if (i == j):
excute 13:40:47.903630 line       496                         i_j_list.append((
excute 13:40:47.906653 line       497                             i, j,
excute 13:40:47.909644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.912605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:40:47.915608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:47.919587 line       494                         if (i == j):
excute 13:40:47.922610 line       495                             continue
excute 13:40:47.925602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:47.928593 line       494                         if (i == j):
excute 13:40:47.931586 line       496                         i_j_list.append((
excute 13:40:47.934578 line       497                             i, j,
excute 13:40:47.937570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.940564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:47.943556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:47.947545 line       494                         if (i == j):
excute 13:40:47.950524 line       496                         i_j_list.append((
excute 13:40:47.954495 line       497                             i, j,
excute 13:40:47.957516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.960509 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:47.963501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:47.967460 line       494                         if (i == j):
excute 13:40:47.970482 line       496                         i_j_list.append((
excute 13:40:47.973474 line       497                             i, j,
excute 13:40:47.976466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.979459 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:47.982449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:47.986441 line       494                         if (i == j):
excute 13:40:47.989401 line       496                         i_j_list.append((
excute 13:40:47.992423 line       497                             i, j,
excute 13:40:47.995415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:47.998407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:48.001400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:48.004361 line       494                         if (i == j):
excute 13:40:48.008349 line       496                         i_j_list.append((
excute 13:40:48.011341 line       497                             i, j,
excute 13:40:48.014333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.017337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1)]
excute 13:40:48.020320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:48.023309 line       494                         if (i == j):
excute 13:40:48.027299 line       496                         i_j_list.append((
excute 13:40:48.030290 line       497                             i, j,
excute 13:40:48.033282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.036274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1)]
excute 13:40:48.039300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:48.043267 line       494                         if (i == j):
excute 13:40:48.046258 line       496                         i_j_list.append((
excute 13:40:48.049271 line       497                             i, j,
excute 13:40:48.052265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.056222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:40:48.060244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:48.063237 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:48.066226 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:48.069218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:48.072210 line       494                         if (i == j):
excute 13:40:48.076170 line       496                         i_j_list.append((
excute 13:40:48.079194 line       497                             i, j,
excute 13:40:48.082183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.085176 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:40:48.088168 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:48.091159 line       494                         if (i == j):
excute 13:40:48.095118 line       496                         i_j_list.append((
excute 13:40:48.098141 line       497                             i, j,
excute 13:40:48.101134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.104097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:40:48.107085 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:48.110079 line       494                         if (i == j):
excute 13:40:48.113101 line       496                         i_j_list.append((
excute 13:40:48.116095 line       497                             i, j,
excute 13:40:48.119087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.122077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1)]
excute 13:40:48.125068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:48.129029 line       494                         if (i == j):
excute 13:40:48.132052 line       495                             continue
excute 13:40:48.135044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:48.138035 line       494                         if (i == j):
excute 13:40:48.141993 line       496                         i_j_list.append((
excute 13:40:48.145016 line       497                             i, j,
excute 13:40:48.148010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.151002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0)]
excute 13:40:48.153992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:48.158979 line       494                         if (i == j):
excute 13:40:48.161939 line       496                         i_j_list.append((
excute 13:40:48.164930 line       497                             i, j,
excute 13:40:48.168922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.171911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:48.174904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:48.177895 line       494                         if (i == j):
excute 13:40:48.180919 line       496                         i_j_list.append((
excute 13:40:48.183911 line       497                             i, j,
excute 13:40:48.186903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.189895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:48.192887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:48.196878 line       494                         if (i == j):
excute 13:40:48.201865 line       496                         i_j_list.append((
excute 13:40:48.206818 line       497                             i, j,
excute 13:40:48.209810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.212802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1)]
excute 13:40:48.215794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:48.219789 line       494                         if (i == j):
excute 13:40:48.222775 line       496                         i_j_list.append((
excute 13:40:48.225768 line       497                             i, j,
excute 13:40:48.228760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.231752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1)]
excute 13:40:48.234744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:48.238734 line       494                         if (i == j):
excute 13:40:48.241725 line       496                         i_j_list.append((
excute 13:40:48.244717 line       497                             i, j,
excute 13:40:48.247709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.250701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0)]
excute 13:40:48.253693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:48.256685 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:48.260676 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:48.264664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:48.267689 line       494                         if (i == j):
excute 13:40:48.270682 line       496                         i_j_list.append((
excute 13:40:48.273671 line       497                             i, j,
excute 13:40:48.277629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.280621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0)]
excute 13:40:48.283615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:48.287603 line       494                         if (i == j):
excute 13:40:48.290595 line       496                         i_j_list.append((
excute 13:40:48.293618 line       497                             i, j,
excute 13:40:48.296610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.299604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:40:48.302597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:48.306553 line       494                         if (i == j):
excute 13:40:48.309576 line       496                         i_j_list.append((
excute 13:40:48.312567 line       497                             i, j,
excute 13:40:48.315561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.318553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1)]
excute 13:40:48.321543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:48.325502 line       494                         if (i == j):
excute 13:40:48.333489 line       496                         i_j_list.append((
excute 13:40:48.338470 line       497                             i, j,
excute 13:40:48.341459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.345448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0)]
excute 13:40:48.348440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:48.351432 line       494                         if (i == j):
excute 13:40:48.356419 line       495                             continue
excute 13:40:48.359443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:48.365397 line       494                         if (i == j):
excute 13:40:48.369384 line       496                         i_j_list.append((
excute 13:40:48.373373 line       497                             i, j,
excute 13:40:48.376365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.379359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:40:48.382349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:48.386339 line       494                         if (i == j):
excute 13:40:48.389330 line       496                         i_j_list.append((
excute 13:40:48.392322 line       497                             i, j,
excute 13:40:48.395315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.399313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:40:48.402296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:48.405288 line       494                         if (i == j):
excute 13:40:48.409277 line       496                         i_j_list.append((
excute 13:40:48.411272 line       497                             i, j,
excute 13:40:48.414264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.417256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1)]
excute 13:40:48.420248 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:48.424238 line       494                         if (i == j):
excute 13:40:48.427229 line       496                         i_j_list.append((
excute 13:40:48.430221 line       497                             i, j,
excute 13:40:48.433213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.436205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1)]
excute 13:40:48.439197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:48.442191 line       494                         if (i == j):
excute 13:40:48.446179 line       496                         i_j_list.append((
excute 13:40:48.449201 line       497                             i, j,
excute 13:40:48.452195 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.456185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0)]
excute 13:40:48.459178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:48.462170 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:48.466126 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:48.470123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:48.473106 line       494                         if (i == j):
excute 13:40:48.476099 line       496                         i_j_list.append((
excute 13:40:48.479090 line       497                             i, j,
excute 13:40:48.482082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.485074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0)]
excute 13:40:48.488066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:48.491058 line       494                         if (i == j):
excute 13:40:48.495057 line       496                         i_j_list.append((
excute 13:40:48.498052 line       497                             i, j,
excute 13:40:48.500035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.503027 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:40:48.507018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:48.510009 line       494                         if (i == j):
excute 13:40:48.513000 line       496                         i_j_list.append((
excute 13:40:48.516989 line       497                             i, j,
excute 13:40:48.519981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.522974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1)]
excute 13:40:48.527960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:48.531950 line       494                         if (i == j):
excute 13:40:48.535939 line       496                         i_j_list.append((
excute 13:40:48.541923 line       497                             i, j,
excute 13:40:48.544916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.548906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0)]
excute 13:40:48.551895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:48.555886 line       494                         if (i == j):
excute 13:40:48.558920 line       496                         i_j_list.append((
excute 13:40:48.561901 line       497                             i, j,
excute 13:40:48.564893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.569849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:40:48.573837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:48.576836 line       494                         if (i == j):
excute 13:40:48.580819 line       495                             continue
excute 13:40:48.583814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:48.586805 line       494                         if (i == j):
excute 13:40:48.589795 line       496                         i_j_list.append((
excute 13:40:48.592787 line       497                             i, j,
excute 13:40:48.595779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.598771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:40:48.601762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:48.605752 line       494                         if (i == j):
excute 13:40:48.608744 line       496                         i_j_list.append((
excute 13:40:48.611736 line       497                             i, j,
excute 13:40:48.614727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.617719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1)]
excute 13:40:48.620713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:48.623703 line       494                         if (i == j):
excute 13:40:48.627695 line       496                         i_j_list.append((
excute 13:40:48.630685 line       497                             i, j,
excute 13:40:48.633678 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.639661 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1)]
excute 13:40:48.643651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:48.646642 line       494                         if (i == j):
excute 13:40:48.650633 line       496                         i_j_list.append((
excute 13:40:48.654622 line       497                             i, j,
excute 13:40:48.657613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.660605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0)]
excute 13:40:48.663598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:48.667589 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:48.670580 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:48.674568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:48.677560 line       494                         if (i == j):
excute 13:40:48.681549 line       496                         i_j_list.append((
excute 13:40:48.684541 line       497                             i, j,
excute 13:40:48.686536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.689528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0)]
excute 13:40:48.693518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:48.696509 line       494                         if (i == j):
excute 13:40:48.700500 line       496                         i_j_list.append((
excute 13:40:48.705485 line       497                             i, j,
excute 13:40:48.708478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.711469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:40:48.715466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:48.718450 line       494                         if (i == j):
excute 13:40:48.722441 line       496                         i_j_list.append((
excute 13:40:48.725432 line       497                             i, j,
excute 13:40:48.727427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.731417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1)]
excute 13:40:48.734410 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:48.738398 line       494                         if (i == j):
excute 13:40:48.741389 line       496                         i_j_list.append((
excute 13:40:48.744381 line       497                             i, j,
excute 13:40:48.747373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.750378 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0)]
excute 13:40:48.753357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:48.756349 line       494                         if (i == j):
excute 13:40:48.760339 line       496                         i_j_list.append((
excute 13:40:48.763331 line       497                             i, j,
excute 13:40:48.766323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.769315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:40:48.772307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:48.776296 line       494                         if (i == j):
excute 13:40:48.780285 line       496                         i_j_list.append((
excute 13:40:48.783277 line       497                             i, j,
excute 13:40:48.786269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.789261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:40:48.792253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:48.796244 line       494                         if (i == j):
excute 13:40:48.799237 line       495                             continue
excute 13:40:48.802227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:48.805219 line       494                         if (i == j):
excute 13:40:48.808211 line       496                         i_j_list.append((
excute 13:40:48.811202 line       497                             i, j,
excute 13:40:48.814194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.817186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1)]
excute 13:40:48.820179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:48.824169 line       494                         if (i == j):
excute 13:40:48.827162 line       496                         i_j_list.append((
excute 13:40:48.830152 line       497                             i, j,
excute 13:40:48.833144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.836136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1)]
excute 13:40:48.840150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:48.843149 line       494                         if (i == j):
excute 13:40:48.847108 line       496                         i_j_list.append((
excute 13:40:48.849133 line       497                             i, j,
excute 13:40:48.852125 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.856115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0)]
excute 13:40:48.859107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:48.862069 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:48.865059 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:48.869048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:48.872040 line       494                         if (i == j):
excute 13:40:48.875032 line       496                         i_j_list.append((
excute 13:40:48.879023 line       497                             i, j,
excute 13:40:48.882047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.885039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0)]
excute 13:40:48.888029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:48.891988 line       494                         if (i == j):
excute 13:40:48.894980 line       496                         i_j_list.append((
excute 13:40:48.898005 line       497                             i, j,
excute 13:40:48.900997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.903986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:40:48.906978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:48.910968 line       494                         if (i == j):
excute 13:40:48.913963 line       496                         i_j_list.append((
excute 13:40:48.917919 line       497                             i, j,
excute 13:40:48.920942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.923932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1)]
excute 13:40:48.926896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:48.929885 line       494                         if (i == j):
excute 13:40:48.933875 line       496                         i_j_list.append((
excute 13:40:48.936876 line       497                             i, j,
excute 13:40:48.939859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.942851 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0)]
excute 13:40:48.944845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:48.948835 line       494                         if (i == j):
excute 13:40:48.951826 line       496                         i_j_list.append((
excute 13:40:48.955816 line       497                             i, j,
excute 13:40:48.958808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.961802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:48.968784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:48.971773 line       494                         if (i == j):
excute 13:40:48.975763 line       496                         i_j_list.append((
excute 13:40:48.978755 line       497                             i, j,
excute 13:40:48.982777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:48.985737 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:48.988762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:48.992719 line       494                         if (i == j):
excute 13:40:48.996708 line       496                         i_j_list.append((
excute 13:40:48.999699 line       497                             i, j,
excute 13:40:49.002724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.005715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:49.008676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:49.012666 line       494                         if (i == j):
excute 13:40:49.016654 line       495                             continue
excute 13:40:49.019645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:49.022637 line       494                         if (i == j):
excute 13:40:49.026626 line       496                         i_j_list.append((
excute 13:40:49.029619 line       497                             i, j,
excute 13:40:49.032611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.035603 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1)]
excute 13:40:49.038627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:49.042585 line       494                         if (i == j):
excute 13:40:49.045609 line       496                         i_j_list.append((
excute 13:40:49.048600 line       497                             i, j,
excute 13:40:49.051592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.055564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0)]
excute 13:40:49.058574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:49.061566 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:49.064558 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:49.068516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:49.071508 line       494                         if (i == j):
excute 13:40:49.074500 line       496                         i_j_list.append((
excute 13:40:49.077522 line       497                             i, j,
excute 13:40:49.080514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.085469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0)]
excute 13:40:49.088462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:49.092452 line       494                         if (i == j):
excute 13:40:49.095442 line       496                         i_j_list.append((
excute 13:40:49.098435 line       497                             i, j,
excute 13:40:49.101427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.104419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:40:49.107411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:49.110402 line       494                         if (i == j):
excute 13:40:49.114393 line       496                         i_j_list.append((
excute 13:40:49.117384 line       497                             i, j,
excute 13:40:49.120376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.123400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1)]
excute 13:40:49.126392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:49.129386 line       494                         if (i == j):
excute 13:40:49.133344 line       496                         i_j_list.append((
excute 13:40:49.136365 line       497                             i, j,
excute 13:40:49.139357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.142350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0)]
excute 13:40:49.145343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:49.149318 line       494                         if (i == j):
excute 13:40:49.152325 line       496                         i_j_list.append((
excute 13:40:49.156281 line       497                             i, j,
excute 13:40:49.159272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.162264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:40:49.165258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:49.169247 line       494                         if (i == j):
excute 13:40:49.172239 line       496                         i_j_list.append((
excute 13:40:49.175261 line       497                             i, j,
excute 13:40:49.178253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.181245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:40:49.185204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:49.189193 line       494                         if (i == j):
excute 13:40:49.193182 line       496                         i_j_list.append((
excute 13:40:49.196185 line       497                             i, j,
excute 13:40:49.199198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.205155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:40:49.209140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:49.213129 line       494                         if (i == j):
excute 13:40:49.217144 line       496                         i_j_list.append((
excute 13:40:49.220144 line       497                             i, j,
excute 13:40:49.223133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.226125 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1)]
excute 13:40:49.229117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:49.232109 line       494                         if (i == j):
excute 13:40:49.236069 line       495                             continue
excute 13:40:49.239093 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:49.242082 line       494                         if (i == j):
excute 13:40:49.245074 line       496                         i_j_list.append((
excute 13:40:49.248067 line       497                             i, j,
excute 13:40:49.251058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.255049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0)]
excute 13:40:49.258040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:49.261033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:49.264025 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:49.267983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:49.271005 line       494                         if (i == j):
excute 13:40:49.274969 line       496                         i_j_list.append((
excute 13:40:49.277988 line       497                             i, j,
excute 13:40:49.280980 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.283973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0)]
excute 13:40:49.287930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:49.291918 line       494                         if (i == j):
excute 13:40:49.294909 line       496                         i_j_list.append((
excute 13:40:49.297901 line       497                             i, j,
excute 13:40:49.300893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.303885 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:40:49.306877 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:49.309870 line       494                         if (i == j):
excute 13:40:49.313859 line       496                         i_j_list.append((
excute 13:40:49.316850 line       497                             i, j,
excute 13:40:49.319843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.322835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1)]
excute 13:40:49.325859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:49.335803 line       494                         if (i == j):
excute 13:40:49.342783 line       496                         i_j_list.append((
excute 13:40:49.345773 line       497                             i, j,
excute 13:40:49.348765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.352756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0)]
excute 13:40:49.357756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:49.360767 line       494                         if (i == j):
excute 13:40:49.364726 line       496                         i_j_list.append((
excute 13:40:49.367747 line       497                             i, j,
excute 13:40:49.370739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.374697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:49.376691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:49.380681 line       494                         if (i == j):
excute 13:40:49.384669 line       496                         i_j_list.append((
excute 13:40:49.388660 line       497                             i, j,
excute 13:40:49.392650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.395640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:49.398632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:49.402622 line       494                         if (i == j):
excute 13:40:49.405613 line       496                         i_j_list.append((
excute 13:40:49.408605 line       497                             i, j,
excute 13:40:49.411597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.414589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:40:49.417581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:49.421571 line       494                         if (i == j):
excute 13:40:49.425560 line       496                         i_j_list.append((
excute 13:40:49.429551 line       497                             i, j,
excute 13:40:49.432541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.435535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 1)]
excute 13:40:49.438526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:49.442515 line       494                         if (i == j):
excute 13:40:49.446507 line       496                         i_j_list.append((
excute 13:40:49.449497 line       497                             i, j,
excute 13:40:49.452488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:49.455481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 1), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 1), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 1), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 1), (9, 8, 3, 1)]
excute 13:40:49.458472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:49.462462 line       494                         if (i == j):
excute 13:40:49.466452 line       495                             continue
excute 13:40:49.469454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:49.472436 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:49.475437 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 0, 1, 0), (3, 1, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 9, 1, 0), (3, 2, 1, 1), (3, 7, 1, 1), (3, 8, 1, 1), (4, 2, 1, 1), (4, 7, 1, 1), (4, 8, 1, 1), (8, 2, 1, 1), (8, 7, 1, 1), (0, 1, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 9, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 9, 2, 0), (0, 2, 2, 1), (0, 7, 2, 1), (0, 8, 2, 1), (2, 7, 2, 1), (2, 8, 2, 1), (5, 2, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (7, 2, 2, 1), (7, 8, 2, 1), (1, 0, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (1, 2, 3, 1), (1, 7, 3, 1), (1, 8, 3, 1), (9, 2, 3, 1), (9, 7, 3, 1), (9, 8, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 9, 4, 0), (6, 2, 4, 1), (6, 7, 4, 1), (6, 8, 4, 1)]
excute 13:40:49.478419 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:49.481443 line       505                     if (self.RELOCATE):
excute 13:40:49.485401 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:49.488427 line       505                     if (self.RELOCATE):
excute 13:40:49.492384 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:49.496386 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:49.499363 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:49.502387 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:49.506346 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.510334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:49.513325 line       556                     i = i_j[0]
excute 13:40:49.516317 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:49.519310 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.524297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:49.527291 line       556                     i = i_j[0]
excute 13:40:49.531281 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:49.534269 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.538259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:49.541250 line       556                     i = i_j[0]
excute 13:40:49.544242 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:49.547235 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.551225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:49.554217 line       556                     i = i_j[0]
excute 13:40:49.557208 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:49.560200 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.564193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:49.567181 line       556                     i = i_j[0]
excute 13:40:49.571172 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:49.574167 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.577187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:40:49.580179 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:49.584137 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:49.587132 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.591118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:40:49.594110 line       556                     i = i_j[0]
excute 13:40:49.598099 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:49.601091 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.604083 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:40:49.607075 line       556                     i = i_j[0]
excute 13:40:49.611065 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:49.615054 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.619043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:49.622035 line       556                     i = i_j[0]
excute 13:40:49.625026 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:49.628019 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.632009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:40:49.634003 line       556                     i = i_j[0]
excute 13:40:49.637993 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:49.640984 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.643976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:40:49.646969 line       556                     i = i_j[0]
excute 13:40:49.650973 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:49.654948 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.657940 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:40:49.660931 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:49.663923 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:49.667913 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.670905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:40:49.673896 line       556                     i = i_j[0]
excute 13:40:49.677886 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:49.680878 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.687859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:40:49.690852 line       556                     i = i_j[0]
excute 13:40:49.693843 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:49.696835 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.701822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:40:49.706809 line       556                     i = i_j[0]
excute 13:40:49.710798 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:49.714791 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.718783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:40:49.721770 line       556                     i = i_j[0]
excute 13:40:49.724793 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:49.727787 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.731774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:40:49.734767 line       556                     i = i_j[0]
excute 13:40:49.737758 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:49.740749 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.744708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:40:49.747731 line       556                     i = i_j[0]
excute 13:40:49.750723 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:49.753714 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.757674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 1)
excute 13:40:49.760697 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:49.763688 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:49.767649 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.770671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 1)
excute 13:40:49.774627 line       556                     i = i_j[0]
excute 13:40:49.778618 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:49.781608 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.784600 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 1)
excute 13:40:49.787592 line       556                     i = i_j[0]
excute 13:40:49.790584 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:49.793576 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.797566 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 1)
excute 13:40:49.800558 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:49.804549 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:49.808537 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.811528 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 1)
excute 13:40:49.814520 line       556                     i = i_j[0]
excute 13:40:49.818510 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:49.821534 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.824525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 1)
excute 13:40:49.827519 line       556                     i = i_j[0]
excute 13:40:49.831482 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:49.834501 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.837491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 1)
excute 13:40:49.841450 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:49.844442 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:49.847466 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.851423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 1)
excute 13:40:49.854445 line       556                     i = i_j[0]
excute 13:40:49.857406 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:49.861396 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.864388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:49.867411 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:49.870403 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:49.874362 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.877384 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:49.880376 line       556                     i = i_j[0]
excute 13:40:49.884334 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:49.887360 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.890352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:49.893341 line       556                     i = i_j[0]
excute 13:40:49.897300 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:49.900324 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.905279 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:49.908270 line       556                     i = i_j[0]
excute 13:40:49.911261 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:49.914254 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.918243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:49.921235 line       556                     i = i_j[0]
excute 13:40:49.924227 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:49.927219 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.931209 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:49.934200 line       556                     i = i_j[0]
excute 13:40:49.937193 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:49.940185 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.944174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:49.947165 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:49.950158 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:49.954153 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.957139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:49.960131 line       556                     i = i_j[0]
excute 13:40:49.964120 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:49.967112 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.971102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:49.974094 line       556                     i = i_j[0]
excute 13:40:49.977086 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:49.980077 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.983069 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:49.986062 line       556                     i = i_j[0]
excute 13:40:49.990051 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:49.992046 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:49.996036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:49.999027 line       556                     i = i_j[0]
excute 13:40:50.002019 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:50.005011 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.009998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:50.013987 line       556                     i = i_j[0]
excute 13:40:50.025147 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:50.028135 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.032125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:40:50.035117 line       556                     i = i_j[0]
excute 13:40:50.038143 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:50.041136 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.045092 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:40:50.048114 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:50.052073 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:50.055099 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.059054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:40:50.062078 line       556                     i = i_j[0]
excute 13:40:50.065072 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:50.068060 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.072019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:40:50.075041 line       556                     i = i_j[0]
excute 13:40:50.078037 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:50.081029 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.084985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:40:50.088008 line       556                     i = i_j[0]
excute 13:40:50.090998 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:50.093993 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.097950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:40:50.100972 line       556                     i = i_j[0]
excute 13:40:50.103964 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:50.106957 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.111916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:40:50.114935 line       556                     i = i_j[0]
excute 13:40:50.118925 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:50.121915 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.125876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:50.128889 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:50.131858 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:50.135848 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.138841 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:50.141831 line       556                     i = i_j[0]
excute 13:40:50.145822 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:50.148812 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.152804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:50.155795 line       556                     i = i_j[0]
excute 13:40:50.159783 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:50.162774 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.166765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:50.169756 line       556                     i = i_j[0]
excute 13:40:50.172748 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:50.175740 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.178733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:50.181724 line       556                     i = i_j[0]
excute 13:40:50.184716 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:50.187709 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.191698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:50.194689 line       556                     i = i_j[0]
excute 13:40:50.197681 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:50.203697 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.207688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:50.211651 line       556                     i = i_j[0]
excute 13:40:50.215646 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:50.218626 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.221618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 1)
excute 13:40:50.224610 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:50.228599 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:50.231591 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.235586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 1)
excute 13:40:50.238573 line       556                     i = i_j[0]
excute 13:40:50.241568 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:50.244557 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.250541 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 1)
excute 13:40:50.253535 line       556                     i = i_j[0]
excute 13:40:50.257522 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.260516 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.264507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:40:50.267495 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:50.271484 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:50.274509 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.278466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:40:50.281458 line       556                     i = i_j[0]
excute 13:40:50.285447 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.288452 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.291464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 1)
excute 13:40:50.294455 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:50.298445 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:50.301439 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.305406 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 27
excute 13:40:50.308386 line       560                         if (t_tmp > self.TIME):
excute 13:40:50.311410 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:50.315369 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:50.318359 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:50.321351 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:50.324343 line       569                                     available_vhecles[i][t],
excute 13:40:50.330332 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:50.336314 line       571                                     self.S_capacities[j],
excute 13:40:50.342296 line       572                                     demands[t][i][j],
excute 13:40:50.345319 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 16
calc_contract     13:40:50.348279 call       352     def caluculate_contract(
calc_contract     13:40:50.351276 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:50.352269 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:50.353269 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:50.356268 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:50.356268 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:50.357259 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:50.359250 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. rse_tmp = 0
excute 13:40:50.360248 line       575                                 rsf += rsf_tmp
excute 13:40:50.364237 line       576                                 rse += rse_tmp
excute 13:40:50.368226 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 2
move_cars     Starting var:.. t = 16
move_cars     Starting var:.. t_tmp = 27
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:50.372216 call       388     def move_cars(
move_cars     13:40:50.377202 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:50.379197 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:40:50.381192 line       399         return available_vhecles
move_cars     13:40:50.382189 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:40:50.385181 line       579                                 success += can_contract
excute Modified var:.. success = 16
excute 13:40:50.388173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 1)
excute 13:40:50.392164 line       556                     i = i_j[0]
excute 13:40:50.395154 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:50.399143 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.402169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 1)
excute 13:40:50.406126 line       556                     i = i_j[0]
excute 13:40:50.409118 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.412108 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.416100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 1)
excute 13:40:50.420089 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:50.423079 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:50.427069 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.430061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 1)
excute 13:40:50.433053 line       556                     i = i_j[0]
excute 13:40:50.437042 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.440034 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.444034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:40:50.447016 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:50.450007 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:50.453997 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.457986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:40:50.460977 line       556                     i = i_j[0]
excute 13:40:50.466963 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:50.470952 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.474941 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:40:50.477932 line       556                     i = i_j[0]
excute 13:40:50.480926 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:50.483916 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.487906 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:40:50.490898 line       556                     i = i_j[0]
excute 13:40:50.494888 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:50.497879 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.500872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:40:50.503864 line       556                     i = i_j[0]
excute 13:40:50.507853 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:50.510845 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.514834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:40:50.518824 line       556                     i = i_j[0]
excute 13:40:50.522813 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:50.525805 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.529795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:40:50.532787 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:50.535778 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:50.539768 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.542760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:40:50.545751 line       556                     i = i_j[0]
excute 13:40:50.549742 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:50.552733 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.556722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:50.563703 line       556                     i = i_j[0]
excute 13:40:50.567693 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:50.570685 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.574674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:50.577666 line       556                     i = i_j[0]
excute 13:40:50.581656 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:50.584651 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.587639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:50.590631 line       556                     i = i_j[0]
excute 13:40:50.594621 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:50.597612 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.600604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:40:50.603597 line       556                     i = i_j[0]
excute 13:40:50.607586 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:50.610578 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.613572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 1)
excute 13:40:50.616562 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:50.620553 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:50.624542 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.628530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 1)
excute 13:40:50.631522 line       556                     i = i_j[0]
excute 13:40:50.634524 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:50.637506 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.641495 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 31
excute 13:40:50.644487 line       560                         if (t_tmp > self.TIME):
excute 13:40:50.647479 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:50.651469 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 14
excute 13:40:50.654460 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:50.657453 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 8
excute 13:40:50.660445 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:50.664435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 1)
excute 13:40:50.667427 line       556                     i = i_j[0]
excute 13:40:50.670418 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.673441 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.677401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 1)
excute 13:40:50.680424 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:50.683386 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:50.688404 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.691395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 1)
excute 13:40:50.694354 line       556                     i = i_j[0]
excute 13:40:50.698344 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:50.702334 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.706322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 1)
excute 13:40:50.709314 line       556                     i = i_j[0]
excute 13:40:50.713304 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.716329 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.719323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:40:50.723277 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:50.727267 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:50.730289 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.734249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:40:50.737271 line       556                     i = i_j[0]
excute 13:40:50.740265 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:50.743259 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.747214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:40:50.750237 line       556                     i = i_j[0]
excute 13:40:50.753229 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:50.757187 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.760212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:40:50.764168 line       556                     i = i_j[0]
excute 13:40:50.767168 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:50.770183 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.774157 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:40:50.777133 line       556                     i = i_j[0]
excute 13:40:50.780125 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:50.783152 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.787108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:40:50.790130 line       556                     i = i_j[0]
excute 13:40:50.793123 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:50.796116 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.800085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 1)
excute 13:40:50.803095 line       556                     i = i_j[0]
excute 13:40:50.806087 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:50.809079 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.813038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 1)
excute 13:40:50.816060 line       556                     i = i_j[0]
excute 13:40:50.819052 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:50.822044 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.828033 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 1)
excute 13:40:50.831024 line       556                     i = i_j[0]
excute 13:40:50.834013 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:50.838002 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:50.840994 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:40:50.843988 line       560                         if (t_tmp > self.TIME):
excute 13:40:50.846981 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:50.849970 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 15
excute 13:40:50.852961 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:50.856920 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 9
excute 13:40:50.859945 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:50.863922 line       555                 for i_j in i_j_list:
excute 13:40:50.866908 line       581             self.write_matrix(
excute 13:40:50.869918 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:50.872909 line       583                 result_file_path,
excute 13:40:50.875903 line       584                 mode='a'
excute 13:40:50.881436 line       488         for t in time_steps:
excute Modified var:.. t = 17
excute 13:40:50.885424 line       489             if (t != self.TIME + 1):
excute 13:40:50.889413 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:50.895397 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:50.899388 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:50.905370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:50.911355 line       494                         if (i == j):
excute 13:40:50.915344 line       495                             continue
excute 13:40:50.918336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:50.922325 line       494                         if (i == j):
excute 13:40:50.928311 line       496                         i_j_list.append((
excute 13:40:50.934295 line       497                             i, j,
excute 13:40:50.937287 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:50.940278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:50.945263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:50.949253 line       494                         if (i == j):
excute 13:40:50.952245 line       496                         i_j_list.append((
excute 13:40:50.958229 line       497                             i, j,
excute 13:40:50.963216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:50.969200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:40:50.974187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:50.990145 line       494                         if (i == j):
excute 13:40:50.998125 line       496                         i_j_list.append((
excute 13:40:51.007113 line       497                             i, j,
excute 13:40:51.013082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.016074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:40:51.023067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:51.030037 line       494                         if (i == j):
excute 13:40:51.036023 line       496                         i_j_list.append((
excute 13:40:51.039014 line       497                             i, j,
excute 13:40:51.044998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.047989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:51.052977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:51.056965 line       494                         if (i == j):
excute 13:40:51.061953 line       496                         i_j_list.append((
excute 13:40:51.064944 line       497                             i, j,
excute 13:40:51.068934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.074917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:51.077909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:51.083894 line       494                         if (i == j):
excute 13:40:51.088881 line       496                         i_j_list.append((
excute 13:40:51.091872 line       497                             i, j,
excute 13:40:51.096860 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.100850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:51.105838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:51.112828 line       494                         if (i == j):
excute 13:40:51.116805 line       496                         i_j_list.append((
excute 13:40:51.119801 line       497                             i, j,
excute 13:40:51.124784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.127777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:51.130768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:51.134757 line       494                         if (i == j):
excute 13:40:51.138747 line       496                         i_j_list.append((
excute 13:40:51.141738 line       497                             i, j,
excute 13:40:51.144730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.148721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:40:51.151713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:51.154704 line       494                         if (i == j):
excute 13:40:51.158694 line       496                         i_j_list.append((
excute 13:40:51.162690 line       497                             i, j,
excute 13:40:51.165676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.168666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1)]
excute 13:40:51.171659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:51.174650 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:51.177642 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:51.180634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:51.184637 line       494                         if (i == j):
excute 13:40:51.187616 line       496                         i_j_list.append((
excute 13:40:51.190607 line       497                             i, j,
excute 13:40:51.193606 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.195595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0)]
excute 13:40:51.198587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:51.204571 line       494                         if (i == j):
excute 13:40:51.210554 line       495                             continue
excute 13:40:51.214545 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:51.219533 line       494                         if (i == j):
excute 13:40:51.225515 line       496                         i_j_list.append((
excute 13:40:51.229505 line       497                             i, j,
excute 13:40:51.234492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.239479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:40:51.245463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:51.249451 line       494                         if (i == j):
excute 13:40:51.252444 line       496                         i_j_list.append((
excute 13:40:51.255436 line       497                             i, j,
excute 13:40:51.258428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.264412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:40:51.268400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:51.276380 line       494                         if (i == j):
excute 13:40:51.284360 line       496                         i_j_list.append((
excute 13:40:51.290341 line       497                             i, j,
excute 13:40:51.293333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.298321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:40:51.302309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:51.305302 line       494                         if (i == j):
excute 13:40:51.309291 line       496                         i_j_list.append((
excute 13:40:51.317270 line       497                             i, j,
excute 13:40:51.321264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.324251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:40:51.336227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:51.345196 line       494                         if (i == j):
excute 13:40:51.349186 line       496                         i_j_list.append((
excute 13:40:51.352176 line       497                             i, j,
excute 13:40:51.357163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.366139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:40:51.369131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:51.374118 line       494                         if (i == j):
excute 13:40:51.378108 line       496                         i_j_list.append((
excute 13:40:51.394064 line       497                             i, j,
excute 13:40:51.401046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.407029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:40:51.415009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:51.420993 line       494                         if (i == j):
excute 13:40:51.427973 line       496                         i_j_list.append((
excute 13:40:51.434954 line       497                             i, j,
excute 13:40:51.441935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.448919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:40:51.455899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:51.462881 line       494                         if (i == j):
excute 13:40:51.468865 line       496                         i_j_list.append((
excute 13:40:51.473852 line       497                             i, j,
excute 13:40:51.478839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.485821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1)]
excute 13:40:51.492800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:51.497787 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:51.503771 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:51.511749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:51.515739 line       494                         if (i == j):
excute 13:40:51.520725 line       496                         i_j_list.append((
excute 13:40:51.527706 line       497                             i, j,
excute 13:40:51.531698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.536683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0)]
excute 13:40:51.541669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:51.548651 line       494                         if (i == j):
excute 13:40:51.556631 line       496                         i_j_list.append((
excute 13:40:51.562614 line       497                             i, j,
excute 13:40:51.567600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.574582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:40:51.578570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:51.583561 line       494                         if (i == j):
excute 13:40:51.589542 line       495                             continue
excute 13:40:51.594529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:51.601510 line       494                         if (i == j):
excute 13:40:51.606497 line       496                         i_j_list.append((
excute 13:40:51.613478 line       497                             i, j,
excute 13:40:51.620462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.625445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:51.632432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:51.639422 line       494                         if (i == j):
excute 13:40:51.646389 line       496                         i_j_list.append((
excute 13:40:51.653385 line       497                             i, j,
excute 13:40:51.659357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.664341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:51.671323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:51.677308 line       494                         if (i == j):
excute 13:40:51.685286 line       496                         i_j_list.append((
excute 13:40:51.691271 line       497                             i, j,
excute 13:40:51.695259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.701245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:51.707227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:51.716204 line       494                         if (i == j):
excute 13:40:51.721190 line       496                         i_j_list.append((
excute 13:40:51.725179 line       497                             i, j,
excute 13:40:51.728170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.731163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:51.734155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:51.738148 line       494                         if (i == j):
excute 13:40:51.741137 line       496                         i_j_list.append((
excute 13:40:51.744128 line       497                             i, j,
excute 13:40:51.747120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.750112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:51.753104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:51.757094 line       494                         if (i == j):
excute 13:40:51.761085 line       496                         i_j_list.append((
excute 13:40:51.764075 line       497                             i, j,
excute 13:40:51.767067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.771057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:51.774048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:51.778038 line       494                         if (i == j):
excute 13:40:51.782027 line       496                         i_j_list.append((
excute 13:40:51.785019 line       497                             i, j,
excute 13:40:51.788012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.791003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1)]
excute 13:40:51.794993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:51.797997 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:51.800976 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:51.803968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:51.807959 line       494                         if (i == j):
excute 13:40:51.810951 line       496                         i_j_list.append((
excute 13:40:51.813942 line       497                             i, j,
excute 13:40:51.816935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.819927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0)]
excute 13:40:51.822919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:51.825911 line       494                         if (i == j):
excute 13:40:51.828903 line       496                         i_j_list.append((
excute 13:40:51.832893 line       497                             i, j,
excute 13:40:51.836881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.840869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:40:51.846853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:51.850843 line       494                         if (i == j):
excute 13:40:51.856827 line       496                         i_j_list.append((
excute 13:40:51.860818 line       497                             i, j,
excute 13:40:51.866832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.872784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:51.876774 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:51.880764 line       494                         if (i == j):
excute 13:40:51.884754 line       495                             continue
excute 13:40:51.887776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:51.890768 line       494                         if (i == j):
excute 13:40:51.894727 line       496                         i_j_list.append((
excute 13:40:51.897749 line       497                             i, j,
excute 13:40:51.900742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.903734 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:51.906725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:51.909723 line       494                         if (i == j):
excute 13:40:51.913676 line       496                         i_j_list.append((
excute 13:40:51.916668 line       497                             i, j,
excute 13:40:51.919692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.922683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:51.925676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:51.929665 line       494                         if (i == j):
excute 13:40:51.932625 line       496                         i_j_list.append((
excute 13:40:51.935648 line       497                             i, j,
excute 13:40:51.938608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.945590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:51.948582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:51.951573 line       494                         if (i == j):
excute 13:40:51.955564 line       496                         i_j_list.append((
excute 13:40:51.958554 line       497                             i, j,
excute 13:40:51.967533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.972552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:51.975542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:51.978533 line       494                         if (i == j):
excute 13:40:51.982493 line       496                         i_j_list.append((
excute 13:40:51.985515 line       497                             i, j,
excute 13:40:51.988508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:51.991498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:51.994490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:51.998448 line       494                         if (i == j):
excute 13:40:52.002439 line       496                         i_j_list.append((
excute 13:40:52.005431 line       497                             i, j,
excute 13:40:52.009451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.012442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1)]
excute 13:40:52.015435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:52.018427 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:52.022387 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:52.025412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:52.028400 line       494                         if (i == j):
excute 13:40:52.032359 line       496                         i_j_list.append((
excute 13:40:52.035382 line       497                             i, j,
excute 13:40:52.038373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.042331 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0)]
excute 13:40:52.047317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:52.051308 line       494                         if (i == j):
excute 13:40:52.056294 line       496                         i_j_list.append((
excute 13:40:52.059285 line       497                             i, j,
excute 13:40:52.062279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.065271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:40:52.070264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:52.073249 line       494                         if (i == j):
excute 13:40:52.077237 line       496                         i_j_list.append((
excute 13:40:52.080231 line       497                             i, j,
excute 13:40:52.084221 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.087213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:40:52.091202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:52.094194 line       494                         if (i == j):
excute 13:40:52.098183 line       496                         i_j_list.append((
excute 13:40:52.102172 line       497                             i, j,
excute 13:40:52.105165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.108156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:40:52.112146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:52.115138 line       494                         if (i == j):
excute 13:40:52.119125 line       495                             continue
excute 13:40:52.122118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:52.125109 line       494                         if (i == j):
excute 13:40:52.128101 line       496                         i_j_list.append((
excute 13:40:52.131093 line       497                             i, j,
excute 13:40:52.134085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.137078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:40:52.140070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:52.144059 line       494                         if (i == j):
excute 13:40:52.147051 line       496                         i_j_list.append((
excute 13:40:52.150043 line       497                             i, j,
excute 13:40:52.154034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.157028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:40:52.159019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:52.166118 line       494                         if (i == j):
excute 13:40:52.171107 line       496                         i_j_list.append((
excute 13:40:52.174098 line       497                             i, j,
excute 13:40:52.178086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.181079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:40:52.185098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:52.188090 line       494                         if (i == j):
excute 13:40:52.192052 line       496                         i_j_list.append((
excute 13:40:52.195074 line       497                             i, j,
excute 13:40:52.198034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.201026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:40:52.204018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:52.208008 line       494                         if (i == j):
excute 13:40:52.211031 line       496                         i_j_list.append((
excute 13:40:52.214988 line       497                             i, j,
excute 13:40:52.218977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.222000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1)]
excute 13:40:52.224991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:52.228982 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:52.231973 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:52.234968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:52.237958 line       494                         if (i == j):
excute 13:40:52.240950 line       496                         i_j_list.append((
excute 13:40:52.243941 line       497                             i, j,
excute 13:40:52.246933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.249925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0)]
excute 13:40:52.253917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:52.256907 line       494                         if (i == j):
excute 13:40:52.260872 line       496                         i_j_list.append((
excute 13:40:52.263888 line       497                             i, j,
excute 13:40:52.266881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.269873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:40:52.273838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:52.277819 line       494                         if (i == j):
excute 13:40:52.280810 line       496                         i_j_list.append((
excute 13:40:52.283803 line       497                             i, j,
excute 13:40:52.286795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.289787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:40:52.292779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:52.299763 line       494                         if (i == j):
excute 13:40:52.302752 line       496                         i_j_list.append((
excute 13:40:52.306742 line       497                             i, j,
excute 13:40:52.309735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.312728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:40:52.315720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:52.319708 line       494                         if (i == j):
excute 13:40:52.323699 line       496                         i_j_list.append((
excute 13:40:52.329682 line       497                             i, j,
excute 13:40:52.337661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.342646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:40:52.345637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:52.349627 line       494                         if (i == j):
excute 13:40:52.352619 line       495                             continue
excute 13:40:52.356609 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:52.360629 line       494                         if (i == j):
excute 13:40:52.364620 line       496                         i_j_list.append((
excute 13:40:52.367611 line       497                             i, j,
excute 13:40:52.370572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.374564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0)]
excute 13:40:52.378553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:52.382549 line       494                         if (i == j):
excute 13:40:52.386529 line       496                         i_j_list.append((
excute 13:40:52.389520 line       497                             i, j,
excute 13:40:52.392512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.395504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0)]
excute 13:40:52.398497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:52.402486 line       494                         if (i == j):
excute 13:40:52.406484 line       496                         i_j_list.append((
excute 13:40:52.409467 line       497                             i, j,
excute 13:40:52.412459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.415451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:40:52.418444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:52.421435 line       494                         if (i == j):
excute 13:40:52.424427 line       496                         i_j_list.append((
excute 13:40:52.427419 line       497                             i, j,
excute 13:40:52.430411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.433403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1)]
excute 13:40:52.436395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:52.440384 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:52.443376 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:52.446368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:52.450359 line       494                         if (i == j):
excute 13:40:52.454362 line       496                         i_j_list.append((
excute 13:40:52.457340 line       497                             i, j,
excute 13:40:52.460331 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.463323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0)]
excute 13:40:52.466315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:52.470305 line       494                         if (i == j):
excute 13:40:52.473297 line       496                         i_j_list.append((
excute 13:40:52.476288 line       497                             i, j,
excute 13:40:52.481276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.483271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:40:52.487260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:52.490252 line       494                         if (i == j):
excute 13:40:52.494243 line       496                         i_j_list.append((
excute 13:40:52.497233 line       497                             i, j,
excute 13:40:52.501223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.504215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:40:52.508206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:52.512192 line       494                         if (i == j):
excute 13:40:52.515184 line       496                         i_j_list.append((
excute 13:40:52.518176 line       497                             i, j,
excute 13:40:52.521168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.524160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:40:52.528181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:52.531173 line       494                         if (i == j):
excute 13:40:52.535134 line       496                         i_j_list.append((
excute 13:40:52.538157 line       497                             i, j,
excute 13:40:52.541117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.544109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:40:52.548097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:52.551089 line       494                         if (i == j):
excute 13:40:52.555078 line       496                         i_j_list.append((
excute 13:40:52.558101 line       497                             i, j,
excute 13:40:52.561093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.564088 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:40:52.567077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:52.571036 line       494                         if (i == j):
excute 13:40:52.574058 line       495                             continue
excute 13:40:52.577051 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:52.580046 line       494                         if (i == j):
excute 13:40:52.584997 line       496                         i_j_list.append((
excute 13:40:52.589020 line       497                             i, j,
excute 13:40:52.592011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.595003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:40:52.597995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:52.600987 line       494                         if (i == j):
excute 13:40:52.604945 line       496                         i_j_list.append((
excute 13:40:52.607968 line       497                             i, j,
excute 13:40:52.610961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.613952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:40:52.616944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:52.620936 line       494                         if (i == j):
excute 13:40:52.623894 line       496                         i_j_list.append((
excute 13:40:52.626917 line       497                             i, j,
excute 13:40:52.629909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.632902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1)]
excute 13:40:52.635863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:52.639852 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:52.642875 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:52.645867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:52.648858 line       494                         if (i == j):
excute 13:40:52.652817 line       496                         i_j_list.append((
excute 13:40:52.656808 line       497                             i, j,
excute 13:40:52.659800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.662792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0)]
excute 13:40:52.665784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:52.668788 line       494                         if (i == j):
excute 13:40:52.672764 line       496                         i_j_list.append((
excute 13:40:52.675759 line       497                             i, j,
excute 13:40:52.678761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.681773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:40:52.685761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:52.689720 line       494                         if (i == j):
excute 13:40:52.692742 line       496                         i_j_list.append((
excute 13:40:52.696699 line       497                             i, j,
excute 13:40:52.699724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.702685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:40:52.705677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:52.709666 line       494                         if (i == j):
excute 13:40:52.714653 line       496                         i_j_list.append((
excute 13:40:52.720661 line       497                             i, j,
excute 13:40:52.724626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.727618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:40:52.731606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:52.734600 line       494                         if (i == j):
excute 13:40:52.743600 line       496                         i_j_list.append((
excute 13:40:52.746598 line       497                             i, j,
excute 13:40:52.753783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.757738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:52.760729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:52.763728 line       494                         if (i == j):
excute 13:40:52.767712 line       496                         i_j_list.append((
excute 13:40:52.770704 line       497                             i, j,
excute 13:40:52.773696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.776719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:52.779711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:52.782703 line       494                         if (i == j):
excute 13:40:52.787658 line       496                         i_j_list.append((
excute 13:40:52.790650 line       497                             i, j,
excute 13:40:52.793642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.796634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:52.799625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:52.803616 line       494                         if (i == j):
excute 13:40:52.806608 line       495                             continue
excute 13:40:52.809599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:52.812592 line       494                         if (i == j):
excute 13:40:52.819573 line       496                         i_j_list.append((
excute 13:40:52.822564 line       497                             i, j,
excute 13:40:52.825556 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.828548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:40:52.831540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:52.834532 line       494                         if (i == j):
excute 13:40:52.839535 line       496                         i_j_list.append((
excute 13:40:52.842514 line       497                             i, j,
excute 13:40:52.845505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.848497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1)]
excute 13:40:52.852487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:52.856485 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:52.859468 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:52.863457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:52.866449 line       494                         if (i == j):
excute 13:40:52.870440 line       496                         i_j_list.append((
excute 13:40:52.873430 line       497                             i, j,
excute 13:40:52.876422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.879414 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0)]
excute 13:40:52.882407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:52.886396 line       494                         if (i == j):
excute 13:40:52.890383 line       496                         i_j_list.append((
excute 13:40:52.894373 line       497                             i, j,
excute 13:40:52.897365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.899359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:40:52.903383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:52.906374 line       494                         if (i == j):
excute 13:40:52.910331 line       496                         i_j_list.append((
excute 13:40:52.913354 line       497                             i, j,
excute 13:40:52.917315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.921305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:40:52.927285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:52.930277 line       494                         if (i == j):
excute 13:40:52.934267 line       496                         i_j_list.append((
excute 13:40:52.937258 line       497                             i, j,
excute 13:40:52.940251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.943242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:40:52.947234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:52.951222 line       494                         if (i == j):
excute 13:40:52.955211 line       496                         i_j_list.append((
excute 13:40:52.958202 line       497                             i, j,
excute 13:40:52.961194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.964186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:40:52.968189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:52.971169 line       494                         if (i == j):
excute 13:40:52.975157 line       496                         i_j_list.append((
excute 13:40:52.978149 line       497                             i, j,
excute 13:40:52.981140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:52.984132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:40:52.987125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:52.992112 line       494                         if (i == j):
excute 13:40:52.995103 line       496                         i_j_list.append((
excute 13:40:52.998095 line       497                             i, j,
excute 13:40:53.001087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.004079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:40:53.008071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:53.011062 line       494                         if (i == j):
excute 13:40:53.015050 line       496                         i_j_list.append((
excute 13:40:53.019040 line       497                             i, j,
excute 13:40:53.023030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.026021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:40:53.030011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:53.033003 line       494                         if (i == j):
excute 13:40:53.036992 line       495                             continue
excute 13:40:53.040981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:53.043974 line       494                         if (i == j):
excute 13:40:53.047963 line       496                         i_j_list.append((
excute 13:40:53.050955 line       497                             i, j,
excute 13:40:53.054945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.057937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1)]
excute 13:40:53.060929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:53.064919 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:53.067911 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:53.071901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:53.075888 line       494                         if (i == j):
excute 13:40:53.078914 line       496                         i_j_list.append((
excute 13:40:53.081873 line       497                             i, j,
excute 13:40:53.085862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.089851 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0)]
excute 13:40:53.092845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:53.097828 line       494                         if (i == j):
excute 13:40:53.101821 line       496                         i_j_list.append((
excute 13:40:53.104810 line       497                             i, j,
excute 13:40:53.107802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.110794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:40:53.113786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:53.116778 line       494                         if (i == j):
excute 13:40:53.120778 line       496                         i_j_list.append((
excute 13:40:53.123759 line       497                             i, j,
excute 13:40:53.126751 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.129743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:40:53.132735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:53.135727 line       494                         if (i == j):
excute 13:40:53.139717 line       496                         i_j_list.append((
excute 13:40:53.142708 line       497                             i, j,
excute 13:40:53.145700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.148693 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:40:53.152691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:53.156704 line       494                         if (i == j):
excute 13:40:53.159695 line       496                         i_j_list.append((
excute 13:40:53.162686 line       497                             i, j,
excute 13:40:53.166646 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.169637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:53.172650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:53.175621 line       494                         if (i == j):
excute 13:40:53.179611 line       496                         i_j_list.append((
excute 13:40:53.182604 line       497                             i, j,
excute 13:40:53.185596 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.188588 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:53.191580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:53.196565 line       494                         if (i == j):
excute 13:40:53.200556 line       496                         i_j_list.append((
excute 13:40:53.204545 line       497                             i, j,
excute 13:40:53.207537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.211526 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:40:53.215547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:53.219505 line       494                         if (i == j):
excute 13:40:53.223499 line       496                         i_j_list.append((
excute 13:40:53.226485 line       497                             i, j,
excute 13:40:53.229477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.232469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:40:53.235460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:53.239462 line       494                         if (i == j):
excute 13:40:53.242442 line       496                         i_j_list.append((
excute 13:40:53.245466 line       497                             i, j,
excute 13:40:53.248457 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:53.251450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:40:53.255439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:53.258431 line       494                         if (i == j):
excute 13:40:53.262423 line       495                             continue
excute 13:40:53.265415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:53.268405 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:53.271398 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (3, 9, 1, 1), (4, 9, 1, 1), (8, 9, 1, 1), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (0, 9, 2, 1), (2, 9, 2, 1), (7, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (1, 9, 3, 1), (5, 9, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1)]
excute 13:40:53.275386 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:53.278380 line       505                     if (self.RELOCATE):
excute 13:40:53.282336 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:53.285359 line       505                     if (self.RELOCATE):
excute 13:40:53.288351 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:53.292340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:40:53.295332 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:53.299291 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:53.304280 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.308267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:53.311260 line       556                     i = i_j[0]
excute 13:40:53.314251 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:53.317242 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.321232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:40:53.324223 line       556                     i = i_j[0]
excute 13:40:53.331206 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:53.336195 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.343175 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:53.346196 line       556                     i = i_j[0]
excute 13:40:53.350155 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:53.353183 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.358134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:53.361125 line       556                     i = i_j[0]
excute 13:40:53.365114 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:53.368106 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.372097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:53.375087 line       556                     i = i_j[0]
excute 13:40:53.378079 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:53.382068 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.385060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:53.389053 line       556                     i = i_j[0]
excute 13:40:53.392044 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:53.396033 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.400028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:40:53.405009 line       556                     i = i_j[0]
excute 13:40:53.408000 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:53.410992 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.413983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:40:53.417974 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:53.420967 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:53.424954 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.428945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:40:53.431936 line       556                     i = i_j[0]
excute 13:40:53.434928 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:53.438918 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.441910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:40:53.445899 line       556                     i = i_j[0]
excute 13:40:53.449889 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:53.452880 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.456871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:40:53.459862 line       556                     i = i_j[0]
excute 13:40:53.466858 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:53.470832 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.474823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:40:53.477847 line       556                     i = i_j[0]
excute 13:40:53.480839 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:53.483828 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.487793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:40:53.490778 line       556                     i = i_j[0]
excute 13:40:53.494768 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:53.497759 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.500751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:40:53.504742 line       556                     i = i_j[0]
excute 13:40:53.509764 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:53.512753 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.516710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:40:53.519736 line       556                     i = i_j[0]
excute 13:40:53.523724 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:53.526714 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.530673 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:40:53.533664 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:53.536656 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:53.540678 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.543668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:40:53.546660 line       556                     i = i_j[0]
excute 13:40:53.550620 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:53.553643 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.557635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:40:53.560625 line       556                     i = i_j[0]
excute 13:40:53.563616 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:53.567574 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.570566 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:40:53.573596 line       556                     i = i_j[0]
excute 13:40:53.577580 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:53.580571 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.583563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:40:53.586554 line       556                     i = i_j[0]
excute 13:40:53.590512 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:53.593535 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.597494 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:40:53.600484 line       556                     i = i_j[0]
excute 13:40:53.603478 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:53.606471 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.612453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:40:53.615444 line       556                     i = i_j[0]
excute 13:40:53.618436 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:53.621429 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.625418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:40:53.628410 line       556                     i = i_j[0]
excute 13:40:53.632401 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:53.635394 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.639381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 1)
excute 13:40:53.642373 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:53.646362 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:53.651352 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.655341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:40:53.658332 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:53.662325 line       557                     j = i_j[1]
excute 13:40:53.665343 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.668335 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 30
excute 13:40:53.671327 line       560                         if (t_tmp > self.TIME):
excute 13:40:53.675286 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:53.678309 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:53.681301 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:53.684292 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:40:53.687284 line       569                                     available_vhecles[i][t],
excute 13:40:53.690277 line       570                                     available_vhecles[j][t_tmp],
excute 13:40:53.693271 line       571                                     self.S_capacities[j],
excute 13:40:53.697227 line       572                                     demands[t][i][j],
excute 13:40:53.700219 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 17
calc_contract     13:40:53.703212 call       352     def caluculate_contract(
calc_contract     13:40:53.706236 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:40:53.707201 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:40:53.707201 line       362         if (available_vhecles_start >= demand):
calc_contract     13:40:53.708198 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:40:53.709195 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:40:53.709195 line       385         return [can_contract, rsf, rse]
calc_contract     13:40:53.711190 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:40:53.712187 line       575                                 rsf += rsf_tmp
excute 13:40:53.717175 line       576                                 rse += rse_tmp
excute 13:40:53.721162 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 4
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 17
move_cars     Starting var:.. t_tmp = 30
move_cars     Starting var:.. can_contract = 1
move_cars     13:40:53.728143 call       388     def move_cars(
move_cars     13:40:53.732134 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:40:53.734127 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:40:53.735127 line       399         return available_vhecles
move_cars     13:40:53.737120 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:53.741143 line       579                                 success += can_contract
excute Modified var:.. success = 17
excute 13:40:53.745099 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 1)
excute 13:40:53.749088 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:53.753078 line       557                     j = i_j[1]
excute 13:40:53.757066 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.760058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:53.763050 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:53.766042 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:53.770032 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.773023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:40:53.776015 line       556                     i = i_j[0]
excute 13:40:53.780005 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:53.782997 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.785989 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:53.788981 line       556                     i = i_j[0]
excute 13:40:53.792985 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:53.795962 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.798954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:53.801946 line       556                     i = i_j[0]
excute 13:40:53.805936 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:53.808960 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.811951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:53.814943 line       556                     i = i_j[0]
excute 13:40:53.820896 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:53.823887 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.830869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:53.836852 line       556                     i = i_j[0]
excute 13:40:53.840874 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:53.843866 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.847824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:53.850847 line       556                     i = i_j[0]
excute 13:40:53.853840 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:53.857829 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.860823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:40:53.863815 line       556                     i = i_j[0]
excute 13:40:53.867772 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:53.870794 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.873786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:40:53.876780 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:53.880739 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:53.883759 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.887717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:53.890711 line       556                     i = i_j[0]
excute 13:40:53.894712 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:53.897722 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.901713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:53.904703 line       556                     i = i_j[0]
excute 13:40:53.908662 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:53.911661 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.914659 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:53.918636 line       556                     i = i_j[0]
excute 13:40:53.923622 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:53.926644 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.930603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:53.933599 line       556                     i = i_j[0]
excute 13:40:53.937589 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:53.940577 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.944567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:53.948555 line       556                     i = i_j[0]
excute 13:40:53.951548 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:53.955538 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.959528 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:53.963517 line       556                     i = i_j[0]
excute 13:40:53.966508 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:53.970498 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.973490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:40:53.976481 line       556                     i = i_j[0]
excute 13:40:53.980471 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:53.983463 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:53.987452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:40:53.991439 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:53.994449 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:53.998423 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.001415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:54.004407 line       556                     i = i_j[0]
excute 13:40:54.009392 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:54.012383 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.015410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:40:54.018401 line       556                     i = i_j[0]
excute 13:40:54.022360 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:54.026348 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.030337 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:54.034327 line       556                     i = i_j[0]
excute 13:40:54.038315 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:54.041308 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.045296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:54.048319 line       556                     i = i_j[0]
excute 13:40:54.052277 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:54.055303 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.059259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:54.062261 line       556                     i = i_j[0]
excute 13:40:54.065243 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:54.068268 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.072225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:54.075217 line       556                     i = i_j[0]
excute 13:40:54.078207 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:54.081231 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.085190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:40:54.088212 line       556                     i = i_j[0]
excute 13:40:54.091205 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:54.094197 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.098156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 1)
excute 13:40:54.101178 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:54.104170 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:54.112123 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.116108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:40:54.119100 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:54.123091 line       557                     j = i_j[1]
excute 13:40:54.128076 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.131100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 1)
excute 13:40:54.134090 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:54.138080 line       557                     j = i_j[1]
excute 13:40:54.141073 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.145031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:40:54.148023 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:54.152026 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:54.156015 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.159026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:40:54.162016 line       556                     i = i_j[0]
excute 13:40:54.165974 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:54.168996 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.172955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:40:54.174983 line       556                     i = i_j[0]
excute 13:40:54.178939 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:54.183926 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.187914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:40:54.190906 line       556                     i = i_j[0]
excute 13:40:54.193898 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:54.196891 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.200880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:40:54.203871 line       556                     i = i_j[0]
excute 13:40:54.206863 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:54.210854 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.214844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:40:54.217835 line       556                     i = i_j[0]
excute 13:40:54.221839 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:54.224816 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.228807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:40:54.232827 line       556                     i = i_j[0]
excute 13:40:54.236785 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:54.239807 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.242799 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:40:54.245792 line       556                     i = i_j[0]
excute 13:40:54.249750 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:54.252773 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.256732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:40:54.259757 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:54.262748 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:54.266705 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.269727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:40:54.272720 line       556                     i = i_j[0]
excute 13:40:54.276680 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:54.280668 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.284657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:40:54.288646 line       556                     i = i_j[0]
excute 13:40:54.295629 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:54.301610 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.305601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:40:54.308592 line       556                     i = i_j[0]
excute 13:40:54.314576 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:54.317567 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.322557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:40:54.325548 line       556                     i = i_j[0]
excute 13:40:54.333528 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:54.339512 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.343498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 0)
excute 13:40:54.346490 line       556                     i = i_j[0]
excute 13:40:54.350481 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:54.353472 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.357495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:40:54.361451 line       556                     i = i_j[0]
excute 13:40:54.364455 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:54.368433 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.371460 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:40:54.375414 line       556                     i = i_j[0]
excute 13:40:54.379403 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:54.386390 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.389376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:40:54.392368 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:54.396358 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:54.399349 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.403339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:40:54.406330 line       556                     i = i_j[0]
excute 13:40:54.410320 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:54.413312 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.416303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:40:54.419296 line       556                     i = i_j[0]
excute 13:40:54.423285 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:54.426277 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.429269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:54.432261 line       556                     i = i_j[0]
excute 13:40:54.436251 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:54.439244 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.444230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:54.447221 line       556                     i = i_j[0]
excute 13:40:54.451212 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:54.454202 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.457194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:54.460187 line       556                     i = i_j[0]
excute 13:40:54.464178 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:54.467169 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.471158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:40:54.474150 line       556                     i = i_j[0]
excute 13:40:54.478140 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:54.481132 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.484124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:40:54.487115 line       556                     i = i_j[0]
excute 13:40:54.491105 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:54.494098 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.498088 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:40:54.501080 line       556                     i = i_j[0]
excute 13:40:54.505067 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:54.508061 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.512077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 1)
excute 13:40:54.515074 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:54.519062 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:54.522054 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.526045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 1)
excute 13:40:54.529034 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:54.532994 line       557                     j = i_j[1]
excute 13:40:54.536016 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.539010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:40:54.543965 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:54.547952 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:54.550946 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.555933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:40:54.558923 line       556                     i = i_j[0]
excute 13:40:54.561917 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:54.564909 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.568900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:40:54.571890 line       556                     i = i_j[0]
excute 13:40:54.575880 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:54.578871 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.582859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:40:54.586861 line       556                     i = i_j[0]
excute 13:40:54.589842 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:54.593831 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.596823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:40:54.600812 line       556                     i = i_j[0]
excute 13:40:54.604803 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:54.607794 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.611781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:40:54.614775 line       556                     i = i_j[0]
excute 13:40:54.619762 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:54.622753 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.626743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:40:54.629735 line       556                     i = i_j[0]
excute 13:40:54.633725 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:54.636715 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.640705 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:40:54.644694 line       556                     i = i_j[0]
excute 13:40:54.650679 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:54.653671 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.657661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 1)
excute 13:40:54.661650 line       556                     i = i_j[0]
excute 13:40:54.664642 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:54.667634 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:54.671624 line       555                 for i_j in i_j_list:
excute 13:40:54.674615 line       581             self.write_matrix(
excute 13:40:54.677607 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:54.681595 line       583                 result_file_path,
excute 13:40:54.684588 line       584                 mode='a'
excute 13:40:54.689769 line       488         for t in time_steps:
excute Modified var:.. t = 18
excute 13:40:54.694791 line       489             if (t != self.TIME + 1):
excute 13:40:54.699743 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:54.703733 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:54.709718 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:54.715703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:54.722682 line       494                         if (i == j):
excute 13:40:54.728665 line       495                             continue
excute 13:40:54.732655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:54.737672 line       494                         if (i == j):
excute 13:40:54.741664 line       496                         i_j_list.append((
excute 13:40:54.744623 line       497                             i, j,
excute 13:40:54.749611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.755595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:40:54.758587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:54.764569 line       494                         if (i == j):
excute 13:40:54.770554 line       496                         i_j_list.append((
excute 13:40:54.774543 line       497                             i, j,
excute 13:40:54.778532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.784527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1)]
excute 13:40:54.790504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:54.799476 line       494                         if (i == j):
excute 13:40:54.806458 line       496                         i_j_list.append((
excute 13:40:54.812446 line       497                             i, j,
excute 13:40:54.818430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.826405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0)]
excute 13:40:54.829395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:54.834416 line       494                         if (i == j):
excute 13:40:54.839373 line       496                         i_j_list.append((
excute 13:40:54.842361 line       497                             i, j,
excute 13:40:54.847379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.852341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:40:54.856357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:54.860347 line       494                         if (i == j):
excute 13:40:54.866298 line       496                         i_j_list.append((
excute 13:40:54.871316 line       497                             i, j,
excute 13:40:54.874276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.877268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:40:54.883265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:54.886244 line       494                         if (i == j):
excute 13:40:54.890234 line       496                         i_j_list.append((
excute 13:40:54.893226 line       497                             i, j,
excute 13:40:54.898218 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.901206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:40:54.905194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:54.912188 line       494                         if (i == j):
excute 13:40:54.917164 line       496                         i_j_list.append((
excute 13:40:54.920156 line       497                             i, j,
excute 13:40:54.926148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.930128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:40:54.933151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:54.936143 line       494                         if (i == j):
excute 13:40:54.940102 line       496                         i_j_list.append((
excute 13:40:54.943124 line       497                             i, j,
excute 13:40:54.946116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.949109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1)]
excute 13:40:54.952099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:54.957057 line       494                         if (i == j):
excute 13:40:54.961077 line       496                         i_j_list.append((
excute 13:40:54.967029 line       497                             i, j,
excute 13:40:54.970022 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:54.974010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0)]
excute 13:40:54.977002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:54.980000 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:54.983984 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:54.986979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:54.991964 line       494                         if (i == j):
excute 13:40:54.994956 line       496                         i_j_list.append((
excute 13:40:54.997947 line       497                             i, j,
excute 13:40:55.000939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.003931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1)]
excute 13:40:55.007924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:55.011942 line       494                         if (i == j):
excute 13:40:55.018890 line       495                             continue
excute 13:40:55.021883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:55.025871 line       494                         if (i == j):
excute 13:40:55.032854 line       496                         i_j_list.append((
excute 13:40:55.039834 line       497                             i, j,
excute 13:40:55.045819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.051802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1)]
excute 13:40:55.055822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:55.061776 line       494                         if (i == j):
excute 13:40:55.064769 line       496                         i_j_list.append((
excute 13:40:55.067761 line       497                             i, j,
excute 13:40:55.070753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.073745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0)]
excute 13:40:55.076737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:55.080724 line       494                         if (i == j):
excute 13:40:55.083718 line       496                         i_j_list.append((
excute 13:40:55.087708 line       497                             i, j,
excute 13:40:55.090698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.093691 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:40:55.096682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:55.099675 line       494                         if (i == j):
excute 13:40:55.102666 line       496                         i_j_list.append((
excute 13:40:55.105658 line       497                             i, j,
excute 13:40:55.108650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.111642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:40:55.114634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:55.118625 line       494                         if (i == j):
excute 13:40:55.122615 line       496                         i_j_list.append((
excute 13:40:55.125604 line       497                             i, j,
excute 13:40:55.131589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.134580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:40:55.140565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:55.143555 line       494                         if (i == j):
excute 13:40:55.147547 line       496                         i_j_list.append((
excute 13:40:55.151537 line       497                             i, j,
excute 13:40:55.154526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.157554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:40:55.162507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:55.166497 line       494                         if (i == j):
excute 13:40:55.169518 line       496                         i_j_list.append((
excute 13:40:55.172511 line       497                             i, j,
excute 13:40:55.175502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.178497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1)]
excute 13:40:55.181454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:55.185446 line       494                         if (i == j):
excute 13:40:55.188468 line       496                         i_j_list.append((
excute 13:40:55.191459 line       497                             i, j,
excute 13:40:55.194455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.197447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0)]
excute 13:40:55.200435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:55.204407 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:55.207385 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:55.210379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:55.213405 line       494                         if (i == j):
excute 13:40:55.217359 line       496                         i_j_list.append((
excute 13:40:55.220382 line       497                             i, j,
excute 13:40:55.223374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.226370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1)]
excute 13:40:55.229362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:55.232352 line       494                         if (i == j):
excute 13:40:55.236323 line       496                         i_j_list.append((
excute 13:40:55.239301 line       497                             i, j,
excute 13:40:55.242327 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.248279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:40:55.251299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:55.255294 line       494                         if (i == j):
excute 13:40:55.258284 line       495                             continue
excute 13:40:55.261276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:55.266229 line       494                         if (i == j):
excute 13:40:55.269255 line       496                         i_j_list.append((
excute 13:40:55.273209 line       497                             i, j,
excute 13:40:55.276234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.279225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:55.282219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:55.285213 line       494                         if (i == j):
excute 13:40:55.288202 line       496                         i_j_list.append((
excute 13:40:55.291193 line       497                             i, j,
excute 13:40:55.294185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.297176 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:55.300169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:55.304151 line       494                         if (i == j):
excute 13:40:55.307134 line       496                         i_j_list.append((
excute 13:40:55.310113 line       497                             i, j,
excute 13:40:55.314102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.317095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:55.320087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:55.324074 line       494                         if (i == j):
excute 13:40:55.331056 line       496                         i_j_list.append((
excute 13:40:55.338038 line       497                             i, j,
excute 13:40:55.343023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.347014 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:40:55.350007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:55.353995 line       494                         if (i == j):
excute 13:40:55.358981 line       496                         i_j_list.append((
excute 13:40:55.362970 line       497                             i, j,
excute 13:40:55.365962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.370954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:40:55.373973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:55.377931 line       494                         if (i == j):
excute 13:40:55.381919 line       496                         i_j_list.append((
excute 13:40:55.384910 line       497                             i, j,
excute 13:40:55.387934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.390926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:40:55.393921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:55.397882 line       494                         if (i == j):
excute 13:40:55.401868 line       496                         i_j_list.append((
excute 13:40:55.404893 line       497                             i, j,
excute 13:40:55.407881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.410872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:40:55.413865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:55.417824 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:55.420851 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:55.423838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:55.426830 line       494                         if (i == j):
excute 13:40:55.430790 line       496                         i_j_list.append((
excute 13:40:55.433816 line       497                             i, j,
excute 13:40:55.436808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.439791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1)]
excute 13:40:55.442757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:55.445751 line       494                         if (i == j):
excute 13:40:55.448742 line       496                         i_j_list.append((
excute 13:40:55.452731 line       497                             i, j,
excute 13:40:55.455723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.459713 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0)]
excute 13:40:55.462704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:55.484359 line       494                         if (i == j):
excute 13:40:55.488310 line       496                         i_j_list.append((
excute 13:40:55.492300 line       497                             i, j,
excute 13:40:55.495292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.498280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1)]
excute 13:40:55.501273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:55.505237 line       494                         if (i == j):
excute 13:40:55.509226 line       495                             continue
excute 13:40:55.512250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:55.515243 line       494                         if (i == j):
excute 13:40:55.518233 line       496                         i_j_list.append((
excute 13:40:55.521224 line       497                             i, j,
excute 13:40:55.525215 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.528205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0)]
excute 13:40:55.531199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:55.534190 line       494                         if (i == j):
excute 13:40:55.538151 line       496                         i_j_list.append((
excute 13:40:55.541172 line       497                             i, j,
excute 13:40:55.544163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.550131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:55.553108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:55.558094 line       494                         if (i == j):
excute 13:40:55.561087 line       496                         i_j_list.append((
excute 13:40:55.566072 line       497                             i, j,
excute 13:40:55.573055 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.577055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:40:55.580066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:55.584025 line       494                         if (i == j):
excute 13:40:55.587049 line       496                         i_j_list.append((
excute 13:40:55.590040 line       497                             i, j,
excute 13:40:55.593032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.596024 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:40:55.599018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:55.602992 line       494                         if (i == j):
excute 13:40:55.605966 line       496                         i_j_list.append((
excute 13:40:55.608989 line       497                             i, j,
excute 13:40:55.611983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.614976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1)]
excute 13:40:55.617970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:55.620957 line       494                         if (i == j):
excute 13:40:55.624916 line       496                         i_j_list.append((
excute 13:40:55.628907 line       497                             i, j,
excute 13:40:55.631899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.634891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0)]
excute 13:40:55.637912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:55.641871 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:55.645865 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:55.649851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:55.652873 line       494                         if (i == j):
excute 13:40:55.656831 line       496                         i_j_list.append((
excute 13:40:55.659826 line       497                             i, j,
excute 13:40:55.662848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.665837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1)]
excute 13:40:55.668830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:55.672788 line       494                         if (i == j):
excute 13:40:55.675780 line       496                         i_j_list.append((
excute 13:40:55.681796 line       497                             i, j,
excute 13:40:55.684789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.687778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0)]
excute 13:40:55.690771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:55.694744 line       494                         if (i == j):
excute 13:40:55.697753 line       496                         i_j_list.append((
excute 13:40:55.700744 line       497                             i, j,
excute 13:40:55.703736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.706728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1)]
excute 13:40:55.709722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:55.713678 line       494                         if (i == j):
excute 13:40:55.717669 line       496                         i_j_list.append((
excute 13:40:55.720662 line       497                             i, j,
excute 13:40:55.724650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.727643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0)]
excute 13:40:55.730635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:55.734623 line       494                         if (i == j):
excute 13:40:55.737615 line       495                             continue
excute 13:40:55.740608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:55.744599 line       494                         if (i == j):
excute 13:40:55.748585 line       496                         i_j_list.append((
excute 13:40:55.751609 line       497                             i, j,
excute 13:40:55.754600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.757592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:40:55.760584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:55.764544 line       494                         if (i == j):
excute 13:40:55.767566 line       496                         i_j_list.append((
excute 13:40:55.770557 line       497                             i, j,
excute 13:40:55.773550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.777507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:40:55.780500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:55.785488 line       494                         if (i == j):
excute 13:40:55.788510 line       496                         i_j_list.append((
excute 13:40:55.791502 line       497                             i, j,
excute 13:40:55.794493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.797485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:40:55.800477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:55.804442 line       494                         if (i == j):
excute 13:40:55.808426 line       496                         i_j_list.append((
excute 13:40:55.811417 line       497                             i, j,
excute 13:40:55.813444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.817402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1)]
excute 13:40:55.820395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:55.823385 line       494                         if (i == j):
excute 13:40:55.826408 line       496                         i_j_list.append((
excute 13:40:55.829400 line       497                             i, j,
excute 13:40:55.832392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.835385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0)]
excute 13:40:55.839343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:55.842334 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:55.845328 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:55.849316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:55.852308 line       494                         if (i == j):
excute 13:40:55.856300 line       496                         i_j_list.append((
excute 13:40:55.859291 line       497                             i, j,
excute 13:40:55.862283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.865275 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1)]
excute 13:40:55.868267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:55.871259 line       494                         if (i == j):
excute 13:40:55.875249 line       496                         i_j_list.append((
excute 13:40:55.878240 line       497                             i, j,
excute 13:40:55.881232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.885221 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0)]
excute 13:40:55.889240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:55.893198 line       494                         if (i == j):
excute 13:40:55.896191 line       496                         i_j_list.append((
excute 13:40:55.899214 line       497                             i, j,
excute 13:40:55.902209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.905197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1)]
excute 13:40:55.908189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:55.912181 line       494                         if (i == j):
excute 13:40:55.916138 line       496                         i_j_list.append((
excute 13:40:55.919160 line       497                             i, j,
excute 13:40:55.922152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.925144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0)]
excute 13:40:55.928137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:55.932094 line       494                         if (i == j):
excute 13:40:55.935087 line       496                         i_j_list.append((
excute 13:40:55.938109 line       497                             i, j,
excute 13:40:55.941102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.944094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:40:55.947085 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:55.950080 line       494                         if (i == j):
excute 13:40:55.954043 line       495                             continue
excute 13:40:55.957060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:55.960051 line       494                         if (i == j):
excute 13:40:55.964012 line       496                         i_j_list.append((
excute 13:40:55.967032 line       497                             i, j,
excute 13:40:55.970026 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.973016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0)]
excute 13:40:55.976009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:55.979000 line       494                         if (i == j):
excute 13:40:55.982959 line       496                         i_j_list.append((
excute 13:40:55.985982 line       497                             i, j,
excute 13:40:55.988943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:55.992964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0)]
excute 13:40:55.995951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:55.998934 line       494                         if (i == j):
excute 13:40:56.001939 line       496                         i_j_list.append((
excute 13:40:56.004932 line       497                             i, j,
excute 13:40:56.008891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.011884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1)]
excute 13:40:56.014874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:56.018864 line       494                         if (i == j):
excute 13:40:56.022853 line       496                         i_j_list.append((
excute 13:40:56.026843 line       497                             i, j,
excute 13:40:56.029866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.032856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0)]
excute 13:40:56.035848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:56.039808 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:56.042830 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:56.045825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:56.048813 line       494                         if (i == j):
excute 13:40:56.052774 line       496                         i_j_list.append((
excute 13:40:56.055795 line       497                             i, j,
excute 13:40:56.058787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.061782 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1)]
excute 13:40:56.064771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:56.067763 line       494                         if (i == j):
excute 13:40:56.071729 line       496                         i_j_list.append((
excute 13:40:56.074745 line       497                             i, j,
excute 13:40:56.077739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.080728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0)]
excute 13:40:56.083721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:56.087693 line       494                         if (i == j):
excute 13:40:56.091702 line       496                         i_j_list.append((
excute 13:40:56.094659 line       497                             i, j,
excute 13:40:56.097654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.100646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1)]
excute 13:40:56.104635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:56.107626 line       494                         if (i == j):
excute 13:40:56.111615 line       496                         i_j_list.append((
excute 13:40:56.114638 line       497                             i, j,
excute 13:40:56.117633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.121588 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0)]
excute 13:40:56.124589 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:56.127572 line       494                         if (i == j):
excute 13:40:56.130596 line       496                         i_j_list.append((
excute 13:40:56.133589 line       497                             i, j,
excute 13:40:56.136583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.139571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:40:56.142563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:56.146528 line       494                         if (i == j):
excute 13:40:56.150512 line       496                         i_j_list.append((
excute 13:40:56.153535 line       497                             i, j,
excute 13:40:56.156527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.159518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:40:56.162510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:56.166470 line       494                         if (i == j):
excute 13:40:56.169492 line       495                             continue
excute 13:40:56.172483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:56.175475 line       494                         if (i == j):
excute 13:40:56.179434 line       496                         i_j_list.append((
excute 13:40:56.182425 line       497                             i, j,
excute 13:40:56.185426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.188409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:40:56.191402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:56.196405 line       494                         if (i == j):
excute 13:40:56.200378 line       496                         i_j_list.append((
excute 13:40:56.203371 line       497                             i, j,
excute 13:40:56.206363 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.209354 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1)]
excute 13:40:56.212347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:56.217333 line       494                         if (i == j):
excute 13:40:56.220326 line       496                         i_j_list.append((
excute 13:40:56.224315 line       497                             i, j,
excute 13:40:56.227307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.230299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0)]
excute 13:40:56.233290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:56.237280 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:40:56.240273 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:56.243262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:56.246256 line       494                         if (i == j):
excute 13:40:56.249248 line       496                         i_j_list.append((
excute 13:40:56.253237 line       497                             i, j,
excute 13:40:56.256229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.263210 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1)]
excute 13:40:56.267199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:56.271203 line       494                         if (i == j):
excute 13:40:56.277173 line       496                         i_j_list.append((
excute 13:40:56.281162 line       497                             i, j,
excute 13:40:56.286148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.289140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0)]
excute 13:40:56.294129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:56.302105 line       494                         if (i == j):
excute 13:40:56.310120 line       496                         i_j_list.append((
excute 13:40:56.314075 line       497                             i, j,
excute 13:40:56.320060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.326076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1)]
excute 13:40:56.338011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:56.348981 line       494                         if (i == j):
excute 13:40:56.352970 line       496                         i_j_list.append((
excute 13:40:56.359952 line       497                             i, j,
excute 13:40:56.362944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.368929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0)]
excute 13:40:56.376919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:56.380895 line       494                         if (i == j):
excute 13:40:56.384884 line       496                         i_j_list.append((
excute 13:40:56.389872 line       497                             i, j,
excute 13:40:56.397850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.406826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:40:56.413808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:56.420789 line       494                         if (i == j):
excute 13:40:56.428767 line       496                         i_j_list.append((
excute 13:40:56.435749 line       497                             i, j,
excute 13:40:56.441734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.449711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:40:56.454698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:56.460682 line       494                         if (i == j):
excute 13:40:56.471654 line       496                         i_j_list.append((
excute 13:40:56.476639 line       497                             i, j,
excute 13:40:56.482627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.488607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:40:56.495588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:56.501584 line       494                         if (i == j):
excute 13:40:56.509551 line       495                             continue
excute 13:40:56.514539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:56.519525 line       494                         if (i == j):
excute 13:40:56.526506 line       496                         i_j_list.append((
excute 13:40:56.534484 line       497                             i, j,
excute 13:40:56.539471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.546453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1)]
excute 13:40:56.553434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:56.559418 line       494                         if (i == j):
excute 13:40:56.566399 line       496                         i_j_list.append((
excute 13:40:56.571387 line       497                             i, j,
excute 13:40:56.576372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.581360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0)]
excute 13:40:56.587343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:56.592330 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:40:56.597316 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:56.602303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:56.608288 line       494                         if (i == j):
excute 13:40:56.614271 line       496                         i_j_list.append((
excute 13:40:56.620255 line       497                             i, j,
excute 13:40:56.626240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.631225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1)]
excute 13:40:56.637210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:56.643194 line       494                         if (i == j):
excute 13:40:56.649177 line       496                         i_j_list.append((
excute 13:40:56.657157 line       497                             i, j,
excute 13:40:56.663140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.668128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0)]
excute 13:40:56.675108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:56.681095 line       494                         if (i == j):
excute 13:40:56.689073 line       496                         i_j_list.append((
excute 13:40:56.694057 line       497                             i, j,
excute 13:40:56.700042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.706026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1)]
excute 13:40:56.714007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:56.720986 line       494                         if (i == j):
excute 13:40:56.727969 line       496                         i_j_list.append((
excute 13:40:56.731958 line       497                             i, j,
excute 13:40:56.734949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.737941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0)]
excute 13:40:56.740932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:56.746916 line       494                         if (i == j):
excute 13:40:56.753899 line       496                         i_j_list.append((
excute 13:40:56.756890 line       497                             i, j,
excute 13:40:56.760880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.766865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:40:56.769857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:56.773846 line       494                         if (i == j):
excute 13:40:56.777834 line       496                         i_j_list.append((
excute 13:40:56.780826 line       497                             i, j,
excute 13:40:56.783817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.786815 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:40:56.789802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:56.792826 line       494                         if (i == j):
excute 13:40:56.796815 line       496                         i_j_list.append((
excute 13:40:56.799807 line       497                             i, j,
excute 13:40:56.802798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.805789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:40:56.808782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:56.812741 line       494                         if (i == j):
excute 13:40:56.818726 line       496                         i_j_list.append((
excute 13:40:56.821748 line       497                             i, j,
excute 13:40:56.824740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.827733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:40:56.837739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:56.841731 line       494                         if (i == j):
excute 13:40:56.844723 line       495                             continue
excute 13:40:56.847715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:56.850709 line       494                         if (i == j):
excute 13:40:56.855695 line       496                         i_j_list.append((
excute 13:40:56.858699 line       497                             i, j,
excute 13:40:56.861678 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.864671 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:40:56.867663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:56.870654 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:40:56.874650 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:56.877636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:56.882624 line       494                         if (i == j):
excute 13:40:56.885614 line       496                         i_j_list.append((
excute 13:40:56.889605 line       497                             i, j,
excute 13:40:56.895619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.899578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1)]
excute 13:40:56.906590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:56.910548 line       494                         if (i == j):
excute 13:40:56.913540 line       496                         i_j_list.append((
excute 13:40:56.920525 line       497                             i, j,
excute 13:40:56.923513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.927504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0)]
excute 13:40:56.930526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:56.934486 line       494                         if (i == j):
excute 13:40:56.938473 line       496                         i_j_list.append((
excute 13:40:56.941466 line       497                             i, j,
excute 13:40:56.944458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.947449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1)]
excute 13:40:56.950441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:56.953433 line       494                         if (i == j):
excute 13:40:56.957424 line       496                         i_j_list.append((
excute 13:40:56.960446 line       497                             i, j,
excute 13:40:56.963438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.966429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0)]
excute 13:40:56.969421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:56.973414 line       494                         if (i == j):
excute 13:40:56.976397 line       496                         i_j_list.append((
excute 13:40:56.979395 line       497                             i, j,
excute 13:40:56.982387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:56.985379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:40:56.988371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:56.992361 line       494                         if (i == j):
excute 13:40:56.995352 line       496                         i_j_list.append((
excute 13:40:56.998345 line       497                             i, j,
excute 13:40:57.001336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:57.004332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:40:57.008290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:57.011310 line       494                         if (i == j):
excute 13:40:57.015269 line       496                         i_j_list.append((
excute 13:40:57.018291 line       497                             i, j,
excute 13:40:57.023249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:57.026270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:40:57.030228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:57.033222 line       494                         if (i == j):
excute 13:40:57.036250 line       496                         i_j_list.append((
excute 13:40:57.039235 line       497                             i, j,
excute 13:40:57.043192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:57.046186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:40:57.049178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:57.054197 line       494                         if (i == j):
excute 13:40:57.057187 line       496                         i_j_list.append((
excute 13:40:57.060181 line       497                             i, j,
excute 13:40:57.063171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:57.066163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 1), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 1), (0, 9, 2, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 1), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 1), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 1), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 1), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 1), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 1), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 1), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 1), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 1), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 1)]
excute 13:40:57.069155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:57.073115 line       494                         if (i == j):
excute 13:40:57.076140 line       495                             continue
excute 13:40:57.080095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:57.083088 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:40:57.087077 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(3, 1, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 9, 1, 0), (8, 1, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (3, 0, 1, 1), (3, 2, 1, 1), (3, 8, 1, 1), (8, 0, 1, 1), (8, 2, 1, 1), (0, 1, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 9, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 9, 2, 0), (4, 1, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 9, 2, 0), (7, 1, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 9, 2, 0), (0, 2, 2, 1), (0, 8, 2, 1), (2, 0, 2, 1), (2, 8, 2, 1), (4, 0, 2, 1), (4, 2, 2, 1), (4, 8, 2, 1), (7, 0, 2, 1), (7, 2, 2, 1), (7, 8, 2, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 9, 3, 0), (5, 1, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 9, 3, 0), (9, 1, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (1, 0, 3, 1), (1, 2, 3, 1), (1, 8, 3, 1), (5, 0, 3, 1), (5, 2, 3, 1), (5, 8, 3, 1), (9, 0, 3, 1), (9, 2, 3, 1), (9, 8, 3, 1), (6, 1, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 9, 4, 0), (6, 0, 4, 1), (6, 2, 4, 1), (6, 8, 4, 1)]
excute 13:40:57.091067 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:40:57.094059 line       505                     if (self.RELOCATE):
excute 13:40:57.098048 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:40:57.101040 line       505                     if (self.RELOCATE):
excute 13:40:57.105030 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:40:57.108022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:40:57.111013 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:57.115002 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:57.118993 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.122981 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:40:57.126969 line       556                     i = i_j[0]
excute 13:40:57.129963 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:57.133952 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.136945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:40:57.140933 line       556                     i = i_j[0]
excute 13:40:57.143925 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.147914 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.151916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:40:57.154896 line       556                     i = i_j[0]
excute 13:40:57.158884 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.161878 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.165866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:40:57.168858 line       556                     i = i_j[0]
excute 13:40:57.172851 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:57.175840 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.179830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:40:57.184815 line       556                     i = i_j[0]
excute 13:40:57.188811 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:57.191798 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.194790 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:40:57.198777 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:57.201770 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:57.205760 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.209749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:40:57.213739 line       556                     i = i_j[0]
excute 13:40:57.216730 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:57.219722 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.223711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:40:57.226704 line       556                     i = i_j[0]
excute 13:40:57.231690 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:57.235681 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.239669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:40:57.243659 line       556                     i = i_j[0]
excute 13:40:57.247649 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.250650 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.253632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:40:57.257622 line       556                     i = i_j[0]
excute 13:40:57.260613 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.264601 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.268591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:40:57.271583 line       556                     i = i_j[0]
excute 13:40:57.275572 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:57.278566 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.281557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:40:57.284548 line       556                     i = i_j[0]
excute 13:40:57.288537 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:57.291530 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.294522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 1)
excute 13:40:57.297514 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:40:57.301505 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:57.304496 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.308484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 1)
excute 13:40:57.311476 line       556                     i = i_j[0]
excute 13:40:57.314468 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:57.317461 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.320453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 1)
excute 13:40:57.324442 line       556                     i = i_j[0]
excute 13:40:57.329428 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:57.337407 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.342394 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 1)
excute 13:40:57.345386 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:40:57.349406 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:57.353366 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.357387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 1)
excute 13:40:57.360346 line       556                     i = i_j[0]
excute 13:40:57.364335 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:57.367330 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.371318 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:40:57.375307 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:57.378299 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:57.382289 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.386277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:40:57.389270 line       556                     i = i_j[0]
excute 13:40:57.393260 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:57.396251 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.400240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:40:57.403231 line       556                     i = i_j[0]
excute 13:40:57.407221 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:57.410212 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.413206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:40:57.416197 line       556                     i = i_j[0]
excute 13:40:57.419189 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.422180 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.426169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:40:57.429161 line       556                     i = i_j[0]
excute 13:40:57.432154 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.437141 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.441130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:40:57.444120 line       556                     i = i_j[0]
excute 13:40:57.448122 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:57.451102 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.457087 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:40:57.460078 line       556                     i = i_j[0]
excute 13:40:57.464068 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:57.467091 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.471050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:40:57.474073 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:57.477066 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:57.481024 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.484047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:40:57.487037 line       556                     i = i_j[0]
excute 13:40:57.490998 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:57.494019 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.497012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:40:57.500003 line       556                     i = i_j[0]
excute 13:40:57.503962 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:57.506954 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.510945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:40:57.513966 line       556                     i = i_j[0]
excute 13:40:57.516958 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.519950 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.523909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:40:57.527898 line       556                     i = i_j[0]
excute 13:40:57.530891 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.534881 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.541892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:40:57.548842 line       556                     i = i_j[0]
excute 13:40:57.552863 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:57.556821 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.563802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:40:57.568813 line       556                     i = i_j[0]
excute 13:40:57.572778 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:57.575794 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.578792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:40:57.582750 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:57.585742 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:57.589733 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.592726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:40:57.595718 line       556                     i = i_j[0]
excute 13:40:57.599707 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:57.603696 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.606687 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:40:57.609681 line       556                     i = i_j[0]
excute 13:40:57.613670 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.616661 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.619654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:40:57.623643 line       556                     i = i_j[0]
excute 13:40:57.626635 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.629627 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.633630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:40:57.636608 line       556                     i = i_j[0]
excute 13:40:57.642591 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:57.647609 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.651569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:40:57.654591 line       556                     i = i_j[0]
excute 13:40:57.658550 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:57.661571 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.664563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:40:57.667557 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:57.671514 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:57.674536 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.678496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:40:57.681518 line       556                     i = i_j[0]
excute 13:40:57.684511 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:57.687501 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.691461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:40:57.694485 line       556                     i = i_j[0]
excute 13:40:57.697475 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:57.700468 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.704427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:40:57.707450 line       556                     i = i_j[0]
excute 13:40:57.710440 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.715397 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.718397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:40:57.722378 line       556                     i = i_j[0]
excute 13:40:57.725369 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.729360 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.732350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:40:57.735345 line       556                     i = i_j[0]
excute 13:40:57.739334 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:57.743326 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.748308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 1)
excute 13:40:57.751301 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:40:57.755291 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:57.759280 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.763271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 1)
excute 13:40:57.767291 line       556                     i = i_j[0]
excute 13:40:57.770288 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:57.773273 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.777263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:40:57.780253 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:40:57.784215 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:57.787236 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.791228 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 27
excute 13:40:57.794222 line       560                         if (t_tmp > self.TIME):
excute 13:40:57.797210 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:57.800200 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 16
excute 13:40:57.803193 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:57.807152 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 10
excute 13:40:57.810174 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:57.813166 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:40:57.816158 line       556                     i = i_j[0]
excute 13:40:57.820117 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:57.823140 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.826135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 1)
excute 13:40:57.829123 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:40:57.833083 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:57.837072 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.841062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 1)
excute 13:40:57.844054 line       556                     i = i_j[0]
excute 13:40:57.848043 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:57.851064 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.855025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 1)
excute 13:40:57.858048 line       556                     i = i_j[0]
excute 13:40:57.861038 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:57.864030 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.868021 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 1)
excute 13:40:57.871011 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:40:57.874003 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:57.877994 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.880985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 1)
excute 13:40:57.883976 line       556                     i = i_j[0]
excute 13:40:57.887936 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:57.890959 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.893950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 1)
excute 13:40:57.896942 line       556                     i = i_j[0]
excute 13:40:57.900900 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:57.903924 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.908879 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:40:57.913866 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:57.919850 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:57.924837 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.930821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:40:57.935808 line       556                     i = i_j[0]
excute 13:40:57.941792 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:57.946777 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.952762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:40:57.957749 line       556                     i = i_j[0]
excute 13:40:57.963732 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:57.968719 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:57.975700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:40:57.980687 line       556                     i = i_j[0]
excute 13:40:57.985674 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:57.995647 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.001633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:40:58.008613 line       556                     i = i_j[0]
excute 13:40:58.014597 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:58.019583 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.025567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:40:58.030554 line       556                     i = i_j[0]
excute 13:40:58.036538 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:58.040527 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.043521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:40:58.046542 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:58.050501 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:58.053524 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.057483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:40:58.061473 line       556                     i = i_j[0]
excute 13:40:58.064464 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:58.067456 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.071445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:40:58.075434 line       556                     i = i_j[0]
excute 13:40:58.079423 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:58.082416 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.086406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 0)
excute 13:40:58.090395 line       556                     i = i_j[0]
excute 13:40:58.093387 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:58.097376 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.100368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:40:58.104357 line       556                     i = i_j[0]
excute 13:40:58.107350 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:58.110341 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.114331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:40:58.117323 line       556                     i = i_j[0]
excute 13:40:58.120314 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:58.123308 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.127296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:40:58.130287 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:58.134277 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:58.137269 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.141258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:40:58.144251 line       556                     i = i_j[0]
excute 13:40:58.148240 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:58.151232 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.156220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:40:58.159211 line       556                     i = i_j[0]
excute 13:40:58.163201 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:58.166192 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.170181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:40:58.173178 line       556                     i = i_j[0]
excute 13:40:58.177163 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:58.181151 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.184144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:40:58.187135 line       556                     i = i_j[0]
excute 13:40:58.196111 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:40:58.199104 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.202096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:40:58.205087 line       556                     i = i_j[0]
excute 13:40:58.209077 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:58.213065 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.218258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 1)
excute 13:40:58.222245 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:40:58.225228 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:58.229217 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.232238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 1)
excute 13:40:58.235232 line       556                     i = i_j[0]
excute 13:40:58.239190 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:58.242212 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.245207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 1)
excute 13:40:58.248196 line       556                     i = i_j[0]
excute 13:40:58.252156 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:58.255177 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.259137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 1)
excute 13:40:58.262128 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:40:58.265123 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:58.269110 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.272101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 1)
excute 13:40:58.276091 line       556                     i = i_j[0]
excute 13:40:58.280083 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:58.283103 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.287062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 1)
excute 13:40:58.291083 line       556                     i = i_j[0]
excute 13:40:58.294074 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:58.297065 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.301025 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 28
excute 13:40:58.304052 line       560                         if (t_tmp > self.TIME):
excute 13:40:58.307039 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:58.310030 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 17
excute 13:40:58.313023 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:58.316982 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 11
excute 13:40:58.320004 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:58.322996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 1)
excute 13:40:58.327953 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:40:58.333938 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:58.342913 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.347901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 1)
excute 13:40:58.350893 line       556                     i = i_j[0]
excute 13:40:58.355887 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:58.360864 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.364854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 1)
excute 13:40:58.367876 line       556                     i = i_j[0]
excute 13:40:58.371835 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:58.374829 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.378818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:40:58.381809 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:40:58.387792 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:40:58.390816 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.394775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:40:58.398764 line       556                     i = i_j[0]
excute 13:40:58.402760 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:40:58.405745 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.410732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:40:58.415717 line       556                     i = i_j[0]
excute 13:40:58.419709 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:40:58.426688 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.430677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:40:58.433671 line       556                     i = i_j[0]
excute 13:40:58.436660 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:40:58.440652 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.444643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:40:58.447631 line       556                     i = i_j[0]
excute 13:40:58.450625 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:40:58.454614 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.457607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:40:58.460598 line       556                     i = i_j[0]
excute 13:40:58.464588 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:40:58.467580 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.470573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 1)
excute 13:40:58.473563 line       556                     i = i_j[0]
excute 13:40:58.477552 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:40:58.480545 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.483537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 1)
excute 13:40:58.487527 line       556                     i = i_j[0]
excute 13:40:58.491540 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:40:58.494517 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.497513 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 30
excute 13:40:58.500524 line       560                         if (t_tmp > self.TIME):
excute 13:40:58.504481 line       563                             if (available_vhecles[i][t] == 0):
excute 13:40:58.507471 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 18
excute 13:40:58.510466 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:40:58.517445 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 12
excute 13:40:58.524430 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:40:58.528416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 1)
excute 13:40:58.531410 line       556                     i = i_j[0]
excute 13:40:58.538398 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:40:58.541383 line       558                     if (i != j and demands[t][i][j]):
excute 13:40:58.545371 line       555                 for i_j in i_j_list:
excute 13:40:58.548396 line       581             self.write_matrix(
excute 13:40:58.551390 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:40:58.554377 line       583                 result_file_path,
excute 13:40:58.557369 line       584                 mode='a'
excute 13:40:58.564320 line       488         for t in time_steps:
excute Modified var:.. t = 19
excute 13:40:58.568341 line       489             if (t != self.TIME + 1):
excute 13:40:58.574306 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:40:58.578285 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:40:58.581276 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:58.585264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:58.590251 line       494                         if (i == j):
excute 13:40:58.596235 line       495                             continue
excute 13:40:58.602220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:58.606211 line       494                         if (i == j):
excute 13:40:58.611197 line       496                         i_j_list.append((
excute 13:40:58.615186 line       497                             i, j,
excute 13:40:58.618176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.621171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:40:58.624160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:58.628150 line       494                         if (i == j):
excute 13:40:58.632140 line       496                         i_j_list.append((
excute 13:40:58.635132 line       497                             i, j,
excute 13:40:58.638122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.642113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:40:58.653083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:58.660065 line       494                         if (i == j):
excute 13:40:58.668046 line       496                         i_j_list.append((
excute 13:40:58.673051 line       497                             i, j,
excute 13:40:58.679015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.682005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:40:58.684999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:58.688989 line       494                         if (i == j):
excute 13:40:58.695969 line       496                         i_j_list.append((
excute 13:40:58.701953 line       497                             i, j,
excute 13:40:58.704946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.707936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:40:58.711925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:58.715917 line       494                         if (i == j):
excute 13:40:58.718908 line       496                         i_j_list.append((
excute 13:40:58.722902 line       497                             i, j,
excute 13:40:58.725892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.728880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:40:58.731873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:58.735862 line       494                         if (i == j):
excute 13:40:58.739852 line       496                         i_j_list.append((
excute 13:40:58.743840 line       497                             i, j,
excute 13:40:58.746833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.751819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:40:58.756841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:58.762789 line       494                         if (i == j):
excute 13:40:58.766780 line       496                         i_j_list.append((
excute 13:40:58.769772 line       497                             i, j,
excute 13:40:58.772763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.778747 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:40:58.783734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:58.787723 line       494                         if (i == j):
excute 13:40:58.790715 line       496                         i_j_list.append((
excute 13:40:58.795703 line       497                             i, j,
excute 13:40:58.799692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.803680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:40:58.806672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:58.809665 line       494                         if (i == j):
excute 13:40:58.813654 line       496                         i_j_list.append((
excute 13:40:58.816646 line       497                             i, j,
excute 13:40:58.818640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.821631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:40:58.824624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:58.828614 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:40:58.831606 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:40:58.834598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:58.838587 line       494                         if (i == j):
excute 13:40:58.841579 line       496                         i_j_list.append((
excute 13:40:58.844570 line       497                             i, j,
excute 13:40:58.847562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.850554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1)]
excute 13:40:58.853546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:58.857537 line       494                         if (i == j):
excute 13:40:58.860560 line       495                             continue
excute 13:40:58.863551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:58.866545 line       494                         if (i == j):
excute 13:40:58.870502 line       496                         i_j_list.append((
excute 13:40:58.872528 line       497                             i, j,
excute 13:40:58.875488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.879477 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0)]
excute 13:40:58.884466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:58.889451 line       494                         if (i == j):
excute 13:40:58.893444 line       496                         i_j_list.append((
excute 13:40:58.899424 line       497                             i, j,
excute 13:40:58.904411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.908401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:40:58.912390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:58.915383 line       494                         if (i == j):
excute 13:40:58.919370 line       496                         i_j_list.append((
excute 13:40:58.922394 line       497                             i, j,
excute 13:40:58.925386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.928379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:40:58.931372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:58.935361 line       494                         if (i == j):
excute 13:40:58.938321 line       496                         i_j_list.append((
excute 13:40:58.941343 line       497                             i, j,
excute 13:40:58.944335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.947329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:40:58.950323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:58.953312 line       494                         if (i == j):
excute 13:40:58.957269 line       496                         i_j_list.append((
excute 13:40:58.960293 line       497                             i, j,
excute 13:40:58.963287 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.966276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1)]
excute 13:40:58.969269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:58.972260 line       494                         if (i == j):
excute 13:40:58.976220 line       496                         i_j_list.append((
excute 13:40:58.979245 line       497                             i, j,
excute 13:40:58.982233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:58.985226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0)]
excute 13:40:58.988218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:58.991210 line       494                         if (i == j):
excute 13:40:58.995173 line       496                         i_j_list.append((
excute 13:40:58.998162 line       497                             i, j,
excute 13:40:59.001154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.004145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:40:59.009131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:59.013121 line       494                         if (i == j):
excute 13:40:59.016113 line       496                         i_j_list.append((
excute 13:40:59.019106 line       497                             i, j,
excute 13:40:59.022098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.026086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:40:59.029078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:59.032070 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:40:59.035095 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:59.038089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:59.042043 line       494                         if (i == j):
excute 13:40:59.045046 line       496                         i_j_list.append((
excute 13:40:59.049025 line       497                             i, j,
excute 13:40:59.052017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.055010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1)]
excute 13:40:59.058001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:59.061992 line       494                         if (i == j):
excute 13:40:59.065013 line       496                         i_j_list.append((
excute 13:40:59.067975 line       497                             i, j,
excute 13:40:59.070967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.073959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:40:59.076951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:59.080941 line       494                         if (i == j):
excute 13:40:59.083933 line       495                             continue
excute 13:40:59.087922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:59.090914 line       494                         if (i == j):
excute 13:40:59.093906 line       496                         i_j_list.append((
excute 13:40:59.096898 line       497                             i, j,
excute 13:40:59.099889 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.102884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:40:59.106870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:59.110859 line       494                         if (i == j):
excute 13:40:59.113853 line       496                         i_j_list.append((
excute 13:40:59.116844 line       497                             i, j,
excute 13:40:59.119837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.123829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:40:59.126818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:59.130822 line       494                         if (i == j):
excute 13:40:59.133798 line       496                         i_j_list.append((
excute 13:40:59.136791 line       497                             i, j,
excute 13:40:59.139783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.142775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:40:59.145767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:59.149756 line       494                         if (i == j):
excute 13:40:59.153746 line       496                         i_j_list.append((
excute 13:40:59.157735 line       497                             i, j,
excute 13:40:59.160727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.163719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:40:59.167707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:59.170700 line       494                         if (i == j):
excute 13:40:59.173693 line       496                         i_j_list.append((
excute 13:40:59.176684 line       497                             i, j,
excute 13:40:59.179676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.182666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:40:59.186658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:59.189664 line       494                         if (i == j):
excute 13:40:59.192642 line       496                         i_j_list.append((
excute 13:40:59.196631 line       497                             i, j,
excute 13:40:59.199624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.202615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:40:59.205606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:59.208598 line       494                         if (i == j):
excute 13:40:59.214582 line       496                         i_j_list.append((
excute 13:40:59.217575 line       497                             i, j,
excute 13:40:59.221564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.224557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:40:59.227549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:59.230540 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:40:59.233532 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:59.237521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:59.240514 line       494                         if (i == j):
excute 13:40:59.244502 line       496                         i_j_list.append((
excute 13:40:59.247495 line       497                             i, j,
excute 13:40:59.250487 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.253479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1)]
excute 13:40:59.257467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:59.260459 line       494                         if (i == j):
excute 13:40:59.264464 line       496                         i_j_list.append((
excute 13:40:59.267440 line       497                             i, j,
excute 13:40:59.270432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.273425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0)]
excute 13:40:59.276417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:59.280407 line       494                         if (i == j):
excute 13:40:59.284394 line       496                         i_j_list.append((
excute 13:40:59.288387 line       497                             i, j,
excute 13:40:59.293373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.299355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:40:59.303346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:59.306337 line       494                         if (i == j):
excute 13:40:59.310327 line       495                             continue
excute 13:40:59.313319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:59.317307 line       494                         if (i == j):
excute 13:40:59.320299 line       496                         i_j_list.append((
excute 13:40:59.323322 line       497                             i, j,
excute 13:40:59.328279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.336259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:40:59.339250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:59.343242 line       494                         if (i == j):
excute 13:40:59.347258 line       496                         i_j_list.append((
excute 13:40:59.350250 line       497                             i, j,
excute 13:40:59.354209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.357200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:40:59.362186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:59.369170 line       494                         if (i == j):
excute 13:40:59.373160 line       496                         i_j_list.append((
excute 13:40:59.378145 line       497                             i, j,
excute 13:40:59.381138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.385126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1)]
excute 13:40:59.389116 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:59.392112 line       494                         if (i == j):
excute 13:40:59.395130 line       496                         i_j_list.append((
excute 13:40:59.398122 line       497                             i, j,
excute 13:40:59.402080 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.405074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0)]
excute 13:40:59.408065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:59.412054 line       494                         if (i == j):
excute 13:40:59.415046 line       496                         i_j_list.append((
excute 13:40:59.419039 line       497                             i, j,
excute 13:40:59.422058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.425051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:40:59.428042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:59.432003 line       494                         if (i == j):
excute 13:40:59.434992 line       496                         i_j_list.append((
excute 13:40:59.437985 line       497                             i, j,
excute 13:40:59.440978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.443970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:40:59.446961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:59.450950 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:40:59.453943 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:59.457932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:59.460922 line       494                         if (i == j):
excute 13:40:59.469899 line       496                         i_j_list.append((
excute 13:40:59.474885 line       497                             i, j,
excute 13:40:59.480870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.485857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1)]
excute 13:40:59.488850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:59.493867 line       494                         if (i == j):
excute 13:40:59.496858 line       496                         i_j_list.append((
excute 13:40:59.499850 line       497                             i, j,
excute 13:40:59.507225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.510245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0)]
excute 13:40:59.513238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:59.517196 line       494                         if (i == j):
excute 13:40:59.521186 line       496                         i_j_list.append((
excute 13:40:59.525177 line       497                             i, j,
excute 13:40:59.528168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.531161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:40:59.534152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:59.538140 line       494                         if (i == j):
excute 13:40:59.541132 line       496                         i_j_list.append((
excute 13:40:59.544159 line       497                             i, j,
excute 13:40:59.547147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.550139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:40:59.553132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:59.558088 line       494                         if (i == j):
excute 13:40:59.561111 line       495                             continue
excute 13:40:59.564101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:59.567095 line       494                         if (i == j):
excute 13:40:59.571060 line       496                         i_j_list.append((
excute 13:40:59.574076 line       497                             i, j,
excute 13:40:59.577069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.580059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:40:59.583051 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:59.586042 line       494                         if (i == j):
excute 13:40:59.590001 line       496                         i_j_list.append((
excute 13:40:59.592992 line       497                             i, j,
excute 13:40:59.595984 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.600973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:40:59.603965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:59.607953 line       494                         if (i == j):
excute 13:40:59.610947 line       496                         i_j_list.append((
excute 13:40:59.616929 line       497                             i, j,
excute 13:40:59.619922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.624917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:40:59.627900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:59.630892 line       494                         if (i == j):
excute 13:40:59.634883 line       496                         i_j_list.append((
excute 13:40:59.637876 line       497                             i, j,
excute 13:40:59.640867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.643858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:40:59.646851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:59.650870 line       494                         if (i == j):
excute 13:40:59.654829 line       496                         i_j_list.append((
excute 13:40:59.657851 line       497                             i, j,
excute 13:40:59.660847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.663839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:40:59.666828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:59.670785 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:40:59.672810 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:59.676770 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:59.679796 line       494                         if (i == j):
excute 13:40:59.682785 line       496                         i_j_list.append((
excute 13:40:59.685776 line       497                             i, j,
excute 13:40:59.688768 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.691760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1)]
excute 13:40:59.694752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:59.698743 line       494                         if (i == j):
excute 13:40:59.701733 line       496                         i_j_list.append((
excute 13:40:59.704725 line       497                             i, j,
excute 13:40:59.707718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.710711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0)]
excute 13:40:59.714699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:59.718658 line       494                         if (i == j):
excute 13:40:59.721650 line       496                         i_j_list.append((
excute 13:40:59.726669 line       497                             i, j,
excute 13:40:59.729627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.732621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:40:59.735613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:59.739602 line       494                         if (i == j):
excute 13:40:59.742594 line       496                         i_j_list.append((
excute 13:40:59.745587 line       497                             i, j,
excute 13:40:59.749576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.752568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:40:59.756556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:59.759549 line       494                         if (i == j):
excute 13:40:59.763538 line       496                         i_j_list.append((
excute 13:40:59.766531 line       497                             i, j,
excute 13:40:59.769523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.772515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:40:59.776502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:59.779495 line       494                         if (i == j):
excute 13:40:59.783486 line       495                             continue
excute 13:40:59.786477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:59.789469 line       494                         if (i == j):
excute 13:40:59.794456 line       496                         i_j_list.append((
excute 13:40:59.797477 line       497                             i, j,
excute 13:40:59.800470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.803463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1)]
excute 13:40:59.806457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:40:59.810412 line       494                         if (i == j):
excute 13:40:59.813435 line       496                         i_j_list.append((
excute 13:40:59.816427 line       497                             i, j,
excute 13:40:59.819421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.822411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0)]
excute 13:40:59.825402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:40:59.830359 line       494                         if (i == j):
excute 13:40:59.833381 line       496                         i_j_list.append((
excute 13:40:59.836375 line       497                             i, j,
excute 13:40:59.840332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.843324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:40:59.845350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:40:59.849308 line       494                         if (i == j):
excute 13:40:59.853329 line       496                         i_j_list.append((
excute 13:40:59.856320 line       497                             i, j,
excute 13:40:59.859312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.862304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:40:59.865298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:40:59.869255 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:40:59.871285 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:40:59.875239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:40:59.878261 line       494                         if (i == j):
excute 13:40:59.881253 line       496                         i_j_list.append((
excute 13:40:59.884249 line       497                             i, j,
excute 13:40:59.887241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.890230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1)]
excute 13:40:59.893223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:40:59.897181 line       494                         if (i == j):
excute 13:40:59.900206 line       496                         i_j_list.append((
excute 13:40:59.903198 line       497                             i, j,
excute 13:40:59.906186 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.909179 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0)]
excute 13:40:59.912171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:40:59.917126 line       494                         if (i == j):
excute 13:40:59.920150 line       496                         i_j_list.append((
excute 13:40:59.923141 line       497                             i, j,
excute 13:40:59.926136 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.932087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:40:59.935079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:40:59.939068 line       494                         if (i == j):
excute 13:40:59.942060 line       496                         i_j_list.append((
excute 13:40:59.945053 line       497                             i, j,
excute 13:40:59.948045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.951037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:40:59.955027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:40:59.959020 line       494                         if (i == j):
excute 13:40:59.963005 line       496                         i_j_list.append((
excute 13:40:59.965000 line       497                             i, j,
excute 13:40:59.968989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.971982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:40:59.974974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:40:59.977965 line       494                         if (i == j):
excute 13:40:59.981962 line       496                         i_j_list.append((
excute 13:40:59.984947 line       497                             i, j,
excute 13:40:59.987939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:40:59.990932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:40:59.993922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:40:59.997913 line       494                         if (i == j):
excute 13:41:00.000903 line       495                             continue
excute 13:41:00.009879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:00.014865 line       494                         if (i == j):
excute 13:41:00.017857 line       496                         i_j_list.append((
excute 13:41:00.021846 line       497                             i, j,
excute 13:41:00.026833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.030824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:41:00.034813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:00.038803 line       494                         if (i == j):
excute 13:41:00.042792 line       496                         i_j_list.append((
excute 13:41:00.045783 line       497                             i, j,
excute 13:41:00.047809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.050800 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:41:00.054794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:00.057782 line       494                         if (i == j):
excute 13:41:00.061741 line       496                         i_j_list.append((
excute 13:41:00.064768 line       497                             i, j,
excute 13:41:00.067758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.070750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:41:00.073738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:00.076731 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:00.079723 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:00.083682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:00.086709 line       494                         if (i == j):
excute 13:41:00.090664 line       496                         i_j_list.append((
excute 13:41:00.093655 line       497                             i, j,
excute 13:41:00.095680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.098675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1)]
excute 13:41:00.102663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:00.105629 line       494                         if (i == j):
excute 13:41:00.109612 line       496                         i_j_list.append((
excute 13:41:00.112606 line       497                             i, j,
excute 13:41:00.115595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.118589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0)]
excute 13:41:00.122579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:00.126569 line       494                         if (i == j):
excute 13:41:00.130556 line       496                         i_j_list.append((
excute 13:41:00.133549 line       497                             i, j,
excute 13:41:00.137538 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.140560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:41:00.143552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:00.147512 line       494                         if (i == j):
excute 13:41:00.150538 line       496                         i_j_list.append((
excute 13:41:00.153527 line       497                             i, j,
excute 13:41:00.157515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.160507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:41:00.163501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:00.166495 line       494                         if (i == j):
excute 13:41:00.170450 line       496                         i_j_list.append((
excute 13:41:00.173472 line       497                             i, j,
excute 13:41:00.176464 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.179458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:41:00.184413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:00.188403 line       494                         if (i == j):
excute 13:41:00.191403 line       496                         i_j_list.append((
excute 13:41:00.194387 line       497                             i, j,
excute 13:41:00.197379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.200371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:41:00.203362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:00.207353 line       494                         if (i == j):
excute 13:41:00.211342 line       496                         i_j_list.append((
excute 13:41:00.214331 line       497                             i, j,
excute 13:41:00.218323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.221314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1)]
excute 13:41:00.224307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:00.228296 line       494                         if (i == j):
excute 13:41:00.232286 line       495                             continue
excute 13:41:00.235278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:00.240263 line       494                         if (i == j):
excute 13:41:00.244254 line       496                         i_j_list.append((
excute 13:41:00.247244 line       497                             i, j,
excute 13:41:00.249240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.253229 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0)]
excute 13:41:00.256221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:00.260211 line       494                         if (i == j):
excute 13:41:00.263203 line       496                         i_j_list.append((
excute 13:41:00.266195 line       497                             i, j,
excute 13:41:00.269187 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.272178 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:41:00.276169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:00.280157 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:00.283184 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:00.286175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:00.289163 line       494                         if (i == j):
excute 13:41:00.293125 line       496                         i_j_list.append((
excute 13:41:00.297113 line       497                             i, j,
excute 13:41:00.300105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.303096 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1)]
excute 13:41:00.306088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:00.309080 line       494                         if (i == j):
excute 13:41:00.313070 line       496                         i_j_list.append((
excute 13:41:00.317057 line       497                             i, j,
excute 13:41:00.320049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.327031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0)]
excute 13:41:00.337006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:00.340995 line       494                         if (i == j):
excute 13:41:00.347976 line       496                         i_j_list.append((
excute 13:41:00.350967 line       497                             i, j,
excute 13:41:00.354957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.357947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:41:00.360941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:00.364931 line       494                         if (i == j):
excute 13:41:00.368921 line       496                         i_j_list.append((
excute 13:41:00.371913 line       497                             i, j,
excute 13:41:00.374904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.377896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:41:00.381887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:00.385875 line       494                         if (i == j):
excute 13:41:00.388873 line       496                         i_j_list.append((
excute 13:41:00.391858 line       497                             i, j,
excute 13:41:00.395847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.398839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:41:00.401831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:00.404824 line       494                         if (i == j):
excute 13:41:00.408815 line       496                         i_j_list.append((
excute 13:41:00.411805 line       497                             i, j,
excute 13:41:00.414796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.417787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:41:00.421779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:00.424768 line       494                         if (i == j):
excute 13:41:00.428758 line       496                         i_j_list.append((
excute 13:41:00.431751 line       497                             i, j,
excute 13:41:00.438732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.441726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1)]
excute 13:41:00.446711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:00.449702 line       494                         if (i == j):
excute 13:41:00.453698 line       496                         i_j_list.append((
excute 13:41:00.456715 line       497                             i, j,
excute 13:41:00.460674 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.463665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0)]
excute 13:41:00.466671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:00.469649 line       494                         if (i == j):
excute 13:41:00.473641 line       495                             continue
excute 13:41:00.476632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:00.479624 line       494                         if (i == j):
excute 13:41:00.483613 line       496                         i_j_list.append((
excute 13:41:00.486606 line       497                             i, j,
excute 13:41:00.489597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.493586 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:41:00.496581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:00.499571 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:00.502563 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:00.506552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:00.510542 line       494                         if (i == j):
excute 13:41:00.514531 line       496                         i_j_list.append((
excute 13:41:00.517522 line       497                             i, j,
excute 13:41:00.520515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.523506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1)]
excute 13:41:00.526499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:00.530488 line       494                         if (i == j):
excute 13:41:00.534477 line       496                         i_j_list.append((
excute 13:41:00.538466 line       497                             i, j,
excute 13:41:00.540462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.544451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0)]
excute 13:41:00.548439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:00.554424 line       494                         if (i == j):
excute 13:41:00.558414 line       496                         i_j_list.append((
excute 13:41:00.561405 line       497                             i, j,
excute 13:41:00.564397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.567389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:41:00.570381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:00.573374 line       494                         if (i == j):
excute 13:41:00.577363 line       496                         i_j_list.append((
excute 13:41:00.580355 line       497                             i, j,
excute 13:41:00.583346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.586338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:41:00.589330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:00.593319 line       494                         if (i == j):
excute 13:41:00.596313 line       496                         i_j_list.append((
excute 13:41:00.599303 line       497                             i, j,
excute 13:41:00.602295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.605287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:41:00.608279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:00.612269 line       494                         if (i == j):
excute 13:41:00.615291 line       496                         i_j_list.append((
excute 13:41:00.618287 line       497                             i, j,
excute 13:41:00.621279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.624268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:41:00.627261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:00.631218 line       494                         if (i == j):
excute 13:41:00.634243 line       496                         i_j_list.append((
excute 13:41:00.638229 line       497                             i, j,
excute 13:41:00.641222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.644215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:41:00.647206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:00.652163 line       494                         if (i == j):
excute 13:41:00.657161 line       496                         i_j_list.append((
excute 13:41:00.660142 line       497                             i, j,
excute 13:41:00.663134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.666126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0)]
excute 13:41:00.670114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:00.673107 line       494                         if (i == j):
excute 13:41:00.677096 line       496                         i_j_list.append((
excute 13:41:00.681086 line       497                             i, j,
excute 13:41:00.684078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:00.687070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:41:00.690062 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:00.693054 line       494                         if (i == j):
excute 13:41:00.697041 line       495                             continue
excute 13:41:00.700035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:00.704024 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:00.707016 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (0, 6, 0, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (3, 0, 1, 1), (3, 6, 1, 1), (8, 0, 1, 1), (8, 6, 1, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (2, 0, 2, 1), (2, 6, 2, 1), (4, 0, 2, 1), (4, 6, 2, 1), (7, 0, 2, 1), (7, 6, 2, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (1, 0, 3, 1), (1, 6, 3, 1), (5, 0, 3, 1), (5, 6, 3, 1), (9, 0, 3, 1), (9, 6, 3, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (6, 0, 4, 1)]
excute 13:41:00.711005 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:00.714994 line       505                     if (self.RELOCATE):
excute 13:41:00.717987 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:00.720979 line       505                     if (self.RELOCATE):
excute 13:41:00.724968 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:00.727960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:00.731950 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:00.734942 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:00.738931 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.742920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:00.745912 line       556                     i = i_j[0]
excute 13:41:00.748904 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:00.751895 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.756882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:00.760873 line       556                     i = i_j[0]
excute 13:41:00.763862 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:00.766855 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.770846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:00.773837 line       556                     i = i_j[0]
excute 13:41:00.776829 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:00.779821 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.783810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:00.786802 line       556                     i = i_j[0]
excute 13:41:00.790802 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:00.793783 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.798771 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:00.801762 line       556                     i = i_j[0]
excute 13:41:00.805752 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:00.808745 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.811736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:00.814727 line       556                     i = i_j[0]
excute 13:41:00.818716 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:00.821741 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.824731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:00.827723 line       556                     i = i_j[0]
excute 13:41:00.831683 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:00.834704 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.838695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:41:00.841655 line       556                     i = i_j[0]
excute 13:41:00.844649 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:00.847640 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.851629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:41:00.854651 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:00.859612 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:00.863598 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.866590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:41:00.870578 line       556                     i = i_j[0]
excute 13:41:00.873571 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:00.876563 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.880566 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:41:00.883544 line       556                     i = i_j[0]
excute 13:41:00.886536 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:00.890525 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.894514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:41:00.897508 line       556                     i = i_j[0]
excute 13:41:00.900497 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:00.903490 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.907480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:41:00.910472 line       556                     i = i_j[0]
excute 13:41:00.913464 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:00.917454 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.925552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:41:00.928545 line       556                     i = i_j[0]
excute 13:41:00.932533 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:00.936524 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.940769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:41:00.944793 line       556                     i = i_j[0]
excute 13:41:00.948786 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:00.951776 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.955733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:41:00.959724 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:00.965705 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:00.970727 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.974714 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:41:00.977705 line       556                     i = i_j[0]
excute 13:41:00.981664 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:00.984685 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:00.987678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:41:00.991640 line       556                     i = i_j[0]
excute 13:41:00.995658 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:00.998648 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.001640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:01.005616 line       556                     i = i_j[0]
excute 13:41:01.009588 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:01.012579 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.015571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:41:01.019561 line       556                     i = i_j[0]
excute 13:41:01.022553 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:01.026542 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.030532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:01.033561 line       556                     i = i_j[0]
excute 13:41:01.036549 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:01.039540 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.043496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:41:01.046520 line       556                     i = i_j[0]
excute 13:41:01.050479 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:01.053480 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.057460 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 1)
excute 13:41:01.060454 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:01.064443 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:01.068431 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.071455 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 32
excute 13:41:01.075411 line       560                         if (t_tmp > self.TIME):
excute 13:41:01.078436 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:01.082392 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:01.085417 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 13
excute 13:41:01.088409 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:01.092367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 1)
excute 13:41:01.095376 line       556                     i = i_j[0]
excute 13:41:01.098374 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:01.101374 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.105333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 1)
excute 13:41:01.108357 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:01.111350 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:01.115306 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.118328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 1)
excute 13:41:01.122287 line       556                     i = i_j[0]
excute 13:41:01.125279 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:01.128302 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.132293 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:41:01.135285 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:01.139253 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:01.142264 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.146234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:41:01.149246 line       556                     i = i_j[0]
excute 13:41:01.152238 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:01.156195 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.159187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:41:01.163177 line       556                     i = i_j[0]
excute 13:41:01.167167 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:01.170189 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.174149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:41:01.177171 line       556                     i = i_j[0]
excute 13:41:01.181129 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:01.184155 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.188111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:41:01.191103 line       556                     i = i_j[0]
excute 13:41:01.194094 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:01.197118 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.201075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:41:01.204092 line       556                     i = i_j[0]
excute 13:41:01.207093 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:01.210083 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.214062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:41:01.217064 line       556                     i = i_j[0]
excute 13:41:01.221024 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:01.224049 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.227037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:01.231030 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:01.234020 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:01.238010 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.241001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:01.243994 line       556                     i = i_j[0]
excute 13:41:01.247951 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:01.250974 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.254935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:01.257955 line       556                     i = i_j[0]
excute 13:41:01.262911 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:01.268896 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.276874 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:01.280863 line       556                     i = i_j[0]
excute 13:41:01.285849 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:01.288843 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.295824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:01.301806 line       556                     i = i_j[0]
excute 13:41:01.309785 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:01.314772 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.318797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:01.324746 line       556                     i = i_j[0]
excute 13:41:01.335717 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:01.345690 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.350676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:01.356665 line       556                     i = i_j[0]
excute 13:41:01.362646 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:01.371621 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.382592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:41:01.388575 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:01.397551 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:01.404532 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.412511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:41:01.420489 line       556                     i = i_j[0]
excute 13:41:01.425477 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:01.432457 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.440437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:41:01.445423 line       556                     i = i_j[0]
excute 13:41:01.451406 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:01.458388 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.464373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:41:01.470356 line       556                     i = i_j[0]
excute 13:41:01.477338 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:01.483322 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.489306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:41:01.494292 line       556                     i = i_j[0]
excute 13:41:01.499278 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:01.507257 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.512244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:41:01.520222 line       556                     i = i_j[0]
excute 13:41:01.524213 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:01.530195 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.535182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:41:01.542165 line       556                     i = i_j[0]
excute 13:41:01.549148 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:01.555130 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.561113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:41:01.566100 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:01.571087 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:01.577072 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.583055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:41:01.587043 line       556                     i = i_j[0]
excute 13:41:01.593028 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:01.598014 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.604996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 1)
excute 13:41:01.608985 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:01.617963 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:01.622949 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.630928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:41:01.635913 line       556                     i = i_j[0]
excute 13:41:01.643891 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:01.651872 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.658853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 1)
excute 13:41:01.664835 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:01.670820 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:01.676804 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.682788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 1)
excute 13:41:01.687774 line       556                     i = i_j[0]
excute 13:41:01.693759 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:01.700740 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.708728 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:01.713705 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:01.717696 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:01.722682 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.729664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:01.732654 line       556                     i = i_j[0]
excute 13:41:01.735646 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:01.739636 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.742628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:01.745620 line       556                     i = i_j[0]
excute 13:41:01.749611 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:01.752601 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.756591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:01.759582 line       556                     i = i_j[0]
excute 13:41:01.762575 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:01.765567 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.769557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:01.772549 line       556                     i = i_j[0]
excute 13:41:01.776538 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:01.779530 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.783520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:01.787509 line       556                     i = i_j[0]
excute 13:41:01.791498 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:01.795487 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.798478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:01.801470 line       556                     i = i_j[0]
excute 13:41:01.805460 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:01.808451 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.811443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:01.814435 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:01.817428 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:01.821417 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.824409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:01.827401 line       556                     i = i_j[0]
excute 13:41:01.831390 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:01.834382 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.838372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:01.841364 line       556                     i = i_j[0]
excute 13:41:01.844355 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:01.847348 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.851337 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:01.854329 line       556                     i = i_j[0]
excute 13:41:01.858320 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:01.861311 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.864303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:01.868292 line       556                     i = i_j[0]
excute 13:41:01.871284 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:01.875274 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.879262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:01.882255 line       556                     i = i_j[0]
excute 13:41:01.886245 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:01.891233 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.895221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:01.898212 line       556                     i = i_j[0]
excute 13:41:01.901205 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:01.904196 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.908206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:41:01.911209 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:01.914203 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:01.918192 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.924146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:41:01.928132 line       556                     i = i_j[0]
excute 13:41:01.933120 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:01.936110 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.940102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:41:01.946084 line       556                     i = i_j[0]
excute 13:41:01.950073 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:01.953068 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.958056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:41:01.963071 line       556                     i = i_j[0]
excute 13:41:01.966062 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:01.969054 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.973046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:41:01.977002 line       556                     i = i_j[0]
excute 13:41:01.979994 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:01.983016 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:01.987008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:41:01.989998 line       556                     i = i_j[0]
excute 13:41:01.993957 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:01.997946 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.000937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:41:02.003929 line       556                     i = i_j[0]
excute 13:41:02.007919 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:02.010910 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.014900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 1)
excute 13:41:02.017891 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:02.020883 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:02.024873 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.027897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 1)
excute 13:41:02.031855 line       556                     i = i_j[0]
excute 13:41:02.034851 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:02.038837 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.042828 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 30
excute 13:41:02.045820 line       560                         if (t_tmp > self.TIME):
excute 13:41:02.048811 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:02.051803 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 19
excute 13:41:02.055794 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:02.058785 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:02.062774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 1)
excute 13:41:02.065770 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:02.068758 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:02.072746 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.076735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 1)
excute 13:41:02.079728 line       556                     i = i_j[0]
excute 13:41:02.082721 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:02.086709 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.090700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 1)
excute 13:41:02.093691 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:02.097681 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:02.101669 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.104692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:41:02.108651 line       556                     i = i_j[0]
excute 13:41:02.112641 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:02.115632 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.119622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:41:02.123611 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:02.126603 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:02.130592 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.134582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:41:02.137573 line       556                     i = i_j[0]
excute 13:41:02.141563 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:02.145552 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.149540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:41:02.152534 line       556                     i = i_j[0]
excute 13:41:02.156521 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:02.159515 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.163504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:41:02.166497 line       556                     i = i_j[0]
excute 13:41:02.170486 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:02.173478 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.177467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:41:02.180459 line       556                     i = i_j[0]
excute 13:41:02.185446 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:02.188437 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.191429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:41:02.194420 line       556                     i = i_j[0]
excute 13:41:02.198411 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:02.202400 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.205391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:41:02.208384 line       556                     i = i_j[0]
excute 13:41:02.212372 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:02.216363 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.219355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:41:02.222346 line       556                     i = i_j[0]
excute 13:41:02.226336 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:02.229326 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.232318 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 1)
excute 13:41:02.235310 line       556                     i = i_j[0]
excute 13:41:02.239301 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:02.242291 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:02.245283 line       555                 for i_j in i_j_list:
excute 13:41:02.248276 line       581             self.write_matrix(
excute 13:41:02.251268 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:02.254260 line       583                 result_file_path,
excute 13:41:02.258258 line       584                 mode='a'
excute 13:41:02.263749 line       488         for t in time_steps:
excute Modified var:.. t = 20
excute 13:41:02.267739 line       489             if (t != self.TIME + 1):
excute 13:41:02.270730 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:02.274719 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:02.280711 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:02.286691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:02.289681 line       494                         if (i == j):
excute 13:41:02.293669 line       495                             continue
excute 13:41:02.296661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:02.300652 line       494                         if (i == j):
excute 13:41:02.307633 line       496                         i_j_list.append((
excute 13:41:02.311621 line       497                             i, j,
excute 13:41:02.316640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.319601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:02.323591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:02.328578 line       494                         if (i == j):
excute 13:41:02.338550 line       496                         i_j_list.append((
excute 13:41:02.345533 line       497                             i, j,
excute 13:41:02.350517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.356502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:41:02.362485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:02.369467 line       494                         if (i == j):
excute 13:41:02.375451 line       496                         i_j_list.append((
excute 13:41:02.393404 line       497                             i, j,
excute 13:41:02.406378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.415344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:02.421329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:02.430314 line       494                         if (i == j):
excute 13:41:02.434304 line       496                         i_j_list.append((
excute 13:41:02.439282 line       497                             i, j,
excute 13:41:02.444267 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.449253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:02.454244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:02.461222 line       494                         if (i == j):
excute 13:41:02.470198 line       496                         i_j_list.append((
excute 13:41:02.476185 line       497                             i, j,
excute 13:41:02.480171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.483163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:02.487152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:02.490146 line       494                         if (i == j):
excute 13:41:02.495132 line       496                         i_j_list.append((
excute 13:41:02.499130 line       497                             i, j,
excute 13:41:02.503110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.509094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:41:02.514080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:02.523059 line       494                         if (i == j):
excute 13:41:02.530049 line       496                         i_j_list.append((
excute 13:41:02.533029 line       497                             i, j,
excute 13:41:02.536022 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.539013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1)]
excute 13:41:02.542006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:02.545996 line       494                         if (i == j):
excute 13:41:02.549986 line       496                         i_j_list.append((
excute 13:41:02.552977 line       497                             i, j,
excute 13:41:02.555968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.558991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0)]
excute 13:41:02.561983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:02.565943 line       494                         if (i == j):
excute 13:41:02.568966 line       496                         i_j_list.append((
excute 13:41:02.571957 line       497                             i, j,
excute 13:41:02.574949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.577941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:02.580932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:02.583925 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:02.586917 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:02.590876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:02.593898 line       494                         if (i == j):
excute 13:41:02.597890 line       496                         i_j_list.append((
excute 13:41:02.600870 line       497                             i, j,
excute 13:41:02.603874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.606864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1)]
excute 13:41:02.609856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:02.612850 line       494                         if (i == j):
excute 13:41:02.616807 line       495                             continue
excute 13:41:02.620796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:02.625783 line       494                         if (i == j):
excute 13:41:02.629771 line       496                         i_j_list.append((
excute 13:41:02.632762 line       497                             i, j,
excute 13:41:02.636755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.641740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0)]
excute 13:41:02.644734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:02.649719 line       494                         if (i == j):
excute 13:41:02.655704 line       496                         i_j_list.append((
excute 13:41:02.658696 line       497                             i, j,
excute 13:41:02.661687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.664678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:02.667670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:02.671660 line       494                         if (i == j):
excute 13:41:02.675649 line       496                         i_j_list.append((
excute 13:41:02.678641 line       497                             i, j,
excute 13:41:02.681632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.684624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:02.688615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:02.691607 line       494                         if (i == j):
excute 13:41:02.696593 line       496                         i_j_list.append((
excute 13:41:02.702587 line       497                             i, j,
excute 13:41:02.706569 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.709559 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:02.713549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:02.717537 line       494                         if (i == j):
excute 13:41:02.721528 line       496                         i_j_list.append((
excute 13:41:02.725516 line       497                             i, j,
excute 13:41:02.729504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.732497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1)]
excute 13:41:02.735488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:02.738480 line       494                         if (i == j):
excute 13:41:02.741471 line       496                         i_j_list.append((
excute 13:41:02.744464 line       497                             i, j,
excute 13:41:02.747455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.750447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1)]
excute 13:41:02.753440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:02.757429 line       494                         if (i == j):
excute 13:41:02.760421 line       496                         i_j_list.append((
excute 13:41:02.763413 line       497                             i, j,
excute 13:41:02.766405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.769397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0)]
excute 13:41:02.772389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:02.776380 line       494                         if (i == j):
excute 13:41:02.779370 line       496                         i_j_list.append((
excute 13:41:02.782362 line       497                             i, j,
excute 13:41:02.785354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.788346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:02.791338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:02.794330 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:02.797322 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:02.800314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:02.803306 line       494                         if (i == j):
excute 13:41:02.806298 line       496                         i_j_list.append((
excute 13:41:02.810289 line       497                             i, j,
excute 13:41:02.813280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.816272 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1)]
excute 13:41:02.819263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:02.822255 line       494                         if (i == j):
excute 13:41:02.826245 line       496                         i_j_list.append((
excute 13:41:02.830234 line       497                             i, j,
excute 13:41:02.833227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.836218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:41:02.839210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:02.843199 line       494                         if (i == j):
excute 13:41:02.846191 line       495                             continue
excute 13:41:02.849184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:02.852175 line       494                         if (i == j):
excute 13:41:02.856165 line       496                         i_j_list.append((
excute 13:41:02.859157 line       497                             i, j,
excute 13:41:02.862150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.865142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:41:02.868134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:02.871126 line       494                         if (i == j):
excute 13:41:02.875122 line       496                         i_j_list.append((
excute 13:41:02.878108 line       497                             i, j,
excute 13:41:02.881099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.884091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:41:02.887084 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:02.890076 line       494                         if (i == j):
excute 13:41:02.894064 line       496                         i_j_list.append((
excute 13:41:02.897057 line       497                             i, j,
excute 13:41:02.900048 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.903040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:41:02.906032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:02.910022 line       494                         if (i == j):
excute 13:41:02.914013 line       496                         i_j_list.append((
excute 13:41:02.917004 line       497                             i, j,
excute 13:41:02.920994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.923986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:41:02.926978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:02.931963 line       494                         if (i == j):
excute 13:41:02.935953 line       496                         i_j_list.append((
excute 13:41:02.938976 line       497                             i, j,
excute 13:41:02.941968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.944960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1)]
excute 13:41:02.947922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:02.950912 line       494                         if (i == j):
excute 13:41:02.954903 line       496                         i_j_list.append((
excute 13:41:02.957926 line       497                             i, j,
excute 13:41:02.960916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.963909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0)]
excute 13:41:02.966901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:02.969896 line       494                         if (i == j):
excute 13:41:02.973886 line       496                         i_j_list.append((
excute 13:41:02.976870 line       497                             i, j,
excute 13:41:02.979867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:02.982858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:41:02.985851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:02.988815 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:02.991835 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:02.994827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:02.998784 line       494                         if (i == j):
excute 13:41:03.001776 line       496                         i_j_list.append((
excute 13:41:03.004799 line       497                             i, j,
excute 13:41:03.007793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.011751 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1)]
excute 13:41:03.014743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:03.018733 line       494                         if (i == j):
excute 13:41:03.022734 line       496                         i_j_list.append((
excute 13:41:03.025732 line       497                             i, j,
excute 13:41:03.028704 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.031695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0)]
excute 13:41:03.035718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:03.038709 line       494                         if (i == j):
excute 13:41:03.042668 line       496                         i_j_list.append((
excute 13:41:03.045690 line       497                             i, j,
excute 13:41:03.048681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.051674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:41:03.054666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:03.058658 line       494                         if (i == j):
excute 13:41:03.061648 line       495                             continue
excute 13:41:03.064640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:03.067631 line       494                         if (i == j):
excute 13:41:03.071624 line       496                         i_j_list.append((
excute 13:41:03.074614 line       497                             i, j,
excute 13:41:03.077605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.080597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:41:03.083589 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:03.086582 line       494                         if (i == j):
excute 13:41:03.090540 line       496                         i_j_list.append((
excute 13:41:03.093530 line       497                             i, j,
excute 13:41:03.096522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.099514 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:41:03.102506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:03.105498 line       494                         if (i == j):
excute 13:41:03.109488 line       496                         i_j_list.append((
excute 13:41:03.112480 line       497                             i, j,
excute 13:41:03.115472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.117467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1)]
excute 13:41:03.121456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:03.124449 line       494                         if (i == j):
excute 13:41:03.127439 line       496                         i_j_list.append((
excute 13:41:03.130432 line       497                             i, j,
excute 13:41:03.133424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.138412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1)]
excute 13:41:03.141404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:03.147388 line       494                         if (i == j):
excute 13:41:03.150378 line       496                         i_j_list.append((
excute 13:41:03.153371 line       497                             i, j,
excute 13:41:03.157360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.160352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0)]
excute 13:41:03.163351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:03.166341 line       494                         if (i == j):
excute 13:41:03.170326 line       496                         i_j_list.append((
excute 13:41:03.173317 line       497                             i, j,
excute 13:41:03.176309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.178304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:41:03.182294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:03.186284 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:03.189274 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:03.192268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:03.195258 line       494                         if (i == j):
excute 13:41:03.198250 line       496                         i_j_list.append((
excute 13:41:03.201243 line       497                             i, j,
excute 13:41:03.204234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.208224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1)]
excute 13:41:03.210218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:03.214209 line       494                         if (i == j):
excute 13:41:03.218197 line       496                         i_j_list.append((
excute 13:41:03.221201 line       497                             i, j,
excute 13:41:03.224181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.227173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0)]
excute 13:41:03.230166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:03.233158 line       494                         if (i == j):
excute 13:41:03.236149 line       496                         i_j_list.append((
excute 13:41:03.240140 line       497                             i, j,
excute 13:41:03.244129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.247153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:41:03.250144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:03.254102 line       494                         if (i == j):
excute 13:41:03.257095 line       496                         i_j_list.append((
excute 13:41:03.261082 line       497                             i, j,
excute 13:41:03.264074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.267067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:03.270060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:03.273051 line       494                         if (i == j):
excute 13:41:03.276074 line       495                             continue
excute 13:41:03.279067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:03.283025 line       494                         if (i == j):
excute 13:41:03.287016 line       496                         i_j_list.append((
excute 13:41:03.290007 line       497                             i, j,
excute 13:41:03.293996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.297986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:03.300978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:03.304966 line       494                         if (i == j):
excute 13:41:03.308958 line       496                         i_j_list.append((
excute 13:41:03.313941 line       497                             i, j,
excute 13:41:03.317963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.320955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:41:03.323947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:03.329903 line       494                         if (i == j):
excute 13:41:03.336880 line       496                         i_j_list.append((
excute 13:41:03.342865 line       497                             i, j,
excute 13:41:03.349845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.352837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1)]
excute 13:41:03.356828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:03.360818 line       494                         if (i == j):
excute 13:41:03.363809 line       496                         i_j_list.append((
excute 13:41:03.366833 line       497                             i, j,
excute 13:41:03.370792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.373814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0)]
excute 13:41:03.376806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:03.380766 line       494                         if (i == j):
excute 13:41:03.383787 line       496                         i_j_list.append((
excute 13:41:03.387746 line       497                             i, j,
excute 13:41:03.390737 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.394727 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:03.397719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:03.401742 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:03.404730 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:03.408722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:03.411712 line       494                         if (i == j):
excute 13:41:03.414705 line       496                         i_j_list.append((
excute 13:41:03.418663 line       497                             i, j,
excute 13:41:03.421656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.424647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1)]
excute 13:41:03.428637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:03.431629 line       494                         if (i == j):
excute 13:41:03.435619 line       496                         i_j_list.append((
excute 13:41:03.438609 line       497                             i, j,
excute 13:41:03.441603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.446589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0)]
excute 13:41:03.449580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:03.453570 line       494                         if (i == j):
excute 13:41:03.457560 line       496                         i_j_list.append((
excute 13:41:03.460551 line       497                             i, j,
excute 13:41:03.463542 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.466534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:41:03.469526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:03.473517 line       494                         if (i == j):
excute 13:41:03.476508 line       496                         i_j_list.append((
excute 13:41:03.479500 line       497                             i, j,
excute 13:41:03.482491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.485483 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:03.488475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:03.492466 line       494                         if (i == j):
excute 13:41:03.496455 line       496                         i_j_list.append((
excute 13:41:03.499477 line       497                             i, j,
excute 13:41:03.502470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.505462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:03.508423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:03.512412 line       494                         if (i == j):
excute 13:41:03.515434 line       495                             continue
excute 13:41:03.518428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:03.522385 line       494                         if (i == j):
excute 13:41:03.525378 line       496                         i_j_list.append((
excute 13:41:03.529367 line       497                             i, j,
excute 13:41:03.532358 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.536348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1)]
excute 13:41:03.541366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:03.544357 line       494                         if (i == j):
excute 13:41:03.549314 line       496                         i_j_list.append((
excute 13:41:03.552325 line       497                             i, j,
excute 13:41:03.555328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.558321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1)]
excute 13:41:03.561312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:03.565270 line       494                         if (i == j):
excute 13:41:03.568262 line       496                         i_j_list.append((
excute 13:41:03.571286 line       497                             i, j,
excute 13:41:03.574278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.577270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0)]
excute 13:41:03.580260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:03.584220 line       494                         if (i == j):
excute 13:41:03.587244 line       496                         i_j_list.append((
excute 13:41:03.590235 line       497                             i, j,
excute 13:41:03.593227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.596218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:03.599210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:03.603169 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:03.606162 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:03.610151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:03.613143 line       494                         if (i == j):
excute 13:41:03.617133 line       496                         i_j_list.append((
excute 13:41:03.620125 line       497                             i, j,
excute 13:41:03.624111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.627106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1)]
excute 13:41:03.630098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:03.634088 line       494                         if (i == j):
excute 13:41:03.638078 line       496                         i_j_list.append((
excute 13:41:03.641069 line       497                             i, j,
excute 13:41:03.648058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.652038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0)]
excute 13:41:03.655029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:03.660774 line       494                         if (i == j):
excute 13:41:03.664761 line       496                         i_j_list.append((
excute 13:41:03.667786 line       497                             i, j,
excute 13:41:03.670777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.673769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:41:03.676764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:03.679755 line       494                         if (i == j):
excute 13:41:03.683744 line       496                         i_j_list.append((
excute 13:41:03.686734 line       497                             i, j,
excute 13:41:03.689726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.692720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:41:03.695713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:03.698702 line       494                         if (i == j):
excute 13:41:03.702692 line       496                         i_j_list.append((
excute 13:41:03.705684 line       497                             i, j,
excute 13:41:03.708678 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.711670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:41:03.715626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:03.719628 line       494                         if (i == j):
excute 13:41:03.722638 line       496                         i_j_list.append((
excute 13:41:03.725631 line       497                             i, j,
excute 13:41:03.728623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.731614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:41:03.735573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:03.739563 line       494                         if (i == j):
excute 13:41:03.743553 line       495                             continue
excute 13:41:03.746546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:03.749536 line       494                         if (i == j):
excute 13:41:03.755520 line       496                         i_j_list.append((
excute 13:41:03.758543 line       497                             i, j,
excute 13:41:03.761534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.764528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1)]
excute 13:41:03.767521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:03.771477 line       494                         if (i == j):
excute 13:41:03.774502 line       496                         i_j_list.append((
excute 13:41:03.777491 line       497                             i, j,
excute 13:41:03.780486 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.783477 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0)]
excute 13:41:03.786467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:03.790428 line       494                         if (i == j):
excute 13:41:03.793450 line       496                         i_j_list.append((
excute 13:41:03.796443 line       497                             i, j,
excute 13:41:03.799436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.802426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:41:03.806386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:03.812368 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:03.815360 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:03.819351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:03.822342 line       494                         if (i == j):
excute 13:41:03.826332 line       496                         i_j_list.append((
excute 13:41:03.829324 line       497                             i, j,
excute 13:41:03.832316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.835308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1)]
excute 13:41:03.838299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:03.842289 line       494                         if (i == j):
excute 13:41:03.846279 line       496                         i_j_list.append((
excute 13:41:03.849270 line       497                             i, j,
excute 13:41:03.852263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.856251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0)]
excute 13:41:03.859244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:03.863240 line       494                         if (i == j):
excute 13:41:03.866255 line       496                         i_j_list.append((
excute 13:41:03.869246 line       497                             i, j,
excute 13:41:03.872238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.876196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:41:03.879190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:03.883179 line       494                         if (i == j):
excute 13:41:03.887167 line       496                         i_j_list.append((
excute 13:41:03.890160 line       497                             i, j,
excute 13:41:03.894148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.897141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:41:03.900134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:03.904122 line       494                         if (i == j):
excute 13:41:03.908113 line       496                         i_j_list.append((
excute 13:41:03.911104 line       497                             i, j,
excute 13:41:03.914097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.918086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:41:03.921078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:03.925067 line       494                         if (i == j):
excute 13:41:03.929057 line       496                         i_j_list.append((
excute 13:41:03.932049 line       497                             i, j,
excute 13:41:03.935040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.939030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:41:03.942022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:03.946012 line       494                         if (i == j):
excute 13:41:03.949004 line       496                         i_j_list.append((
excute 13:41:03.951996 line       497                             i, j,
excute 13:41:03.955985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.958976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1)]
excute 13:41:03.966954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:03.970944 line       494                         if (i == j):
excute 13:41:03.974934 line       495                             continue
excute 13:41:03.977925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:03.980917 line       494                         if (i == j):
excute 13:41:03.984907 line       496                         i_j_list.append((
excute 13:41:03.987900 line       497                             i, j,
excute 13:41:03.990891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:03.993883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0)]
excute 13:41:03.996873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:04.000863 line       494                         if (i == j):
excute 13:41:04.003854 line       496                         i_j_list.append((
excute 13:41:04.006846 line       497                             i, j,
excute 13:41:04.010838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.013827 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:41:04.016820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:04.020810 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:04.023801 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:04.026795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:04.030818 line       494                         if (i == j):
excute 13:41:04.033777 line       496                         i_j_list.append((
excute 13:41:04.037766 line       497                             i, j,
excute 13:41:04.040758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.043750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1)]
excute 13:41:04.047739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:04.050732 line       494                         if (i == j):
excute 13:41:04.055751 line       496                         i_j_list.append((
excute 13:41:04.058710 line       497                             i, j,
excute 13:41:04.061702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.066688 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0)]
excute 13:41:04.068682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:04.072671 line       494                         if (i == j):
excute 13:41:04.076660 line       496                         i_j_list.append((
excute 13:41:04.079652 line       497                             i, j,
excute 13:41:04.082645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.085637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:41:04.088628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:04.091620 line       494                         if (i == j):
excute 13:41:04.094612 line       496                         i_j_list.append((
excute 13:41:04.097604 line       497                             i, j,
excute 13:41:04.100596 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.104586 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:41:04.107581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:04.110584 line       494                         if (i == j):
excute 13:41:04.113561 line       496                         i_j_list.append((
excute 13:41:04.116553 line       497                             i, j,
excute 13:41:04.120542 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.123534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:41:04.126526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:04.129518 line       494                         if (i == j):
excute 13:41:04.133509 line       496                         i_j_list.append((
excute 13:41:04.136500 line       497                             i, j,
excute 13:41:04.139492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.142484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:41:04.145476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:04.148481 line       494                         if (i == j):
excute 13:41:04.152490 line       496                         i_j_list.append((
excute 13:41:04.155483 line       497                             i, j,
excute 13:41:04.158475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.161466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1)]
excute 13:41:04.165424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:04.169444 line       494                         if (i == j):
excute 13:41:04.173417 line       496                         i_j_list.append((
excute 13:41:04.176426 line       497                             i, j,
excute 13:41:04.179420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.183382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1)]
excute 13:41:04.186400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:04.189391 line       494                         if (i == j):
excute 13:41:04.193358 line       495                             continue
excute 13:41:04.196372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:04.199352 line       494                         if (i == j):
excute 13:41:04.202347 line       496                         i_j_list.append((
excute 13:41:04.206322 line       497                             i, j,
excute 13:41:04.209338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.212329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0)]
excute 13:41:04.216287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:04.219281 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:04.223270 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:04.227260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:04.230249 line       494                         if (i == j):
excute 13:41:04.234239 line       496                         i_j_list.append((
excute 13:41:04.237231 line       497                             i, j,
excute 13:41:04.242219 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.245209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1)]
excute 13:41:04.248201 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:04.252192 line       494                         if (i == j):
excute 13:41:04.255185 line       496                         i_j_list.append((
excute 13:41:04.259173 line       497                             i, j,
excute 13:41:04.262164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.265156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0)]
excute 13:41:04.269148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:04.272173 line       494                         if (i == j):
excute 13:41:04.276160 line       496                         i_j_list.append((
excute 13:41:04.279151 line       497                             i, j,
excute 13:41:04.282142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.285134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:41:04.288126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:04.292116 line       494                         if (i == j):
excute 13:41:04.296093 line       496                         i_j_list.append((
excute 13:41:04.299095 line       497                             i, j,
excute 13:41:04.302092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.305083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:41:04.308042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:04.314035 line       494                         if (i == j):
excute 13:41:04.317023 line       496                         i_j_list.append((
excute 13:41:04.320011 line       497                             i, j,
excute 13:41:04.323003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.330982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:41:04.338959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:04.346939 line       494                         if (i == j):
excute 13:41:04.349931 line       496                         i_j_list.append((
excute 13:41:04.354918 line       497                             i, j,
excute 13:41:04.361899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.364892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:41:04.367884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:04.373866 line       494                         if (i == j):
excute 13:41:04.376859 line       496                         i_j_list.append((
excute 13:41:04.380853 line       497                             i, j,
excute 13:41:04.384838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.387862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:41:04.390852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:04.394810 line       494                         if (i == j):
excute 13:41:04.398800 line       496                         i_j_list.append((
excute 13:41:04.401824 line       497                             i, j,
excute 13:41:04.404815 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.407807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 1)]
excute 13:41:04.410801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:04.414790 line       494                         if (i == j):
excute 13:41:04.417780 line       496                         i_j_list.append((
excute 13:41:04.420771 line       497                             i, j,
excute 13:41:04.423763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:04.426758 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 1), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 1), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 1), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 2, 1), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 1), (9, 8, 3, 0)]
excute 13:41:04.430714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:04.433706 line       494                         if (i == j):
excute 13:41:04.437695 line       495                             continue
excute 13:41:04.440687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:04.443679 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:04.446671 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 9, 0, 0), (0, 6, 0, 1), (0, 7, 0, 1), (8, 0, 0, 1), (8, 6, 0, 1), (8, 7, 0, 1), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (3, 0, 1, 1), (3, 6, 1, 1), (3, 7, 1, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (2, 0, 2, 1), (2, 6, 2, 1), (2, 7, 2, 1), (4, 0, 2, 1), (4, 6, 2, 1), (4, 7, 2, 1), (7, 0, 2, 1), (7, 6, 2, 1), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 8, 3, 0), (1, 0, 3, 1), (1, 6, 3, 1), (1, 7, 3, 1), (5, 0, 3, 1), (5, 6, 3, 1), (5, 7, 3, 1), (9, 0, 3, 1), (9, 6, 3, 1), (9, 7, 3, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (6, 0, 4, 1), (6, 7, 4, 1)]
excute 13:41:04.449663 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:04.453652 line       505                     if (self.RELOCATE):
excute 13:41:04.456644 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:04.460635 line       505                     if (self.RELOCATE):
excute 13:41:04.463626 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:04.466620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:04.469611 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:04.475595 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:04.479615 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.483582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:04.486595 line       556                     i = i_j[0]
excute 13:41:04.489588 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:04.492580 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.496540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:04.499561 line       556                     i = i_j[0]
excute 13:41:04.502554 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:04.505546 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.510502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:04.513493 line       556                     i = i_j[0]
excute 13:41:04.519478 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:04.522470 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.526492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:04.529449 line       556                     i = i_j[0]
excute 13:41:04.532441 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:04.535434 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.539423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:04.542415 line       556                     i = i_j[0]
excute 13:41:04.546418 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:04.549397 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.552388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:04.555381 line       556                     i = i_j[0]
excute 13:41:04.559369 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:04.562362 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.565353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:41:04.568346 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:04.572354 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:04.575328 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.580350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:41:04.583338 line       556                     i = i_j[0]
excute 13:41:04.587298 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:04.590320 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.594311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:41:04.597303 line       556                     i = i_j[0]
excute 13:41:04.600292 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:04.603285 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.607242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:41:04.610268 line       556                     i = i_j[0]
excute 13:41:04.614223 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:04.617215 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.620207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:41:04.623199 line       556                     i = i_j[0]
excute 13:41:04.627189 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:04.629183 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.633172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:41:04.636165 line       556                     i = i_j[0]
excute 13:41:04.639156 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:04.642148 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.646138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:41:04.649129 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:04.652121 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:04.656112 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.660100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 1)
excute 13:41:04.663093 line       556                     i = i_j[0]
excute 13:41:04.666084 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:04.669076 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.673066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 1)
excute 13:41:04.676057 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:04.679049 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:04.684037 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.687028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:41:04.690020 line       556                     i = i_j[0]
excute 13:41:04.694011 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:04.697002 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.699994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 1)
excute 13:41:04.702985 line       556                     i = i_j[0]
excute 13:41:04.706988 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:04.709967 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.713957 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:41:04.716948 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:04.719940 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:04.723931 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.726923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:41:04.730913 line       556                     i = i_j[0]
excute 13:41:04.733905 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:04.737894 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.741882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:41:04.744876 line       556                     i = i_j[0]
excute 13:41:04.747868 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:04.750860 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.754850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:41:04.757872 line       556                     i = i_j[0]
excute 13:41:04.761829 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:04.764823 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.768810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:41:04.771803 line       556                     i = i_j[0]
excute 13:41:04.775793 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:04.778785 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.782775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:41:04.786796 line       556                     i = i_j[0]
excute 13:41:04.789785 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:04.793744 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.796736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 1)
excute 13:41:04.799759 line       556                     i = i_j[0]
excute 13:41:04.802750 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:04.806709 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.812693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 1)
excute 13:41:04.815717 line       556                     i = i_j[0]
excute 13:41:04.819674 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:04.822698 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.825691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 1)
excute 13:41:04.828683 line       556                     i = i_j[0]
excute 13:41:04.832641 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:04.835662 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.839636 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 37
excute 13:41:04.842644 line       560                         if (t_tmp > self.TIME):
excute 13:41:04.845637 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:04.848628 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:04.852588 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 14
excute 13:41:04.855610 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:04.859568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:41:04.861593 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:04.865552 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:04.868577 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.872533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:41:04.875556 line       556                     i = i_j[0]
excute 13:41:04.878547 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:04.882507 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.885499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:41:04.889487 line       556                     i = i_j[0]
excute 13:41:04.893477 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:04.896469 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.899462 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:41:04.903452 line       556                     i = i_j[0]
excute 13:41:04.906442 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:04.909436 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.913423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:41:04.916417 line       556                     i = i_j[0]
excute 13:41:04.920406 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:04.924396 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.927388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:41:04.931377 line       556                     i = i_j[0]
excute 13:41:04.934369 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:04.938358 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.941356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:04.944373 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:04.948365 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:04.951338 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.955313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:04.958335 line       556                     i = i_j[0]
excute 13:41:04.961330 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:04.965285 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.968277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:04.971301 line       556                     i = i_j[0]
excute 13:41:04.974292 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:04.978283 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.981275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:04.984269 line       556                     i = i_j[0]
excute 13:41:04.988225 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:04.992214 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:04.995236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:04.998228 line       556                     i = i_j[0]
excute 13:41:05.002218 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:05.005210 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.009203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:05.017147 line       556                     i = i_j[0]
excute 13:41:05.021137 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:05.025126 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.029116 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:41:05.032107 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:05.036096 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:05.039089 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.043079 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:41:05.046071 line       556                     i = i_j[0]
excute 13:41:05.050060 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:05.054049 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.058038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:41:05.061037 line       556                     i = i_j[0]
excute 13:41:05.064052 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:05.067045 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.071035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:41:05.074026 line       556                     i = i_j[0]
excute 13:41:05.077018 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:05.080975 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.083987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:41:05.091947 line       556                     i = i_j[0]
excute 13:41:05.095969 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:05.098959 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.102949 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:41:05.105948 line       556                     i = i_j[0]
excute 13:41:05.108901 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:05.111892 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.115882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:41:05.119872 line       556                     i = i_j[0]
excute 13:41:05.122865 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:05.125855 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.129845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:41:05.132836 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:05.135860 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.139819 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.142841 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 29
excute 13:41:05.146800 line       560                         if (t_tmp > self.TIME):
excute 13:41:05.149823 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:05.153814 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 20
excute 13:41:05.156804 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:05.160781 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 15
excute 13:41:05.163768 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:05.166778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:41:05.169769 line       556                     i = i_j[0]
excute 13:41:05.173728 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:05.176753 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.179745 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 32
excute 13:41:05.183700 line       560                         if (t_tmp > self.TIME):
excute 13:41:05.187690 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:05.190681 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 21
excute 13:41:05.194672 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:05.198692 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:05.202651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:41:05.205643 line       556                     i = i_j[0]
excute 13:41:05.208635 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:05.211627 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.217610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 1)
excute 13:41:05.220601 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:05.224627 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.227583 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.231574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:41:05.234596 line       556                     i = i_j[0]
excute 13:41:05.237589 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:05.240582 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.244539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 1)
excute 13:41:05.247562 line       556                     i = i_j[0]
excute 13:41:05.250554 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:05.253546 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.257535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 1)
excute 13:41:05.261524 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:05.264519 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.268474 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.271497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 1)
excute 13:41:05.274489 line       556                     i = i_j[0]
excute 13:41:05.278449 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:05.282438 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.286428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:05.289419 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:05.293408 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:05.297398 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.301419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:05.304412 line       556                     i = i_j[0]
excute 13:41:05.308371 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:05.313354 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.317343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:05.320369 line       556                     i = i_j[0]
excute 13:41:05.323361 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:05.329312 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.336294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:05.340282 line       556                     i = i_j[0]
excute 13:41:05.344273 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:05.349290 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.353268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:05.356241 line       556                     i = i_j[0]
excute 13:41:05.361228 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:05.364250 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.368243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:05.371233 line       556                     i = i_j[0]
excute 13:41:05.375190 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:05.378183 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.382173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:05.385164 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:05.389153 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:05.393143 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.397133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:05.400126 line       556                     i = i_j[0]
excute 13:41:05.405110 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:05.408103 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.412093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:05.415085 line       556                     i = i_j[0]
excute 13:41:05.419083 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:05.422065 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.426054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:05.430044 line       556                     i = i_j[0]
excute 13:41:05.437024 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:05.444006 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.448993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:05.452008 line       556                     i = i_j[0]
excute 13:41:05.456009 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:05.458967 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.463953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:05.468946 line       556                     i = i_j[0]
excute 13:41:05.471932 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:05.475921 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.479910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:41:05.482901 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:05.485893 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:05.489882 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.492874 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:41:05.496865 line       556                     i = i_j[0]
excute 13:41:05.500853 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:05.504844 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.512821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:41:05.515815 line       556                     i = i_j[0]
excute 13:41:05.522795 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:05.525789 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.529778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:41:05.532770 line       556                     i = i_j[0]
excute 13:41:05.536759 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:05.539750 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.543746 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:41:05.546732 line       556                     i = i_j[0]
excute 13:41:05.550720 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:05.553712 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.557702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:41:05.560693 line       556                     i = i_j[0]
excute 13:41:05.563685 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:05.567675 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.570667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 1)
excute 13:41:05.573659 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:05.576651 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.580641 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.583632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 1)
excute 13:41:05.587622 line       556                     i = i_j[0]
excute 13:41:05.590615 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:05.593606 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.597596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 1)
excute 13:41:05.600586 line       556                     i = i_j[0]
excute 13:41:05.603578 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:05.607569 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.611556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 1)
excute 13:41:05.615557 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:05.619538 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.622530 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.626519 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 1)
excute 13:41:05.629540 line       556                     i = i_j[0]
excute 13:41:05.633501 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:05.636522 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.639516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 1)
excute 13:41:05.642508 line       556                     i = i_j[0]
excute 13:41:05.646496 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:05.649488 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.652479 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 1)
excute 13:41:05.656469 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:05.659461 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.663418 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.667409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:41:05.670399 line       556                     i = i_j[0]
excute 13:41:05.673392 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:05.676383 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.679375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 1)
excute 13:41:05.682368 line       556                     i = i_j[0]
excute 13:41:05.686357 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:05.689349 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.693338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:41:05.696331 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:05.699322 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:05.703313 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.706303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:41:05.710294 line       556                     i = i_j[0]
excute 13:41:05.714283 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:05.717305 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.721264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:41:05.724256 line       556                     i = i_j[0]
excute 13:41:05.727248 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:05.730274 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.734261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:41:05.737253 line       556                     i = i_j[0]
excute 13:41:05.740245 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:05.743239 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.747196 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:41:05.750218 line       556                     i = i_j[0]
excute 13:41:05.753209 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:05.757201 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.760192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:41:05.763183 line       556                     i = i_j[0]
excute 13:41:05.767176 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:05.770135 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.774125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:41:05.777116 line       556                     i = i_j[0]
excute 13:41:05.781105 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:05.784097 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.788086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 1)
excute 13:41:05.792079 line       556                     i = i_j[0]
excute 13:41:05.795066 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:05.798058 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.802048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 1)
excute 13:41:05.805039 line       556                     i = i_j[0]
excute 13:41:05.811024 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:05.816041 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:05.820032 line       555                 for i_j in i_j_list:
excute 13:41:05.823026 line       581             self.write_matrix(
excute 13:41:05.826018 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:05.829007 line       583                 result_file_path,
excute 13:41:05.831999 line       584                 mode='a'
excute 13:41:05.837954 line       488         for t in time_steps:
excute Modified var:.. t = 21
excute 13:41:05.840944 line       489             if (t != self.TIME + 1):
excute 13:41:05.844933 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:05.850918 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:05.854907 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:05.858897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:05.862921 line       494                         if (i == j):
excute 13:41:05.866876 line       495                             continue
excute 13:41:05.871860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:05.877845 line       494                         if (i == j):
excute 13:41:05.883830 line       496                         i_j_list.append((
excute 13:41:05.889813 line       497                             i, j,
excute 13:41:05.894801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:05.899789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:41:05.902780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:05.906769 line       494                         if (i == j):
excute 13:41:05.909761 line       496                         i_j_list.append((
excute 13:41:05.913749 line       497                             i, j,
excute 13:41:05.918737 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:05.927713 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:41:05.933696 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:05.940679 line       494                         if (i == j):
excute 13:41:05.949663 line       496                         i_j_list.append((
excute 13:41:05.956634 line       497                             i, j,
excute 13:41:05.959626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:05.965612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:05.969600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:05.975584 line       494                         if (i == j):
excute 13:41:05.981570 line       496                         i_j_list.append((
excute 13:41:05.984560 line       497                             i, j,
excute 13:41:05.987551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:05.990544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:05.994533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:05.999521 line       494                         if (i == j):
excute 13:41:06.003510 line       496                         i_j_list.append((
excute 13:41:06.006501 line       497                             i, j,
excute 13:41:06.009493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.013483 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:06.016476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:06.023456 line       494                         if (i == j):
excute 13:41:06.026450 line       496                         i_j_list.append((
excute 13:41:06.031439 line       497                             i, j,
excute 13:41:06.036427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.041407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:41:06.045407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:06.050385 line       494                         if (i == j):
excute 13:41:06.054375 line       496                         i_j_list.append((
excute 13:41:06.057365 line       497                             i, j,
excute 13:41:06.060356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.063349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:41:06.066341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:06.070331 line       494                         if (i == j):
excute 13:41:06.073322 line       496                         i_j_list.append((
excute 13:41:06.076314 line       497                             i, j,
excute 13:41:06.079306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.082298 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:06.085290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:06.089279 line       494                         if (i == j):
excute 13:41:06.093269 line       496                         i_j_list.append((
excute 13:41:06.096262 line       497                             i, j,
excute 13:41:06.098256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.101248 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:06.104240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:06.108229 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:06.111221 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:06.114213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:06.117204 line       494                         if (i == j):
excute 13:41:06.120197 line       496                         i_j_list.append((
excute 13:41:06.124189 line       497                             i, j,
excute 13:41:06.127179 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.131175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:06.134160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:06.137152 line       494                         if (i == j):
excute 13:41:06.140144 line       495                             continue
excute 13:41:06.143136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:06.146127 line       494                         if (i == j):
excute 13:41:06.150118 line       496                         i_j_list.append((
excute 13:41:06.153110 line       497                             i, j,
excute 13:41:06.159093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.164081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:06.169068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:06.175053 line       494                         if (i == j):
excute 13:41:06.182033 line       496                         i_j_list.append((
excute 13:41:06.188016 line       497                             i, j,
excute 13:41:06.191039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.194031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:06.197023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:06.200017 line       494                         if (i == j):
excute 13:41:06.203974 line       496                         i_j_list.append((
excute 13:41:06.206997 line       497                             i, j,
excute 13:41:06.209989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.212980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:06.215972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:06.219963 line       494                         if (i == j):
excute 13:41:06.222928 line       496                         i_j_list.append((
excute 13:41:06.226914 line       497                             i, j,
excute 13:41:06.230903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.233895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:06.237884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:06.241872 line       494                         if (i == j):
excute 13:41:06.244866 line       496                         i_j_list.append((
excute 13:41:06.247858 line       497                             i, j,
excute 13:41:06.251846 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.254839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:41:06.258829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:06.262816 line       494                         if (i == j):
excute 13:41:06.267803 line       496                         i_j_list.append((
excute 13:41:06.272789 line       497                             i, j,
excute 13:41:06.277777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.281768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:41:06.284757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:06.288747 line       494                         if (i == j):
excute 13:41:06.292736 line       496                         i_j_list.append((
excute 13:41:06.297723 line       497                             i, j,
excute 13:41:06.300715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.303706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:06.307698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:06.313680 line       494                         if (i == j):
excute 13:41:06.321660 line       496                         i_j_list.append((
excute 13:41:06.325650 line       497                             i, j,
excute 13:41:06.332630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.340609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:06.347592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:06.351579 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:06.355569 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:06.359558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:06.363547 line       494                         if (i == j):
excute 13:41:06.367536 line       496                         i_j_list.append((
excute 13:41:06.374517 line       497                             i, j,
excute 13:41:06.382498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.387484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:41:06.393467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:06.401446 line       494                         if (i == j):
excute 13:41:06.407430 line       496                         i_j_list.append((
excute 13:41:06.414411 line       497                             i, j,
excute 13:41:06.422391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.427377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:41:06.431365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:06.439344 line       494                         if (i == j):
excute 13:41:06.446325 line       495                             continue
excute 13:41:06.451313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:06.457296 line       494                         if (i == j):
excute 13:41:06.462283 line       496                         i_j_list.append((
excute 13:41:06.467270 line       497                             i, j,
excute 13:41:06.473255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.480235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:41:06.485222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:06.492205 line       494                         if (i == j):
excute 13:41:06.497190 line       496                         i_j_list.append((
excute 13:41:06.501179 line       497                             i, j,
excute 13:41:06.507162 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.512150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:41:06.519130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:06.526114 line       494                         if (i == j):
excute 13:41:06.533095 line       496                         i_j_list.append((
excute 13:41:06.539078 line       497                             i, j,
excute 13:41:06.547056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.552043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:41:06.557031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:06.563014 line       494                         if (i == j):
excute 13:41:06.568998 line       496                         i_j_list.append((
excute 13:41:06.572987 line       497                             i, j,
excute 13:41:06.578970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.583957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:41:06.588944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:06.594929 line       494                         if (i == j):
excute 13:41:06.600912 line       496                         i_j_list.append((
excute 13:41:06.604901 line       497                             i, j,
excute 13:41:06.611882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.616870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:41:06.621856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:06.626843 line       494                         if (i == j):
excute 13:41:06.632827 line       496                         i_j_list.append((
excute 13:41:06.637813 line       497                             i, j,
excute 13:41:06.644795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.650778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:41:06.656763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:06.662747 line       494                         if (i == j):
excute 13:41:06.668731 line       496                         i_j_list.append((
excute 13:41:06.675712 line       497                             i, j,
excute 13:41:06.680700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.687693 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:41:06.692669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:06.698651 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:06.703639 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:06.707628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:06.711617 line       494                         if (i == j):
excute 13:41:06.716604 line       496                         i_j_list.append((
excute 13:41:06.719595 line       497                             i, j,
excute 13:41:06.723585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.726576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:41:06.730566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:06.734554 line       494                         if (i == j):
excute 13:41:06.738546 line       496                         i_j_list.append((
excute 13:41:06.741536 line       497                             i, j,
excute 13:41:06.747522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.750513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1)]
excute 13:41:06.753503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:06.757495 line       494                         if (i == j):
excute 13:41:06.760486 line       496                         i_j_list.append((
excute 13:41:06.763478 line       497                             i, j,
excute 13:41:06.767467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.770460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0)]
excute 13:41:06.773457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:06.776445 line       494                         if (i == j):
excute 13:41:06.781429 line       495                             continue
excute 13:41:06.784422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:06.787415 line       494                         if (i == j):
excute 13:41:06.790407 line       496                         i_j_list.append((
excute 13:41:06.794396 line       497                             i, j,
excute 13:41:06.798385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.801377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:41:06.804368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:06.808357 line       494                         if (i == j):
excute 13:41:06.814343 line       496                         i_j_list.append((
excute 13:41:06.817334 line       497                             i, j,
excute 13:41:06.820326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.823318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:41:06.826311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:06.829303 line       494                         if (i == j):
excute 13:41:06.832294 line       496                         i_j_list.append((
excute 13:41:06.835286 line       497                             i, j,
excute 13:41:06.838278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.841270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0)]
excute 13:41:06.844262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:06.848256 line       494                         if (i == j):
excute 13:41:06.853238 line       496                         i_j_list.append((
excute 13:41:06.856229 line       497                             i, j,
excute 13:41:06.859221 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.865207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:41:06.872186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:06.875178 line       494                         if (i == j):
excute 13:41:06.879168 line       496                         i_j_list.append((
excute 13:41:06.882161 line       497                             i, j,
excute 13:41:06.884155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.887147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:41:06.890139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:06.894128 line       494                         if (i == j):
excute 13:41:06.897120 line       496                         i_j_list.append((
excute 13:41:06.900112 line       497                             i, j,
excute 13:41:06.903104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.906096 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:41:06.909088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:06.913077 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:06.916069 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:06.920059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:06.923050 line       494                         if (i == j):
excute 13:41:06.926043 line       496                         i_j_list.append((
excute 13:41:06.929035 line       497                             i, j,
excute 13:41:06.932026 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.935018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0)]
excute 13:41:06.938011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:06.941003 line       494                         if (i == j):
excute 13:41:06.945006 line       496                         i_j_list.append((
excute 13:41:06.946987 line       497                             i, j,
excute 13:41:06.949978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.954967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1)]
excute 13:41:06.957958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:06.962945 line       494                         if (i == j):
excute 13:41:06.970923 line       496                         i_j_list.append((
excute 13:41:06.973916 line       497                             i, j,
excute 13:41:06.979902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:06.982892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0)]
excute 13:41:06.985886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:06.989879 line       494                         if (i == j):
excute 13:41:06.992867 line       496                         i_j_list.append((
excute 13:41:06.996853 line       497                             i, j,
excute 13:41:07.000849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.004867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:07.007856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:07.011848 line       494                         if (i == j):
excute 13:41:07.016800 line       495                             continue
excute 13:41:07.019793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:07.021787 line       494                         if (i == j):
excute 13:41:07.025784 line       496                         i_j_list.append((
excute 13:41:07.028801 line       497                             i, j,
excute 13:41:07.031760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.034752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:07.037744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:07.041733 line       494                         if (i == j):
excute 13:41:07.044725 line       496                         i_j_list.append((
excute 13:41:07.047717 line       497                             i, j,
excute 13:41:07.050709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.055697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:41:07.059686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:07.062688 line       494                         if (i == j):
excute 13:41:07.065669 line       496                         i_j_list.append((
excute 13:41:07.068661 line       497                             i, j,
excute 13:41:07.071653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.074645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:41:07.077637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:07.081628 line       494                         if (i == j):
excute 13:41:07.084620 line       496                         i_j_list.append((
excute 13:41:07.087612 line       497                             i, j,
excute 13:41:07.090603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.093595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:07.097585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:07.100577 line       494                         if (i == j):
excute 13:41:07.104566 line       496                         i_j_list.append((
excute 13:41:07.108556 line       497                             i, j,
excute 13:41:07.111549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.114540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:07.117533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:07.120525 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:07.124513 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:07.127506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:07.131495 line       494                         if (i == j):
excute 13:41:07.135485 line       496                         i_j_list.append((
excute 13:41:07.138477 line       497                             i, j,
excute 13:41:07.141469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.144461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0)]
excute 13:41:07.147452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:07.151442 line       494                         if (i == j):
excute 13:41:07.155432 line       496                         i_j_list.append((
excute 13:41:07.160434 line       497                             i, j,
excute 13:41:07.163430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.166435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1)]
excute 13:41:07.169425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:07.172384 line       494                         if (i == j):
excute 13:41:07.175407 line       496                         i_j_list.append((
excute 13:41:07.178400 line       497                             i, j,
excute 13:41:07.181361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.185350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0)]
excute 13:41:07.188341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:07.193329 line       494                         if (i == j):
excute 13:41:07.197317 line       496                         i_j_list.append((
excute 13:41:07.200309 line       497                             i, j,
excute 13:41:07.203301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.206293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:41:07.209285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:07.213275 line       494                         if (i == j):
excute 13:41:07.216266 line       496                         i_j_list.append((
excute 13:41:07.219259 line       497                             i, j,
excute 13:41:07.222250 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.225242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:41:07.228234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:07.231226 line       494                         if (i == j):
excute 13:41:07.235216 line       495                             continue
excute 13:41:07.238219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:07.240203 line       494                         if (i == j):
excute 13:41:07.244192 line       496                         i_j_list.append((
excute 13:41:07.247184 line       497                             i, j,
excute 13:41:07.250176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.253169 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:41:07.256160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:07.259152 line       494                         if (i == j):
excute 13:41:07.264140 line       496                         i_j_list.append((
excute 13:41:07.267130 line       497                             i, j,
excute 13:41:07.270122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.273114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:41:07.277104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:07.280096 line       494                         if (i == j):
excute 13:41:07.284086 line       496                         i_j_list.append((
excute 13:41:07.287077 line       497                             i, j,
excute 13:41:07.290069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.293061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:41:07.296054 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:07.300043 line       494                         if (i == j):
excute 13:41:07.303067 line       496                         i_j_list.append((
excute 13:41:07.306058 line       497                             i, j,
excute 13:41:07.312011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.315003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:41:07.317995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:07.321985 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:07.324976 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:07.334950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:07.339936 line       494                         if (i == j):
excute 13:41:07.343926 line       496                         i_j_list.append((
excute 13:41:07.347916 line       497                             i, j,
excute 13:41:07.351905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.355895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0)]
excute 13:41:07.358886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:07.364887 line       494                         if (i == j):
excute 13:41:07.368896 line       496                         i_j_list.append((
excute 13:41:07.371883 line       497                             i, j,
excute 13:41:07.374842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.377866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1)]
excute 13:41:07.381825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:07.384817 line       494                         if (i == j):
excute 13:41:07.388854 line       496                         i_j_list.append((
excute 13:41:07.391829 line       497                             i, j,
excute 13:41:07.394825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.397816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0)]
excute 13:41:07.400805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:07.403799 line       494                         if (i == j):
excute 13:41:07.407756 line       496                         i_j_list.append((
excute 13:41:07.411744 line       497                             i, j,
excute 13:41:07.414738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.417730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:41:07.420722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:07.424711 line       494                         if (i == j):
excute 13:41:07.428701 line       496                         i_j_list.append((
excute 13:41:07.431693 line       497                             i, j,
excute 13:41:07.434684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.437676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:41:07.441666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:07.444658 line       494                         if (i == j):
excute 13:41:07.448648 line       496                         i_j_list.append((
excute 13:41:07.452637 line       497                             i, j,
excute 13:41:07.456625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.459616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:41:07.462618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:07.466601 line       494                         if (i == j):
excute 13:41:07.469624 line       495                             continue
excute 13:41:07.472613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:07.475605 line       494                         if (i == j):
excute 13:41:07.479566 line       496                         i_j_list.append((
excute 13:41:07.482554 line       497                             i, j,
excute 13:41:07.485546 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.488538 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:41:07.491530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:07.494524 line       494                         if (i == j):
excute 13:41:07.497515 line       496                         i_j_list.append((
excute 13:41:07.500507 line       497                             i, j,
excute 13:41:07.503499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.506491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:41:07.510484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:07.513504 line       494                         if (i == j):
excute 13:41:07.517464 line       496                         i_j_list.append((
excute 13:41:07.520485 line       497                             i, j,
excute 13:41:07.523478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.526439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:41:07.530429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:07.533421 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:07.537410 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:07.540433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:07.543424 line       494                         if (i == j):
excute 13:41:07.547382 line       496                         i_j_list.append((
excute 13:41:07.550405 line       497                             i, j,
excute 13:41:07.553397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.557356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0)]
excute 13:41:07.560347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:07.563340 line       494                         if (i == j):
excute 13:41:07.566330 line       496                         i_j_list.append((
excute 13:41:07.570356 line       497                             i, j,
excute 13:41:07.573346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.576336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1)]
excute 13:41:07.579328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:07.583287 line       494                         if (i == j):
excute 13:41:07.586312 line       496                         i_j_list.append((
excute 13:41:07.589303 line       497                             i, j,
excute 13:41:07.592293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.595285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0)]
excute 13:41:07.599252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:07.602269 line       494                         if (i == j):
excute 13:41:07.606236 line       496                         i_j_list.append((
excute 13:41:07.609217 line       497                             i, j,
excute 13:41:07.612224 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.615233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:41:07.618192 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:07.621184 line       494                         if (i == j):
excute 13:41:07.625187 line       496                         i_j_list.append((
excute 13:41:07.628198 line       497                             i, j,
excute 13:41:07.631189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.634151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:41:07.637176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:07.640165 line       494                         if (i == j):
excute 13:41:07.644124 line       496                         i_j_list.append((
excute 13:41:07.648114 line       497                             i, j,
excute 13:41:07.651106 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.655094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:41:07.658087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:07.661080 line       494                         if (i == j):
excute 13:41:07.665069 line       496                         i_j_list.append((
excute 13:41:07.669057 line       497                             i, j,
excute 13:41:07.673045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.676037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:41:07.679030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:07.682022 line       494                         if (i == j):
excute 13:41:07.685013 line       495                             continue
excute 13:41:07.688006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:07.690998 line       494                         if (i == j):
excute 13:41:07.694987 line       496                         i_j_list.append((
excute 13:41:07.697978 line       497                             i, j,
excute 13:41:07.701005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.703994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:41:07.706987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:07.710978 line       494                         if (i == j):
excute 13:41:07.714934 line       496                         i_j_list.append((
excute 13:41:07.716962 line       497                             i, j,
excute 13:41:07.719955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.722945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:41:07.726902 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:07.729894 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:07.732919 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:07.736876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:07.742506 line       494                         if (i == j):
excute 13:41:07.746493 line       496                         i_j_list.append((
excute 13:41:07.749486 line       497                             i, j,
excute 13:41:07.752479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.755470 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0)]
excute 13:41:07.758463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:07.762461 line       494                         if (i == j):
excute 13:41:07.765442 line       496                         i_j_list.append((
excute 13:41:07.768435 line       497                             i, j,
excute 13:41:07.772424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.776413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:41:07.779405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:07.782396 line       494                         if (i == j):
excute 13:41:07.785388 line       496                         i_j_list.append((
excute 13:41:07.788380 line       497                             i, j,
excute 13:41:07.791372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.794364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:41:07.797356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:07.801346 line       494                         if (i == j):
excute 13:41:07.804337 line       496                         i_j_list.append((
excute 13:41:07.809325 line       497                             i, j,
excute 13:41:07.812319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.816308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:41:07.819297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:07.822292 line       494                         if (i == j):
excute 13:41:07.826279 line       496                         i_j_list.append((
excute 13:41:07.828276 line       497                             i, j,
excute 13:41:07.832264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.835257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:41:07.839244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:07.843235 line       494                         if (i == j):
excute 13:41:07.846258 line       496                         i_j_list.append((
excute 13:41:07.849250 line       497                             i, j,
excute 13:41:07.852242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.856232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:41:07.859223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:07.862215 line       494                         if (i == j):
excute 13:41:07.866207 line       496                         i_j_list.append((
excute 13:41:07.869197 line       497                             i, j,
excute 13:41:07.872188 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.876148 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:41:07.879140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:07.882132 line       494                         if (i == j):
excute 13:41:07.886121 line       496                         i_j_list.append((
excute 13:41:07.890115 line       497                             i, j,
excute 13:41:07.892105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.895097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:41:07.899086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:07.903077 line       494                         if (i == j):
excute 13:41:07.906068 line       495                             continue
excute 13:41:07.910055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:07.913049 line       494                         if (i == j):
excute 13:41:07.916041 line       496                         i_j_list.append((
excute 13:41:07.921025 line       497                             i, j,
excute 13:41:07.924019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.927012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:41:07.930003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:07.933992 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:07.936984 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:07.940975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:07.943966 line       494                         if (i == j):
excute 13:41:07.947956 line       496                         i_j_list.append((
excute 13:41:07.950947 line       497                             i, j,
excute 13:41:07.953939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.956931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0)]
excute 13:41:07.959922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:07.963911 line       494                         if (i == j):
excute 13:41:07.966905 line       496                         i_j_list.append((
excute 13:41:07.969896 line       497                             i, j,
excute 13:41:07.972888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.975880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1)]
excute 13:41:07.979868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:07.983858 line       494                         if (i == j):
excute 13:41:07.986850 line       496                         i_j_list.append((
excute 13:41:07.989842 line       497                             i, j,
excute 13:41:07.992834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:07.995825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0)]
excute 13:41:07.998817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:08.002808 line       494                         if (i == j):
excute 13:41:08.005799 line       496                         i_j_list.append((
excute 13:41:08.008793 line       497                             i, j,
excute 13:41:08.011816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:08.015796 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:41:08.018805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:08.021789 line       494                         if (i == j):
excute 13:41:08.025747 line       496                         i_j_list.append((
excute 13:41:08.028771 line       497                             i, j,
excute 13:41:08.031761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:08.034753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:41:08.037745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:08.041705 line       494                         if (i == j):
excute 13:41:08.044729 line       496                         i_j_list.append((
excute 13:41:08.047718 line       497                             i, j,
excute 13:41:08.050711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:08.053702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:41:08.057694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:08.060685 line       494                         if (i == j):
excute 13:41:08.064643 line       496                         i_j_list.append((
excute 13:41:08.067666 line       497                             i, j,
excute 13:41:08.070658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:08.073652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:41:08.076642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:08.080602 line       494                         if (i == j):
excute 13:41:08.084599 line       496                         i_j_list.append((
excute 13:41:08.087613 line       497                             i, j,
excute 13:41:08.090605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:08.093596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:41:08.097554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:08.100548 line       494                         if (i == j):
excute 13:41:08.104536 line       496                         i_j_list.append((
excute 13:41:08.107529 line       497                             i, j,
excute 13:41:08.111518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:08.114510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 1), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 1), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 1), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:41:08.118500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:08.122490 line       494                         if (i == j):
excute 13:41:08.125481 line       495                             continue
excute 13:41:08.129471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:08.132461 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:08.135458 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (0, 1, 0, 1), (8, 1, 0, 1), (3, 0, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (3, 1, 1, 1), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (7, 0, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (9, 0, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 1, 2, 1), (4, 1, 2, 1), (5, 1, 2, 1), (7, 1, 2, 1), (9, 1, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (6, 0, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (6, 1, 3, 1)]
excute 13:41:08.138445 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:08.141469 line       505                     if (self.RELOCATE):
excute 13:41:08.145429 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:08.148452 line       505                     if (self.RELOCATE):
excute 13:41:08.152422 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:08.155431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:08.158423 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:08.162414 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:08.166371 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.169362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:08.172353 line       556                     i = i_j[0]
excute 13:41:08.176344 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:08.179335 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.188312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:08.193300 line       556                     i = i_j[0]
excute 13:41:08.197292 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:08.200287 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.204271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:08.207262 line       556                     i = i_j[0]
excute 13:41:08.210255 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:08.214253 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.218234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:41:08.221225 line       556                     i = i_j[0]
excute 13:41:08.225213 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.228206 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.232194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:08.235189 line       556                     i = i_j[0]
excute 13:41:08.239192 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:08.242170 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.245162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:08.249150 line       556                     i = i_j[0]
excute 13:41:08.252143 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:08.256132 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.259123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:08.263111 line       556                     i = i_j[0]
excute 13:41:08.267102 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.270093 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.273084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:41:08.277074 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:08.280066 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:08.284056 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.288046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:41:08.293032 line       556                     i = i_j[0]
excute 13:41:08.296025 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:08.299017 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.303006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:41:08.306996 line       556                     i = i_j[0]
excute 13:41:08.311981 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:08.315972 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.319961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:41:08.322953 line       556                     i = i_j[0]
excute 13:41:08.330931 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:08.338910 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.341900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:41:08.345890 line       556                     i = i_j[0]
excute 13:41:08.350887 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:08.353871 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.357860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:41:08.361857 line       556                     i = i_j[0]
excute 13:41:08.365839 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.368831 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.372819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:41:08.375809 line       556                     i = i_j[0]
excute 13:41:08.380797 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:08.383789 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.387779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:41:08.391768 line       556                     i = i_j[0]
excute 13:41:08.394760 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.397752 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.401742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:41:08.405733 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:08.409723 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:08.413711 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.418697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:41:08.420692 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:08.424681 line       557                     j = i_j[1]
excute 13:41:08.428671 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.431675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:41:08.434654 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:08.438645 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:08.441637 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.445624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:41:08.449615 line       556                     i = i_j[0]
excute 13:41:08.452607 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:08.456596 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.460584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:41:08.465571 line       556                     i = i_j[0]
excute 13:41:08.471555 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:08.474548 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.478538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:41:08.481529 line       556                     i = i_j[0]
excute 13:41:08.485518 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:08.488510 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.492500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:41:08.496489 line       556                     i = i_j[0]
excute 13:41:08.500484 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.503471 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.506463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:41:08.510450 line       556                     i = i_j[0]
excute 13:41:08.514443 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:08.517433 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.521421 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:41:08.524412 line       556                     i = i_j[0]
excute 13:41:08.528402 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:08.531394 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.534386 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:41:08.537378 line       556                     i = i_j[0]
excute 13:41:08.541367 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.544359 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.547351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 1)
excute 13:41:08.550343 line       556                     i = i_j[0]
excute 13:41:08.554333 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:08.557324 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.560316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:41:08.563309 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:08.567298 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:08.570290 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.574281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:41:08.577303 line       556                     i = i_j[0]
excute 13:41:08.580296 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:08.583287 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.587246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:41:08.590269 line       556                     i = i_j[0]
excute 13:41:08.594227 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:08.597251 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.601208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:41:08.604232 line       556                     i = i_j[0]
excute 13:41:08.608223 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:08.611183 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.614175 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:41:08.617167 line       556                     i = i_j[0]
excute 13:41:08.621156 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.624148 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.628138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:41:08.631129 line       556                     i = i_j[0]
excute 13:41:08.635119 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:08.639108 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.643097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:41:08.646089 line       556                     i = i_j[0]
excute 13:41:08.650079 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:08.654069 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.657061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:41:08.660052 line       556                     i = i_j[0]
excute 13:41:08.664042 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.667033 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.671036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:08.674015 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:08.677007 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:08.680995 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.683988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:08.686980 line       556                     i = i_j[0]
excute 13:41:08.690969 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:08.693962 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.698947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:08.701938 line       556                     i = i_j[0]
excute 13:41:08.705927 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:08.708919 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.712912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:08.715903 line       556                     i = i_j[0]
excute 13:41:08.719890 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:08.722884 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.726873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:41:08.730862 line       556                     i = i_j[0]
excute 13:41:08.734853 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.737843 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.740836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:08.744825 line       556                     i = i_j[0]
excute 13:41:08.747818 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:08.750810 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.755796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:08.758787 line       556                     i = i_j[0]
excute 13:41:08.761778 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:08.764771 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.768761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:08.771753 line       556                     i = i_j[0]
excute 13:41:08.774745 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.777736 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.781727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:41:08.784719 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:08.787711 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:08.791700 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.794692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:41:08.797683 line       556                     i = i_j[0]
excute 13:41:08.801678 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:08.805663 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.811645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:41:08.815668 line       556                     i = i_j[0]
excute 13:41:08.819625 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:08.822648 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.825639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:41:08.828633 line       556                     i = i_j[0]
excute 13:41:08.832590 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:08.835613 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.838605 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:41:08.842573 line       556                     i = i_j[0]
excute 13:41:08.845555 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.848578 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.851570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:41:08.855560 line       556                     i = i_j[0]
excute 13:41:08.858552 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:08.861544 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.865504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:41:08.868525 line       556                     i = i_j[0]
excute 13:41:08.871518 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:08.874511 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.878472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:41:08.881490 line       556                     i = i_j[0]
excute 13:41:08.884482 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.887475 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.891433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:41:08.894456 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:08.897447 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:08.901417 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.906392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:41:08.909407 line       556                     i = i_j[0]
excute 13:41:08.912398 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:08.915399 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.920365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:41:08.923346 line       556                     i = i_j[0]
excute 13:41:08.926338 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:08.929330 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.933322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:41:08.936324 line       556                     i = i_j[0]
excute 13:41:08.939304 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:08.942295 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.945287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:41:08.948280 line       556                     i = i_j[0]
excute 13:41:08.952269 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:08.955262 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.958253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:41:08.961245 line       556                     i = i_j[0]
excute 13:41:08.965234 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:08.968226 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.972216 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:41:08.975208 line       556                     i = i_j[0]
excute 13:41:08.978201 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:08.981192 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.985182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:41:08.988174 line       556                     i = i_j[0]
excute 13:41:08.991165 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:08.994189 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:08.997181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:41:09.000172 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:09.004132 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:09.009117 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.013107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:41:09.016098 line       556                     i = i_j[0]
excute 13:41:09.019090 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:09.022082 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.026073 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:41:09.029063 line       556                     i = i_j[0]
excute 13:41:09.033055 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:09.039042 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.043027 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:41:09.047015 line       556                     i = i_j[0]
excute 13:41:09.050007 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:09.053997 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.057987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:41:09.060979 line       556                     i = i_j[0]
excute 13:41:09.063971 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:09.066963 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.070953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:41:09.073945 line       556                     i = i_j[0]
excute 13:41:09.076936 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:09.079928 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.083917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:41:09.086910 line       556                     i = i_j[0]
excute 13:41:09.089901 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:09.092893 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.101072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:41:09.105015 line       556                     i = i_j[0]
excute 13:41:09.109003 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:09.114776 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.117802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:41:09.121792 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:09.124786 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:09.128742 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.132731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 1)
excute 13:41:09.135722 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:09.140709 line       557                     j = i_j[1]
excute 13:41:09.144700 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.147692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 1)
excute 13:41:09.150683 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:09.155670 line       557                     j = i_j[1]
excute 13:41:09.159661 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.162652 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 31
excute 13:41:09.166654 line       560                         if (t_tmp > self.TIME):
excute 13:41:09.169643 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:09.172625 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:09.176621 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:09.178610 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:09.182599 line       569                                     available_vhecles[i][t],
excute 13:41:09.185588 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:09.188583 line       571                                     self.S_capacities[j],
excute 13:41:09.191575 line       572                                     demands[t][i][j],
excute 13:41:09.194567 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 21
calc_contract     13:41:09.198556 call       352     def caluculate_contract(
calc_contract     13:41:09.201557 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:09.201557 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:09.202544 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:09.203543 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:09.204540 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:09.204540 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:09.205540 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:41:09.206537 line       575                                 rsf += rsf_tmp
excute 13:41:09.210524 line       576                                 rse += rse_tmp
excute 13:41:09.215509 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 21
move_cars     Starting var:.. t_tmp = 31
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:09.218502 call       388     def move_cars(
move_cars     13:41:09.222493 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:09.223490 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:09.225484 line       399         return available_vhecles
move_cars     13:41:09.227478 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:09.230469 line       579                                 success += can_contract
excute Modified var:.. success = 18
excute 13:41:09.236455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 1)
excute 13:41:09.240442 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:09.243435 line       557                     j = i_j[1]
excute 13:41:09.247425 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.250417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 1)
excute 13:41:09.253408 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:09.257397 line       557                     j = i_j[1]
excute 13:41:09.260389 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.263382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:09.266373 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:09.270363 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:09.273357 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.277346 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:09.280337 line       556                     i = i_j[0]
excute 13:41:09.283329 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:09.286320 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.290311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:09.293333 line       556                     i = i_j[0]
excute 13:41:09.296327 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:09.299316 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.303276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:09.306299 line       556                     i = i_j[0]
excute 13:41:09.310257 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:09.314246 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.319233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:09.322235 line       556                     i = i_j[0]
excute 13:41:09.325216 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:09.331201 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.337187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:41:09.341175 line       556                     i = i_j[0]
excute 13:41:09.344167 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:09.349171 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.353142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:09.356167 line       556                     i = i_j[0]
excute 13:41:09.360129 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:09.363146 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.367107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:09.370127 line       556                     i = i_j[0]
excute 13:41:09.374085 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:09.377109 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.381074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:09.384089 line       556                     i = i_j[0]
excute 13:41:09.388053 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:09.391042 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.395032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:41:09.398022 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:09.402020 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:09.405034 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.408995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:41:09.412018 line       556                     i = i_j[0]
excute 13:41:09.415975 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:09.419998 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.422990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:41:09.425978 line       556                     i = i_j[0]
excute 13:41:09.429968 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:09.432960 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.435954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:41:09.438947 line       556                     i = i_j[0]
excute 13:41:09.442902 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:09.446891 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.451877 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:41:09.456866 line       556                     i = i_j[0]
excute 13:41:09.460879 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:09.465840 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.470830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:41:09.475814 line       556                     i = i_j[0]
excute 13:41:09.480812 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:09.484789 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.488782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:41:09.493767 line       556                     i = i_j[0]
excute 13:41:09.498752 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:09.504752 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.510720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:41:09.516704 line       556                     i = i_j[0]
excute 13:41:09.522688 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:09.528673 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.532662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 1)
excute 13:41:09.537650 line       556                     i = i_j[0]
excute 13:41:09.542635 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:09.546624 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:09.551613 line       555                 for i_j in i_j_list:
excute 13:41:09.555601 line       581             self.write_matrix(
excute 13:41:09.561584 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:09.567569 line       583                 result_file_path,
excute 13:41:09.572556 line       584                 mode='a'
excute 13:41:09.579536 line       488         for t in time_steps:
excute Modified var:.. t = 22
excute 13:41:09.585522 line       489             if (t != self.TIME + 1):
excute 13:41:09.591504 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:09.597487 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:09.603472 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:09.609458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:09.615440 line       494                         if (i == j):
excute 13:41:09.624417 line       495                             continue
excute 13:41:09.631397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:09.638379 line       494                         if (i == j):
excute 13:41:09.645362 line       496                         i_j_list.append((
excute 13:41:09.651345 line       497                             i, j,
excute 13:41:09.657329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.663312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:09.669297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:09.676278 line       494                         if (i == j):
excute 13:41:09.683259 line       496                         i_j_list.append((
excute 13:41:09.687249 line       497                             i, j,
excute 13:41:09.693245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.699216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:41:09.705200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:09.723153 line       494                         if (i == j):
excute 13:41:09.736122 line       496                         i_j_list.append((
excute 13:41:09.745094 line       497                             i, j,
excute 13:41:09.753072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.759057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:09.762049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:09.768035 line       494                         if (i == j):
excute 13:41:09.776012 line       496                         i_j_list.append((
excute 13:41:09.783989 line       497                             i, j,
excute 13:41:09.789974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.795957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:09.799947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:09.805932 line       494                         if (i == j):
excute 13:41:09.811919 line       496                         i_j_list.append((
excute 13:41:09.818897 line       497                             i, j,
excute 13:41:09.826875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.833856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:09.840838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:09.847819 line       494                         if (i == j):
excute 13:41:09.854801 line       496                         i_j_list.append((
excute 13:41:09.859787 line       497                             i, j,
excute 13:41:09.864774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.870765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:41:09.876749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:09.884722 line       494                         if (i == j):
excute 13:41:09.888712 line       496                         i_j_list.append((
excute 13:41:09.891703 line       497                             i, j,
excute 13:41:09.899692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.906663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:41:09.913644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:09.919627 line       494                         if (i == j):
excute 13:41:09.924614 line       496                         i_j_list.append((
excute 13:41:09.929602 line       497                             i, j,
excute 13:41:09.934587 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.938577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:09.942578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:09.948557 line       494                         if (i == j):
excute 13:41:09.953537 line       496                         i_j_list.append((
excute 13:41:09.956528 line       497                             i, j,
excute 13:41:09.963511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:09.969496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:09.974481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:09.981461 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:09.986452 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:09.991435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:09.998417 line       494                         if (i == j):
excute 13:41:10.004400 line       496                         i_j_list.append((
excute 13:41:10.010386 line       497                             i, j,
excute 13:41:10.016369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.020359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:10.026342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:10.032327 line       494                         if (i == j):
excute 13:41:10.037312 line       495                             continue
excute 13:41:10.041302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:10.046289 line       494                         if (i == j):
excute 13:41:10.052272 line       496                         i_j_list.append((
excute 13:41:10.057259 line       497                             i, j,
excute 13:41:10.061249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.066234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:10.071223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:10.078203 line       494                         if (i == j):
excute 13:41:10.082194 line       496                         i_j_list.append((
excute 13:41:10.086182 line       497                             i, j,
excute 13:41:10.092166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.096155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:10.101142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:10.107127 line       494                         if (i == j):
excute 13:41:10.112113 line       496                         i_j_list.append((
excute 13:41:10.115105 line       497                             i, j,
excute 13:41:10.119094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.125078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:10.131062 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:10.135051 line       494                         if (i == j):
excute 13:41:10.138043 line       496                         i_j_list.append((
excute 13:41:10.141035 line       497                             i, j,
excute 13:41:10.145025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.151010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:10.154999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:10.158988 line       494                         if (i == j):
excute 13:41:10.162978 line       496                         i_j_list.append((
excute 13:41:10.167963 line       497                             i, j,
excute 13:41:10.170955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.173946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1)]
excute 13:41:10.176938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:10.179931 line       494                         if (i == j):
excute 13:41:10.183921 line       496                         i_j_list.append((
excute 13:41:10.188907 line       497                             i, j,
excute 13:41:10.194896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.197883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0)]
excute 13:41:10.200875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:10.203868 line       494                         if (i == j):
excute 13:41:10.208855 line       496                         i_j_list.append((
excute 13:41:10.212845 line       497                             i, j,
excute 13:41:10.218827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.222817 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:10.225808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:10.232794 line       494                         if (i == j):
excute 13:41:10.236780 line       496                         i_j_list.append((
excute 13:41:10.239771 line       497                             i, j,
excute 13:41:10.243761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.248748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:10.253735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:10.259719 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:10.263709 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:10.267698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:10.271686 line       494                         if (i == j):
excute 13:41:10.276673 line       496                         i_j_list.append((
excute 13:41:10.280664 line       497                             i, j,
excute 13:41:10.284652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.289638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:41:10.293627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:10.298614 line       494                         if (i == j):
excute 13:41:10.302603 line       496                         i_j_list.append((
excute 13:41:10.306593 line       497                             i, j,
excute 13:41:10.310586 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.314571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:41:10.317565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:10.321553 line       494                         if (i == j):
excute 13:41:10.325542 line       495                             continue
excute 13:41:10.329531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:10.335517 line       494                         if (i == j):
excute 13:41:10.349478 line       496                         i_j_list.append((
excute 13:41:10.355476 line       497                             i, j,
excute 13:41:10.360448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.365437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:41:10.370422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:10.375409 line       494                         if (i == j):
excute 13:41:10.379398 line       496                         i_j_list.append((
excute 13:41:10.384385 line       497                             i, j,
excute 13:41:10.389372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.392364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:41:10.397351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:10.401341 line       494                         if (i == j):
excute 13:41:10.405339 line       496                         i_j_list.append((
excute 13:41:10.408320 line       497                             i, j,
excute 13:41:10.411313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.417297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:41:10.420288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:10.424278 line       494                         if (i == j):
excute 13:41:10.429266 line       496                         i_j_list.append((
excute 13:41:10.432258 line       497                             i, j,
excute 13:41:10.435250 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.439238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:41:10.443227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:10.447218 line       494                         if (i == j):
excute 13:41:10.452204 line       496                         i_j_list.append((
excute 13:41:10.456193 line       497                             i, j,
excute 13:41:10.465168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.469159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:41:10.472153 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:10.479132 line       494                         if (i == j):
excute 13:41:10.484120 line       496                         i_j_list.append((
excute 13:41:10.489104 line       497                             i, j,
excute 13:41:10.494092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.498081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:41:10.503068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:10.508056 line       494                         if (i == j):
excute 13:41:10.514039 line       496                         i_j_list.append((
excute 13:41:10.517032 line       497                             i, j,
excute 13:41:10.522017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.527004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:41:10.529996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:10.534983 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:10.537975 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:10.540966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:10.544955 line       494                         if (i == j):
excute 13:41:10.548946 line       496                         i_j_list.append((
excute 13:41:10.551937 line       497                             i, j,
excute 13:41:10.554928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.557920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0)]
excute 13:41:10.560913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:10.566899 line       494                         if (i == j):
excute 13:41:10.569890 line       496                         i_j_list.append((
excute 13:41:10.573880 line       497                             i, j,
excute 13:41:10.576871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.579864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:41:10.582855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:10.586846 line       494                         if (i == j):
excute 13:41:10.589836 line       496                         i_j_list.append((
excute 13:41:10.592829 line       497                             i, j,
excute 13:41:10.595819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.598811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:41:10.601803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:10.604796 line       494                         if (i == j):
excute 13:41:10.608787 line       495                             continue
excute 13:41:10.611778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:10.614770 line       494                         if (i == j):
excute 13:41:10.617761 line       496                         i_j_list.append((
excute 13:41:10.620753 line       497                             i, j,
excute 13:41:10.623746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.626737 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:41:10.629729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:10.633720 line       494                         if (i == j):
excute 13:41:10.637709 line       496                         i_j_list.append((
excute 13:41:10.640701 line       497                             i, j,
excute 13:41:10.643693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.646685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:41:10.649676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:10.653665 line       494                         if (i == j):
excute 13:41:10.659650 line       496                         i_j_list.append((
excute 13:41:10.662640 line       497                             i, j,
excute 13:41:10.667628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.672614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1)]
excute 13:41:10.676604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:10.681590 line       494                         if (i == j):
excute 13:41:10.686610 line       496                         i_j_list.append((
excute 13:41:10.690566 line       497                             i, j,
excute 13:41:10.696550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.700558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0)]
excute 13:41:10.704528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:10.708518 line       494                         if (i == j):
excute 13:41:10.712508 line       496                         i_j_list.append((
excute 13:41:10.715534 line       497                             i, j,
excute 13:41:10.718522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.721516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:41:10.724508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:10.728466 line       494                         if (i == j):
excute 13:41:10.731491 line       496                         i_j_list.append((
excute 13:41:10.734480 line       497                             i, j,
excute 13:41:10.737472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.740464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:41:10.743457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:10.747451 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:10.750417 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:10.753397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:10.756421 line       494                         if (i == j):
excute 13:41:10.760415 line       496                         i_j_list.append((
excute 13:41:10.763407 line       497                             i, j,
excute 13:41:10.766373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.771352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0)]
excute 13:41:10.774374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:10.777365 line       494                         if (i == j):
excute 13:41:10.781323 line       496                         i_j_list.append((
excute 13:41:10.784350 line       497                             i, j,
excute 13:41:10.787342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.790330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:41:10.793323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:10.797281 line       494                         if (i == j):
excute 13:41:10.801270 line       496                         i_j_list.append((
excute 13:41:10.804261 line       497                             i, j,
excute 13:41:10.807253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.811257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:41:10.814236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:10.817227 line       494                         if (i == j):
excute 13:41:10.821219 line       496                         i_j_list.append((
excute 13:41:10.824211 line       497                             i, j,
excute 13:41:10.827202 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.830194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:10.833186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:10.837175 line       494                         if (i == j):
excute 13:41:10.841167 line       495                             continue
excute 13:41:10.845155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:10.848177 line       494                         if (i == j):
excute 13:41:10.851171 line       496                         i_j_list.append((
excute 13:41:10.855159 line       497                             i, j,
excute 13:41:10.858149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.861141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:10.864136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:10.867130 line       494                         if (i == j):
excute 13:41:10.871096 line       496                         i_j_list.append((
excute 13:41:10.875109 line       497                             i, j,
excute 13:41:10.878096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.881088 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:41:10.884079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:10.888073 line       494                         if (i == j):
excute 13:41:10.891066 line       496                         i_j_list.append((
excute 13:41:10.894055 line       497                             i, j,
excute 13:41:10.897045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.900038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:41:10.903029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:10.906988 line       494                         if (i == j):
excute 13:41:10.910012 line       496                         i_j_list.append((
excute 13:41:10.913002 line       497                             i, j,
excute 13:41:10.915995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.918955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:10.922946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:10.925939 line       494                         if (i == j):
excute 13:41:10.929926 line       496                         i_j_list.append((
excute 13:41:10.932920 line       497                             i, j,
excute 13:41:10.935911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.939900 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:10.942893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:10.945885 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:10.948877 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:10.952866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:10.956855 line       494                         if (i == j):
excute 13:41:10.959848 line       496                         i_j_list.append((
excute 13:41:10.963837 line       497                             i, j,
excute 13:41:10.966859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.969852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0)]
excute 13:41:10.972844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:10.977799 line       494                         if (i == j):
excute 13:41:10.981789 line       496                         i_j_list.append((
excute 13:41:10.984811 line       497                             i, j,
excute 13:41:10.987803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:10.990795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:41:10.993787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:10.996779 line       494                         if (i == j):
excute 13:41:11.000744 line       496                         i_j_list.append((
excute 13:41:11.003728 line       497                             i, j,
excute 13:41:11.005754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.009714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:41:11.012707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:11.016696 line       494                         if (i == j):
excute 13:41:11.020684 line       496                         i_j_list.append((
excute 13:41:11.023710 line       497                             i, j,
excute 13:41:11.026702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.029691 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:11.032683 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:11.036643 line       494                         if (i == j):
excute 13:41:11.039668 line       496                         i_j_list.append((
excute 13:41:11.042659 line       497                             i, j,
excute 13:41:11.046614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.048641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:11.052598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:11.055625 line       494                         if (i == j):
excute 13:41:11.059611 line       495                             continue
excute 13:41:11.062572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:11.065567 line       494                         if (i == j):
excute 13:41:11.068565 line       496                         i_j_list.append((
excute 13:41:11.071550 line       497                             i, j,
excute 13:41:11.074541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.077533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1)]
excute 13:41:11.081523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:11.085511 line       494                         if (i == j):
excute 13:41:11.089500 line       496                         i_j_list.append((
excute 13:41:11.091496 line       497                             i, j,
excute 13:41:11.095485 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.098478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0)]
excute 13:41:11.101469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:11.104490 line       494                         if (i == j):
excute 13:41:11.108482 line       496                         i_j_list.append((
excute 13:41:11.111441 line       497                             i, j,
excute 13:41:11.114433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.117425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:41:11.120450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:11.123440 line       494                         if (i == j):
excute 13:41:11.127400 line       496                         i_j_list.append((
excute 13:41:11.130425 line       497                             i, j,
excute 13:41:11.133413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.136408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:11.139398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:11.143391 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:11.146349 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:11.149372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:11.152362 line       494                         if (i == j):
excute 13:41:11.156320 line       496                         i_j_list.append((
excute 13:41:11.159347 line       497                             i, j,
excute 13:41:11.162340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.165332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0)]
excute 13:41:11.168320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:11.172311 line       494                         if (i == j):
excute 13:41:11.175270 line       496                         i_j_list.append((
excute 13:41:11.178297 line       497                             i, j,
excute 13:41:11.181253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.186240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:41:11.189232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:11.193222 line       494                         if (i == j):
excute 13:41:11.196214 line       496                         i_j_list.append((
excute 13:41:11.199206 line       497                             i, j,
excute 13:41:11.203195 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.206187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:41:11.211173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:11.217158 line       494                         if (i == j):
excute 13:41:11.221147 line       496                         i_j_list.append((
excute 13:41:11.224139 line       497                             i, j,
excute 13:41:11.227131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.232117 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:41:11.236107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:11.243089 line       494                         if (i == j):
excute 13:41:11.249073 line       496                         i_j_list.append((
excute 13:41:11.255057 line       497                             i, j,
excute 13:41:11.261041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.268023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:41:11.276001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:11.283980 line       494                         if (i == j):
excute 13:41:11.290995 line       496                         i_j_list.append((
excute 13:41:11.296951 line       497                             i, j,
excute 13:41:11.303927 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.307916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:41:11.312902 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:11.320882 line       494                         if (i == j):
excute 13:41:11.326868 line       495                             continue
excute 13:41:11.335842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:11.347810 line       494                         if (i == j):
excute 13:41:11.353794 line       496                         i_j_list.append((
excute 13:41:11.357784 line       497                             i, j,
excute 13:41:11.361773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.368761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:41:11.371745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:11.381720 line       494                         if (i == j):
excute 13:41:11.390695 line       496                         i_j_list.append((
excute 13:41:11.399671 line       497                             i, j,
excute 13:41:11.403659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.410643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:41:11.417622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:11.425602 line       494                         if (i == j):
excute 13:41:11.433581 line       496                         i_j_list.append((
excute 13:41:11.441558 line       497                             i, j,
excute 13:41:11.448540 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.455522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:41:11.460509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:11.468487 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:11.476467 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:11.483450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:11.488434 line       494                         if (i == j):
excute 13:41:11.496412 line       496                         i_j_list.append((
excute 13:41:11.503393 line       497                             i, j,
excute 13:41:11.509377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.514364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0)]
excute 13:41:11.521345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:11.529328 line       494                         if (i == j):
excute 13:41:11.534310 line       496                         i_j_list.append((
excute 13:41:11.539297 line       497                             i, j,
excute 13:41:11.546278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.550268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:41:11.556253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:11.562236 line       494                         if (i == j):
excute 13:41:11.567223 line       496                         i_j_list.append((
excute 13:41:11.574205 line       497                             i, j,
excute 13:41:11.579190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.585174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:41:11.590161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:11.597144 line       494                         if (i == j):
excute 13:41:11.605120 line       496                         i_j_list.append((
excute 13:41:11.611105 line       497                             i, j,
excute 13:41:11.615095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.621078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:41:11.628060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:11.635042 line       494                         if (i == j):
excute 13:41:11.641025 line       496                         i_j_list.append((
excute 13:41:11.648007 line       497                             i, j,
excute 13:41:11.653991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.657979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:41:11.662966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:11.668953 line       494                         if (i == j):
excute 13:41:11.674934 line       496                         i_j_list.append((
excute 13:41:11.681915 line       497                             i, j,
excute 13:41:11.687899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.692888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:41:11.698871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:11.705853 line       494                         if (i == j):
excute 13:41:11.711836 line       496                         i_j_list.append((
excute 13:41:11.717820 line       497                             i, j,
excute 13:41:11.723812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.728790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1)]
excute 13:41:11.732781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:11.739762 line       494                         if (i == j):
excute 13:41:11.743750 line       495                             continue
excute 13:41:11.746743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:11.748737 line       494                         if (i == j):
excute 13:41:11.752726 line       496                         i_j_list.append((
excute 13:41:11.755719 line       497                             i, j,
excute 13:41:11.758710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.761702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0)]
excute 13:41:11.764694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:11.768684 line       494                         if (i == j):
excute 13:41:11.771676 line       496                         i_j_list.append((
excute 13:41:11.774667 line       497                             i, j,
excute 13:41:11.778657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.781649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:41:11.784641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:11.787634 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:11.791622 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:11.794615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:11.798604 line       494                         if (i == j):
excute 13:41:11.803594 line       496                         i_j_list.append((
excute 13:41:11.808583 line       497                             i, j,
excute 13:41:11.813564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.816561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0)]
excute 13:41:11.819549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:11.824536 line       494                         if (i == j):
excute 13:41:11.829522 line       496                         i_j_list.append((
excute 13:41:11.834510 line       497                             i, j,
excute 13:41:11.840493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.847474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:41:11.852461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:11.857447 line       494                         if (i == j):
excute 13:41:11.861437 line       496                         i_j_list.append((
excute 13:41:11.865426 line       497                             i, j,
excute 13:41:11.871409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.877394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:41:11.883377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:11.887368 line       494                         if (i == j):
excute 13:41:11.890358 line       496                         i_j_list.append((
excute 13:41:11.895345 line       497                             i, j,
excute 13:41:11.899334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.905318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:41:11.909309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:11.915296 line       494                         if (i == j):
excute 13:41:11.920280 line       496                         i_j_list.append((
excute 13:41:11.924269 line       497                             i, j,
excute 13:41:11.930252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.933244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:41:11.940226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:11.944218 line       494                         if (i == j):
excute 13:41:11.951197 line       496                         i_j_list.append((
excute 13:41:11.956183 line       497                             i, j,
excute 13:41:11.962170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.966156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:41:11.970146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:11.977128 line       494                         if (i == j):
excute 13:41:11.982114 line       496                         i_j_list.append((
excute 13:41:11.985105 line       497                             i, j,
excute 13:41:11.988097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:11.991089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1)]
excute 13:41:11.995079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:11.998071 line       494                         if (i == j):
excute 13:41:12.003064 line       496                         i_j_list.append((
excute 13:41:12.006049 line       497                             i, j,
excute 13:41:12.011035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.017021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:41:12.023003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:12.027992 line       494                         if (i == j):
excute 13:41:12.031981 line       495                             continue
excute 13:41:12.034972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:12.040957 line       494                         if (i == j):
excute 13:41:12.044945 line       496                         i_j_list.append((
excute 13:41:12.048935 line       497                             i, j,
excute 13:41:12.051927 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.054918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:41:12.057910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:12.061901 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:12.064892 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:12.067884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:12.071874 line       494                         if (i == j):
excute 13:41:12.074865 line       496                         i_j_list.append((
excute 13:41:12.077856 line       497                             i, j,
excute 13:41:12.080849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.083841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0)]
excute 13:41:12.087830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:12.090822 line       494                         if (i == j):
excute 13:41:12.094812 line       496                         i_j_list.append((
excute 13:41:12.097804 line       497                             i, j,
excute 13:41:12.100796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.104786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:41:12.107778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:12.110771 line       494                         if (i == j):
excute 13:41:12.114759 line       496                         i_j_list.append((
excute 13:41:12.118748 line       497                             i, j,
excute 13:41:12.121739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.125731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:41:12.128722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:12.132712 line       494                         if (i == j):
excute 13:41:12.136701 line       496                         i_j_list.append((
excute 13:41:12.139693 line       497                             i, j,
excute 13:41:12.143683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.146674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:41:12.150664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:12.154653 line       494                         if (i == j):
excute 13:41:12.158643 line       496                         i_j_list.append((
excute 13:41:12.161635 line       497                             i, j,
excute 13:41:12.164626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.168616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:41:12.171608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:12.175610 line       494                         if (i == j):
excute 13:41:12.179618 line       496                         i_j_list.append((
excute 13:41:12.185569 line       497                             i, j,
excute 13:41:12.191555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.197537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:41:12.202524 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:12.209507 line       494                         if (i == j):
excute 13:41:12.212499 line       496                         i_j_list.append((
excute 13:41:12.217483 line       497                             i, j,
excute 13:41:12.222471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.225464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 1)]
excute 13:41:12.228456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:12.232445 line       494                         if (i == j):
excute 13:41:12.236433 line       496                         i_j_list.append((
excute 13:41:12.239426 line       497                             i, j,
excute 13:41:12.242418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.245410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 1), (9, 7, 2, 0)]
excute 13:41:12.248403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:12.252390 line       494                         if (i == j):
excute 13:41:12.257378 line       496                         i_j_list.append((
excute 13:41:12.260371 line       497                             i, j,
excute 13:41:12.263363 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:12.266354 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 1), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 1), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 1), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:41:12.269345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:12.273337 line       494                         if (i == j):
excute 13:41:12.276326 line       495                             continue
excute 13:41:12.280315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:12.283307 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:12.286299 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (0, 6, 0, 1), (8, 6, 0, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (3, 6, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 6, 2, 1), (4, 6, 2, 1), (7, 6, 2, 1), (9, 6, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (1, 6, 3, 1), (5, 6, 3, 1)]
excute 13:41:12.289293 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:12.293283 line       505                     if (self.RELOCATE):
excute 13:41:12.296274 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:12.300263 line       505                     if (self.RELOCATE):
excute 13:41:12.303255 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:12.306247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:12.309239 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:12.312231 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:12.316225 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.319247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:12.324199 line       556                     i = i_j[0]
excute 13:41:12.333184 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:12.336168 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.341156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:12.345174 line       556                     i = i_j[0]
excute 13:41:12.349158 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:12.353121 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.357110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:12.360107 line       556                     i = i_j[0]
excute 13:41:12.364095 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:12.367118 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.371106 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:12.374096 line       556                     i = i_j[0]
excute 13:41:12.378056 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:12.381079 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.385037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:12.388061 line       556                     i = i_j[0]
excute 13:41:12.392043 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:12.395041 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.398033 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:12.402023 line       556                     i = i_j[0]
excute 13:41:12.405014 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:12.408006 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.411966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:12.414991 line       556                     i = i_j[0]
excute 13:41:12.418947 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:12.421970 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.424962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:41:12.429917 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:12.433907 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:12.437896 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.440918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:41:12.443912 line       556                     i = i_j[0]
excute 13:41:12.447870 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:12.450891 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.454857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:41:12.457843 line       556                     i = i_j[0]
excute 13:41:12.461833 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:12.464824 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.468814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:41:12.471805 line       556                     i = i_j[0]
excute 13:41:12.475795 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:12.478787 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.482777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:41:12.485768 line       556                     i = i_j[0]
excute 13:41:12.489756 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:12.492749 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.496739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:41:12.499731 line       556                     i = i_j[0]
excute 13:41:12.503721 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:12.506712 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.510702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:41:12.513694 line       556                     i = i_j[0]
excute 13:41:12.517681 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:12.520675 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.524665 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:41:12.527657 line       556                     i = i_j[0]
excute 13:41:12.532643 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:12.535665 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.538657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:41:12.541648 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:12.545607 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:12.549596 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.553588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:41:12.557576 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:12.561566 line       557                     j = i_j[1]
excute 13:41:12.564557 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.567548 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 37
excute 13:41:12.570540 line       560                         if (t_tmp > self.TIME):
excute 13:41:12.574532 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:12.577523 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:12.580514 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:12.583506 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:12.586498 line       569                                     available_vhecles[i][t],
excute 13:41:12.589490 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:12.592482 line       571                                     self.S_capacities[j],
excute 13:41:12.595474 line       572                                     demands[t][i][j],
excute 13:41:12.598466 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 22
calc_contract     13:41:12.601458 call       352     def caluculate_contract(
calc_contract     13:41:12.604473 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:12.604473 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:12.605449 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:12.606446 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:12.607444 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:12.607444 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:12.608441 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:41:12.609438 line       575                                 rsf += rsf_tmp
excute 13:41:12.612429 line       576                                 rse += rse_tmp
excute 13:41:12.615451 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 8
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 22
move_cars     Starting var:.. t_tmp = 37
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:12.618443 call       388     def move_cars(
move_cars     13:41:12.622415 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:12.623401 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:12.625396 line       399         return available_vhecles
move_cars     13:41:12.626393 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:12.628387 line       579                                 success += can_contract
excute Modified var:.. success = 19
excute 13:41:12.633373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:41:12.637396 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:12.641352 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:12.644374 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.648334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:41:12.651359 line       556                     i = i_j[0]
excute 13:41:12.655316 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:12.658337 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.661329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:41:12.665318 line       556                     i = i_j[0]
excute 13:41:12.668280 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:12.672268 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.675261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:41:12.678253 line       556                     i = i_j[0]
excute 13:41:12.682243 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:12.686232 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.689224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:41:12.693213 line       556                     i = i_j[0]
excute 13:41:12.697203 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:12.700193 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.707202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:41:12.714159 line       556                     i = i_j[0]
excute 13:41:12.721137 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:12.727121 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.731113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:41:12.736100 line       556                     i = i_j[0]
excute 13:41:12.740090 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:12.743081 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.746072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:41:12.749065 line       556                     i = i_j[0]
excute 13:41:12.754050 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:12.757043 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.760035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 1)
excute 13:41:12.764024 line       556                     i = i_j[0]
excute 13:41:12.767016 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:12.771006 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.773998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:41:12.776989 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:12.780978 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:12.785964 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.788959 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:41:12.792947 line       556                     i = i_j[0]
excute 13:41:12.795938 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:12.798930 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.802929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:41:12.805912 line       556                     i = i_j[0]
excute 13:41:12.808903 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:12.811895 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.815886 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:41:12.818878 line       556                     i = i_j[0]
excute 13:41:12.821869 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:12.824860 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.828852 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:41:12.831842 line       556                     i = i_j[0]
excute 13:41:12.834835 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:12.840851 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.845840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:41:12.848827 line       556                     i = i_j[0]
excute 13:41:12.852796 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:12.855809 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.859768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:41:12.862790 line       556                     i = i_j[0]
excute 13:41:12.865782 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:12.868774 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.872734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:41:12.875755 line       556                     i = i_j[0]
excute 13:41:12.878747 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:12.881740 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.885699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:12.888721 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:12.891713 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:12.895673 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.898696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:12.902654 line       556                     i = i_j[0]
excute 13:41:12.905675 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:12.909634 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.912627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:12.916617 line       556                     i = i_j[0]
excute 13:41:12.920607 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:12.923597 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.927586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:12.930580 line       556                     i = i_j[0]
excute 13:41:12.933569 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:12.937563 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.941550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:12.944572 line       556                     i = i_j[0]
excute 13:41:12.948532 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:12.951553 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.955514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:12.958518 line       556                     i = i_j[0]
excute 13:41:12.963491 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:12.967479 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.971470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:12.975459 line       556                     i = i_j[0]
excute 13:41:12.979480 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:12.982471 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.986428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:12.989420 line       556                     i = i_j[0]
excute 13:41:12.992414 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:12.995435 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:12.999396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:41:13.002420 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:13.006375 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:13.010383 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.013358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:41:13.017346 line       556                     i = i_j[0]
excute 13:41:13.020369 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:13.023361 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.027321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:41:13.030342 line       556                     i = i_j[0]
excute 13:41:13.034302 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:13.037328 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.040315 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:41:13.044275 line       556                     i = i_j[0]
excute 13:41:13.048263 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:13.051286 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.055278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:41:13.058270 line       556                     i = i_j[0]
excute 13:41:13.061263 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:13.064252 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.068211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:41:13.071233 line       556                     i = i_j[0]
excute 13:41:13.074227 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:13.077220 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.081177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:41:13.084198 line       556                     i = i_j[0]
excute 13:41:13.087191 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:13.091159 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.094145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:41:13.097133 line       556                     i = i_j[0]
excute 13:41:13.101123 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:13.105112 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.109101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:41:13.111097 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:13.115086 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:13.119074 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.123064 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:41:13.126087 line       556                     i = i_j[0]
excute 13:41:13.129079 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:13.132070 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.136030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:41:13.139053 line       556                     i = i_j[0]
excute 13:41:13.143009 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:13.146002 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.150023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:41:13.153981 line       556                     i = i_j[0]
excute 13:41:13.157008 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:13.159995 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.163987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:41:13.166979 line       556                     i = i_j[0]
excute 13:41:13.169972 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:13.172965 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.176920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:41:13.179942 line       556                     i = i_j[0]
excute 13:41:13.183900 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:13.186892 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.189884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:41:13.199857 line       556                     i = i_j[0]
excute 13:41:13.205842 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:13.211827 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.214817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:41:13.217809 line       556                     i = i_j[0]
excute 13:41:13.221799 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:13.224791 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.227782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:41:13.231772 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:13.234764 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:13.238754 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.241745 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:41:13.244737 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:13.250723 line       557                     j = i_j[1]
excute 13:41:13.254711 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.257702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 1)
excute 13:41:13.260694 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:13.264686 line       557                     j = i_j[1]
excute 13:41:13.267708 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.270701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 1)
excute 13:41:13.273694 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:13.277650 line       557                     j = i_j[1]
excute 13:41:13.281674 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.284632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:13.288622 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:13.292612 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:13.296610 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.299606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:13.302584 line       556                     i = i_j[0]
excute 13:41:13.306573 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:13.309566 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.312558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:13.315550 line       556                     i = i_j[0]
excute 13:41:13.319540 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:13.322531 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.326521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:13.334500 line       556                     i = i_j[0]
excute 13:41:13.342478 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:13.347464 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.352453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:13.357438 line       556                     i = i_j[0]
excute 13:41:13.361446 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:13.364417 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.368439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:13.371430 line       556                     i = i_j[0]
excute 13:41:13.375390 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:13.378411 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.382385 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:13.386392 line       556                     i = i_j[0]
excute 13:41:13.390350 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:13.393341 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.397331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:13.400323 line       556                     i = i_j[0]
excute 13:41:13.404313 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:13.407304 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.411294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:41:13.414286 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:13.418274 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:13.425256 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.432244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:13.438221 line       556                     i = i_j[0]
excute 13:41:13.442210 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:13.445201 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.452183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:13.458169 line       556                     i = i_j[0]
excute 13:41:13.462159 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:13.465150 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.468141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:13.471133 line       556                     i = i_j[0]
excute 13:41:13.475124 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:13.478115 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.481109 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:13.484134 line       556                     i = i_j[0]
excute 13:41:13.488089 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:13.491110 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.494103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:13.497096 line       556                     i = i_j[0]
excute 13:41:13.501054 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:13.504077 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.508036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:13.511057 line       556                     i = i_j[0]
excute 13:41:13.514049 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:13.518007 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.520999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:13.524026 line       556                     i = i_j[0]
excute 13:41:13.530972 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:13.534962 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.540946 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:41:13.546929 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:13.550919 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:13.554911 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.558920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:41:13.562919 line       556                     i = i_j[0]
excute 13:41:13.566878 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:13.569899 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.572895 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:41:13.575883 line       556                     i = i_j[0]
excute 13:41:13.579843 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:13.582865 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.585858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:41:13.589816 line       556                     i = i_j[0]
excute 13:41:13.592809 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:13.596798 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.600788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:41:13.603779 line       556                     i = i_j[0]
excute 13:41:13.606771 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:13.610760 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.614749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:41:13.617742 line       556                     i = i_j[0]
excute 13:41:13.621730 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:13.624723 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.628713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:41:13.632702 line       556                     i = i_j[0]
excute 13:41:13.636691 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:13.639684 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.643672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:41:13.647661 line       556                     i = i_j[0]
excute 13:41:13.650655 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:13.654645 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.657665 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:41:13.661624 line       556                     i = i_j[0]
excute 13:41:13.665613 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:13.669603 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.672594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 1)
excute 13:41:13.675588 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:13.679577 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:13.682569 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.686567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 1)
excute 13:41:13.689550 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:13.693540 line       557                     j = i_j[1]
excute 13:41:13.696531 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:13.700529 line       555                 for i_j in i_j_list:
excute 13:41:13.703511 line       581             self.write_matrix(
excute 13:41:13.706504 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:13.709497 line       583                 result_file_path,
excute 13:41:13.713485 line       584                 mode='a'
excute 13:41:13.719391 line       488         for t in time_steps:
excute Modified var:.. t = 23
excute 13:41:13.723380 line       489             if (t != self.TIME + 1):
excute 13:41:13.729364 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:13.735349 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:13.741336 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:13.747319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:13.752302 line       494                         if (i == j):
excute 13:41:13.756291 line       495                             continue
excute 13:41:13.759285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:13.765269 line       494                         if (i == j):
excute 13:41:13.770255 line       496                         i_j_list.append((
excute 13:41:13.773248 line       497                             i, j,
excute 13:41:13.777238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.782222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:13.788206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:13.792196 line       494                         if (i == j):
excute 13:41:13.798181 line       496                         i_j_list.append((
excute 13:41:13.802170 line       497                             i, j,
excute 13:41:13.807156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.810150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:41:13.815134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:13.823116 line       494                         if (i == j):
excute 13:41:13.830095 line       496                         i_j_list.append((
excute 13:41:13.836079 line       497                             i, j,
excute 13:41:13.847061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.854032 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:13.858021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:13.864006 line       494                         if (i == j):
excute 13:41:13.871984 line       496                         i_j_list.append((
excute 13:41:13.874974 line       497                             i, j,
excute 13:41:13.879961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.883952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:13.886943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:13.892926 line       494                         if (i == j):
excute 13:41:13.899909 line       496                         i_j_list.append((
excute 13:41:13.902900 line       497                             i, j,
excute 13:41:13.907886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.910879 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:13.915867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:13.921851 line       494                         if (i == j):
excute 13:41:13.927833 line       496                         i_j_list.append((
excute 13:41:13.932821 line       497                             i, j,
excute 13:41:13.936810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.940799 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:41:13.943792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:13.949776 line       494                         if (i == j):
excute 13:41:13.957760 line       496                         i_j_list.append((
excute 13:41:13.961742 line       497                             i, j,
excute 13:41:13.964735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.969722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:41:13.973713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:13.976703 line       494                         if (i == j):
excute 13:41:13.980693 line       496                         i_j_list.append((
excute 13:41:13.984685 line       497                             i, j,
excute 13:41:13.987673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:13.990666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2)]
excute 13:41:13.993658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:13.997648 line       494                         if (i == j):
excute 13:41:14.000640 line       496                         i_j_list.append((
excute 13:41:14.003631 line       497                             i, j,
excute 13:41:14.007620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.010611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1)]
excute 13:41:14.013604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:14.017596 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:14.020585 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:14.023577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:14.027567 line       494                         if (i == j):
excute 13:41:14.030558 line       496                         i_j_list.append((
excute 13:41:14.034549 line       497                             i, j,
excute 13:41:14.037541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.040533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0)]
excute 13:41:14.043526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:14.046517 line       494                         if (i == j):
excute 13:41:14.051504 line       495                             continue
excute 13:41:14.057487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:14.060481 line       494                         if (i == j):
excute 13:41:14.065466 line       496                         i_j_list.append((
excute 13:41:14.069455 line       497                             i, j,
excute 13:41:14.072447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.078432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:14.081423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:14.085413 line       494                         if (i == j):
excute 13:41:14.088405 line       496                         i_j_list.append((
excute 13:41:14.091397 line       497                             i, j,
excute 13:41:14.094389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.097380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:14.100372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:14.104363 line       494                         if (i == j):
excute 13:41:14.107355 line       496                         i_j_list.append((
excute 13:41:14.110346 line       497                             i, j,
excute 13:41:14.113338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.116363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:14.119354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:14.123311 line       494                         if (i == j):
excute 13:41:14.126334 line       496                         i_j_list.append((
excute 13:41:14.129326 line       497                             i, j,
excute 13:41:14.132320 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.135311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:14.138302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:14.142295 line       494                         if (i == j):
excute 13:41:14.145254 line       496                         i_j_list.append((
excute 13:41:14.149243 line       497                             i, j,
excute 13:41:14.152235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.156224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:41:14.159216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:14.163206 line       494                         if (i == j):
excute 13:41:14.167196 line       496                         i_j_list.append((
excute 13:41:14.170188 line       497                             i, j,
excute 13:41:14.173180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.176170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:41:14.179163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:14.183151 line       494                         if (i == j):
excute 13:41:14.187140 line       496                         i_j_list.append((
excute 13:41:14.190132 line       497                             i, j,
excute 13:41:14.194121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.199107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2)]
excute 13:41:14.202099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:14.208084 line       494                         if (i == j):
excute 13:41:14.214069 line       496                         i_j_list.append((
excute 13:41:14.220052 line       497                             i, j,
excute 13:41:14.223044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.227033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1)]
excute 13:41:14.230025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:14.236009 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:14.242006 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:14.244985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:14.248975 line       494                         if (i == j):
excute 13:41:14.251968 line       496                         i_j_list.append((
excute 13:41:14.257950 line       497                             i, j,
excute 13:41:14.260942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.264932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0)]
excute 13:41:14.267924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:14.270916 line       494                         if (i == j):
excute 13:41:14.274906 line       496                         i_j_list.append((
excute 13:41:14.281888 line       497                             i, j,
excute 13:41:14.284878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.287870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:41:14.290862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:14.294855 line       494                         if (i == j):
excute 13:41:14.297845 line       495                             continue
excute 13:41:14.300838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:14.303829 line       494                         if (i == j):
excute 13:41:14.306821 line       496                         i_j_list.append((
excute 13:41:14.310809 line       497                             i, j,
excute 13:41:14.313802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.316794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:41:14.319786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:14.322779 line       494                         if (i == j):
excute 13:41:14.327765 line       496                         i_j_list.append((
excute 13:41:14.334747 line       497                             i, j,
excute 13:41:14.339734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.342724 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:41:14.345716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:14.349706 line       494                         if (i == j):
excute 13:41:14.354692 line       496                         i_j_list.append((
excute 13:41:14.358682 line       497                             i, j,
excute 13:41:14.362671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.365665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:41:14.368655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:14.372645 line       494                         if (i == j):
excute 13:41:14.376635 line       496                         i_j_list.append((
excute 13:41:14.379626 line       497                             i, j,
excute 13:41:14.384615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.387604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:41:14.391601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:14.394586 line       494                         if (i == j):
excute 13:41:14.397578 line       496                         i_j_list.append((
excute 13:41:14.401568 line       497                             i, j,
excute 13:41:14.404559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.407551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:41:14.410542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:14.413536 line       494                         if (i == j):
excute 13:41:14.417526 line       496                         i_j_list.append((
excute 13:41:14.420517 line       497                             i, j,
excute 13:41:14.423509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.426501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2)]
excute 13:41:14.429493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:14.432486 line       494                         if (i == j):
excute 13:41:14.435477 line       496                         i_j_list.append((
excute 13:41:14.438501 line       497                             i, j,
excute 13:41:14.441493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.445450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1)]
excute 13:41:14.448476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:14.451467 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:14.455424 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:14.458414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:14.461439 line       494                         if (i == j):
excute 13:41:14.468389 line       496                         i_j_list.append((
excute 13:41:14.471411 line       497                             i, j,
excute 13:41:14.474404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.477396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0)]
excute 13:41:14.480387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:14.485346 line       494                         if (i == j):
excute 13:41:14.489335 line       496                         i_j_list.append((
excute 13:41:14.492355 line       497                             i, j,
excute 13:41:14.495347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.498342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0)]
excute 13:41:14.502327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:14.505322 line       494                         if (i == j):
excute 13:41:14.510279 line       496                         i_j_list.append((
excute 13:41:14.513270 line       497                             i, j,
excute 13:41:14.516262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.520251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0)]
excute 13:41:14.523243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:14.527233 line       494                         if (i == j):
excute 13:41:14.530224 line       495                             continue
excute 13:41:14.534213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:14.537206 line       494                         if (i == j):
excute 13:41:14.541195 line       496                         i_j_list.append((
excute 13:41:14.544217 line       497                             i, j,
excute 13:41:14.547211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.554313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0)]
excute 13:41:14.557324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:14.560311 line       494                         if (i == j):
excute 13:41:14.564321 line       496                         i_j_list.append((
excute 13:41:14.568307 line       497                             i, j,
excute 13:41:14.571299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.574291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0)]
excute 13:41:14.578274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:14.581266 line       494                         if (i == j):
excute 13:41:14.585232 line       496                         i_j_list.append((
excute 13:41:14.589221 line       497                             i, j,
excute 13:41:14.592243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.595235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0)]
excute 13:41:14.598227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:14.601218 line       494                         if (i == j):
excute 13:41:14.605178 line       496                         i_j_list.append((
excute 13:41:14.608200 line       497                             i, j,
excute 13:41:14.611192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.615184 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0)]
excute 13:41:14.618142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:14.622139 line       494                         if (i == j):
excute 13:41:14.625136 line       496                         i_j_list.append((
excute 13:41:14.628115 line       497                             i, j,
excute 13:41:14.631107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.634099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2)]
excute 13:41:14.638090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:14.642080 line       494                         if (i == j):
excute 13:41:14.645071 line       496                         i_j_list.append((
excute 13:41:14.649059 line       497                             i, j,
excute 13:41:14.652085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.655077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1)]
excute 13:41:14.658066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:14.662026 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:14.665052 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:14.668043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:14.671035 line       494                         if (i == j):
excute 13:41:14.675002 line       496                         i_j_list.append((
excute 13:41:14.678013 line       497                             i, j,
excute 13:41:14.681005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.683999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0)]
excute 13:41:14.686992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:14.690951 line       494                         if (i == j):
excute 13:41:14.694936 line       496                         i_j_list.append((
excute 13:41:14.697928 line       497                             i, j,
excute 13:41:14.700920 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.703912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:41:14.706904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:14.710894 line       494                         if (i == j):
excute 13:41:14.714912 line       496                         i_j_list.append((
excute 13:41:14.717884 line       497                             i, j,
excute 13:41:14.720868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.723861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:41:14.726865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:14.729875 line       494                         if (i == j):
excute 13:41:14.733866 line       496                         i_j_list.append((
excute 13:41:14.736856 line       497                             i, j,
excute 13:41:14.739850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.742842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:14.746799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:14.749790 line       494                         if (i == j):
excute 13:41:14.752813 line       495                             continue
excute 13:41:14.756803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:14.759795 line       494                         if (i == j):
excute 13:41:14.762787 line       496                         i_j_list.append((
excute 13:41:14.765778 line       497                             i, j,
excute 13:41:14.768772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.771765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:14.775722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:14.778713 line       494                         if (i == j):
excute 13:41:14.782702 line       496                         i_j_list.append((
excute 13:41:14.785694 line       497                             i, j,
excute 13:41:14.787723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.791680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:41:14.795667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:14.798694 line       494                         if (i == j):
excute 13:41:14.802659 line       496                         i_j_list.append((
excute 13:41:14.805643 line       497                             i, j,
excute 13:41:14.808643 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.811624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:41:14.814616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:14.817608 line       494                         if (i == j):
excute 13:41:14.821599 line       496                         i_j_list.append((
excute 13:41:14.823624 line       497                             i, j,
excute 13:41:14.826617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.830608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2)]
excute 13:41:14.833599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:14.837556 line       494                         if (i == j):
excute 13:41:14.840579 line       496                         i_j_list.append((
excute 13:41:14.843574 line       497                             i, j,
excute 13:41:14.846565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.850520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1)]
excute 13:41:14.853513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:14.857502 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:14.861525 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:14.864515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:14.867509 line       494                         if (i == j):
excute 13:41:14.871466 line       496                         i_j_list.append((
excute 13:41:14.874490 line       497                             i, j,
excute 13:41:14.877481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.880478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0)]
excute 13:41:14.883466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:14.886459 line       494                         if (i == j):
excute 13:41:14.890418 line       496                         i_j_list.append((
excute 13:41:14.893438 line       497                             i, j,
excute 13:41:14.897421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.900387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:41:14.903379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:14.906371 line       494                         if (i == j):
excute 13:41:14.910361 line       496                         i_j_list.append((
excute 13:41:14.913352 line       497                             i, j,
excute 13:41:14.917342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.920335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:41:14.923325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:14.926317 line       494                         if (i == j):
excute 13:41:14.930307 line       496                         i_j_list.append((
excute 13:41:14.933300 line       497                             i, j,
excute 13:41:14.936291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.939297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:14.942276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:14.945269 line       494                         if (i == j):
excute 13:41:14.948291 line       496                         i_j_list.append((
excute 13:41:14.951283 line       497                             i, j,
excute 13:41:14.955275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.958267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:14.961257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:14.964248 line       494                         if (i == j):
excute 13:41:14.968207 line       495                             continue
excute 13:41:14.971232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:14.974225 line       494                         if (i == j):
excute 13:41:14.977213 line       496                         i_j_list.append((
excute 13:41:14.981180 line       497                             i, j,
excute 13:41:14.984165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:14.987155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0)]
excute 13:41:14.990148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:14.993139 line       494                         if (i == j):
excute 13:41:14.998129 line       496                         i_j_list.append((
excute 13:41:15.001119 line       497                             i, j,
excute 13:41:15.004110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.007104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0)]
excute 13:41:15.010125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:15.014083 line       494                         if (i == j):
excute 13:41:15.017112 line       496                         i_j_list.append((
excute 13:41:15.020099 line       497                             i, j,
excute 13:41:15.023090 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.026082 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2)]
excute 13:41:15.029074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:15.033035 line       494                         if (i == j):
excute 13:41:15.037024 line       496                         i_j_list.append((
excute 13:41:15.040016 line       497                             i, j,
excute 13:41:15.044005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.046997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1)]
excute 13:41:15.049990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:15.053979 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:15.057968 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:15.061958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:15.064949 line       494                         if (i == j):
excute 13:41:15.067941 line       496                         i_j_list.append((
excute 13:41:15.071929 line       497                             i, j,
excute 13:41:15.074922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.077915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0)]
excute 13:41:15.081914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:15.084896 line       494                         if (i == j):
excute 13:41:15.088895 line       496                         i_j_list.append((
excute 13:41:15.091907 line       497                             i, j,
excute 13:41:15.094899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.097891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:41:15.101884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:15.105871 line       494                         if (i == j):
excute 13:41:15.108861 line       496                         i_j_list.append((
excute 13:41:15.111853 line       497                             i, j,
excute 13:41:15.114847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.117841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:41:15.120829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:15.124787 line       494                         if (i == j):
excute 13:41:15.128778 line       496                         i_j_list.append((
excute 13:41:15.130805 line       497                             i, j,
excute 13:41:15.134761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.137753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:41:15.140744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:15.144734 line       494                         if (i == j):
excute 13:41:15.148725 line       496                         i_j_list.append((
excute 13:41:15.151716 line       497                             i, j,
excute 13:41:15.155705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.158696 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:41:15.161688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:15.165678 line       494                         if (i == j):
excute 13:41:15.168669 line       496                         i_j_list.append((
excute 13:41:15.171662 line       497                             i, j,
excute 13:41:15.174654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.177646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:41:15.180638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:15.186656 line       494                         if (i == j):
excute 13:41:15.191610 line       495                             continue
excute 13:41:15.194601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:15.200617 line       494                         if (i == j):
excute 13:41:15.205572 line       496                         i_j_list.append((
excute 13:41:15.208563 line       497                             i, j,
excute 13:41:15.212554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.215576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:41:15.218571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:15.222526 line       494                         if (i == j):
excute 13:41:15.225550 line       496                         i_j_list.append((
excute 13:41:15.229542 line       497                             i, j,
excute 13:41:15.232532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.235523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2)]
excute 13:41:15.238515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:15.241507 line       494                         if (i == j):
excute 13:41:15.245467 line       496                         i_j_list.append((
excute 13:41:15.248458 line       497                             i, j,
excute 13:41:15.251450 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.254442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1)]
excute 13:41:15.260425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:15.264416 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:15.267405 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:15.271429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:15.274423 line       494                         if (i == j):
excute 13:41:15.277413 line       496                         i_j_list.append((
excute 13:41:15.280404 line       497                             i, j,
excute 13:41:15.284362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.288352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0)]
excute 13:41:15.291344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:15.295333 line       494                         if (i == j):
excute 13:41:15.299324 line       496                         i_j_list.append((
excute 13:41:15.302315 line       497                             i, j,
excute 13:41:15.306303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.309328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:41:15.312318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:15.316276 line       494                         if (i == j):
excute 13:41:15.319278 line       496                         i_j_list.append((
excute 13:41:15.322293 line       497                             i, j,
excute 13:41:15.326249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.332234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:41:15.337224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:15.343204 line       494                         if (i == j):
excute 13:41:15.347193 line       496                         i_j_list.append((
excute 13:41:15.352181 line       497                             i, j,
excute 13:41:15.356169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.362156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:41:15.366143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:15.370132 line       494                         if (i == j):
excute 13:41:15.374151 line       496                         i_j_list.append((
excute 13:41:15.377144 line       497                             i, j,
excute 13:41:15.380136 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.383131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:41:15.387086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:15.390077 line       494                         if (i == j):
excute 13:41:15.394069 line       496                         i_j_list.append((
excute 13:41:15.397061 line       497                             i, j,
excute 13:41:15.401051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.405040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:41:15.408035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:15.413017 line       494                         if (i == j):
excute 13:41:15.417007 line       496                         i_j_list.append((
excute 13:41:15.420029 line       497                             i, j,
excute 13:41:15.423021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.426017 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:41:15.429009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:15.432964 line       494                         if (i == j):
excute 13:41:15.435955 line       495                             continue
excute 13:41:15.438978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:15.441973 line       494                         if (i == j):
excute 13:41:15.445930 line       496                         i_j_list.append((
excute 13:41:15.448922 line       497                             i, j,
excute 13:41:15.452912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.455934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2)]
excute 13:41:15.458926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:15.462884 line       494                         if (i == j):
excute 13:41:15.465910 line       496                         i_j_list.append((
excute 13:41:15.468902 line       497                             i, j,
excute 13:41:15.471891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.474884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1)]
excute 13:41:15.477875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:15.481867 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:15.484859 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:15.488849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:15.491838 line       494                         if (i == j):
excute 13:41:15.494830 line       496                         i_j_list.append((
excute 13:41:15.497825 line       497                             i, j,
excute 13:41:15.500817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.503805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0)]
excute 13:41:15.506798 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:15.511754 line       494                         if (i == j):
excute 13:41:15.515742 line       496                         i_j_list.append((
excute 13:41:15.518734 line       497                             i, j,
excute 13:41:15.522724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.525715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:41:15.528707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:15.532698 line       494                         if (i == j):
excute 13:41:15.536689 line       496                         i_j_list.append((
excute 13:41:15.539680 line       497                             i, j,
excute 13:41:15.543669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.546661 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:41:15.549653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:15.553643 line       494                         if (i == j):
excute 13:41:15.557632 line       496                         i_j_list.append((
excute 13:41:15.561620 line       497                             i, j,
excute 13:41:15.564612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.566608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:41:15.570597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:15.573589 line       494                         if (i == j):
excute 13:41:15.577580 line       496                         i_j_list.append((
excute 13:41:15.580571 line       497                             i, j,
excute 13:41:15.583562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.587552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:41:15.590574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:15.593569 line       494                         if (i == j):
excute 13:41:15.597526 line       496                         i_j_list.append((
excute 13:41:15.600548 line       497                             i, j,
excute 13:41:15.603540 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.606531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:41:15.609525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:15.613482 line       494                         if (i == j):
excute 13:41:15.618504 line       496                         i_j_list.append((
excute 13:41:15.621491 line       497                             i, j,
excute 13:41:15.624483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.627476 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:41:15.630467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:15.634429 line       494                         if (i == j):
excute 13:41:15.637417 line       496                         i_j_list.append((
excute 13:41:15.640409 line       497                             i, j,
excute 13:41:15.643401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.646393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:41:15.650382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:15.653374 line       494                         if (i == j):
excute 13:41:15.657363 line       495                             continue
excute 13:41:15.660355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:15.663347 line       494                         if (i == j):
excute 13:41:15.666339 line       496                         i_j_list.append((
excute 13:41:15.669331 line       497                             i, j,
excute 13:41:15.672323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.675315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1)]
excute 13:41:15.678307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:15.682297 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:15.685288 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:15.688280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:15.692270 line       494                         if (i == j):
excute 13:41:15.695262 line       496                         i_j_list.append((
excute 13:41:15.698254 line       497                             i, j,
excute 13:41:15.701246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.704238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0)]
excute 13:41:15.707230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:15.711220 line       494                         if (i == j):
excute 13:41:15.715210 line       496                         i_j_list.append((
excute 13:41:15.719232 line       497                             i, j,
excute 13:41:15.722222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.725213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:41:15.728205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:15.732164 line       494                         if (i == j):
excute 13:41:15.736154 line       496                         i_j_list.append((
excute 13:41:15.738148 line       497                             i, j,
excute 13:41:15.741139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.744131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:41:15.747123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:15.751113 line       494                         if (i == j):
excute 13:41:15.754105 line       496                         i_j_list.append((
excute 13:41:15.757097 line       497                             i, j,
excute 13:41:15.760089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.763081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:41:15.766073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:15.770062 line       494                         if (i == j):
excute 13:41:15.773054 line       496                         i_j_list.append((
excute 13:41:15.776046 line       497                             i, j,
excute 13:41:15.779038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.782030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:41:15.785022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:15.789012 line       494                         if (i == j):
excute 13:41:15.792004 line       496                         i_j_list.append((
excute 13:41:15.794995 line       497                             i, j,
excute 13:41:15.797987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.801978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:41:15.803971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:15.807961 line       494                         if (i == j):
excute 13:41:15.810952 line       496                         i_j_list.append((
excute 13:41:15.813945 line       497                             i, j,
excute 13:41:15.816937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.820928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:41:15.823918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:15.827909 line       494                         if (i == j):
excute 13:41:15.830899 line       496                         i_j_list.append((
excute 13:41:15.833892 line       497                             i, j,
excute 13:41:15.837881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.840874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:41:15.843865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:15.846857 line       494                         if (i == j):
excute 13:41:15.850847 line       496                         i_j_list.append((
excute 13:41:15.853839 line       497                             i, j,
excute 13:41:15.858825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:15.861822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 2), (0, 9, 0, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 2), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 2), (2, 9, 2, 1), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 2), (3, 9, 0, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 2), (4, 9, 2, 1), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 2), (5, 9, 3, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 2), (6, 9, 3, 1), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 2), (7, 9, 2, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 2)]
excute 13:41:15.864810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:15.867802 line       494                         if (i == j):
excute 13:41:15.870792 line       495                             continue
excute 13:41:15.873785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:15.877775 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:15.880766 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (0, 9, 0, 1), (3, 9, 0, 1), (0, 8, 0, 2), (3, 8, 0, 2), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (2, 9, 2, 1), (4, 9, 2, 1), (7, 9, 2, 1), (2, 8, 2, 2), (4, 8, 2, 2), (7, 8, 2, 2), (9, 8, 2, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (1, 9, 3, 1), (5, 9, 3, 1), (6, 9, 3, 1), (1, 8, 3, 2), (5, 8, 3, 2), (6, 8, 3, 2)]
excute 13:41:15.883758 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:15.886751 line       505                     if (self.RELOCATE):
excute 13:41:15.890775 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:15.893731 line       505                     if (self.RELOCATE):
excute 13:41:15.896723 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:15.899750 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:15.902741 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:15.906698 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:15.909720 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:15.913680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:15.916701 line       556                     i = i_j[0]
excute 13:41:15.926645 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:15.930637 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:15.933625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:15.936617 line       556                     i = i_j[0]
excute 13:41:15.940607 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:15.943598 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:15.946590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:15.949582 line       556                     i = i_j[0]
excute 13:41:15.953571 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:15.957561 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:15.960552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:15.966538 line       556                     i = i_j[0]
excute 13:41:15.970527 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:15.973518 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:15.977508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:41:15.980500 line       556                     i = i_j[0]
excute 13:41:15.984491 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:15.987480 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:15.990472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:15.993465 line       556                     i = i_j[0]
excute 13:41:15.997455 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:16.000447 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.004436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 0, 0)
excute 13:41:16.009434 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:16.012415 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:16.016403 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.020394 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 0, 0)
excute 13:41:16.023385 line       556                     i = i_j[0]
excute 13:41:16.027376 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:16.030366 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.034361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 0, 0)
excute 13:41:16.037348 line       556                     i = i_j[0]
excute 13:41:16.041337 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:16.044329 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.048320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 0, 0)
excute 13:41:16.051311 line       556                     i = i_j[0]
excute 13:41:16.054303 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:16.058292 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.062281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 0, 0)
excute 13:41:16.065274 line       556                     i = i_j[0]
excute 13:41:16.072257 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:16.075247 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.079236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 0, 0)
excute 13:41:16.082228 line       556                     i = i_j[0]
excute 13:41:16.085221 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:16.090206 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.094196 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 0, 0)
excute 13:41:16.097187 line       556                     i = i_j[0]
excute 13:41:16.100179 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:16.103172 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.107162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:41:16.110152 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:16.113144 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:16.117134 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.120126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 0, 1)
excute 13:41:16.123118 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:16.127109 line       557                     j = i_j[1]
excute 13:41:16.131097 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.134089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 2)
excute 13:41:16.137081 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:16.141071 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:16.144062 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.148052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 0, 2)
excute 13:41:16.151044 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:16.155034 line       557                     j = i_j[1]
excute 13:41:16.158025 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.161017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:41:16.165006 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:16.167998 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:16.171989 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.175978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:41:16.178969 line       556                     i = i_j[0]
excute 13:41:16.184954 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:16.188943 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.194961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:41:16.200943 line       556                     i = i_j[0]
excute 13:41:16.203902 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:16.207892 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.210884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:41:16.214876 line       556                     i = i_j[0]
excute 13:41:16.217867 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:16.221856 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.225844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:16.228837 line       556                     i = i_j[0]
excute 13:41:16.233853 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:16.236847 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.239841 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:41:16.242833 line       556                     i = i_j[0]
excute 13:41:16.246789 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:16.249812 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.252803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:41:16.256761 line       556                     i = i_j[0]
excute 13:41:16.262745 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:16.266736 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.274714 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:16.282694 line       556                     i = i_j[0]
excute 13:41:16.290674 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:16.294663 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.298649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 1)
excute 13:41:16.301643 line       556                     i = i_j[0]
excute 13:41:16.306628 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:16.313610 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.317599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:41:16.321588 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:16.325578 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:16.340538 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.346522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:41:16.355499 line       556                     i = i_j[0]
excute 13:41:16.367486 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:16.372454 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.376443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:41:16.379435 line       556                     i = i_j[0]
excute 13:41:16.384423 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:16.387414 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.392400 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:41:16.396395 line       556                     i = i_j[0]
excute 13:41:16.401376 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:16.408357 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.416337 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:41:16.424314 line       556                     i = i_j[0]
excute 13:41:16.432293 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:16.438276 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.448249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:41:16.455231 line       556                     i = i_j[0]
excute 13:41:16.463212 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:16.469193 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.475179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:41:16.482158 line       556                     i = i_j[0]
excute 13:41:16.490138 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:16.497119 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.502106 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:16.508091 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:16.514075 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:16.520058 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.526043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:16.531028 line       556                     i = i_j[0]
excute 13:41:16.537012 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:16.542996 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.549977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:16.556960 line       556                     i = i_j[0]
excute 13:41:16.563941 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:16.568927 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.575908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:16.581892 line       556                     i = i_j[0]
excute 13:41:16.588873 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:16.593860 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.600842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:16.606825 line       556                     i = i_j[0]
excute 13:41:16.614805 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:16.619792 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.625776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:41:16.631760 line       556                     i = i_j[0]
excute 13:41:16.639739 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:16.644725 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.650709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:16.657690 line       556                     i = i_j[0]
excute 13:41:16.665669 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:16.671653 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.678634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:41:16.685615 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:16.692597 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:16.698581 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.704565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:41:16.709552 line       556                     i = i_j[0]
excute 13:41:16.716532 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:16.722516 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.728514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:41:16.732489 line       556                     i = i_j[0]
excute 13:41:16.736480 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:16.739470 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.742463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:41:16.746457 line       556                     i = i_j[0]
excute 13:41:16.749446 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:16.753435 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.757425 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:41:16.760415 line       556                     i = i_j[0]
excute 13:41:16.764405 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:16.767396 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.770387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:41:16.773380 line       556                     i = i_j[0]
excute 13:41:16.777369 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:16.780361 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.784351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:41:16.787342 line       556                     i = i_j[0]
excute 13:41:16.790335 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:16.794324 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.797317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:41:16.800308 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:16.804298 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:16.807290 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.810281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:41:16.813273 line       556                     i = i_j[0]
excute 13:41:16.817264 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:16.820255 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.823257 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:41:16.826239 line       556                     i = i_j[0]
excute 13:41:16.830229 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:16.833220 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.836212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:41:16.840201 line       556                     i = i_j[0]
excute 13:41:16.843196 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:16.846185 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.849177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:41:16.853166 line       556                     i = i_j[0]
excute 13:41:16.858155 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:16.862145 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.866134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:41:16.870129 line       556                     i = i_j[0]
excute 13:41:16.873114 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:16.876107 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.880096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:41:16.883089 line       556                     i = i_j[0]
excute 13:41:16.887076 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:16.890070 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.894059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:41:16.898048 line       556                     i = i_j[0]
excute 13:41:16.901040 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:16.905037 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.908021 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:41:16.912011 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:16.916999 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:16.919990 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.923980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 1)
excute 13:41:16.926971 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:16.930961 line       557                     j = i_j[1]
excute 13:41:16.933953 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.937942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 1)
excute 13:41:16.940933 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:16.944923 line       557                     j = i_j[1]
excute 13:41:16.947915 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.951902 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 32
excute 13:41:16.954896 line       560                         if (t_tmp > self.TIME):
excute 13:41:16.959883 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:16.963872 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 22
excute 13:41:16.967861 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:16.970854 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:16.974843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 2)
excute 13:41:16.977835 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:16.981825 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:16.985813 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:16.988806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 2)
excute 13:41:16.992795 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:16.996783 line       557                     j = i_j[1]
excute 13:41:16.999775 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.002768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 2)
excute 13:41:17.006758 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:17.010748 line       557                     j = i_j[1]
excute 13:41:17.014738 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.018724 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 2)
excute 13:41:17.021718 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:17.025708 line       557                     j = i_j[1]
excute 13:41:17.029697 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.033685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:17.037674 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:17.040667 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:17.045653 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.051636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:17.056622 line       556                     i = i_j[0]
excute 13:41:17.060612 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:17.065599 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.069588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:17.072580 line       556                     i = i_j[0]
excute 13:41:17.076570 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:17.079561 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.084548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:17.087542 line       556                     i = i_j[0]
excute 13:41:17.090533 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:17.094522 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.098511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:17.101503 line       556                     i = i_j[0]
excute 13:41:17.104494 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:17.107487 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.111476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:41:17.114468 line       556                     i = i_j[0]
excute 13:41:17.117461 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:17.120451 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.124441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:17.127434 line       556                     i = i_j[0]
excute 13:41:17.131423 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:17.135414 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.138405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:41:17.142394 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:17.145388 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:17.149375 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.153366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:17.156356 line       556                     i = i_j[0]
excute 13:41:17.159347 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:17.162340 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.167328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:17.170351 line       556                     i = i_j[0]
excute 13:41:17.174341 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:17.177332 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.180324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:17.183284 line       556                     i = i_j[0]
excute 13:41:17.187274 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:17.190265 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.194255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:17.197247 line       556                     i = i_j[0]
excute 13:41:17.200240 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:17.204229 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.208219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 0)
excute 13:41:17.212208 line       556                     i = i_j[0]
excute 13:41:17.215198 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:17.218191 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.222181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:17.225172 line       556                     i = i_j[0]
excute 13:41:17.229162 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:17.232153 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.235145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:41:17.238137 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:17.242128 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:17.245119 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.248145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:41:17.252100 line       556                     i = i_j[0]
excute 13:41:17.255124 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:17.259114 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.263071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:41:17.266063 line       556                     i = i_j[0]
excute 13:41:17.270054 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:17.273077 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.280027 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:41:17.283017 line       556                     i = i_j[0]
excute 13:41:17.288005 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:17.290996 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.294985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:41:17.297977 line       556                     i = i_j[0]
excute 13:41:17.300969 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:17.303961 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.307951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:41:17.310942 line       556                     i = i_j[0]
excute 13:41:17.313934 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:17.316927 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.320916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:41:17.323908 line       556                     i = i_j[0]
excute 13:41:17.332886 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:17.338869 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.342858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 1)
excute 13:41:17.345850 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:17.348842 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:17.354827 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.358816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 1)
excute 13:41:17.363804 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:17.367803 line       557                     j = i_j[1]
excute 13:41:17.372778 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.375769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 1)
excute 13:41:17.378763 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:17.381753 line       557                     j = i_j[1]
excute 13:41:17.385744 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.389732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 2)
excute 13:41:17.392724 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:17.396720 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:17.400705 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.404693 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:41:17.407684 line       560                         if (t_tmp > self.TIME):
excute 13:41:17.410676 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:17.413668 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 24
excute 13:41:17.417658 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:17.420650 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:17.423641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 2)
excute 13:41:17.426633 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:17.430624 line       557                     j = i_j[1]
excute 13:41:17.433615 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.436641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 2)
excute 13:41:17.440596 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:17.443588 line       557                     j = i_j[1]
excute 13:41:17.447578 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:17.450602 line       555                 for i_j in i_j_list:
excute 13:41:17.453594 line       581             self.write_matrix(
excute 13:41:17.456585 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:17.460544 line       583                 result_file_path,
excute 13:41:17.465534 line       584                 mode='a'
excute 13:41:17.472512 line       488         for t in time_steps:
excute Modified var:.. t = 24
excute 13:41:17.477500 line       489             if (t != self.TIME + 1):
excute 13:41:17.481488 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:17.486473 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:17.492458 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:17.498460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:17.504428 line       494                         if (i == j):
excute 13:41:17.507423 line       495                             continue
excute 13:41:17.510411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:17.513404 line       494                         if (i == j):
excute 13:41:17.518389 line       496                         i_j_list.append((
excute 13:41:17.522380 line       497                             i, j,
excute 13:41:17.526367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.530359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:17.533349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:17.537341 line       494                         if (i == j):
excute 13:41:17.541330 line       496                         i_j_list.append((
excute 13:41:17.545318 line       497                             i, j,
excute 13:41:17.550303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.554293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:41:17.561277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:17.569255 line       494                         if (i == j):
excute 13:41:17.576236 line       496                         i_j_list.append((
excute 13:41:17.586217 line       497                             i, j,
excute 13:41:17.593189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.596180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:17.599175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:17.605159 line       494                         if (i == j):
excute 13:41:17.611141 line       496                         i_j_list.append((
excute 13:41:17.614132 line       497                             i, j,
excute 13:41:17.617124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.623143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:17.626100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:17.630092 line       494                         if (i == j):
excute 13:41:17.634080 line       496                         i_j_list.append((
excute 13:41:17.637072 line       497                             i, j,
excute 13:41:17.640063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.643056 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:17.646047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:17.650037 line       494                         if (i == j):
excute 13:41:17.654029 line       496                         i_j_list.append((
excute 13:41:17.657029 line       497                             i, j,
excute 13:41:17.660012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.664002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:41:17.666992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:17.670982 line       494                         if (i == j):
excute 13:41:17.676977 line       496                         i_j_list.append((
excute 13:41:17.684944 line       497                             i, j,
excute 13:41:17.687935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.690927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:41:17.693919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:17.697908 line       494                         if (i == j):
excute 13:41:17.703900 line       496                         i_j_list.append((
excute 13:41:17.707883 line       497                             i, j,
excute 13:41:17.710875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.713866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:17.717855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:17.723839 line       494                         if (i == j):
excute 13:41:17.728826 line       496                         i_j_list.append((
excute 13:41:17.731817 line       497                             i, j,
excute 13:41:17.734809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.737802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:17.740793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:17.744784 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:17.747777 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:17.750768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:17.753759 line       494                         if (i == j):
excute 13:41:17.757761 line       496                         i_j_list.append((
excute 13:41:17.760740 line       497                             i, j,
excute 13:41:17.763733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.766724 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:17.769749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:17.772741 line       494                         if (i == j):
excute 13:41:17.776700 line       495                             continue
excute 13:41:17.780689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:17.783681 line       494                         if (i == j):
excute 13:41:17.788668 line       496                         i_j_list.append((
excute 13:41:17.791690 line       497                             i, j,
excute 13:41:17.794651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.797673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:17.801634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:17.805621 line       494                         if (i == j):
excute 13:41:17.811605 line       496                         i_j_list.append((
excute 13:41:17.814598 line       497                             i, j,
excute 13:41:17.818589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.821581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:17.824572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:17.828561 line       494                         if (i == j):
excute 13:41:17.832552 line       496                         i_j_list.append((
excute 13:41:17.835542 line       497                             i, j,
excute 13:41:17.839533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.842525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:17.847509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:17.851501 line       494                         if (i == j):
excute 13:41:17.857485 line       496                         i_j_list.append((
excute 13:41:17.862471 line       497                             i, j,
excute 13:41:17.866458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.870449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:17.873441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:17.876432 line       494                         if (i == j):
excute 13:41:17.880422 line       496                         i_j_list.append((
excute 13:41:17.883414 line       497                             i, j,
excute 13:41:17.887405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.892389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:41:17.896381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:17.901367 line       494                         if (i == j):
excute 13:41:17.905358 line       496                         i_j_list.append((
excute 13:41:17.908348 line       497                             i, j,
excute 13:41:17.912337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.916326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:41:17.920316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:17.923307 line       494                         if (i == j):
excute 13:41:17.927297 line       496                         i_j_list.append((
excute 13:41:17.931287 line       497                             i, j,
excute 13:41:17.934278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.938268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:17.941259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:17.945249 line       494                         if (i == j):
excute 13:41:17.949240 line       496                         i_j_list.append((
excute 13:41:17.952230 line       497                             i, j,
excute 13:41:17.955223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.959210 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:17.962204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:17.965196 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:17.968187 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:17.971180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:17.974170 line       494                         if (i == j):
excute 13:41:17.978166 line       496                         i_j_list.append((
excute 13:41:17.981153 line       497                             i, j,
excute 13:41:17.984145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:17.987135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:41:17.990131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:17.994118 line       494                         if (i == j):
excute 13:41:17.998107 line       496                         i_j_list.append((
excute 13:41:18.001099 line       497                             i, j,
excute 13:41:18.004091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.007083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:41:18.010105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:18.014063 line       494                         if (i == j):
excute 13:41:18.017087 line       495                             continue
excute 13:41:18.021044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:18.023071 line       494                         if (i == j):
excute 13:41:18.027029 line       496                         i_j_list.append((
excute 13:41:18.030055 line       497                             i, j,
excute 13:41:18.033044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.036006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:41:18.039996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:18.043986 line       494                         if (i == j):
excute 13:41:18.047976 line       496                         i_j_list.append((
excute 13:41:18.050967 line       497                             i, j,
excute 13:41:18.053959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.056950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:41:18.060940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:18.063932 line       494                         if (i == j):
excute 13:41:18.067921 line       496                         i_j_list.append((
excute 13:41:18.070913 line       497                             i, j,
excute 13:41:18.074902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.077894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:41:18.080887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:18.083878 line       494                         if (i == j):
excute 13:41:18.087868 line       496                         i_j_list.append((
excute 13:41:18.090859 line       497                             i, j,
excute 13:41:18.094849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.097841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:41:18.100833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:18.103825 line       494                         if (i == j):
excute 13:41:18.107814 line       496                         i_j_list.append((
excute 13:41:18.110807 line       497                             i, j,
excute 13:41:18.114795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.116792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:41:18.120779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:18.124770 line       494                         if (i == j):
excute 13:41:18.127761 line       496                         i_j_list.append((
excute 13:41:18.130753 line       497                             i, j,
excute 13:41:18.133744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.136736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:41:18.139729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:18.143720 line       494                         if (i == j):
excute 13:41:18.147707 line       496                         i_j_list.append((
excute 13:41:18.150698 line       497                             i, j,
excute 13:41:18.154687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.157679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:41:18.160671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:18.164661 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:18.167653 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:18.170644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:18.173636 line       494                         if (i == j):
excute 13:41:18.177626 line       496                         i_j_list.append((
excute 13:41:18.180618 line       497                             i, j,
excute 13:41:18.185606 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.188597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0)]
excute 13:41:18.191590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:18.195579 line       494                         if (i == j):
excute 13:41:18.199570 line       496                         i_j_list.append((
excute 13:41:18.202561 line       497                             i, j,
excute 13:41:18.205552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.208544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0)]
excute 13:41:18.211536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:18.215525 line       494                         if (i == j):
excute 13:41:18.218517 line       496                         i_j_list.append((
excute 13:41:18.222508 line       497                             i, j,
excute 13:41:18.225499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.228522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0)]
excute 13:41:18.231484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:18.234476 line       494                         if (i == j):
excute 13:41:18.238463 line       495                             continue
excute 13:41:18.241458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:18.244449 line       494                         if (i == j):
excute 13:41:18.248439 line       496                         i_j_list.append((
excute 13:41:18.251430 line       497                             i, j,
excute 13:41:18.255420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.258412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0)]
excute 13:41:18.261404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:18.265394 line       494                         if (i == j):
excute 13:41:18.269390 line       496                         i_j_list.append((
excute 13:41:18.272374 line       497                             i, j,
excute 13:41:18.275366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.278358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0)]
excute 13:41:18.281350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:18.285340 line       494                         if (i == j):
excute 13:41:18.289329 line       496                         i_j_list.append((
excute 13:41:18.293318 line       497                             i, j,
excute 13:41:18.296309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.300299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0)]
excute 13:41:18.303290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:18.307280 line       494                         if (i == j):
excute 13:41:18.310274 line       496                         i_j_list.append((
excute 13:41:18.313265 line       497                             i, j,
excute 13:41:18.317253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.319249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0)]
excute 13:41:18.322241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:18.328225 line       494                         if (i == j):
excute 13:41:18.332215 line       496                         i_j_list.append((
excute 13:41:18.338198 line       497                             i, j,
excute 13:41:18.341189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.344181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0)]
excute 13:41:18.347174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:18.351164 line       494                         if (i == j):
excute 13:41:18.356152 line       496                         i_j_list.append((
excute 13:41:18.360140 line       497                             i, j,
excute 13:41:18.363131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.367119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0)]
excute 13:41:18.370113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:18.374102 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:18.377095 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:18.381091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:18.384075 line       494                         if (i == j):
excute 13:41:18.388063 line       496                         i_j_list.append((
excute 13:41:18.391055 line       497                             i, j,
excute 13:41:18.394047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.397039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0)]
excute 13:41:18.401029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:18.405020 line       494                         if (i == j):
excute 13:41:18.409007 line       496                         i_j_list.append((
excute 13:41:18.412001 line       497                             i, j,
excute 13:41:18.415989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.418982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:41:18.422972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:18.425964 line       494                         if (i == j):
excute 13:41:18.429954 line       496                         i_j_list.append((
excute 13:41:18.432946 line       497                             i, j,
excute 13:41:18.435935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.438929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:41:18.441919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:18.444913 line       494                         if (i == j):
excute 13:41:18.448902 line       496                         i_j_list.append((
excute 13:41:18.452892 line       497                             i, j,
excute 13:41:18.455883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.459873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:18.462866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:18.465856 line       494                         if (i == j):
excute 13:41:18.469846 line       495                             continue
excute 13:41:18.472838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:18.475829 line       494                         if (i == j):
excute 13:41:18.478821 line       496                         i_j_list.append((
excute 13:41:18.482811 line       497                             i, j,
excute 13:41:18.485802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.488795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:18.491787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:18.494778 line       494                         if (i == j):
excute 13:41:18.497770 line       496                         i_j_list.append((
excute 13:41:18.500762 line       497                             i, j,
excute 13:41:18.505752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.508745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:41:18.511733 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:18.515757 line       494                         if (i == j):
excute 13:41:18.518716 line       496                         i_j_list.append((
excute 13:41:18.521708 line       497                             i, j,
excute 13:41:18.525697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.528689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:41:18.532679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:18.536666 line       494                         if (i == j):
excute 13:41:18.540655 line       496                         i_j_list.append((
excute 13:41:18.543649 line       497                             i, j,
excute 13:41:18.546642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.550629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:18.553622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:18.557613 line       494                         if (i == j):
excute 13:41:18.560604 line       496                         i_j_list.append((
excute 13:41:18.563596 line       497                             i, j,
excute 13:41:18.567584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.570576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:18.573569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:18.576561 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:18.579552 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:18.583543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:18.586534 line       494                         if (i == j):
excute 13:41:18.589527 line       496                         i_j_list.append((
excute 13:41:18.592518 line       497                             i, j,
excute 13:41:18.595509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.598501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0)]
excute 13:41:18.601494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:18.605484 line       494                         if (i == j):
excute 13:41:18.609473 line       496                         i_j_list.append((
excute 13:41:18.612465 line       497                             i, j,
excute 13:41:18.615456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.618448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:41:18.621471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:18.625430 line       494                         if (i == j):
excute 13:41:18.628423 line       496                         i_j_list.append((
excute 13:41:18.631444 line       497                             i, j,
excute 13:41:18.634436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.637401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:41:18.640420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:18.649519 line       494                         if (i == j):
excute 13:41:18.653507 line       496                         i_j_list.append((
excute 13:41:18.656530 line       497                             i, j,
excute 13:41:18.659521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.662513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:18.665505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:18.669463 line       494                         if (i == j):
excute 13:41:18.672465 line       496                         i_j_list.append((
excute 13:41:18.675446 line       497                             i, j,
excute 13:41:18.678438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.681430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:18.684422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:18.687414 line       494                         if (i == j):
excute 13:41:18.691404 line       495                             continue
excute 13:41:18.694396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:18.697388 line       494                         if (i == j):
excute 13:41:18.700380 line       496                         i_j_list.append((
excute 13:41:18.703372 line       497                             i, j,
excute 13:41:18.706364 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.710356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0)]
excute 13:41:18.713345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:18.717334 line       494                         if (i == j):
excute 13:41:18.721324 line       496                         i_j_list.append((
excute 13:41:18.724329 line       497                             i, j,
excute 13:41:18.727308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.730301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0)]
excute 13:41:18.733291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:18.736283 line       494                         if (i == j):
excute 13:41:18.740274 line       496                         i_j_list.append((
excute 13:41:18.743265 line       497                             i, j,
excute 13:41:18.746257 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.749249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:41:18.752243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:18.755235 line       494                         if (i == j):
excute 13:41:18.759224 line       496                         i_j_list.append((
excute 13:41:18.762215 line       497                             i, j,
excute 13:41:18.765207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.768199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:18.771191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:18.775181 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:18.777175 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:18.781167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:18.784156 line       494                         if (i == j):
excute 13:41:18.787149 line       496                         i_j_list.append((
excute 13:41:18.791138 line       497                             i, j,
excute 13:41:18.794130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.797122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0)]
excute 13:41:18.800114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:18.803106 line       494                         if (i == j):
excute 13:41:18.806097 line       496                         i_j_list.append((
excute 13:41:18.809090 line       497                             i, j,
excute 13:41:18.813082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.816071 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:41:18.819063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:18.823053 line       494                         if (i == j):
excute 13:41:18.826044 line       496                         i_j_list.append((
excute 13:41:18.829037 line       497                             i, j,
excute 13:41:18.832028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.835020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:41:18.838012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:18.842001 line       494                         if (i == j):
excute 13:41:18.844993 line       496                         i_j_list.append((
excute 13:41:18.847985 line       497                             i, j,
excute 13:41:18.850977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.854968 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:41:18.857959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:18.861948 line       494                         if (i == j):
excute 13:41:18.864940 line       496                         i_j_list.append((
excute 13:41:18.867932 line       497                             i, j,
excute 13:41:18.871922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.873916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:41:18.876908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:18.880898 line       494                         if (i == j):
excute 13:41:18.883890 line       496                         i_j_list.append((
excute 13:41:18.886881 line       497                             i, j,
excute 13:41:18.889873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.892865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:41:18.895857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:18.899847 line       494                         if (i == j):
excute 13:41:18.902838 line       495                             continue
excute 13:41:18.905831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:18.908823 line       494                         if (i == j):
excute 13:41:18.912812 line       496                         i_j_list.append((
excute 13:41:18.916803 line       497                             i, j,
excute 13:41:18.919794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.922785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:41:18.925777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:18.929767 line       494                         if (i == j):
excute 13:41:18.932758 line       496                         i_j_list.append((
excute 13:41:18.935751 line       497                             i, j,
excute 13:41:18.938743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.941734 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:41:18.944726 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:18.947718 line       494                         if (i == j):
excute 13:41:18.951708 line       496                         i_j_list.append((
excute 13:41:18.954700 line       497                             i, j,
excute 13:41:18.957692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.960684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:41:18.966669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:18.970658 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:18.974652 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:18.977639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:18.980631 line       494                         if (i == j):
excute 13:41:18.984622 line       496                         i_j_list.append((
excute 13:41:18.987612 line       497                             i, j,
excute 13:41:18.990604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:18.993596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0)]
excute 13:41:18.996588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:19.000584 line       494                         if (i == j):
excute 13:41:19.004567 line       496                         i_j_list.append((
excute 13:41:19.008558 line       497                             i, j,
excute 13:41:19.012546 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.019528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0)]
excute 13:41:19.022519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:19.026509 line       494                         if (i == j):
excute 13:41:19.030497 line       496                         i_j_list.append((
excute 13:41:19.033489 line       497                             i, j,
excute 13:41:19.037481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.040470 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0)]
excute 13:41:19.043463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:19.046455 line       494                         if (i == j):
excute 13:41:19.050444 line       496                         i_j_list.append((
excute 13:41:19.053436 line       497                             i, j,
excute 13:41:19.056460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.059451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0)]
excute 13:41:19.062443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:19.066404 line       494                         if (i == j):
excute 13:41:19.069426 line       496                         i_j_list.append((
excute 13:41:19.073393 line       497                             i, j,
excute 13:41:19.076377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.079369 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0)]
excute 13:41:19.082364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:19.085383 line       494                         if (i == j):
excute 13:41:19.089373 line       496                         i_j_list.append((
excute 13:41:19.092365 line       497                             i, j,
excute 13:41:19.095357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.098318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0)]
excute 13:41:19.101310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:19.107293 line       494                         if (i == j):
excute 13:41:19.111283 line       496                         i_j_list.append((
excute 13:41:19.114275 line       497                             i, j,
excute 13:41:19.120259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.124249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0)]
excute 13:41:19.127238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:19.131229 line       494                         if (i == j):
excute 13:41:19.134222 line       495                             continue
excute 13:41:19.137244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:19.141201 line       494                         if (i == j):
excute 13:41:19.145192 line       496                         i_j_list.append((
excute 13:41:19.148184 line       497                             i, j,
excute 13:41:19.151175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.155164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0)]
excute 13:41:19.158156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:19.161148 line       494                         if (i == j):
excute 13:41:19.165138 line       496                         i_j_list.append((
excute 13:41:19.168162 line       497                             i, j,
excute 13:41:19.171153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.174146 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0)]
excute 13:41:19.177137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:19.181128 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:19.184119 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:19.187111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:19.190103 line       494                         if (i == j):
excute 13:41:19.194060 line       496                         i_j_list.append((
excute 13:41:19.197052 line       497                             i, j,
excute 13:41:19.201073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.204066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0)]
excute 13:41:19.207058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:19.211048 line       494                         if (i == j):
excute 13:41:19.215006 line       496                         i_j_list.append((
excute 13:41:19.218028 line       497                             i, j,
excute 13:41:19.221987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.225013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:41:19.228002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:19.230995 line       494                         if (i == j):
excute 13:41:19.234953 line       496                         i_j_list.append((
excute 13:41:19.237975 line       497                             i, j,
excute 13:41:19.240967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.243959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:41:19.246951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:19.250917 line       494                         if (i == j):
excute 13:41:19.253903 line       496                         i_j_list.append((
excute 13:41:19.256892 line       497                             i, j,
excute 13:41:19.259884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.262876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:41:19.265868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:19.269858 line       494                         if (i == j):
excute 13:41:19.272850 line       496                         i_j_list.append((
excute 13:41:19.275842 line       497                             i, j,
excute 13:41:19.279863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.282854 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:41:19.285847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:19.289807 line       494                         if (i == j):
excute 13:41:19.292828 line       496                         i_j_list.append((
excute 13:41:19.295820 line       497                             i, j,
excute 13:41:19.298812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.302770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:41:19.305762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:19.308754 line       494                         if (i == j):
excute 13:41:19.311777 line       496                         i_j_list.append((
excute 13:41:19.314769 line       497                             i, j,
excute 13:41:19.317763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.321724 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:41:19.324744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:19.332694 line       494                         if (i == j):
excute 13:41:19.340669 line       496                         i_j_list.append((
excute 13:41:19.343660 line       497                             i, j,
excute 13:41:19.346652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.349644 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:41:19.356630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:19.360616 line       494                         if (i == j):
excute 13:41:19.364607 line       495                             continue
excute 13:41:19.368596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:19.372585 line       494                         if (i == j):
excute 13:41:19.376573 line       496                         i_j_list.append((
excute 13:41:19.379597 line       497                             i, j,
excute 13:41:19.382589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.386582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:41:19.389569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:19.393527 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:19.396550 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:19.400542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:19.404500 line       494                         if (i == j):
excute 13:41:19.408487 line       496                         i_j_list.append((
excute 13:41:19.411479 line       497                             i, j,
excute 13:41:19.414471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.417466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0)]
excute 13:41:19.420486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:19.425444 line       494                         if (i == j):
excute 13:41:19.428436 line       496                         i_j_list.append((
excute 13:41:19.432424 line       497                             i, j,
excute 13:41:19.435416 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.438440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:41:19.441431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:19.445388 line       494                         if (i == j):
excute 13:41:19.448412 line       496                         i_j_list.append((
excute 13:41:19.452401 line       497                             i, j,
excute 13:41:19.455395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.458385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:41:19.461377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:19.465336 line       494                         if (i == j):
excute 13:41:19.469324 line       496                         i_j_list.append((
excute 13:41:19.472336 line       497                             i, j,
excute 13:41:19.475341 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.478333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:41:19.481324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:19.485315 line       494                         if (i == j):
excute 13:41:19.488305 line       496                         i_j_list.append((
excute 13:41:19.491299 line       497                             i, j,
excute 13:41:19.494290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.497281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:41:19.500273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:19.504233 line       494                         if (i == j):
excute 13:41:19.508253 line       496                         i_j_list.append((
excute 13:41:19.512242 line       497                             i, j,
excute 13:41:19.516200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.520188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:41:19.525176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:19.530163 line       494                         if (i == j):
excute 13:41:19.534152 line       496                         i_j_list.append((
excute 13:41:19.537176 line       497                             i, j,
excute 13:41:19.540166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.543159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:41:19.547116 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:19.550110 line       494                         if (i == j):
excute 13:41:19.554101 line       496                         i_j_list.append((
excute 13:41:19.557122 line       497                             i, j,
excute 13:41:19.560113 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.563106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:41:19.567064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:19.570055 line       494                         if (i == j):
excute 13:41:19.574057 line       496                         i_j_list.append((
excute 13:41:19.577070 line       497                             i, j,
excute 13:41:19.580061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:19.583052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:41:19.586044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:19.590003 line       494                         if (i == j):
excute 13:41:19.593025 line       495                             continue
excute 13:41:19.596017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:19.599009 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:19.602002 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (7, 0, 2, 0), (7, 1, 2, 0), (7, 2, 2, 0), (7, 3, 2, 0), (7, 4, 2, 0), (7, 5, 2, 0), (7, 6, 2, 0), (7, 8, 2, 0), (7, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:41:19.605971 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:19.608951 line       505                     if (self.RELOCATE):
excute 13:41:19.612940 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:19.615934 line       505                     if (self.RELOCATE):
excute 13:41:19.619922 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:19.622914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:19.625906 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:19.629899 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:19.634883 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.638872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:19.641864 line       556                     i = i_j[0]
excute 13:41:19.644857 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:19.647847 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.651838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:19.654845 line       556                     i = i_j[0]
excute 13:41:19.657820 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:19.660812 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.664802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:19.667794 line       556                     i = i_j[0]
excute 13:41:19.670786 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:19.674776 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.677779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:19.680759 line       556                     i = i_j[0]
excute 13:41:19.684750 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:19.686743 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.690733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:41:19.693724 line       556                     i = i_j[0]
excute 13:41:19.696716 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:19.699709 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.703698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:19.706690 line       556                     i = i_j[0]
excute 13:41:19.710680 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:19.712674 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.717661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:19.720684 line       556                     i = i_j[0]
excute 13:41:19.724643 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:19.727641 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.730659 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:19.734616 line       556                     i = i_j[0]
excute 13:41:19.738605 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:19.741596 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.744588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 0, 0)
excute 13:41:19.747581 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:19.751570 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:19.755560 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.758552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 0, 0)
excute 13:41:19.761575 line       556                     i = i_j[0]
excute 13:41:19.765533 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:19.768525 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.771516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 0, 0)
excute 13:41:19.774544 line       556                     i = i_j[0]
excute 13:41:19.778498 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:19.781522 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.785480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 0, 0)
excute 13:41:19.788502 line       556                     i = i_j[0]
excute 13:41:19.791495 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:19.794488 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.798448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 0, 0)
excute 13:41:19.801468 line       556                     i = i_j[0]
excute 13:41:19.804460 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:19.807452 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.811411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 0, 0)
excute 13:41:19.814434 line       556                     i = i_j[0]
excute 13:41:19.817425 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:19.820417 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.824377 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 0, 0)
excute 13:41:19.827400 line       556                     i = i_j[0]
excute 13:41:19.830391 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:19.833382 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.838340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 0, 0)
excute 13:41:19.841361 line       556                     i = i_j[0]
excute 13:41:19.845354 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:19.848343 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.851335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 0, 0)
excute 13:41:19.855293 line       556                     i = i_j[0]
excute 13:41:19.859313 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:19.862306 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.866265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:41:19.869287 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:19.872279 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:19.876238 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.879261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:41:19.882253 line       556                     i = i_j[0]
excute 13:41:19.886212 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:19.889233 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.892226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:41:19.895217 line       556                     i = i_j[0]
excute 13:41:19.899177 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:19.902200 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.906160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:41:19.909150 line       556                     i = i_j[0]
excute 13:41:19.912141 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:19.915164 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.919154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:19.922146 line       556                     i = i_j[0]
excute 13:41:19.926106 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:19.929128 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.933085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:41:19.936084 line       556                     i = i_j[0]
excute 13:41:19.940071 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:19.943057 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.946049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:41:19.950041 line       556                     i = i_j[0]
excute 13:41:19.954029 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:19.958020 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.962008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:19.967992 line       556                     i = i_j[0]
excute 13:41:19.971980 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:19.974973 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.978962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:41:19.981954 line       556                     i = i_j[0]
excute 13:41:19.984945 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:19.987938 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:19.991928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:41:19.994932 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:19.997915 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.001901 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.006924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:41:20.010877 line       556                     i = i_j[0]
excute 13:41:20.014891 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:20.017891 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.021880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:41:20.024872 line       556                     i = i_j[0]
excute 13:41:20.028831 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.031854 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.034844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:41:20.037839 line       556                     i = i_j[0]
excute 13:41:20.042792 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:20.045783 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.048775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:41:20.051767 line       556                     i = i_j[0]
excute 13:41:20.055758 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:20.058749 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.062742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:41:20.065731 line       556                     i = i_j[0]
excute 13:41:20.069720 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:20.072711 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.076702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:41:20.080692 line       556                     i = i_j[0]
excute 13:41:20.084683 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:20.087702 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.091695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:41:20.094667 line       556                     i = i_j[0]
excute 13:41:20.097666 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.100669 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.104628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:41:20.107650 line       556                     i = i_j[0]
excute 13:41:20.110641 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:20.113635 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.117594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:20.120614 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:20.124573 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.127568 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.130588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:20.133580 line       556                     i = i_j[0]
excute 13:41:20.137540 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:20.140562 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.144521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:20.148510 line       556                     i = i_j[0]
excute 13:41:20.152498 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:20.155491 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.159480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:20.162471 line       556                     i = i_j[0]
excute 13:41:20.165463 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.168455 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.172444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:20.176435 line       556                     i = i_j[0]
excute 13:41:20.180424 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:20.183417 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.187405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:41:20.190396 line       556                     i = i_j[0]
excute 13:41:20.193388 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:20.197378 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.201369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:20.204392 line       556                     i = i_j[0]
excute 13:41:20.207382 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:20.210375 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.214364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:20.217358 line       556                     i = i_j[0]
excute 13:41:20.221316 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.224338 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.228296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:20.231287 line       556                     i = i_j[0]
excute 13:41:20.234279 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:20.237271 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.241262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 2, 0)
excute 13:41:20.244256 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:20.248243 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.251234 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.255224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 2, 0)
excute 13:41:20.258216 line       556                     i = i_j[0]
excute 13:41:20.262204 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:20.265196 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.268189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 2, 0)
excute 13:41:20.272179 line       556                     i = i_j[0]
excute 13:41:20.275170 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:20.278193 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.282154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 2, 0)
excute 13:41:20.285175 line       556                     i = i_j[0]
excute 13:41:20.288167 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.291159 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.295122 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 2, 0)
excute 13:41:20.298141 line       556                     i = i_j[0]
excute 13:41:20.301132 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:20.305123 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.308114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 2, 0)
excute 13:41:20.311105 line       556                     i = i_j[0]
excute 13:41:20.315078 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:20.318087 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.321080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 2, 0)
excute 13:41:20.324074 line       556                     i = i_j[0]
excute 13:41:20.334014 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:20.339999 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.342988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 2, 0)
excute 13:41:20.345981 line       556                     i = i_j[0]
excute 13:41:20.350985 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.356984 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.360942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 2, 0)
excute 13:41:20.363935 line       556                     i = i_j[0]
excute 13:41:20.367925 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:20.371944 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.374937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:41:20.377927 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:20.381917 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.385907 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.389864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:41:20.392888 line       556                     i = i_j[0]
excute 13:41:20.396846 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:20.399869 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.403827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:41:20.406851 line       556                     i = i_j[0]
excute 13:41:20.409842 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:20.412835 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.416829 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:41:20.419816 line       556                     i = i_j[0]
excute 13:41:20.423803 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.426765 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.429757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:41:20.432749 line       556                     i = i_j[0]
excute 13:41:20.436738 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:20.439763 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.443731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:41:20.446744 line       556                     i = i_j[0]
excute 13:41:20.450705 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:20.454692 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.458692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:41:20.461703 line       556                     i = i_j[0]
excute 13:41:20.467661 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:20.471645 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.474637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:41:20.478626 line       556                     i = i_j[0]
excute 13:41:20.481650 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:20.484610 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.488632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:41:20.491624 line       556                     i = i_j[0]
excute 13:41:20.495582 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.498605 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.502596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:20.505556 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:20.509546 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.513533 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.516525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:20.519517 line       556                     i = i_j[0]
excute 13:41:20.523506 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:20.526498 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.529490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:20.532482 line       556                     i = i_j[0]
excute 13:41:20.536471 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.539463 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.543453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:20.546447 line       556                     i = i_j[0]
excute 13:41:20.549436 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:20.553428 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.557417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:20.560407 line       556                     i = i_j[0]
excute 13:41:20.564412 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:20.567388 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.570413 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:41:20.573405 line       556                     i = i_j[0]
excute 13:41:20.577364 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:20.580387 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.583377 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:20.586370 line       556                     i = i_j[0]
excute 13:41:20.590360 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:20.593350 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.597310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:20.600334 line       556                     i = i_j[0]
excute 13:41:20.603325 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.606316 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.610276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:20.613298 line       556                     i = i_j[0]
excute 13:41:20.616291 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:20.620254 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.623271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:41:20.626263 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:20.630222 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.633213 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.637218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:20.640197 line       556                     i = i_j[0]
excute 13:41:20.643188 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:20.646179 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.650167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:20.653159 line       556                     i = i_j[0]
excute 13:41:20.658147 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:20.661137 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.664130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:20.668119 line       556                     i = i_j[0]
excute 13:41:20.671111 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.674104 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.678094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:20.680088 line       556                     i = i_j[0]
excute 13:41:20.684077 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:20.687068 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.690060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 0)
excute 13:41:20.693053 line       556                     i = i_j[0]
excute 13:41:20.697046 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:20.700034 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.704024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:20.707015 line       556                     i = i_j[0]
excute 13:41:20.711007 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:20.717987 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.720978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:20.723970 line       556                     i = i_j[0]
excute 13:41:20.727960 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.730951 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.734941 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:20.737933 line       556                     i = i_j[0]
excute 13:41:20.740925 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:20.743917 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.746908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:41:20.749901 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:20.753890 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:20.757884 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.761870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:41:20.764861 line       556                     i = i_j[0]
excute 13:41:20.768851 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:20.771845 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.774835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:41:20.777826 line       556                     i = i_j[0]
excute 13:41:20.781817 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:20.784813 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.787800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:41:20.790791 line       556                     i = i_j[0]
excute 13:41:20.794781 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:20.798771 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.805753 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:41:20.810738 line       556                     i = i_j[0]
excute 13:41:20.814727 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:20.817719 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.820711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:41:20.823704 line       556                     i = i_j[0]
excute 13:41:20.827693 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:20.830685 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.833677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:41:20.836669 line       556                     i = i_j[0]
excute 13:41:20.840658 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:20.843650 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.846642 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:41:20.849634 line       556                     i = i_j[0]
excute 13:41:20.853623 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:20.857614 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.863613 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:41:20.866589 line       556                     i = i_j[0]
excute 13:41:20.870579 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:20.873571 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:20.876563 line       555                 for i_j in i_j_list:
excute 13:41:20.879554 line       581             self.write_matrix(
excute 13:41:20.882546 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:20.885538 line       583                 result_file_path,
excute 13:41:20.888530 line       584                 mode='a'
excute 13:41:20.894518 line       488         for t in time_steps:
excute Modified var:.. t = 25
excute 13:41:20.898504 line       489             if (t != self.TIME + 1):
excute 13:41:20.904489 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:20.907481 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:20.910473 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:20.914462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:20.918451 line       494                         if (i == j):
excute 13:41:20.921443 line       495                             continue
excute 13:41:20.924435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:20.929421 line       494                         if (i == j):
excute 13:41:20.932414 line       496                         i_j_list.append((
excute 13:41:20.935405 line       497                             i, j,
excute 13:41:20.938397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:20.942389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:41:20.945379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:20.948374 line       494                         if (i == j):
excute 13:41:20.952361 line       496                         i_j_list.append((
excute 13:41:20.956349 line       497                             i, j,
excute 13:41:20.959343 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:20.963332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:41:20.967320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:20.972308 line       494                         if (i == j):
excute 13:41:20.982280 line       496                         i_j_list.append((
excute 13:41:20.987268 line       497                             i, j,
excute 13:41:20.996262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.004226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:21.010206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:21.017189 line       494                         if (i == j):
excute 13:41:21.025167 line       496                         i_j_list.append((
excute 13:41:21.029156 line       497                             i, j,
excute 13:41:21.035140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.038130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:21.044114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:21.054088 line       494                         if (i == j):
excute 13:41:21.078025 line       496                         i_j_list.append((
excute 13:41:21.092984 line       497                             i, j,
excute 13:41:21.099965 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.105949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:21.112932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:21.120910 line       494                         if (i == j):
excute 13:41:21.127892 line       496                         i_j_list.append((
excute 13:41:21.135872 line       497                             i, j,
excute 13:41:21.140856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.144846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:41:21.150837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:21.159807 line       494                         if (i == j):
excute 13:41:21.165790 line       496                         i_j_list.append((
excute 13:41:21.172784 line       497                             i, j,
excute 13:41:21.179752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.182745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:41:21.185735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:21.189725 line       494                         if (i == j):
excute 13:41:21.193716 line       496                         i_j_list.append((
excute 13:41:21.201706 line       497                             i, j,
excute 13:41:21.207678 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.213662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:21.225629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:21.240590 line       494                         if (i == j):
excute 13:41:21.247571 line       496                         i_j_list.append((
excute 13:41:21.253554 line       497                             i, j,
excute 13:41:21.259539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.267517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:21.273502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:21.286468 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:21.294445 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:21.301427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:21.309406 line       494                         if (i == j):
excute 13:41:21.315390 line       496                         i_j_list.append((
excute 13:41:21.319379 line       497                             i, j,
excute 13:41:21.322370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.325362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:21.334339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:21.348302 line       494                         if (i == j):
excute 13:41:21.357278 line       495                             continue
excute 13:41:21.363262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:21.371241 line       494                         if (i == j):
excute 13:41:21.381222 line       496                         i_j_list.append((
excute 13:41:21.392184 line       497                             i, j,
excute 13:41:21.399166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.404153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:21.407144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:21.411135 line       494                         if (i == j):
excute 13:41:21.419114 line       496                         i_j_list.append((
excute 13:41:21.425097 line       497                             i, j,
excute 13:41:21.431080 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.437065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:21.447038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:21.457012 line       494                         if (i == j):
excute 13:41:21.467982 line       496                         i_j_list.append((
excute 13:41:21.475961 line       497                             i, j,
excute 13:41:21.481944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.488926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:21.496904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:21.504884 line       494                         if (i == j):
excute 13:41:21.512862 line       496                         i_j_list.append((
excute 13:41:21.519842 line       497                             i, j,
excute 13:41:21.527821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.534803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:21.541784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:21.548765 line       494                         if (i == j):
excute 13:41:21.557743 line       496                         i_j_list.append((
excute 13:41:21.564723 line       497                             i, j,
excute 13:41:21.572701 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.578686 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:41:21.584669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:21.591653 line       494                         if (i == j):
excute 13:41:21.598632 line       496                         i_j_list.append((
excute 13:41:21.606611 line       497                             i, j,
excute 13:41:21.612595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.618580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:41:21.623567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:21.628554 line       494                         if (i == j):
excute 13:41:21.634537 line       496                         i_j_list.append((
excute 13:41:21.640521 line       497                             i, j,
excute 13:41:21.647502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.652488 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:21.657478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:21.665455 line       494                         if (i == j):
excute 13:41:21.671439 line       496                         i_j_list.append((
excute 13:41:21.677422 line       497                             i, j,
excute 13:41:21.682408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.688393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:21.694377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:21.701358 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:21.706345 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:21.712329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:21.718312 line       494                         if (i == j):
excute 13:41:21.726291 line       496                         i_j_list.append((
excute 13:41:21.730282 line       497                             i, j,
excute 13:41:21.735267 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.740253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0)]
excute 13:41:21.745241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:21.752223 line       494                         if (i == j):
excute 13:41:21.758207 line       496                         i_j_list.append((
excute 13:41:21.764191 line       497                             i, j,
excute 13:41:21.769177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.775161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1)]
excute 13:41:21.780147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:21.784138 line       494                         if (i == j):
excute 13:41:21.787129 line       495                             continue
excute 13:41:21.790120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:21.793112 line       494                         if (i == j):
excute 13:41:21.797103 line       496                         i_j_list.append((
excute 13:41:21.800098 line       497                             i, j,
excute 13:41:21.804083 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.807075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0)]
excute 13:41:21.810066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:21.813059 line       494                         if (i == j):
excute 13:41:21.816051 line       496                         i_j_list.append((
excute 13:41:21.819043 line       497                             i, j,
excute 13:41:21.822035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.825027 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:41:21.828019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:21.832008 line       494                         if (i == j):
excute 13:41:21.835000 line       496                         i_j_list.append((
excute 13:41:21.837993 line       497                             i, j,
excute 13:41:21.840984 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.843976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:41:21.846968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:21.849960 line       494                         if (i == j):
excute 13:41:21.853951 line       496                         i_j_list.append((
excute 13:41:21.856941 line       497                             i, j,
excute 13:41:21.859934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.862926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:41:21.865918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:21.868910 line       494                         if (i == j):
excute 13:41:21.873898 line       496                         i_j_list.append((
excute 13:41:21.877886 line       497                             i, j,
excute 13:41:21.880877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.883870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:41:21.886861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:21.890851 line       494                         if (i == j):
excute 13:41:21.893842 line       496                         i_j_list.append((
excute 13:41:21.896835 line       497                             i, j,
excute 13:41:21.899827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.902821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:41:21.906809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:21.910799 line       494                         if (i == j):
excute 13:41:21.913791 line       496                         i_j_list.append((
excute 13:41:21.916781 line       497                             i, j,
excute 13:41:21.920770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.922766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:41:21.926756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:21.929748 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:21.932739 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:21.936728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:21.939721 line       494                         if (i == j):
excute 13:41:21.942712 line       496                         i_j_list.append((
excute 13:41:21.945704 line       497                             i, j,
excute 13:41:21.948695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.951688 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0)]
excute 13:41:21.954680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:21.958671 line       494                         if (i == j):
excute 13:41:21.963658 line       496                         i_j_list.append((
excute 13:41:21.967648 line       497                             i, j,
excute 13:41:21.971634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.974626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1)]
excute 13:41:21.978616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:21.982607 line       494                         if (i == j):
excute 13:41:21.985599 line       496                         i_j_list.append((
excute 13:41:21.989588 line       497                             i, j,
excute 13:41:21.992578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:21.995571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0)]
excute 13:41:21.998563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:22.002553 line       494                         if (i == j):
excute 13:41:22.009536 line       495                             continue
excute 13:41:22.012525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:22.015518 line       494                         if (i == j):
excute 13:41:22.019508 line       496                         i_j_list.append((
excute 13:41:22.022499 line       497                             i, j,
excute 13:41:22.026488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.029481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0)]
excute 13:41:22.032473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:22.035465 line       494                         if (i == j):
excute 13:41:22.039454 line       496                         i_j_list.append((
excute 13:41:22.042446 line       497                             i, j,
excute 13:41:22.045438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.048430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0)]
excute 13:41:22.051422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:22.055412 line       494                         if (i == j):
excute 13:41:22.058414 line       496                         i_j_list.append((
excute 13:41:22.061427 line       497                             i, j,
excute 13:41:22.064418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.067411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0)]
excute 13:41:22.070404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:22.074394 line       494                         if (i == j):
excute 13:41:22.077353 line       496                         i_j_list.append((
excute 13:41:22.080375 line       497                             i, j,
excute 13:41:22.085332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.089321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0)]
excute 13:41:22.093311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:22.098297 line       494                         if (i == j):
excute 13:41:22.102286 line       496                         i_j_list.append((
excute 13:41:22.107303 line       497                             i, j,
excute 13:41:22.111263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.117245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0)]
excute 13:41:22.121238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:22.125226 line       494                         if (i == j):
excute 13:41:22.129214 line       496                         i_j_list.append((
excute 13:41:22.132205 line       497                             i, j,
excute 13:41:22.135197 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.139219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0)]
excute 13:41:22.142211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:22.146170 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:22.149192 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:22.153183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:22.156175 line       494                         if (i == j):
excute 13:41:22.159168 line       496                         i_j_list.append((
excute 13:41:22.162157 line       497                             i, j,
excute 13:41:22.166147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.169138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0)]
excute 13:41:22.172101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:22.175097 line       494                         if (i == j):
excute 13:41:22.179081 line       496                         i_j_list.append((
excute 13:41:22.182103 line       497                             i, j,
excute 13:41:22.185095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.188089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1)]
excute 13:41:22.191081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:22.195040 line       494                         if (i == j):
excute 13:41:22.201024 line       496                         i_j_list.append((
excute 13:41:22.206008 line       497                             i, j,
excute 13:41:22.209998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.216980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0)]
excute 13:41:22.222963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:22.229945 line       494                         if (i == j):
excute 13:41:22.236928 line       496                         i_j_list.append((
excute 13:41:22.241912 line       497                             i, j,
excute 13:41:22.245902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.250888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:22.253882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:22.257872 line       494                         if (i == j):
excute 13:41:22.263854 line       495                             continue
excute 13:41:22.269838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:22.272831 line       494                         if (i == j):
excute 13:41:22.278813 line       496                         i_j_list.append((
excute 13:41:22.284797 line       497                             i, j,
excute 13:41:22.287792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.292778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:22.297763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:22.301754 line       494                         if (i == j):
excute 13:41:22.305742 line       496                         i_j_list.append((
excute 13:41:22.309731 line       497                             i, j,
excute 13:41:22.314718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.321699 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:41:22.324691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:22.334665 line       494                         if (i == j):
excute 13:41:22.345636 line       496                         i_j_list.append((
excute 13:41:22.349625 line       497                             i, j,
excute 13:41:22.357604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.363587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:41:22.367577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:22.374560 line       494                         if (i == j):
excute 13:41:22.380542 line       496                         i_j_list.append((
excute 13:41:22.383537 line       497                             i, j,
excute 13:41:22.386526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.390515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:22.393508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:22.397497 line       494                         if (i == j):
excute 13:41:22.400489 line       496                         i_j_list.append((
excute 13:41:22.404479 line       497                             i, j,
excute 13:41:22.407474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.410462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:22.413454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:22.417445 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:22.420439 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:22.424426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:22.427416 line       494                         if (i == j):
excute 13:41:22.431406 line       496                         i_j_list.append((
excute 13:41:22.434397 line       497                             i, j,
excute 13:41:22.437389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.440382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0)]
excute 13:41:22.443373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:22.446366 line       494                         if (i == j):
excute 13:41:22.450355 line       496                         i_j_list.append((
excute 13:41:22.454344 line       497                             i, j,
excute 13:41:22.457368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.460360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1)]
excute 13:41:22.463353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:22.467311 line       494                         if (i == j):
excute 13:41:22.470335 line       496                         i_j_list.append((
excute 13:41:22.473326 line       497                             i, j,
excute 13:41:22.476285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.479277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0)]
excute 13:41:22.482270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:22.486260 line       494                         if (i == j):
excute 13:41:22.489251 line       496                         i_j_list.append((
excute 13:41:22.492243 line       497                             i, j,
excute 13:41:22.495235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.499225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:22.502217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:22.505208 line       494                         if (i == j):
excute 13:41:22.509211 line       496                         i_j_list.append((
excute 13:41:22.512189 line       497                             i, j,
excute 13:41:22.515182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.518174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:22.521166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:22.527152 line       494                         if (i == j):
excute 13:41:22.530174 line       495                             continue
excute 13:41:22.533166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:22.536158 line       494                         if (i == j):
excute 13:41:22.540117 line       496                         i_j_list.append((
excute 13:41:22.543139 line       497                             i, j,
excute 13:41:22.546132 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.549124 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0)]
excute 13:41:22.552114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:22.556073 line       494                         if (i == j):
excute 13:41:22.559096 line       496                         i_j_list.append((
excute 13:41:22.562087 line       497                             i, j,
excute 13:41:22.565080 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.568072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0)]
excute 13:41:22.572031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:22.575034 line       494                         if (i == j):
excute 13:41:22.579012 line       496                         i_j_list.append((
excute 13:41:22.582005 line       497                             i, j,
excute 13:41:22.584995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.587987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:41:22.590979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:22.594969 line       494                         if (i == j):
excute 13:41:22.597960 line       496                         i_j_list.append((
excute 13:41:22.600953 line       497                             i, j,
excute 13:41:22.603944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.606937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:22.609928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:22.613918 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:22.616909 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:22.619904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:22.622894 line       494                         if (i == j):
excute 13:41:22.626885 line       496                         i_j_list.append((
excute 13:41:22.630904 line       497                             i, j,
excute 13:41:22.633897 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.636856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0)]
excute 13:41:22.639849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:22.643838 line       494                         if (i == j):
excute 13:41:22.646829 line       496                         i_j_list.append((
excute 13:41:22.650819 line       497                             i, j,
excute 13:41:22.653811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.656803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1)]
excute 13:41:22.659795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:22.663784 line       494                         if (i == j):
excute 13:41:22.666776 line       496                         i_j_list.append((
excute 13:41:22.669768 line       497                             i, j,
excute 13:41:22.672760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.675753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0)]
excute 13:41:22.679741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:22.682734 line       494                         if (i == j):
excute 13:41:22.685726 line       496                         i_j_list.append((
excute 13:41:22.688718 line       497                             i, j,
excute 13:41:22.691710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.694702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:41:22.698691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:22.701683 line       494                         if (i == j):
excute 13:41:22.705673 line       496                         i_j_list.append((
excute 13:41:22.708664 line       497                             i, j,
excute 13:41:22.711656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.715649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:41:22.718638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:22.721630 line       494                         if (i == j):
excute 13:41:22.725620 line       496                         i_j_list.append((
excute 13:41:22.731603 line       497                             i, j,
excute 13:41:22.734595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.738585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:41:22.742575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:22.745580 line       494                         if (i == j):
excute 13:41:22.748558 line       495                             continue
excute 13:41:22.751550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:22.755541 line       494                         if (i == j):
excute 13:41:22.758531 line       496                         i_j_list.append((
excute 13:41:22.761523 line       497                             i, j,
excute 13:41:22.764547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.767538 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:41:22.770532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:22.774522 line       494                         if (i == j):
excute 13:41:22.778478 line       496                         i_j_list.append((
excute 13:41:22.781470 line       497                             i, j,
excute 13:41:22.784462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.787454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:41:22.790446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:22.794435 line       494                         if (i == j):
excute 13:41:22.798437 line       496                         i_j_list.append((
excute 13:41:22.801416 line       497                             i, j,
excute 13:41:22.804408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.807400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:41:22.810392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:22.813384 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:22.817374 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:22.821364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:22.824357 line       494                         if (i == j):
excute 13:41:22.828346 line       496                         i_j_list.append((
excute 13:41:22.835327 line       497                             i, j,
excute 13:41:22.839315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.842307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0)]
excute 13:41:22.845299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:22.849290 line       494                         if (i == j):
excute 13:41:22.852281 line       496                         i_j_list.append((
excute 13:41:22.856270 line       497                             i, j,
excute 13:41:22.860260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.863251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1)]
excute 13:41:22.866244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:22.869236 line       494                         if (i == j):
excute 13:41:22.873229 line       496                         i_j_list.append((
excute 13:41:22.876223 line       497                             i, j,
excute 13:41:22.879209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.882201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0)]
excute 13:41:22.885193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:22.889182 line       494                         if (i == j):
excute 13:41:22.892175 line       496                         i_j_list.append((
excute 13:41:22.895166 line       497                             i, j,
excute 13:41:22.899156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.902148 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0)]
excute 13:41:22.905140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:22.908131 line       494                         if (i == j):
excute 13:41:22.912122 line       496                         i_j_list.append((
excute 13:41:22.917108 line       497                             i, j,
excute 13:41:22.920099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.923091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0)]
excute 13:41:22.926083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:22.930073 line       494                         if (i == j):
excute 13:41:22.933064 line       496                         i_j_list.append((
excute 13:41:22.937055 line       497                             i, j,
excute 13:41:22.940046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.943039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0)]
excute 13:41:22.946030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:22.950021 line       494                         if (i == j):
excute 13:41:22.955007 line       496                         i_j_list.append((
excute 13:41:22.957999 line       497                             i, j,
excute 13:41:22.961988 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.964981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0)]
excute 13:41:22.967972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:22.971962 line       494                         if (i == j):
excute 13:41:22.974989 line       495                             continue
excute 13:41:22.978965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:22.982963 line       494                         if (i == j):
excute 13:41:22.986922 line       496                         i_j_list.append((
excute 13:41:22.989912 line       497                             i, j,
excute 13:41:22.992905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:22.995896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0)]
excute 13:41:22.998889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:23.002878 line       494                         if (i == j):
excute 13:41:23.006869 line       496                         i_j_list.append((
excute 13:41:23.009892 line       497                             i, j,
excute 13:41:23.012885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.015875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0)]
excute 13:41:23.018867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:23.022825 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:23.025850 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:23.029809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:23.032830 line       494                         if (i == j):
excute 13:41:23.035821 line       496                         i_j_list.append((
excute 13:41:23.040809 line       497                             i, j,
excute 13:41:23.043771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.046760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0)]
excute 13:41:23.049752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:23.053743 line       494                         if (i == j):
excute 13:41:23.057732 line       496                         i_j_list.append((
excute 13:41:23.060723 line       497                             i, j,
excute 13:41:23.063715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.066707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1)]
excute 13:41:23.069699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:23.072691 line       494                         if (i == j):
excute 13:41:23.076681 line       496                         i_j_list.append((
excute 13:41:23.080670 line       497                             i, j,
excute 13:41:23.083662 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.086655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0)]
excute 13:41:23.089647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:23.092638 line       494                         if (i == j):
excute 13:41:23.096629 line       496                         i_j_list.append((
excute 13:41:23.100621 line       497                             i, j,
excute 13:41:23.103610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.106601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:41:23.109594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:23.112585 line       494                         if (i == j):
excute 13:41:23.116576 line       496                         i_j_list.append((
excute 13:41:23.119566 line       497                             i, j,
excute 13:41:23.122558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.126548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:41:23.130537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:23.134526 line       494                         if (i == j):
excute 13:41:23.137520 line       496                         i_j_list.append((
excute 13:41:23.141511 line       497                             i, j,
excute 13:41:23.144499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.147491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:41:23.151481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:23.154473 line       494                         if (i == j):
excute 13:41:23.158463 line       496                         i_j_list.append((
excute 13:41:23.161454 line       497                             i, j,
excute 13:41:23.164446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.167438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:41:23.170430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:23.174421 line       494                         if (i == j):
excute 13:41:23.177413 line       496                         i_j_list.append((
excute 13:41:23.180403 line       497                             i, j,
excute 13:41:23.183427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.186419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:41:23.189411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:23.193371 line       494                         if (i == j):
excute 13:41:23.197358 line       495                             continue
excute 13:41:23.202344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:23.206334 line       494                         if (i == j):
excute 13:41:23.212319 line       496                         i_j_list.append((
excute 13:41:23.218302 line       497                             i, j,
excute 13:41:23.221294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.227278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:41:23.230270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:23.236254 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:23.239246 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:23.244233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:23.248233 line       494                         if (i == j):
excute 13:41:23.251214 line       496                         i_j_list.append((
excute 13:41:23.255205 line       497                             i, j,
excute 13:41:23.258196 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.261187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0)]
excute 13:41:23.264179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:23.268170 line       494                         if (i == j):
excute 13:41:23.271160 line       496                         i_j_list.append((
excute 13:41:23.274153 line       497                             i, j,
excute 13:41:23.277145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.281135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1)]
excute 13:41:23.284127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:23.287118 line       494                         if (i == j):
excute 13:41:23.291107 line       496                         i_j_list.append((
excute 13:41:23.295098 line       497                             i, j,
excute 13:41:23.298090 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.301081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0)]
excute 13:41:23.304073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:23.308062 line       494                         if (i == j):
excute 13:41:23.311055 line       496                         i_j_list.append((
excute 13:41:23.314046 line       497                             i, j,
excute 13:41:23.317039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.320030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:41:23.323022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:23.329008 line       494                         if (i == j):
excute 13:41:23.336991 line       496                         i_j_list.append((
excute 13:41:23.341974 line       497                             i, j,
excute 13:41:23.345962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.349982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:41:23.353943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:23.358926 line       494                         if (i == j):
excute 13:41:23.361918 line       496                         i_j_list.append((
excute 13:41:23.364910 line       497                             i, j,
excute 13:41:23.370899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.375913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:41:23.378904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:23.382895 line       494                         if (i == j):
excute 13:41:23.386854 line       496                         i_j_list.append((
excute 13:41:23.389843 line       497                             i, j,
excute 13:41:23.393834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.396858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:41:23.400816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:23.403839 line       494                         if (i == j):
excute 13:41:23.407797 line       496                         i_j_list.append((
excute 13:41:23.410819 line       497                             i, j,
excute 13:41:23.413812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.416804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:41:23.419798 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:23.423785 line       494                         if (i == j):
excute 13:41:23.427776 line       496                         i_j_list.append((
excute 13:41:23.430766 line       497                             i, j,
excute 13:41:23.433758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:23.436750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 1), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 1), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 2, 0), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, 1, 0), (7, 1, 1, 1), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:41:23.439712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:23.443712 line       494                         if (i == j):
excute 13:41:23.448722 line       495                             continue
excute 13:41:23.451678 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:23.454670 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:23.457662 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (3, 0, 0, 0), (3, 2, 0, 0), (3, 4, 0, 0), (3, 5, 0, 0), (3, 6, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (0, 1, 0, 1), (3, 1, 0, 1), (2, 0, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (7, 0, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (2, 1, 1, 1), (7, 1, 1, 1), (8, 1, 1, 1), (4, 0, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (6, 0, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (9, 0, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (4, 1, 2, 1), (6, 1, 2, 1), (9, 1, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 0, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (5, 1, 3, 1)]
excute 13:41:23.461651 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:23.468666 line       505                     if (self.RELOCATE):
excute 13:41:23.472623 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:23.475615 line       505                     if (self.RELOCATE):
excute 13:41:23.478638 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:23.481629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:23.484622 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:23.489584 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:23.492601 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.496560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:23.499552 line       556                     i = i_j[0]
excute 13:41:23.503540 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:23.506563 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.510521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:23.513513 line       556                     i = i_j[0]
excute 13:41:23.517514 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:23.520496 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.524484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:23.527507 line       556                     i = i_j[0]
excute 13:41:23.531466 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:23.534471 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.538446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:41:23.541438 line       556                     i = i_j[0]
excute 13:41:23.545428 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:23.548420 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.552409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:23.555402 line       556                     i = i_j[0]
excute 13:41:23.559390 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:23.562382 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.566373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:23.568366 line       556                     i = i_j[0]
excute 13:41:23.572356 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:23.575347 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.579338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:23.582329 line       556                     i = i_j[0]
excute 13:41:23.586319 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:23.590309 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.593299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 0, 0)
excute 13:41:23.597289 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:23.601279 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:23.605268 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.609263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 0, 0)
excute 13:41:23.612249 line       556                     i = i_j[0]
excute 13:41:23.616238 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:23.619232 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.623220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 0, 0)
excute 13:41:23.626212 line       556                     i = i_j[0]
excute 13:41:23.629203 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:23.632195 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.636185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 0, 0)
excute 13:41:23.639176 line       556                     i = i_j[0]
excute 13:41:23.642168 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:23.645161 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.649150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 0, 0)
excute 13:41:23.653140 line       556                     i = i_j[0]
excute 13:41:23.657130 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:23.660121 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.663113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 0, 0)
excute 13:41:23.666106 line       556                     i = i_j[0]
excute 13:41:23.670095 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:23.673086 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.677077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 0, 0)
excute 13:41:23.683062 line       556                     i = i_j[0]
excute 13:41:23.686051 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:23.689043 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.694032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 0, 0)
excute 13:41:23.697022 line       556                     i = i_j[0]
excute 13:41:23.701012 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:23.704004 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.706995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:41:23.709987 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:23.713976 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:23.717966 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.721955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 0, 1)
excute 13:41:23.724948 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:23.727939 line       557                     j = i_j[1]
excute 13:41:23.731929 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.734921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:41:23.737913 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:23.740905 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:23.744894 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.748885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:41:23.751875 line       556                     i = i_j[0]
excute 13:41:23.755867 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:23.759854 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.762858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:41:23.765838 line       556                     i = i_j[0]
excute 13:41:23.768830 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:23.771822 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.775811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:41:23.779806 line       556                     i = i_j[0]
excute 13:41:23.782794 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:23.785785 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.789775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:41:23.792766 line       556                     i = i_j[0]
excute 13:41:23.796757 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:23.799748 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.802740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:41:23.806730 line       556                     i = i_j[0]
excute 13:41:23.809721 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:23.812713 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.815704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:41:23.818697 line       556                     i = i_j[0]
excute 13:41:23.822687 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:23.825678 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.828670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:41:23.831662 line       556                     i = i_j[0]
excute 13:41:23.835652 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:23.838643 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.841635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 1, 0)
excute 13:41:23.845625 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:23.848616 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:23.852606 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.857595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 1, 0)
excute 13:41:23.861596 line       556                     i = i_j[0]
excute 13:41:23.864574 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:23.867566 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.871573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 1, 0)
excute 13:41:23.876543 line       556                     i = i_j[0]
excute 13:41:23.880531 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:23.883524 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.886515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 1, 0)
excute 13:41:23.889508 line       556                     i = i_j[0]
excute 13:41:23.893498 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:23.896488 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.900480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 1, 0)
excute 13:41:23.903471 line       556                     i = i_j[0]
excute 13:41:23.906463 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:23.909455 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.913445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 1, 0)
excute 13:41:23.917437 line       556                     i = i_j[0]
excute 13:41:23.921423 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:23.924415 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.928405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 1, 0)
excute 13:41:23.931395 line       556                     i = i_j[0]
excute 13:41:23.934387 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:23.938377 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.941372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 1, 0)
excute 13:41:23.944361 line       556                     i = i_j[0]
excute 13:41:23.947353 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:23.950345 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.954334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:41:23.957326 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:23.962314 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:23.966315 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.969306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:41:23.972286 line       556                     i = i_j[0]
excute 13:41:23.975278 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:23.979267 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.982259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:41:23.985252 line       556                     i = i_j[0]
excute 13:41:23.989241 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:23.992234 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:23.995226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:23.998217 line       556                     i = i_j[0]
excute 13:41:24.001209 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:24.005198 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.009188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:41:24.012180 line       556                     i = i_j[0]
excute 13:41:24.015172 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:24.018164 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.022153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:41:24.025145 line       556                     i = i_j[0]
excute 13:41:24.029136 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:24.032127 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.035118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:24.039107 line       556                     i = i_j[0]
excute 13:41:24.042099 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:24.045092 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.049081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:41:24.052073 line       556                     i = i_j[0]
excute 13:41:24.055066 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:24.059054 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.063044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 1)
excute 13:41:24.066068 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:24.070027 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:24.073049 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.077009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 1, 1)
excute 13:41:24.080030 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:24.083022 line       557                     j = i_j[1]
excute 13:41:24.086980 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.090004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 1)
excute 13:41:24.092995 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:24.105747 line       557                     j = i_j[1]
excute 13:41:24.109772 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.112763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:24.115755 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:24.118746 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:24.122736 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.126727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:24.129720 line       556                     i = i_j[0]
excute 13:41:24.133675 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:24.136667 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.139658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:24.142651 line       556                     i = i_j[0]
excute 13:41:24.146642 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:24.149664 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.152626 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:24.156615 line       556                     i = i_j[0]
excute 13:41:24.160605 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:24.165590 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.169580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:41:24.172602 line       556                     i = i_j[0]
excute 13:41:24.176593 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:24.179551 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.183541 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:24.186536 line       556                     i = i_j[0]
excute 13:41:24.189527 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:24.193517 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.196509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:24.199499 line       556                     i = i_j[0]
excute 13:41:24.203488 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:24.206480 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.209472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:24.213463 line       556                     i = i_j[0]
excute 13:41:24.217452 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:24.220443 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.225431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:41:24.228421 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:24.233409 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:24.236400 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.241388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:41:24.244379 line       556                     i = i_j[0]
excute 13:41:24.247370 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:24.250363 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.254352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:41:24.257344 line       556                     i = i_j[0]
excute 13:41:24.261334 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:24.264325 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.268316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:41:24.272305 line       556                     i = i_j[0]
excute 13:41:24.275297 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:24.280283 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.283274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:41:24.287265 line       556                     i = i_j[0]
excute 13:41:24.290256 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:24.294246 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.298235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:41:24.301227 line       556                     i = i_j[0]
excute 13:41:24.305218 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:24.308208 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.311200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:41:24.314192 line       556                     i = i_j[0]
excute 13:41:24.318181 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:24.321173 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.324165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:41:24.331149 line       556                     i = i_j[0]
excute 13:41:24.337133 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:24.341120 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.345123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:41:24.348102 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:24.352092 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:24.356082 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.360070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:41:24.364060 line       556                     i = i_j[0]
excute 13:41:24.367052 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:24.374035 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.378024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:41:24.384007 line       556                     i = i_j[0]
excute 13:41:24.387996 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:24.390986 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.394977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:41:24.398966 line       556                     i = i_j[0]
excute 13:41:24.402956 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:24.405947 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.408939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:41:24.411931 line       556                     i = i_j[0]
excute 13:41:24.415920 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:24.418912 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.422902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:41:24.425894 line       556                     i = i_j[0]
excute 13:41:24.428887 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:24.431878 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.435868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:41:24.438858 line       556                     i = i_j[0]
excute 13:41:24.441850 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:24.444843 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.448832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:41:24.451824 line       556                     i = i_j[0]
excute 13:41:24.455813 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:24.458806 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.462796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 1)
excute 13:41:24.465787 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:24.469776 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:24.472768 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.477758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 1)
excute 13:41:24.480747 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:24.484737 line       557                     j = i_j[1]
excute 13:41:24.488727 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.492716 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 36
excute 13:41:24.495707 line       560                         if (t_tmp > self.TIME):
excute 13:41:24.499710 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:24.502689 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:24.505680 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:24.510667 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:24.513672 line       569                                     available_vhecles[i][t],
excute 13:41:24.516651 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:24.519643 line       571                                     self.S_capacities[j],
excute 13:41:24.522634 line       572                                     demands[t][i][j],
excute 13:41:24.525627 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 25
calc_contract     13:41:24.528619 call       352     def caluculate_contract(
calc_contract     13:41:24.531612 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:24.532608 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:24.533607 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:24.534603 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:24.534603 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:24.535600 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:24.536598 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:41:24.537598 line       575                                 rsf += rsf_tmp
excute 13:41:24.540589 line       576                                 rse += rse_tmp
excute 13:41:24.543580 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 25
move_cars     Starting var:.. t_tmp = 36
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:24.546572 call       388     def move_cars(
move_cars     13:41:24.551558 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:24.552556 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:24.553553 line       399         return available_vhecles
move_cars     13:41:24.555547 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:24.557542 line       579                                 success += can_contract
excute Modified var:.. success = 20
excute 13:41:24.561531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 1)
excute 13:41:24.565555 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:24.568547 line       557                     j = i_j[1]
excute 13:41:24.572536 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.575495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:24.580514 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:24.584470 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:24.588462 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.591454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:24.595442 line       556                     i = i_j[0]
excute 13:41:24.599432 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:24.602428 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.605413 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:24.608405 line       556                     i = i_j[0]
excute 13:41:24.612395 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:24.615390 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.619378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:24.622369 line       556                     i = i_j[0]
excute 13:41:24.626358 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:24.629354 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.632344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:41:24.635334 line       556                     i = i_j[0]
excute 13:41:24.639324 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:24.642315 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.646304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:41:24.649296 line       556                     i = i_j[0]
excute 13:41:24.653285 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:24.656277 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.660269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:24.663260 line       556                     i = i_j[0]
excute 13:41:24.667271 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:24.670273 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.673264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:24.676255 line       556                     i = i_j[0]
excute 13:41:24.680214 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:24.684235 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.687230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:24.690218 line       556                     i = i_j[0]
excute 13:41:24.694187 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:24.697202 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.701158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:41:24.703154 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:24.707143 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:24.711133 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.716119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:24.719142 line       556                     i = i_j[0]
excute 13:41:24.723132 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:24.726123 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.730092 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:24.733098 line       556                     i = i_j[0]
excute 13:41:24.736074 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:24.740054 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.743047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:24.747037 line       556                     i = i_j[0]
excute 13:41:24.751025 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:24.754019 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.758009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 0)
excute 13:41:24.760999 line       556                     i = i_j[0]
excute 13:41:24.765002 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:24.767981 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.771971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:24.774963 line       556                     i = i_j[0]
excute 13:41:24.778951 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:24.782943 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.787926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:24.790949 line       556                     i = i_j[0]
excute 13:41:24.794908 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:24.797912 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.800924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:24.803914 line       556                     i = i_j[0]
excute 13:41:24.807908 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:24.810896 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.813888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 1)
excute 13:41:24.817847 line       556                     i = i_j[0]
excute 13:41:24.820846 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:24.823864 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:24.827819 line       555                 for i_j in i_j_list:
excute 13:41:24.830843 line       581             self.write_matrix(
excute 13:41:24.833802 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:24.836795 line       583                 result_file_path,
excute 13:41:24.839822 line       584                 mode='a'
excute 13:41:24.846770 line       488         for t in time_steps:
excute Modified var:.. t = 26
excute 13:41:24.850758 line       489             if (t != self.TIME + 1):
excute 13:41:24.856746 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:24.859736 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:24.862728 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:24.866715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:24.870705 line       494                         if (i == j):
excute 13:41:24.876692 line       495                             continue
excute 13:41:24.881677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:24.889655 line       494                         if (i == j):
excute 13:41:24.893645 line       496                         i_j_list.append((
excute 13:41:24.896636 line       497                             i, j,
excute 13:41:24.900625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:24.903616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:24.906612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:24.910598 line       494                         if (i == j):
excute 13:41:24.913593 line       496                         i_j_list.append((
excute 13:41:24.917580 line       497                             i, j,
excute 13:41:24.920571 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:24.923566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2)]
excute 13:41:24.926558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:24.933538 line       494                         if (i == j):
excute 13:41:24.942513 line       496                         i_j_list.append((
excute 13:41:24.949496 line       497                             i, j,
excute 13:41:24.956476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:24.964455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3)]
excute 13:41:24.969442 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:24.975425 line       494                         if (i == j):
excute 13:41:24.979417 line       496                         i_j_list.append((
excute 13:41:24.983404 line       497                             i, j,
excute 13:41:24.986395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:24.992380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0)]
excute 13:41:24.995374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:24.999364 line       494                         if (i == j):
excute 13:41:25.002355 line       496                         i_j_list.append((
excute 13:41:25.008336 line       497                             i, j,
excute 13:41:25.012326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.015320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:41:25.019308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:25.023297 line       494                         if (i == j):
excute 13:41:25.028283 line       496                         i_j_list.append((
excute 13:41:25.032277 line       497                             i, j,
excute 13:41:25.037261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.043247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1)]
excute 13:41:25.047234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:25.055213 line       494                         if (i == j):
excute 13:41:25.060200 line       496                         i_j_list.append((
excute 13:41:25.063191 line       497                             i, j,
excute 13:41:25.066183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.069175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:41:25.076156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:25.080145 line       494                         if (i == j):
excute 13:41:25.083136 line       496                         i_j_list.append((
excute 13:41:25.086128 line       497                             i, j,
excute 13:41:25.089120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.093111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:25.096133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:25.100091 line       494                         if (i == j):
excute 13:41:25.103117 line       496                         i_j_list.append((
excute 13:41:25.106106 line       497                             i, j,
excute 13:41:25.109099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.112091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:25.115083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:25.119043 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:25.122065 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:25.126023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:25.129024 line       494                         if (i == j):
excute 13:41:25.133004 line       496                         i_j_list.append((
excute 13:41:25.136027 line       497                             i, j,
excute 13:41:25.139022 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.142011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:25.145003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:25.148963 line       494                         if (i == j):
excute 13:41:25.151954 line       495                             continue
excute 13:41:25.155943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:25.158934 line       494                         if (i == j):
excute 13:41:25.165916 line       496                         i_j_list.append((
excute 13:41:25.170905 line       497                             i, j,
excute 13:41:25.177886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.181905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2)]
excute 13:41:25.184865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:25.191847 line       494                         if (i == j):
excute 13:41:25.195870 line       496                         i_j_list.append((
excute 13:41:25.198861 line       497                             i, j,
excute 13:41:25.201855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.204842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3)]
excute 13:41:25.207835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:25.212798 line       494                         if (i == j):
excute 13:41:25.215782 line       496                         i_j_list.append((
excute 13:41:25.218774 line       497                             i, j,
excute 13:41:25.224789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.227750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0)]
excute 13:41:25.231740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:25.236727 line       494                         if (i == j):
excute 13:41:25.242741 line       496                         i_j_list.append((
excute 13:41:25.245705 line       497                             i, j,
excute 13:41:25.248695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.251686 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1)]
excute 13:41:25.254679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:25.259665 line       494                         if (i == j):
excute 13:41:25.266649 line       496                         i_j_list.append((
excute 13:41:25.272644 line       497                             i, j,
excute 13:41:25.277618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.280641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1)]
excute 13:41:25.283633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:25.287591 line       494                         if (i == j):
excute 13:41:25.290613 line       496                         i_j_list.append((
excute 13:41:25.293605 line       497                             i, j,
excute 13:41:25.297564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.300587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0)]
excute 13:41:25.303579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:25.307538 line       494                         if (i == j):
excute 13:41:25.310563 line       496                         i_j_list.append((
excute 13:41:25.313552 line       497                             i, j,
excute 13:41:25.316545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.319537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:25.322530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:25.327484 line       494                         if (i == j):
excute 13:41:25.335466 line       496                         i_j_list.append((
excute 13:41:25.342446 line       497                             i, j,
excute 13:41:25.345471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.348458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:25.352423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:25.358402 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:25.361429 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:25.365384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:25.368405 line       494                         if (i == j):
excute 13:41:25.372397 line       496                         i_j_list.append((
excute 13:41:25.375387 line       497                             i, j,
excute 13:41:25.378379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.381372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0)]
excute 13:41:25.385329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:25.388354 line       494                         if (i == j):
excute 13:41:25.392310 line       496                         i_j_list.append((
excute 13:41:25.395302 line       497                             i, j,
excute 13:41:25.402285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.406307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:41:25.409296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:25.413257 line       494                         if (i == j):
excute 13:41:25.417277 line       495                             continue
excute 13:41:25.420268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:25.423259 line       494                         if (i == j):
excute 13:41:25.426220 line       496                         i_j_list.append((
excute 13:41:25.429245 line       497                             i, j,
excute 13:41:25.432234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.435227 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3)]
excute 13:41:25.438220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:25.441210 line       494                         if (i == j):
excute 13:41:25.445171 line       496                         i_j_list.append((
excute 13:41:25.448194 line       497                             i, j,
excute 13:41:25.451185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.457291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0)]
excute 13:41:25.460314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:25.465270 line       494                         if (i == j):
excute 13:41:25.469258 line       496                         i_j_list.append((
excute 13:41:25.471284 line       497                             i, j,
excute 13:41:25.474277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.477237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1)]
excute 13:41:25.481226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:25.484220 line       494                         if (i == j):
excute 13:41:25.487242 line       496                         i_j_list.append((
excute 13:41:25.490234 line       497                             i, j,
excute 13:41:25.493227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.496217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1)]
excute 13:41:25.499210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:25.504181 line       494                         if (i == j):
excute 13:41:25.507157 line       496                         i_j_list.append((
excute 13:41:25.511148 line       497                             i, j,
excute 13:41:25.515136 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.518129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0)]
excute 13:41:25.521121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:25.526140 line       494                         if (i == j):
excute 13:41:25.529097 line       496                         i_j_list.append((
excute 13:41:25.532090 line       497                             i, j,
excute 13:41:25.535082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.538074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:41:25.541066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:25.545055 line       494                         if (i == j):
excute 13:41:25.548047 line       496                         i_j_list.append((
excute 13:41:25.551039 line       497                             i, j,
excute 13:41:25.554032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.558021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:41:25.561013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:25.564005 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:25.566996 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:25.569988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:25.572981 line       494                         if (i == j):
excute 13:41:25.576970 line       496                         i_j_list.append((
excute 13:41:25.579996 line       497                             i, j,
excute 13:41:25.582991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.585979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0)]
excute 13:41:25.588971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:25.591962 line       494                         if (i == j):
excute 13:41:25.595929 line       496                         i_j_list.append((
excute 13:41:25.598943 line       497                             i, j,
excute 13:41:25.601936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.605894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0)]
excute 13:41:25.608917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:25.611908 line       494                         if (i == j):
excute 13:41:25.615867 line       496                         i_j_list.append((
excute 13:41:25.618858 line       497                             i, j,
excute 13:41:25.622847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.625841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2)]
excute 13:41:25.628833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:25.632821 line       494                         if (i == j):
excute 13:41:25.636812 line       495                             continue
excute 13:41:25.639835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:25.642827 line       494                         if (i == j):
excute 13:41:25.645818 line       496                         i_j_list.append((
excute 13:41:25.648809 line       497                             i, j,
excute 13:41:25.651801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.655792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0)]
excute 13:41:25.658783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:25.662774 line       494                         if (i == j):
excute 13:41:25.665766 line       496                         i_j_list.append((
excute 13:41:25.668757 line       497                             i, j,
excute 13:41:25.671749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.674740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1)]
excute 13:41:25.677733 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:25.681691 line       494                         if (i == j):
excute 13:41:25.684716 line       496                         i_j_list.append((
excute 13:41:25.687705 line       497                             i, j,
excute 13:41:25.690698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.693689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1)]
excute 13:41:25.697648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:25.700640 line       494                         if (i == j):
excute 13:41:25.703663 line       496                         i_j_list.append((
excute 13:41:25.707623 line       497                             i, j,
excute 13:41:25.711611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.714634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0)]
excute 13:41:25.717597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:25.721586 line       494                         if (i == j):
excute 13:41:25.725574 line       496                         i_j_list.append((
excute 13:41:25.728567 line       497                             i, j,
excute 13:41:25.731559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.734550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0)]
excute 13:41:25.738539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:25.741532 line       494                         if (i == j):
excute 13:41:25.745521 line       496                         i_j_list.append((
excute 13:41:25.749511 line       497                             i, j,
excute 13:41:25.752503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.755495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0)]
excute 13:41:25.758486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:25.761478 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:25.765468 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:25.768461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:25.772449 line       494                         if (i == j):
excute 13:41:25.775441 line       496                         i_j_list.append((
excute 13:41:25.779430 line       497                             i, j,
excute 13:41:25.782422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.786412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0)]
excute 13:41:25.789403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:25.793393 line       494                         if (i == j):
excute 13:41:25.797382 line       496                         i_j_list.append((
excute 13:41:25.800374 line       497                             i, j,
excute 13:41:25.804364 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.807356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:41:25.811344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:25.815335 line       494                         if (i == j):
excute 13:41:25.819324 line       496                         i_j_list.append((
excute 13:41:25.822316 line       497                             i, j,
excute 13:41:25.826311 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.829303 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2)]
excute 13:41:25.832314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:25.835311 line       494                         if (i == j):
excute 13:41:25.839285 line       496                         i_j_list.append((
excute 13:41:25.842292 line       497                             i, j,
excute 13:41:25.845288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.848276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3)]
excute 13:41:25.851268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:25.855259 line       494                         if (i == j):
excute 13:41:25.859217 line       495                             continue
excute 13:41:25.862239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:25.865232 line       494                         if (i == j):
excute 13:41:25.868224 line       496                         i_j_list.append((
excute 13:41:25.871215 line       497                             i, j,
excute 13:41:25.874210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.877201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1)]
excute 13:41:25.880191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:25.884149 line       494                         if (i == j):
excute 13:41:25.887140 line       496                         i_j_list.append((
excute 13:41:25.890133 line       497                             i, j,
excute 13:41:25.893125 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.896117 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1)]
excute 13:41:25.899108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:25.903099 line       494                         if (i == j):
excute 13:41:25.907087 line       496                         i_j_list.append((
excute 13:41:25.910079 line       497                             i, j,
excute 13:41:25.914074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.918060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:41:25.921052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:25.925041 line       494                         if (i == j):
excute 13:41:25.929031 line       496                         i_j_list.append((
excute 13:41:25.932023 line       497                             i, j,
excute 13:41:25.936012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.939999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:25.942993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:25.946981 line       494                         if (i == j):
excute 13:41:25.949976 line       496                         i_j_list.append((
excute 13:41:25.952966 line       497                             i, j,
excute 13:41:25.956956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.959948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:25.963937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:25.966929 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:25.970918 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:25.974906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:25.977902 line       494                         if (i == j):
excute 13:41:25.980891 line       496                         i_j_list.append((
excute 13:41:25.983882 line       497                             i, j,
excute 13:41:25.986874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:25.989866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0)]
excute 13:41:25.992858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:25.995850 line       494                         if (i == j):
excute 13:41:25.999840 line       496                         i_j_list.append((
excute 13:41:26.002831 line       497                             i, j,
excute 13:41:26.005855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.008817 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:41:26.011840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:26.016796 line       494                         if (i == j):
excute 13:41:26.020787 line       496                         i_j_list.append((
excute 13:41:26.023775 line       497                             i, j,
excute 13:41:26.026767 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.029761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2)]
excute 13:41:26.032754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:26.036742 line       494                         if (i == j):
excute 13:41:26.040745 line       496                         i_j_list.append((
excute 13:41:26.043725 line       497                             i, j,
excute 13:41:26.046716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.049708 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3)]
excute 13:41:26.053697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:26.057686 line       494                         if (i == j):
excute 13:41:26.060678 line       496                         i_j_list.append((
excute 13:41:26.064668 line       497                             i, j,
excute 13:41:26.067662 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.070661 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0)]
excute 13:41:26.073645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:26.076636 line       494                         if (i == j):
excute 13:41:26.080626 line       495                             continue
excute 13:41:26.083618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:26.086609 line       494                         if (i == j):
excute 13:41:26.090611 line       496                         i_j_list.append((
excute 13:41:26.093621 line       497                             i, j,
excute 13:41:26.096613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.099574 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1)]
excute 13:41:26.102566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:26.107553 line       494                         if (i == j):
excute 13:41:26.114533 line       496                         i_j_list.append((
excute 13:41:26.121519 line       497                             i, j,
excute 13:41:26.124507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.130491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0)]
excute 13:41:26.134480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:26.139470 line       494                         if (i == j):
excute 13:41:26.142461 line       496                         i_j_list.append((
excute 13:41:26.146449 line       497                             i, j,
excute 13:41:26.150438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.153430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:41:26.156422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:26.160410 line       494                         if (i == j):
excute 13:41:26.164401 line       496                         i_j_list.append((
excute 13:41:26.167391 line       497                             i, j,
excute 13:41:26.170383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.173375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:26.176367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:26.179361 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:26.182352 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:26.186342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:26.189335 line       494                         if (i == j):
excute 13:41:26.192326 line       496                         i_j_list.append((
excute 13:41:26.195317 line       497                             i, j,
excute 13:41:26.198309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.201301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0)]
excute 13:41:26.204294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:26.208284 line       494                         if (i == j):
excute 13:41:26.215265 line       496                         i_j_list.append((
excute 13:41:26.219255 line       497                             i, j,
excute 13:41:26.224240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.229228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:41:26.233218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:26.237205 line       494                         if (i == j):
excute 13:41:26.241196 line       496                         i_j_list.append((
excute 13:41:26.245183 line       497                             i, j,
excute 13:41:26.247180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.251169 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2)]
excute 13:41:26.255160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:26.258149 line       494                         if (i == j):
excute 13:41:26.262140 line       496                         i_j_list.append((
excute 13:41:26.266131 line       497                             i, j,
excute 13:41:26.271114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.276101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3)]
excute 13:41:26.282087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:26.291062 line       494                         if (i == j):
excute 13:41:26.295051 line       496                         i_j_list.append((
excute 13:41:26.300038 line       497                             i, j,
excute 13:41:26.306021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.310011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0)]
excute 13:41:26.315001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:26.321978 line       494                         if (i == j):
excute 13:41:26.332950 line       496                         i_j_list.append((
excute 13:41:26.342924 line       497                             i, j,
excute 13:41:26.350901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.356886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1)]
excute 13:41:26.361874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:26.369851 line       494                         if (i == j):
excute 13:41:26.375836 line       495                             continue
excute 13:41:26.378829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:26.386805 line       494                         if (i == j):
excute 13:41:26.391793 line       496                         i_j_list.append((
excute 13:41:26.396778 line       497                             i, j,
excute 13:41:26.403761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.412738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0)]
excute 13:41:26.420715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:26.428693 line       494                         if (i == j):
excute 13:41:26.437679 line       496                         i_j_list.append((
excute 13:41:26.444652 line       497                             i, j,
excute 13:41:26.449639 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.455623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:41:26.462604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:26.469585 line       494                         if (i == j):
excute 13:41:26.475570 line       496                         i_j_list.append((
excute 13:41:26.480555 line       497                             i, j,
excute 13:41:26.486539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.493520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:41:26.500501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:26.506485 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:26.511472 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:26.516461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:26.521447 line       494                         if (i == j):
excute 13:41:26.528426 line       496                         i_j_list.append((
excute 13:41:26.534412 line       497                             i, j,
excute 13:41:26.539400 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.545381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0)]
excute 13:41:26.550368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:26.556353 line       494                         if (i == j):
excute 13:41:26.562337 line       496                         i_j_list.append((
excute 13:41:26.567323 line       497                             i, j,
excute 13:41:26.574304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.581288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0)]
excute 13:41:26.587269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:26.594252 line       494                         if (i == j):
excute 13:41:26.600236 line       496                         i_j_list.append((
excute 13:41:26.607217 line       497                             i, j,
excute 13:41:26.612202 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.617189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2)]
excute 13:41:26.623173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:26.629158 line       494                         if (i == j):
excute 13:41:26.635142 line       496                         i_j_list.append((
excute 13:41:26.642123 line       497                             i, j,
excute 13:41:26.648106 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.653095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3)]
excute 13:41:26.657082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:26.664064 line       494                         if (i == j):
excute 13:41:26.670048 line       496                         i_j_list.append((
excute 13:41:26.676031 line       497                             i, j,
excute 13:41:26.683013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.689994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0)]
excute 13:41:26.695978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:26.702961 line       494                         if (i == j):
excute 13:41:26.710945 line       496                         i_j_list.append((
excute 13:41:26.715925 line       497                             i, j,
excute 13:41:26.723904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.727893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1)]
excute 13:41:26.734877 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:26.738864 line       494                         if (i == j):
excute 13:41:26.743853 line       496                         i_j_list.append((
excute 13:41:26.746843 line       497                             i, j,
excute 13:41:26.750832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.753824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1)]
excute 13:41:26.757814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:26.761803 line       494                         if (i == j):
excute 13:41:26.765796 line       495                             continue
excute 13:41:26.768783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:26.771775 line       494                         if (i == j):
excute 13:41:26.775766 line       496                         i_j_list.append((
excute 13:41:26.779756 line       497                             i, j,
excute 13:41:26.782748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.786750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0)]
excute 13:41:26.789730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:26.792721 line       494                         if (i == j):
excute 13:41:26.796711 line       496                         i_j_list.append((
excute 13:41:26.800701 line       497                             i, j,
excute 13:41:26.803693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.806685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0)]
excute 13:41:26.809677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:26.812668 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:26.816658 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:26.826427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:26.829419 line       494                         if (i == j):
excute 13:41:26.833410 line       496                         i_j_list.append((
excute 13:41:26.837399 line       497                             i, j,
excute 13:41:26.840417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.844380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0)]
excute 13:41:26.847372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:26.851362 line       494                         if (i == j):
excute 13:41:26.855376 line       496                         i_j_list.append((
excute 13:41:26.858368 line       497                             i, j,
excute 13:41:26.861368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.864362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:41:26.867349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:26.871316 line       494                         if (i == j):
excute 13:41:26.874329 line       496                         i_j_list.append((
excute 13:41:26.877291 line       497                             i, j,
excute 13:41:26.880315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.883307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2)]
excute 13:41:26.887264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:26.890256 line       494                         if (i == j):
excute 13:41:26.893280 line       496                         i_j_list.append((
excute 13:41:26.897237 line       497                             i, j,
excute 13:41:26.900261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.906214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3)]
excute 13:41:26.910235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:26.913227 line       494                         if (i == j):
excute 13:41:26.918184 line       496                         i_j_list.append((
excute 13:41:26.921176 line       497                             i, j,
excute 13:41:26.924168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.927159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0)]
excute 13:41:26.930151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:26.934140 line       494                         if (i == j):
excute 13:41:26.938129 line       496                         i_j_list.append((
excute 13:41:26.942119 line       497                             i, j,
excute 13:41:26.945112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.950128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1)]
excute 13:41:26.953119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:26.957079 line       494                         if (i == j):
excute 13:41:26.960102 line       496                         i_j_list.append((
excute 13:41:26.964059 line       497                             i, j,
excute 13:41:26.967082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.970074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1)]
excute 13:41:26.973066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:26.977025 line       494                         if (i == j):
excute 13:41:26.980015 line       496                         i_j_list.append((
excute 13:41:26.983040 line       497                             i, j,
excute 13:41:26.987001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:26.994977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0)]
excute 13:41:27.000962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:27.005947 line       494                         if (i == j):
excute 13:41:27.010933 line       495                             continue
excute 13:41:27.014933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:27.018914 line       494                         if (i == j):
excute 13:41:27.022902 line       496                         i_j_list.append((
excute 13:41:27.025926 line       497                             i, j,
excute 13:41:27.029883 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.032880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:41:27.035867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:27.038890 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:27.042881 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:27.045871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:27.049831 line       494                         if (i == j):
excute 13:41:27.053822 line       496                         i_j_list.append((
excute 13:41:27.057810 line       497                             i, j,
excute 13:41:27.061799 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.064791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0)]
excute 13:41:27.067784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:27.071773 line       494                         if (i == j):
excute 13:41:27.075763 line       496                         i_j_list.append((
excute 13:41:27.078752 line       497                             i, j,
excute 13:41:27.081746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.084738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:41:27.087730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:27.091719 line       494                         if (i == j):
excute 13:41:27.095709 line       496                         i_j_list.append((
excute 13:41:27.099698 line       497                             i, j,
excute 13:41:27.102690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.105682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2)]
excute 13:41:27.109671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:27.112664 line       494                         if (i == j):
excute 13:41:27.116653 line       496                         i_j_list.append((
excute 13:41:27.119680 line       497                             i, j,
excute 13:41:27.123665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.127621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2), (9, 3, 2, 3)]
excute 13:41:27.134635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:27.138626 line       494                         if (i == j):
excute 13:41:27.142582 line       496                         i_j_list.append((
excute 13:41:27.148605 line       497                             i, j,
excute 13:41:27.152556 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.159535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2), (9, 3, 2, 3), (9, 4, 2, 0)]
excute 13:41:27.165520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:27.171505 line       494                         if (i == j):
excute 13:41:27.179483 line       496                         i_j_list.append((
excute 13:41:27.184470 line       497                             i, j,
excute 13:41:27.187495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.190485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2), (9, 3, 2, 3), (9, 4, 2, 0), (9, 5, 2, 1)]
excute 13:41:27.193477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:27.197468 line       494                         if (i == j):
excute 13:41:27.200458 line       496                         i_j_list.append((
excute 13:41:27.203450 line       497                             i, j,
excute 13:41:27.206442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.209434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2), (9, 3, 2, 3), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 1)]
excute 13:41:27.214390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:27.217383 line       494                         if (i == j):
excute 13:41:27.221371 line       496                         i_j_list.append((
excute 13:41:27.224364 line       497                             i, j,
excute 13:41:27.228355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.231346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2), (9, 3, 2, 3), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 1), (9, 7, 2, 0)]
excute 13:41:27.234344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:27.237361 line       494                         if (i == j):
excute 13:41:27.241320 line       496                         i_j_list.append((
excute 13:41:27.244342 line       497                             i, j,
excute 13:41:27.247334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:27.250326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 2), (0, 3, 0, 3), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 2), (1, 3, 3, 3), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 3), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 2, 0, 2), (3, 4, 0, 0), (3, 5, 0, 1), (3, 6, 0, 1), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 2), (4, 3, 2, 3), (4, 5, 2, 1), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 2), (5, 3, 3, 3), (5, 4, 3, 0), (5, 6, 3, 1), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 2), (6, 3, 3, 3), (6, 4, 3, 0), (6, 5, 3, 1), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 2), (7, 3, 1, 3), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 1), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 2), (8, 3, 1, 3), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 2), (9, 3, 2, 3), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 1), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:41:27.253317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:27.259270 line       494                         if (i == j):
excute 13:41:27.266251 line       495                             continue
excute 13:41:27.270239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:27.273232 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:27.277254 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 4, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (3, 0, 0, 0), (3, 1, 0, 0), (3, 4, 0, 0), (3, 7, 0, 0), (3, 8, 0, 0), (3, 9, 0, 0), (0, 5, 0, 1), (0, 6, 0, 1), (3, 5, 0, 1), (3, 6, 0, 1), (0, 2, 0, 2), (3, 2, 0, 2), (0, 3, 0, 3), (2, 0, 1, 0), (2, 1, 1, 0), (2, 4, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 4, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 4, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (7, 5, 1, 1), (7, 6, 1, 1), (8, 5, 1, 1), (8, 6, 1, 1), (7, 2, 1, 2), (8, 2, 1, 2), (2, 3, 1, 3), (7, 3, 1, 3), (8, 3, 1, 3), (4, 0, 2, 0), (4, 1, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 4, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (4, 5, 2, 1), (4, 6, 2, 1), (9, 5, 2, 1), (9, 6, 2, 1), (4, 2, 2, 2), (9, 2, 2, 2), (4, 3, 2, 3), (9, 3, 2, 3), (1, 0, 3, 0), (1, 4, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 4, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 4, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (1, 5, 3, 1), (1, 6, 3, 1), (5, 6, 3, 1), (6, 5, 3, 1), (1, 2, 3, 2), (5, 2, 3, 2), (6, 2, 3, 2), (1, 3, 3, 3), (5, 3, 3, 3), (6, 3, 3, 3)]
excute 13:41:27.280245 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:27.284205 line       505                     if (self.RELOCATE):
excute 13:41:27.288195 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:27.291215 line       505                     if (self.RELOCATE):
excute 13:41:27.295175 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:27.298199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:27.301189 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:27.304181 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:27.308159 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.312131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:27.315122 line       556                     i = i_j[0]
excute 13:41:27.319112 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:27.322104 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.327090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:27.335070 line       556                     i = i_j[0]
excute 13:41:27.339059 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:27.344075 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.348032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:27.351060 line       556                     i = i_j[0]
excute 13:41:27.355015 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:27.359004 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.363000 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:27.366983 line       556                     i = i_j[0]
excute 13:41:27.370972 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:27.373994 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.377952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 0, 0)
excute 13:41:27.380976 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:27.384935 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:27.387957 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.391917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 0, 0)
excute 13:41:27.394938 line       556                     i = i_j[0]
excute 13:41:27.398898 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:27.401891 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.405878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 0, 0)
excute 13:41:27.408902 line       556                     i = i_j[0]
excute 13:41:27.412868 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:27.415883 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.419851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 0, 0)
excute 13:41:27.422865 line       556                     i = i_j[0]
excute 13:41:27.425856 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:27.429813 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.432835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 0, 0)
excute 13:41:27.435829 line       556                     i = i_j[0]
excute 13:41:27.439820 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:27.442811 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.446803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 0, 0)
excute 13:41:27.449795 line       556                     i = i_j[0]
excute 13:41:27.452783 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:27.456751 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.460732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:41:27.464721 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:27.467714 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:27.471703 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.487827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:41:27.490818 line       556                     i = i_j[0]
excute 13:41:27.495805 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:27.498796 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.501789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 0, 1)
excute 13:41:27.505776 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:27.509797 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:27.513755 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.516779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 0, 1)
excute 13:41:27.519772 line       556                     i = i_j[0]
excute 13:41:27.523761 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:27.527749 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.530740 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 40
excute 13:41:27.533732 line       560                         if (t_tmp > self.TIME):
excute 13:41:27.537691 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:27.540715 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:27.543706 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:27.547665 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:27.550677 line       569                                     available_vhecles[i][t],
excute 13:41:27.553652 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:27.556673 line       571                                     self.S_capacities[j],
excute 13:41:27.559664 line       572                                     demands[t][i][j],
excute 13:41:27.562655 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 26
calc_contract     13:41:27.567611 call       352     def caluculate_contract(
calc_contract     13:41:27.570602 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:27.571601 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:27.572597 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:27.573596 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:27.574593 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:27.574593 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:27.575592 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:41:27.577585 line       575                                 rsf += rsf_tmp
excute 13:41:27.583593 line       576                                 rse += rse_tmp
excute 13:41:27.587560 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 26
move_cars     Starting var:.. t_tmp = 40
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:27.591548 call       388     def move_cars(
move_cars     13:41:27.597533 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:27.599526 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:27.601544 line       399         return available_vhecles
move_cars     13:41:27.602549 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:27.605510 line       579                                 success += can_contract
excute Modified var:.. success = 21
excute 13:41:27.608533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 2)
excute 13:41:27.612490 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:27.615482 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:27.619473 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.622495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 0, 2)
excute 13:41:27.626454 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:27.629446 line       557                     j = i_j[1]
excute 13:41:27.632468 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.636459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 3)
excute 13:41:27.639450 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:27.643409 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:27.646431 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.650393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:41:27.653383 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:27.657370 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:27.661361 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.664383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:41:27.668343 line       556                     i = i_j[0]
excute 13:41:27.672362 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:27.675355 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.679312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:41:27.682336 line       556                     i = i_j[0]
excute 13:41:27.686326 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:27.689319 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.692310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:41:27.696267 line       556                     i = i_j[0]
excute 13:41:27.699259 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:27.702250 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.706240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:41:27.709231 line       556                     i = i_j[0]
excute 13:41:27.712224 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:27.716213 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.719238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:41:27.722229 line       556                     i = i_j[0]
excute 13:41:27.726187 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:27.729211 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.733169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 1, 0)
excute 13:41:27.736192 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:27.739183 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:27.743141 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.746165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 1, 0)
excute 13:41:27.750122 line       556                     i = i_j[0]
excute 13:41:27.753115 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:27.756139 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.760097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 1, 0)
excute 13:41:27.763119 line       556                     i = i_j[0]
excute 13:41:27.766111 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:27.770071 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.774090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 1, 0)
excute 13:41:27.778081 line       556                     i = i_j[0]
excute 13:41:27.781072 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:27.784063 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.788022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 1, 0)
excute 13:41:27.791046 line       556                     i = i_j[0]
excute 13:41:27.795004 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:27.798027 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.801024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:41:27.804011 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:27.807968 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:27.810991 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.814950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:41:27.817943 line       556                     i = i_j[0]
excute 13:41:27.821931 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:27.825920 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.829912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:27.832902 line       556                     i = i_j[0]
excute 13:41:27.836923 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:27.839883 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.843872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:27.846896 line       556                     i = i_j[0]
excute 13:41:27.850854 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:27.853877 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.857848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:41:27.860859 line       556                     i = i_j[0]
excute 13:41:27.864817 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:27.867840 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.871831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 1)
excute 13:41:27.875787 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:27.878812 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:27.882769 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.885798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 1)
excute 13:41:27.888785 line       556                     i = i_j[0]
excute 13:41:27.892742 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:27.895765 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.899757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 1, 1)
excute 13:41:27.902714 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:27.906704 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:27.910693 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.913686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 1, 1)
excute 13:41:27.917713 line       556                     i = i_j[0]
excute 13:41:27.921697 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:27.924688 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.928646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 1)
excute 13:41:27.931671 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:27.934628 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:27.938618 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.942608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 1)
excute 13:41:27.945599 line       556                     i = i_j[0]
excute 13:41:27.948591 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:27.951584 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.955573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 1, 2)
excute 13:41:27.959562 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:27.965548 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:27.969536 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:27.973526 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 42
excute 13:41:27.978513 line       560                         if (t_tmp > self.TIME):
excute 13:41:27.981506 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:27.984496 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:27.988500 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 16
excute 13:41:27.991510 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:27.995467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 2)
excute 13:41:27.998490 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:28.002480 line       557                     j = i_j[1]
excute 13:41:28.005472 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.009463 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 34
excute 13:41:28.012421 line       560                         if (t_tmp > self.TIME):
excute 13:41:28.015413 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:28.019402 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:28.022394 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 17
excute 13:41:28.025388 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:28.029377 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 3)
excute 13:41:28.032401 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:28.036358 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:28.039381 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.043338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 1, 3)
excute 13:41:28.046362 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:28.050331 line       557                     j = i_j[1]
excute 13:41:28.053314 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.057302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 3)
excute 13:41:28.060293 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:28.064282 line       557                     j = i_j[1]
excute 13:41:28.067274 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.070266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:28.073258 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:28.077248 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:28.083261 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.086223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:28.089216 line       556                     i = i_j[0]
excute 13:41:28.093205 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:28.096197 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.099188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:28.103179 line       556                     i = i_j[0]
excute 13:41:28.107168 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:28.110162 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.114150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:28.117143 line       556                     i = i_j[0]
excute 13:41:28.121164 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:28.124154 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.128113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:28.131136 line       556                     i = i_j[0]
excute 13:41:28.135118 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:28.138118 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.141108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:41:28.144103 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:28.148061 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:28.152062 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.155073 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:41:28.159030 line       556                     i = i_j[0]
excute 13:41:28.162033 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:28.165013 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.169002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:41:28.171994 line       556                     i = i_j[0]
excute 13:41:28.174986 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:28.178975 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.184000 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:41:28.188952 line       556                     i = i_j[0]
excute 13:41:28.199066 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:28.202056 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.205049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:41:28.208040 line       556                     i = i_j[0]
excute 13:41:28.213027 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:28.216021 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.222004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 1)
excute 13:41:28.228018 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:28.231976 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:28.234968 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.238957 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:41:28.241949 line       556                     i = i_j[0]
excute 13:41:28.245939 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:28.248931 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.251924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 1)
excute 13:41:28.254915 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:28.258904 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:28.261896 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.265886 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 1)
excute 13:41:28.268877 line       556                     i = i_j[0]
excute 13:41:28.271869 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:28.275890 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.279850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 2)
excute 13:41:28.282871 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:28.287828 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:28.291817 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.295807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 2)
excute 13:41:28.298829 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:28.302794 line       557                     j = i_j[1]
excute 13:41:28.305779 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.308803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 3)
excute 13:41:28.311794 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:28.315754 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:28.318778 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.322740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 3)
excute 13:41:28.326724 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:28.335700 line       557                     j = i_j[1]
excute 13:41:28.343712 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.346702 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:41:28.349695 line       560                         if (t_tmp > self.TIME):
excute 13:41:28.352685 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:28.356676 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:28.361630 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:28.364621 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:28.367613 line       569                                     available_vhecles[i][t],
excute 13:41:28.370605 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:28.374630 line       571                                     self.S_capacities[j],
excute 13:41:28.377623 line       572                                     demands[t][i][j],
excute 13:41:28.380580 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 26
calc_contract     13:41:28.387561 call       352     def caluculate_contract(
calc_contract     13:41:28.393548 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:28.394553 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:28.396538 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:28.397536 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:28.398534 line       379                 can_contract = min([
calc_contract     13:41:28.399529 line       380                     capacity_target - available_vhecles_target,
calc_contract     13:41:28.400527 line       381                     available_vhecles_start
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:28.401524 line       383                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 1
calc_contract     13:41:28.402522 line       384                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 1
calc_contract     13:41:28.403519 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:28.404516 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 1, 1]
excute Modified var:.. rsf_tmp = 1
excute Modified var:.. rse_tmp = 1
excute 13:41:28.406511 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 18
excute 13:41:28.410510 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 25
excute 13:41:28.414488 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 26
move_cars     Starting var:.. t_tmp = 34
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:28.418505 call       388     def move_cars(
move_cars     13:41:28.422503 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     13:41:28.424463 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:28.425495 line       399         return available_vhecles
move_cars     13:41:28.427454 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:41:28.429449 line       579                                 success += can_contract
excute Modified var:.. success = 22
excute 13:41:28.433437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:28.436430 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:28.440421 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:28.443442 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.447434 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:28.450425 line       556                     i = i_j[0]
excute 13:41:28.454392 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:28.457374 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.461364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:28.464355 line       556                     i = i_j[0]
excute 13:41:28.468344 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:28.471338 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.475325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:28.478318 line       556                     i = i_j[0]
excute 13:41:28.482307 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:28.485299 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.488291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:28.492282 line       556                     i = i_j[0]
excute 13:41:28.496273 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:28.499261 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.503251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:41:28.506243 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:28.510232 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:28.513224 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.517214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:28.520205 line       556                     i = i_j[0]
excute 13:41:28.524204 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:28.527187 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.531177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:28.534168 line       556                     i = i_j[0]
excute 13:41:28.538159 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:28.541150 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.545139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:28.548131 line       556                     i = i_j[0]
excute 13:41:28.551122 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:28.555113 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.559102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:28.562094 line       556                     i = i_j[0]
excute 13:41:28.565086 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:28.569076 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.572075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:28.575059 line       556                     i = i_j[0]
excute 13:41:28.579049 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:28.582041 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.585033 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:41:28.588024 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:28.592015 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:28.596005 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.599993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:41:28.602984 line       556                     i = i_j[0]
excute 13:41:28.606976 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:28.609966 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.613956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:41:28.616947 line       556                     i = i_j[0]
excute 13:41:28.619941 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:28.622931 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.626926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:41:28.629912 line       556                     i = i_j[0]
excute 13:41:28.633902 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:28.636926 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.640884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:41:28.643906 line       556                     i = i_j[0]
excute 13:41:28.647897 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:28.650857 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.654859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:41:28.657870 line       556                     i = i_j[0]
excute 13:41:28.661861 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:28.665817 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.668820 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 1)
excute 13:41:28.671832 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:28.675791 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:28.678814 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.682772 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 1)
excute 13:41:28.685798 line       556                     i = i_j[0]
excute 13:41:28.688790 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:28.691781 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.695737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 1)
excute 13:41:28.700757 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:28.704749 line       557                     j = i_j[1]
excute 13:41:28.707705 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.711695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 1)
excute 13:41:28.714717 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:28.718676 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:28.721700 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.725665 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 36
excute 13:41:28.728683 line       560                         if (t_tmp > self.TIME):
excute 13:41:28.732641 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:28.735631 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:28.738624 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:28.742613 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:28.745605 line       569                                     available_vhecles[i][t],
excute 13:41:28.749594 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:28.752587 line       571                                     self.S_capacities[j],
excute 13:41:28.756605 line       572                                     demands[t][i][j],
excute 13:41:28.759597 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 26
calc_contract     13:41:28.762590 call       352     def caluculate_contract(
calc_contract     13:41:28.765585 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:28.766548 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:28.767556 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:28.767556 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:28.768542 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:28.768542 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:28.769539 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. rsf_tmp = 0
excute Modified var:.. rse_tmp = 0
excute 13:41:28.770536 line       575                                 rsf += rsf_tmp
excute 13:41:28.774526 line       576                                 rse += rse_tmp
excute 13:41:28.777551 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 26
move_cars     Starting var:.. t_tmp = 36
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:28.781508 call       388     def move_cars(
move_cars     13:41:28.785497 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:28.786494 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:28.787492 line       399         return available_vhecles
move_cars     13:41:28.789486 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:41:28.791514 line       579                                 success += can_contract
excute Modified var:.. success = 23
excute 13:41:28.795471 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 2)
excute 13:41:28.798494 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:28.803451 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:28.806472 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.810441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 2)
excute 13:41:28.813455 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:28.816449 line       557                     j = i_j[1]
excute 13:41:28.820404 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.823427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 2)
excute 13:41:28.826420 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:28.830379 line       557                     j = i_j[1]
excute 13:41:28.833400 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.836392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 3)
excute 13:41:28.840352 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:28.844340 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:28.847333 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.851354 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 3)
excute 13:41:28.855311 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:28.858301 line       557                     j = i_j[1]
excute 13:41:28.862291 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.865283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 3)
excute 13:41:28.868275 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:28.871299 line       557                     j = i_j[1]
excute 13:41:28.875256 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:28.878249 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 40
excute 13:41:28.882238 line       560                         if (t_tmp > self.TIME):
excute 13:41:28.885230 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:28.888222 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 26
excute 13:41:28.892212 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:28.895207 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 19
excute 13:41:28.898195 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:28.902185 line       555                 for i_j in i_j_list:
excute 13:41:28.907205 line       581             self.write_matrix(
excute 13:41:28.910194 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:28.913186 line       583                 result_file_path,
excute 13:41:28.917179 line       584                 mode='a'
excute 13:41:28.923130 line       488         for t in time_steps:
excute Modified var:.. t = 27
excute 13:41:28.928150 line       489             if (t != self.TIME + 1):
excute 13:41:28.933103 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:28.936096 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:28.939088 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:28.943078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:28.947068 line       494                         if (i == j):
excute 13:41:28.950059 line       495                             continue
excute 13:41:28.954047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:28.957041 line       494                         if (i == j):
excute 13:41:28.960030 line       496                         i_j_list.append((
excute 13:41:28.965052 line       497                             i, j,
excute 13:41:28.968011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:28.973029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:28.979012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:28.982970 line       494                         if (i == j):
excute 13:41:28.986959 line       496                         i_j_list.append((
excute 13:41:28.989953 line       497                             i, j,
excute 13:41:28.994968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:28.997931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:41:29.003945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:29.008901 line       494                         if (i == j):
excute 13:41:29.015881 line       496                         i_j_list.append((
excute 13:41:29.021865 line       497                             i, j,
excute 13:41:29.028847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.037832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:29.044840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:29.048827 line       494                         if (i == j):
excute 13:41:29.052817 line       496                         i_j_list.append((
excute 13:41:29.057777 line       497                             i, j,
excute 13:41:29.064759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.067744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:29.072729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:29.076718 line       494                         if (i == j):
excute 13:41:29.081705 line       496                         i_j_list.append((
excute 13:41:29.084700 line       497                             i, j,
excute 13:41:29.089715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.095703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:41:29.098663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:29.104646 line       494                         if (i == j):
excute 13:41:29.108641 line       496                         i_j_list.append((
excute 13:41:29.112623 line       497                             i, j,
excute 13:41:29.116613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.119603 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:41:29.125622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:29.131575 line       494                         if (i == j):
excute 13:41:29.134566 line       496                         i_j_list.append((
excute 13:41:29.138555 line       497                             i, j,
excute 13:41:29.143544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.149598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:41:29.152516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:29.160555 line       494                         if (i == j):
excute 13:41:29.164484 line       496                         i_j_list.append((
excute 13:41:29.167477 line       497                             i, j,
excute 13:41:29.170470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.173467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:29.176451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:29.180441 line       494                         if (i == j):
excute 13:41:29.184430 line       496                         i_j_list.append((
excute 13:41:29.187421 line       497                             i, j,
excute 13:41:29.190413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.193405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:29.196398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:29.200387 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:29.203379 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:29.206371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:29.210361 line       494                         if (i == j):
excute 13:41:29.216346 line       496                         i_j_list.append((
excute 13:41:29.219369 line       497                             i, j,
excute 13:41:29.222360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.225352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:29.228346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:29.232303 line       494                         if (i == j):
excute 13:41:29.235326 line       495                             continue
excute 13:41:29.238319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:29.242276 line       494                         if (i == j):
excute 13:41:29.245268 line       496                         i_j_list.append((
excute 13:41:29.248291 line       497                             i, j,
excute 13:41:29.251283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.256239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:29.262223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:29.267209 line       494                         if (i == j):
excute 13:41:29.274196 line       496                         i_j_list.append((
excute 13:41:29.280175 line       497                             i, j,
excute 13:41:29.284165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.287155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:29.290178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:29.294138 line       494                         if (i == j):
excute 13:41:29.297160 line       496                         i_j_list.append((
excute 13:41:29.301119 line       497                             i, j,
excute 13:41:29.303148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.307103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:29.310095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:29.313087 line       494                         if (i == j):
excute 13:41:29.317082 line       496                         i_j_list.append((
excute 13:41:29.320099 line       497                             i, j,
excute 13:41:29.323091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.328048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1)]
excute 13:41:29.336027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:29.340015 line       494                         if (i == j):
excute 13:41:29.345002 line       496                         i_j_list.append((
excute 13:41:29.348026 line       497                             i, j,
excute 13:41:29.351020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.355006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0)]
excute 13:41:29.357999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:29.361956 line       494                         if (i == j):
excute 13:41:29.365946 line       496                         i_j_list.append((
excute 13:41:29.368969 line       497                             i, j,
excute 13:41:29.371963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.375950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:41:29.378942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:29.382902 line       494                         if (i == j):
excute 13:41:29.386892 line       496                         i_j_list.append((
excute 13:41:29.392873 line       497                             i, j,
excute 13:41:29.398857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.404841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:29.410826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:29.417807 line       494                         if (i == j):
excute 13:41:29.422793 line       496                         i_j_list.append((
excute 13:41:29.425790 line       497                             i, j,
excute 13:41:29.428777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.431768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:29.434761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:29.437752 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:29.440745 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:29.444734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:29.447727 line       494                         if (i == j):
excute 13:41:29.450718 line       496                         i_j_list.append((
excute 13:41:29.454708 line       497                             i, j,
excute 13:41:29.457732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.460723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0)]
excute 13:41:29.467674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:29.470701 line       494                         if (i == j):
excute 13:41:29.474657 line       496                         i_j_list.append((
excute 13:41:29.479643 line       497                             i, j,
excute 13:41:29.482664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.485656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:41:29.489615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:29.492638 line       494                         if (i == j):
excute 13:41:29.496596 line       495                             continue
excute 13:41:29.499587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:29.503587 line       494                         if (i == j):
excute 13:41:29.506568 line       496                         i_j_list.append((
excute 13:41:29.510558 line       497                             i, j,
excute 13:41:29.513585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.516574 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:41:29.519566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:29.523526 line       494                         if (i == j):
excute 13:41:29.527513 line       496                         i_j_list.append((
excute 13:41:29.530536 line       497                             i, j,
excute 13:41:29.533530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.536521 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:41:29.539514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:29.543503 line       494                         if (i == j):
excute 13:41:29.552753 line       496                         i_j_list.append((
excute 13:41:29.556743 line       497                             i, j,
excute 13:41:29.559735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.562726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1)]
excute 13:41:29.565718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:29.568710 line       494                         if (i == j):
excute 13:41:29.572700 line       496                         i_j_list.append((
excute 13:41:29.575692 line       497                             i, j,
excute 13:41:29.578684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.581675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0)]
excute 13:41:29.584667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:29.588674 line       494                         if (i == j):
excute 13:41:29.592646 line       496                         i_j_list.append((
excute 13:41:29.595637 line       497                             i, j,
excute 13:41:29.598630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.601622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:41:29.604614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:29.607605 line       494                         if (i == j):
excute 13:41:29.611595 line       496                         i_j_list.append((
excute 13:41:29.614587 line       497                             i, j,
excute 13:41:29.618576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.622567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:41:29.626558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:29.629554 line       494                         if (i == j):
excute 13:41:29.632539 line       496                         i_j_list.append((
excute 13:41:29.636530 line       497                             i, j,
excute 13:41:29.639520 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.642512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:41:29.645504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:29.648496 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:29.652487 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:29.655478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:29.658470 line       494                         if (i == j):
excute 13:41:29.662464 line       496                         i_j_list.append((
excute 13:41:29.665451 line       497                             i, j,
excute 13:41:29.668443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.671435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0)]
excute 13:41:29.674427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:29.678417 line       494                         if (i == j):
excute 13:41:29.681409 line       496                         i_j_list.append((
excute 13:41:29.684400 line       497                             i, j,
excute 13:41:29.687392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.690384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:41:29.693377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:29.696368 line       494                         if (i == j):
excute 13:41:29.700371 line       496                         i_j_list.append((
excute 13:41:29.703350 line       497                             i, j,
excute 13:41:29.706342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.709334 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:41:29.712325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:29.716317 line       494                         if (i == j):
excute 13:41:29.719307 line       495                             continue
excute 13:41:29.722299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:29.726290 line       494                         if (i == j):
excute 13:41:29.731277 line       496                         i_j_list.append((
excute 13:41:29.734267 line       497                             i, j,
excute 13:41:29.739255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.743245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:41:29.746235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:29.750226 line       494                         if (i == j):
excute 13:41:29.753217 line       496                         i_j_list.append((
excute 13:41:29.757207 line       497                             i, j,
excute 13:41:29.760200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.763191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1)]
excute 13:41:29.766183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:29.770172 line       494                         if (i == j):
excute 13:41:29.774175 line       496                         i_j_list.append((
excute 13:41:29.777185 line       497                             i, j,
excute 13:41:29.780176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.783139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0)]
excute 13:41:29.786131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:29.790118 line       494                         if (i == j):
excute 13:41:29.794108 line       496                         i_j_list.append((
excute 13:41:29.797100 line       497                             i, j,
excute 13:41:29.800091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.803083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0)]
excute 13:41:29.806075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:29.809067 line       494                         if (i == j):
excute 13:41:29.813058 line       496                         i_j_list.append((
excute 13:41:29.816048 line       497                             i, j,
excute 13:41:29.819040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.822032 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:41:29.825025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:29.829015 line       494                         if (i == j):
excute 13:41:29.834003 line       496                         i_j_list.append((
excute 13:41:29.836993 line       497                             i, j,
excute 13:41:29.839985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.842977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:41:29.845969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:29.849958 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:29.853948 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:29.858934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:29.861940 line       494                         if (i == j):
excute 13:41:29.866927 line       496                         i_j_list.append((
excute 13:41:29.870914 line       497                             i, j,
excute 13:41:29.874891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.882517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0)]
excute 13:41:29.885544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:29.889502 line       494                         if (i == j):
excute 13:41:29.892525 line       496                         i_j_list.append((
excute 13:41:29.895516 line       497                             i, j,
excute 13:41:29.898512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.904494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:41:29.908452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:29.912441 line       494                         if (i == j):
excute 13:41:29.916431 line       496                         i_j_list.append((
excute 13:41:29.920418 line       497                             i, j,
excute 13:41:29.923411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.926434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:41:29.929427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:29.933384 line       494                         if (i == j):
excute 13:41:29.937374 line       496                         i_j_list.append((
excute 13:41:29.940396 line       497                             i, j,
excute 13:41:29.943388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.946383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:29.949372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:29.953332 line       494                         if (i == j):
excute 13:41:29.956354 line       495                             continue
excute 13:41:29.960312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:29.963336 line       494                         if (i == j):
excute 13:41:29.966327 line       496                         i_j_list.append((
excute 13:41:29.969319 line       497                             i, j,
excute 13:41:29.973277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.976269 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1)]
excute 13:41:29.979261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:29.983251 line       494                         if (i == j):
excute 13:41:29.986244 line       496                         i_j_list.append((
excute 13:41:29.990233 line       497                             i, j,
excute 13:41:29.993226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:29.996217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0)]
excute 13:41:29.999209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:30.003198 line       494                         if (i == j):
excute 13:41:30.007187 line       496                         i_j_list.append((
excute 13:41:30.010178 line       497                             i, j,
excute 13:41:30.014169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.018158 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:41:30.021150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:30.025170 line       494                         if (i == j):
excute 13:41:30.029129 line       496                         i_j_list.append((
excute 13:41:30.032151 line       497                             i, j,
excute 13:41:30.036114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.039131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:30.043103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:30.046083 line       494                         if (i == j):
excute 13:41:30.050072 line       496                         i_j_list.append((
excute 13:41:30.053100 line       497                             i, j,
excute 13:41:30.057058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.060044 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:30.063038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:30.066030 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:30.073444 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:30.077437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:30.080460 line       494                         if (i == j):
excute 13:41:30.084426 line       496                         i_j_list.append((
excute 13:41:30.087442 line       497                             i, j,
excute 13:41:30.090403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.093395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0)]
excute 13:41:30.096387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:30.099376 line       494                         if (i == j):
excute 13:41:30.103367 line       496                         i_j_list.append((
excute 13:41:30.106358 line       497                             i, j,
excute 13:41:30.109350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.112342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:41:30.115334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:30.119323 line       494                         if (i == j):
excute 13:41:30.123321 line       496                         i_j_list.append((
excute 13:41:30.126336 line       497                             i, j,
excute 13:41:30.129329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.132320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:41:30.136281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:30.141265 line       494                         if (i == j):
excute 13:41:30.144288 line       496                         i_j_list.append((
excute 13:41:30.147248 line       497                             i, j,
excute 13:41:30.151272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.154263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:30.158219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:30.161213 line       494                         if (i == j):
excute 13:41:30.165202 line       496                         i_j_list.append((
excute 13:41:30.169192 line       497                             i, j,
excute 13:41:30.172184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.175176 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:30.178169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:30.182158 line       494                         if (i == j):
excute 13:41:30.186146 line       495                             continue
excute 13:41:30.188141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:30.192129 line       494                         if (i == j):
excute 13:41:30.195122 line       496                         i_j_list.append((
excute 13:41:30.199115 line       497                             i, j,
excute 13:41:30.202102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.205095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0)]
excute 13:41:30.208086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:30.212108 line       494                         if (i == j):
excute 13:41:30.219057 line       496                         i_j_list.append((
excute 13:41:30.226038 line       497                             i, j,
excute 13:41:30.230027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.234017 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0)]
excute 13:41:30.238009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:30.242028 line       494                         if (i == j):
excute 13:41:30.245986 line       496                         i_j_list.append((
excute 13:41:30.249009 line       497                             i, j,
excute 13:41:30.251999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.255959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:41:30.258983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:30.261974 line       494                         if (i == j):
excute 13:41:30.265933 line       496                         i_j_list.append((
excute 13:41:30.268955 line       497                             i, j,
excute 13:41:30.271947 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.274939 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:30.277931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:30.282886 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:30.285878 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:30.289867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:30.292860 line       494                         if (i == j):
excute 13:41:30.296849 line       496                         i_j_list.append((
excute 13:41:30.299872 line       497                             i, j,
excute 13:41:30.302866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.305858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0)]
excute 13:41:30.309814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:30.316796 line       494                         if (i == j):
excute 13:41:30.320785 line       496                         i_j_list.append((
excute 13:41:30.323778 line       497                             i, j,
excute 13:41:30.333751 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.338738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:41:30.345754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:30.349741 line       494                         if (i == j):
excute 13:41:30.352732 line       496                         i_j_list.append((
excute 13:41:30.357692 line       497                             i, j,
excute 13:41:30.360680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.363673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:41:30.366664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:30.370653 line       494                         if (i == j):
excute 13:41:30.374643 line       496                         i_j_list.append((
excute 13:41:30.378631 line       497                             i, j,
excute 13:41:30.382621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.385614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:41:30.389603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:30.393593 line       494                         if (i == j):
excute 13:41:30.397582 line       496                         i_j_list.append((
excute 13:41:30.401569 line       497                             i, j,
excute 13:41:30.404561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.407585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:41:30.411553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:30.415533 line       494                         if (i == j):
excute 13:41:30.419521 line       496                         i_j_list.append((
excute 13:41:30.422513 line       497                             i, j,
excute 13:41:30.425505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.428497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1)]
excute 13:41:30.431489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:30.435478 line       494                         if (i == j):
excute 13:41:30.438470 line       495                             continue
excute 13:41:30.441462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:30.445452 line       494                         if (i == j):
excute 13:41:30.450440 line       496                         i_j_list.append((
excute 13:41:30.453463 line       497                             i, j,
excute 13:41:30.456422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.460412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0)]
excute 13:41:30.463436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:30.466427 line       494                         if (i == j):
excute 13:41:30.470389 line       496                         i_j_list.append((
excute 13:41:30.473409 line       497                             i, j,
excute 13:41:30.476402 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.480360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:41:30.483352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:30.487342 line       494                         if (i == j):
excute 13:41:30.490334 line       496                         i_j_list.append((
excute 13:41:30.494323 line       497                             i, j,
excute 13:41:30.497315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.500307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:41:30.503299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:30.507289 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:30.510312 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:30.514269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:30.518258 line       494                         if (i == j):
excute 13:41:30.521282 line       496                         i_j_list.append((
excute 13:41:30.525239 line       497                             i, j,
excute 13:41:30.528235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.531254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0)]
excute 13:41:30.534247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:30.538204 line       494                         if (i == j):
excute 13:41:30.542194 line       496                         i_j_list.append((
excute 13:41:30.545185 line       497                             i, j,
excute 13:41:30.548177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.552200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0)]
excute 13:41:30.555191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:30.559150 line       494                         if (i == j):
excute 13:41:30.563138 line       496                         i_j_list.append((
excute 13:41:30.566162 line       497                             i, j,
excute 13:41:30.569154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.572144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0)]
excute 13:41:30.575136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:30.579128 line       494                         if (i == j):
excute 13:41:30.582124 line       496                         i_j_list.append((
excute 13:41:30.585111 line       497                             i, j,
excute 13:41:30.589068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.592073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0)]
excute 13:41:30.595052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:30.598078 line       494                         if (i == j):
excute 13:41:30.602034 line       496                         i_j_list.append((
excute 13:41:30.605056 line       497                             i, j,
excute 13:41:30.608048 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.611041 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0)]
excute 13:41:30.614998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:30.617990 line       494                         if (i == j):
excute 13:41:30.621979 line       496                         i_j_list.append((
excute 13:41:30.624971 line       497                             i, j,
excute 13:41:30.627964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.630955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1)]
excute 13:41:30.634945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:30.638934 line       494                         if (i == j):
excute 13:41:30.641926 line       496                         i_j_list.append((
excute 13:41:30.644918 line       497                             i, j,
excute 13:41:30.647910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.651901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0)]
excute 13:41:30.655920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:30.659912 line       494                         if (i == j):
excute 13:41:30.662872 line       495                             continue
excute 13:41:30.666861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:30.669854 line       494                         if (i == j):
excute 13:41:30.673841 line       496                         i_j_list.append((
excute 13:41:30.676835 line       497                             i, j,
excute 13:41:30.679825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.682816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0)]
excute 13:41:30.685808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:30.688800 line       494                         if (i == j):
excute 13:41:30.692791 line       496                         i_j_list.append((
excute 13:41:30.695814 line       497                             i, j,
excute 13:41:30.699780 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.702795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0)]
excute 13:41:30.705787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:30.709746 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:30.712747 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:30.716760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:30.719718 line       494                         if (i == j):
excute 13:41:30.723710 line       496                         i_j_list.append((
excute 13:41:30.726702 line       497                             i, j,
excute 13:41:30.729693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.732685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0)]
excute 13:41:30.736675 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:30.739664 line       494                         if (i == j):
excute 13:41:30.743654 line       496                         i_j_list.append((
excute 13:41:30.746646 line       497                             i, j,
excute 13:41:30.749638 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.752630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:41:30.757631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:30.760642 line       494                         if (i == j):
excute 13:41:30.764600 line       496                         i_j_list.append((
excute 13:41:30.767622 line       497                             i, j,
excute 13:41:30.770614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.773608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:41:30.777564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:30.780588 line       494                         if (i == j):
excute 13:41:30.784579 line       496                         i_j_list.append((
excute 13:41:30.787569 line       497                             i, j,
excute 13:41:30.790562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.793553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:41:30.796547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:30.800502 line       494                         if (i == j):
excute 13:41:30.803494 line       496                         i_j_list.append((
excute 13:41:30.807485 line       497                             i, j,
excute 13:41:30.809478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.813468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:41:30.816459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:30.819484 line       494                         if (i == j):
excute 13:41:30.823443 line       496                         i_j_list.append((
excute 13:41:30.826465 line       497                             i, j,
excute 13:41:30.829458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.832450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1)]
excute 13:41:30.835441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:30.840399 line       494                         if (i == j):
excute 13:41:30.843390 line       496                         i_j_list.append((
excute 13:41:30.847379 line       497                             i, j,
excute 13:41:30.850371 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.854360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0)]
excute 13:41:30.858349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:30.862336 line       494                         if (i == j):
excute 13:41:30.866326 line       496                         i_j_list.append((
excute 13:41:30.869320 line       497                             i, j,
excute 13:41:30.872312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.876301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:41:30.879291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:30.883281 line       494                         if (i == j):
excute 13:41:30.886273 line       495                             continue
excute 13:41:30.889265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:30.892257 line       494                         if (i == j):
excute 13:41:30.896246 line       496                         i_j_list.append((
excute 13:41:30.899240 line       497                             i, j,
excute 13:41:30.902232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.907218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:41:30.912434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:30.916453 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:30.921003 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:30.923997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:30.927987 line       494                         if (i == j):
excute 13:41:30.930978 line       496                         i_j_list.append((
excute 13:41:30.934968 line       497                             i, j,
excute 13:41:30.937960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.940952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0)]
excute 13:41:30.943943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:30.947935 line       494                         if (i == j):
excute 13:41:30.950925 line       496                         i_j_list.append((
excute 13:41:30.954916 line       497                             i, j,
excute 13:41:30.957908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.961897 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:41:30.967881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:30.971881 line       494                         if (i == j):
excute 13:41:30.975860 line       496                         i_j_list.append((
excute 13:41:30.978851 line       497                             i, j,
excute 13:41:30.981842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:30.984834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:41:30.987826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:30.991816 line       494                         if (i == j):
excute 13:41:30.995807 line       496                         i_j_list.append((
excute 13:41:30.998829 line       497                             i, j,
excute 13:41:31.001821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:31.005779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:41:31.008803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:31.012762 line       494                         if (i == j):
excute 13:41:31.015783 line       496                         i_j_list.append((
excute 13:41:31.019774 line       497                             i, j,
excute 13:41:31.022765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:31.026754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:41:31.029747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:31.033738 line       494                         if (i == j):
excute 13:41:31.036730 line       496                         i_j_list.append((
excute 13:41:31.040686 line       497                             i, j,
excute 13:41:31.043677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:31.046669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1)]
excute 13:41:31.049661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:31.053651 line       494                         if (i == j):
excute 13:41:31.057640 line       496                         i_j_list.append((
excute 13:41:31.060634 line       497                             i, j,
excute 13:41:31.065618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:31.068610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1), (9, 6, 3, 0)]
excute 13:41:31.071602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:31.074594 line       494                         if (i == j):
excute 13:41:31.078601 line       496                         i_j_list.append((
excute 13:41:31.081576 line       497                             i, j,
excute 13:41:31.084568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:31.088559 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:41:31.091550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:31.094542 line       494                         if (i == j):
excute 13:41:31.098545 line       496                         i_j_list.append((
excute 13:41:31.101523 line       497                             i, j,
excute 13:41:31.105512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:31.108505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 1), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 1), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 1), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 1), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 5, 1, 1), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 1), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:41:31.111495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:31.114487 line       494                         if (i == j):
excute 13:41:31.118477 line       495                             continue
excute 13:41:31.121469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:31.124461 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:31.127453 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (0, 5, 0, 1), (2, 5, 0, 1), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 6, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (7, 0, 1, 0), (7, 1, 1, 0), (7, 2, 1, 0), (7, 3, 1, 0), (7, 4, 1, 0), (7, 6, 1, 0), (7, 8, 1, 0), (7, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (3, 5, 1, 1), (7, 5, 1, 1), (8, 5, 1, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (4, 5, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (1, 5, 3, 1), (9, 5, 3, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (6, 5, 4, 1)]
excute 13:41:31.131445 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:31.134435 line       505                     if (self.RELOCATE):
excute 13:41:31.138425 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:31.142417 line       505                     if (self.RELOCATE):
excute 13:41:31.146403 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:31.152387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:31.157374 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:31.162362 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:31.167348 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.171337 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:31.174341 line       556                     i = i_j[0]
excute 13:41:31.179315 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:31.184302 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.189289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:31.193277 line       556                     i = i_j[0]
excute 13:41:31.198265 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:31.202255 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.206243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:31.209235 line       556                     i = i_j[0]
excute 13:41:31.216218 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:31.219208 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.226189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:41:31.233170 line       556                     i = i_j[0]
excute 13:41:31.237161 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:31.240151 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.247133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:31.251123 line       556                     i = i_j[0]
excute 13:41:31.255113 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:31.259101 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.262093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:31.266084 line       556                     i = i_j[0]
excute 13:41:31.272069 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:31.277054 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.286030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:31.289022 line       556                     i = i_j[0]
excute 13:41:31.295007 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:31.298996 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.302985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:41:31.309966 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:31.313957 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:31.319940 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.339886 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:41:31.358836 line       556                     i = i_j[0]
excute 13:41:31.369807 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:31.377785 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.386765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:41:31.394740 line       556                     i = i_j[0]
excute 13:41:31.407705 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:31.414686 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.421679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:41:31.429646 line       556                     i = i_j[0]
excute 13:41:31.437625 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:31.445604 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.453582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:41:31.461561 line       556                     i = i_j[0]
excute 13:41:31.469539 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:31.478516 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.487493 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:41:31.494474 line       556                     i = i_j[0]
excute 13:41:31.502453 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:31.511427 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.520404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:41:31.528382 line       556                     i = i_j[0]
excute 13:41:31.536362 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:31.544340 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.552318 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:41:31.560298 line       556                     i = i_j[0]
excute 13:41:31.568276 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:31.576254 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.584234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:41:31.591215 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:31.599192 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:31.607172 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.616148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 1)
excute 13:41:31.624126 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:31.632106 line       557                     j = i_j[1]
excute 13:41:31.640083 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.647065 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 38
excute 13:41:31.655043 line       560                         if (t_tmp > self.TIME):
excute 13:41:31.664021 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:31.671998 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:31.679976 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:31.687957 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:31.694936 line       569                                     available_vhecles[i][t],
excute 13:41:31.702915 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:31.710896 line       571                                     self.S_capacities[j],
excute 13:41:31.718872 line       572                                     demands[t][i][j],
excute 13:41:31.725854 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 27
calc_contract     13:41:31.734831 call       352     def caluculate_contract(
calc_contract     13:41:31.738820 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:31.739817 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:31.741814 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:31.742810 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:31.743807 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:41:31.744804 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:31.746798 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:41:31.747795 line       575                                 rsf += rsf_tmp
excute 13:41:31.755774 line       576                                 rse += rse_tmp
excute 13:41:31.762756 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 27
move_cars     Starting var:.. t_tmp = 38
move_cars     Starting var:.. can_contract = 1
move_cars     13:41:31.769738 call       388     def move_cars(
move_cars     13:41:31.776721 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:31.778712 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:31.780707 line       399         return available_vhecles
move_cars     13:41:31.782703 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:41:31.784697 line       579                                 success += can_contract
excute Modified var:.. success = 24
excute 13:41:31.790680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:41:31.794670 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:31.798659 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:31.801650 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.805640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:41:31.808632 line       556                     i = i_j[0]
excute 13:41:31.811624 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:31.814617 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.818614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:41:31.822512 line       556                     i = i_j[0]
excute 13:41:31.825506 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:31.828498 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.832489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:41:31.835480 line       556                     i = i_j[0]
excute 13:41:31.839471 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:31.842462 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.845454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 0)
excute 13:41:31.848445 line       556                     i = i_j[0]
excute 13:41:31.852435 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:31.855458 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.859416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:41:31.862439 line       556                     i = i_j[0]
excute 13:41:31.866400 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:31.869423 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.872413 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:41:31.876384 line       556                     i = i_j[0]
excute 13:41:31.879363 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:31.882386 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.886345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:41:31.890368 line       556                     i = i_j[0]
excute 13:41:31.894322 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:31.897314 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.901305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 1, 0)
excute 13:41:31.905293 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:31.908317 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:31.912276 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.916264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 1, 0)
excute 13:41:31.919255 line       556                     i = i_j[0]
excute 13:41:31.922247 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:31.925240 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.929230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 1, 0)
excute 13:41:31.932221 line       556                     i = i_j[0]
excute 13:41:31.935213 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:31.939202 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.942194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 1, 0)
excute 13:41:31.945186 line       556                     i = i_j[0]
excute 13:41:31.949176 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:31.952167 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.955161 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 1, 0)
excute 13:41:31.959150 line       556                     i = i_j[0]
excute 13:41:31.962141 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:31.965165 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.969124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 1, 0)
excute 13:41:31.972146 line       556                     i = i_j[0]
excute 13:41:31.975138 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:31.979130 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.982119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 1, 0)
excute 13:41:31.985112 line       556                     i = i_j[0]
excute 13:41:31.989070 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:31.993062 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:31.996050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 1, 0)
excute 13:41:31.999042 line       556                     i = i_j[0]
excute 13:41:32.003032 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:32.006023 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.011012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:41:32.014033 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:32.017993 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:32.021016 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.024975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:41:32.027997 line       556                     i = i_j[0]
excute 13:41:32.031956 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:32.034946 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.037970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:41:32.041927 line       556                     i = i_j[0]
excute 13:41:32.045950 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:32.049922 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.052898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:41:32.056920 line       556                     i = i_j[0]
excute 13:41:32.059911 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:32.062903 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.066862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:32.069885 line       556                     i = i_j[0]
excute 13:41:32.072877 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:32.076837 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.079859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:41:32.082850 line       556                     i = i_j[0]
excute 13:41:32.086809 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:32.089832 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.093822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:32.097780 line       556                     i = i_j[0]
excute 13:41:32.101768 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:32.104759 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.107751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:41:32.110744 line       556                     i = i_j[0]
excute 13:41:32.114733 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:32.117725 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.120717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 1)
excute 13:41:32.123709 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:32.127699 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:32.131688 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.134679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 1, 1)
excute 13:41:32.137672 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:32.141662 line       557                     j = i_j[1]
excute 13:41:32.144685 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.148675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 1)
excute 13:41:32.151634 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:32.155625 line       557                     j = i_j[1]
excute 13:41:32.158652 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.162606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:32.165630 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:32.168621 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:32.173576 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.177568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:32.181563 line       556                     i = i_j[0]
excute 13:41:32.189533 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:32.192527 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.199507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:32.203496 line       556                     i = i_j[0]
excute 13:41:32.209481 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:32.214491 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.217458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:32.221463 line       556                     i = i_j[0]
excute 13:41:32.224442 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:32.228429 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.233416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:41:32.238403 line       556                     i = i_j[0]
excute 13:41:32.243390 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:32.247380 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.252366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:32.256354 line       556                     i = i_j[0]
excute 13:41:32.262339 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:32.265332 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.269327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:32.272344 line       556                     i = i_j[0]
excute 13:41:32.276302 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:32.279293 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.283316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:32.287273 line       556                     i = i_j[0]
excute 13:41:32.291263 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:32.294285 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.298244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 1)
excute 13:41:32.304228 line       556                     i = i_j[0]
excute 13:41:32.307219 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:32.310211 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.314200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:32.317192 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:32.321181 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:32.325171 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.330171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:32.333150 line       556                     i = i_j[0]
excute 13:41:32.338138 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:32.341130 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.348111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:32.356088 line       556                     i = i_j[0]
excute 13:41:32.363071 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:32.366064 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.373045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:41:32.377065 line       556                     i = i_j[0]
excute 13:41:32.381022 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:32.384045 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.388004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:41:32.391012 line       556                     i = i_j[0]
excute 13:41:32.394986 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:32.398007 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.401966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:41:32.407950 line       556                     i = i_j[0]
excute 13:41:32.411942 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:32.414963 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.418921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:41:32.421944 line       556                     i = i_j[0]
excute 13:41:32.424937 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:32.428894 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.431904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:41:32.434909 line       556                     i = i_j[0]
excute 13:41:32.438899 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:32.441859 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.445851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 3, 0)
excute 13:41:32.448842 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:41:32.453827 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:32.457816 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.466795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 3, 0)
excute 13:41:32.470781 line       556                     i = i_j[0]
excute 13:41:32.474771 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:32.478761 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.481784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 3, 0)
excute 13:41:32.484775 line       556                     i = i_j[0]
excute 13:41:32.488735 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:32.491758 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.495715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 3, 0)
excute 13:41:32.498707 line       556                     i = i_j[0]
excute 13:41:32.502697 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:32.505720 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.511699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 3, 0)
excute 13:41:32.514696 line       556                     i = i_j[0]
excute 13:41:32.517691 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:32.520680 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.524654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 3, 0)
excute 13:41:32.528627 line       556                     i = i_j[0]
excute 13:41:32.531621 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:32.534611 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.538601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 3, 0)
excute 13:41:32.542591 line       556                     i = i_j[0]
excute 13:41:32.546579 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:32.549573 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.554558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 3, 0)
excute 13:41:32.557585 line       556                     i = i_j[0]
excute 13:41:32.561540 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:32.564564 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.568524 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 3, 0)
excute 13:41:32.571544 line       556                     i = i_j[0]
excute 13:41:32.574537 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:32.577527 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.581486 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:41:32.584510 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:32.588472 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:32.591488 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.595449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:41:32.598451 line       556                     i = i_j[0]
excute 13:41:32.601465 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:32.604455 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.608414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:41:32.613400 line       556                     i = i_j[0]
excute 13:41:32.617392 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:32.620413 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.623405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:41:32.627376 line       556                     i = i_j[0]
excute 13:41:32.630385 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:32.634349 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.637371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:41:32.641358 line       556                     i = i_j[0]
excute 13:41:32.644349 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:32.647342 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.651331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:41:32.655288 line       556                     i = i_j[0]
excute 13:41:32.658280 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:32.661272 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.665261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:41:32.668285 line       556                     i = i_j[0]
excute 13:41:32.672244 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:32.675266 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.678259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:41:32.682233 line       556                     i = i_j[0]
excute 13:41:32.685240 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:32.688232 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.692191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 1)
excute 13:41:32.695214 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:32.699172 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:32.702163 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.706163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 1)
excute 13:41:32.709146 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:41:32.712135 line       557                     j = i_j[1]
excute 13:41:32.718120 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.721112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:41:32.724137 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:41:32.728127 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:32.731117 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.735076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:41:32.738098 line       556                     i = i_j[0]
excute 13:41:32.741090 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:32.745049 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.748041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:41:32.751064 line       556                     i = i_j[0]
excute 13:41:32.755022 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:32.758044 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.762005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:41:32.765026 line       556                     i = i_j[0]
excute 13:41:32.768019 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:32.771010 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.774969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:41:32.777991 line       556                     i = i_j[0]
excute 13:41:32.781949 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:32.784941 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.788932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:41:32.791923 line       556                     i = i_j[0]
excute 13:41:32.795912 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:32.798904 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.801896 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:41:32.804888 line       556                     i = i_j[0]
excute 13:41:32.808885 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:32.811869 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.814861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:41:32.818884 line       556                     i = i_j[0]
excute 13:41:32.822841 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:32.825864 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.829838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 1)
excute 13:41:32.832845 line       556                     i = i_j[0]
excute 13:41:32.835838 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:32.839795 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:32.842787 line       555                 for i_j in i_j_list:
excute 13:41:32.845779 line       581             self.write_matrix(
excute 13:41:32.849768 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:41:32.852760 line       583                 result_file_path,
excute 13:41:32.855784 line       584                 mode='a'
excute 13:41:32.861738 line       488         for t in time_steps:
excute Modified var:.. t = 28
excute 13:41:32.866756 line       489             if (t != self.TIME + 1):
excute 13:41:32.872709 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:41:32.876696 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:41:32.880686 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:32.883677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:32.887668 line       494                         if (i == j):
excute 13:41:32.892657 line       495                             continue
excute 13:41:32.896645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:32.901662 line       494                         if (i == j):
excute 13:41:32.905619 line       496                         i_j_list.append((
excute 13:41:32.910608 line       497                             i, j,
excute 13:41:32.915592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:32.921578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:41:32.927599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:32.931551 line       494                         if (i == j):
excute 13:41:32.934543 line       496                         i_j_list.append((
excute 13:41:32.937536 line       497                             i, j,
excute 13:41:32.942523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:32.947538 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:41:32.951497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:32.958478 line       494                         if (i == j):
excute 13:41:32.965460 line       496                         i_j_list.append((
excute 13:41:32.971444 line       497                             i, j,
excute 13:41:32.975433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:32.983431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:41:32.991394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:32.997377 line       494                         if (i == j):
excute 13:41:33.002360 line       496                         i_j_list.append((
excute 13:41:33.005363 line       497                             i, j,
excute 13:41:33.009342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.015358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:41:33.018319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:33.025301 line       494                         if (i == j):
excute 13:41:33.029291 line       496                         i_j_list.append((
excute 13:41:33.032282 line       497                             i, j,
excute 13:41:33.037301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.041258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:41:33.044251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:33.050233 line       494                         if (i == j):
excute 13:41:33.056217 line       496                         i_j_list.append((
excute 13:41:33.062201 line       497                             i, j,
excute 13:41:33.067189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.072175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3)]
excute 13:41:33.078161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:33.085143 line       494                         if (i == j):
excute 13:41:33.089132 line       496                         i_j_list.append((
excute 13:41:33.096128 line       497                             i, j,
excute 13:41:33.099102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.104091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0)]
excute 13:41:33.108078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:33.112068 line       494                         if (i == j):
excute 13:41:33.116057 line       496                         i_j_list.append((
excute 13:41:33.119055 line       497                             i, j,
excute 13:41:33.124035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.130020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:41:33.135038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:33.139031 line       494                         if (i == j):
excute 13:41:33.144019 line       496                         i_j_list.append((
excute 13:41:33.147972 line       497                             i, j,
excute 13:41:33.150964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.156947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:41:33.160939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:33.167918 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:41:33.170911 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:33.175900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:33.181882 line       494                         if (i == j):
excute 13:41:33.185870 line       496                         i_j_list.append((
excute 13:41:33.188863 line       497                             i, j,
excute 13:41:33.193849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.197842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0)]
excute 13:41:33.202858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:33.206814 line       494                         if (i == j):
excute 13:41:33.212799 line       495                             continue
excute 13:41:33.218785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:33.221774 line       494                         if (i == j):
excute 13:41:33.228756 line       496                         i_j_list.append((
excute 13:41:33.234739 line       497                             i, j,
excute 13:41:33.237763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.240754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:41:33.243746 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:33.247704 line       494                         if (i == j):
excute 13:41:33.251695 line       496                         i_j_list.append((
excute 13:41:33.255684 line       497                             i, j,
excute 13:41:33.259682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.263664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:41:33.266654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:33.269645 line       494                         if (i == j):
excute 13:41:33.273635 line       496                         i_j_list.append((
excute 13:41:33.276627 line       497                             i, j,
excute 13:41:33.279620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.282611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:41:33.285603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:33.288595 line       494                         if (i == j):
excute 13:41:33.292617 line       496                         i_j_list.append((
excute 13:41:33.295608 line       497                             i, j,
excute 13:41:33.298600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.301592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:41:33.304583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:33.308543 line       494                         if (i == j):
excute 13:41:33.311568 line       496                         i_j_list.append((
excute 13:41:33.314558 line       497                             i, j,
excute 13:41:33.317549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.320542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3)]
excute 13:41:33.323533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:33.330486 line       494                         if (i == j):
excute 13:41:33.337466 line       496                         i_j_list.append((
excute 13:41:33.340456 line       497                             i, j,
excute 13:41:33.345476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.348467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0)]
excute 13:41:33.351458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:33.355418 line       494                         if (i == j):
excute 13:41:33.359412 line       496                         i_j_list.append((
excute 13:41:33.362397 line       497                             i, j,
excute 13:41:33.365389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.368381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:41:33.371374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:33.375365 line       494                         if (i == j):
excute 13:41:33.379356 line       496                         i_j_list.append((
excute 13:41:33.382344 line       497                             i, j,
excute 13:41:33.385337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.388328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:41:33.391320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:33.395310 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:41:33.398301 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:33.402291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:33.405283 line       494                         if (i == j):
excute 13:41:33.408275 line       496                         i_j_list.append((
excute 13:41:33.411267 line       497                             i, j,
excute 13:41:33.414259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.418251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0)]
excute 13:41:33.422239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:33.425235 line       494                         if (i == j):
excute 13:41:33.429222 line       496                         i_j_list.append((
excute 13:41:33.432212 line       497                             i, j,
excute 13:41:33.434237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.439224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:41:33.442217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:33.446174 line       494                         if (i == j):
excute 13:41:33.450164 line       495                             continue
excute 13:41:33.453188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:33.456179 line       494                         if (i == j):
excute 13:41:33.460137 line       496                         i_j_list.append((
excute 13:41:33.463162 line       497                             i, j,
excute 13:41:33.466152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.469144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:41:33.472136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:33.476128 line       494                         if (i == j):
excute 13:41:33.479117 line       496                         i_j_list.append((
excute 13:41:33.482110 line       497                             i, j,
excute 13:41:33.485103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.488093 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:41:33.492052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:33.495043 line       494                         if (i == j):
excute 13:41:33.498067 line       496                         i_j_list.append((
excute 13:41:33.501061 line       497                             i, j,
excute 13:41:33.504051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.508008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:41:33.511034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:33.514991 line       494                         if (i == j):
excute 13:41:33.518014 line       496                         i_j_list.append((
excute 13:41:33.521005 line       497                             i, j,
excute 13:41:33.523997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.527955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3)]
excute 13:41:33.530947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:33.533939 line       494                         if (i == j):
excute 13:41:33.537930 line       496                         i_j_list.append((
excute 13:41:33.543933 line       497                             i, j,
excute 13:41:33.546936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.549934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0)]
excute 13:41:33.552920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:33.556891 line       494                         if (i == j):
excute 13:41:33.559903 line       496                         i_j_list.append((
excute 13:41:33.562893 line       497                             i, j,
excute 13:41:33.565886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.568877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:41:33.571869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:33.575840 line       494                         if (i == j):
excute 13:41:33.578851 line       496                         i_j_list.append((
excute 13:41:33.581844 line       497                             i, j,
excute 13:41:33.584835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.588794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:41:33.591785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:33.595774 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:41:33.598765 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:33.601758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:33.604750 line       494                         if (i == j):
excute 13:41:33.608745 line       496                         i_j_list.append((
excute 13:41:33.611731 line       497                             i, j,
excute 13:41:33.614723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.617715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0)]
excute 13:41:33.620707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:33.623699 line       494                         if (i == j):
excute 13:41:33.627700 line       496                         i_j_list.append((
excute 13:41:33.630680 line       497                             i, j,
excute 13:41:33.633672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.636664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0)]
excute 13:41:33.641672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:33.646640 line       494                         if (i == j):
excute 13:41:33.650642 line       496                         i_j_list.append((
excute 13:41:33.653621 line       497                             i, j,
excute 13:41:33.657610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.661599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0)]
excute 13:41:33.665587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:33.668581 line       494                         if (i == j):
excute 13:41:33.672568 line       495                             continue
excute 13:41:33.675560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:33.678552 line       494                         if (i == j):
excute 13:41:33.681544 line       496                         i_j_list.append((
excute 13:41:33.684536 line       497                             i, j,
excute 13:41:33.687528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.690520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0)]
excute 13:41:33.693512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:33.697502 line       494                         if (i == j):
excute 13:41:33.700493 line       496                         i_j_list.append((
excute 13:41:33.703517 line       497                             i, j,
excute 13:41:33.706509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.709502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0)]
excute 13:41:33.713494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:33.716483 line       494                         if (i == j):
excute 13:41:33.720448 line       496                         i_j_list.append((
excute 13:41:33.723464 line       497                             i, j,
excute 13:41:33.726459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.729448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3)]
excute 13:41:33.732441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:33.736399 line       494                         if (i == j):
excute 13:41:33.739423 line       496                         i_j_list.append((
excute 13:41:33.742415 line       497                             i, j,
excute 13:41:33.746372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.750394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0)]
excute 13:41:33.753384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:33.757343 line       494                         if (i == j):
excute 13:41:33.760367 line       496                         i_j_list.append((
excute 13:41:33.763357 line       497                             i, j,
excute 13:41:33.766351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.769341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0)]
excute 13:41:33.772333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:33.776312 line       494                         if (i == j):
excute 13:41:33.780283 line       496                         i_j_list.append((
excute 13:41:33.786265 line       497                             i, j,
excute 13:41:33.789256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.795242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0)]
excute 13:41:33.799231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:33.806211 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:41:33.813193 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:33.817215 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:33.820173 line       494                         if (i == j):
excute 13:41:33.823198 line       496                         i_j_list.append((
excute 13:41:33.826189 line       497                             i, j,
excute 13:41:33.829182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.832174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0)]
excute 13:41:33.835167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:33.839125 line       494                         if (i == j):
excute 13:41:33.843113 line       496                         i_j_list.append((
excute 13:41:33.846104 line       497                             i, j,
excute 13:41:33.850096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.853118 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:41:33.857107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:33.860067 line       494                         if (i == j):
excute 13:41:33.864057 line       496                         i_j_list.append((
excute 13:41:33.867049 line       497                             i, j,
excute 13:41:33.870040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.873032 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:41:33.876024 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:33.880014 line       494                         if (i == j):
excute 13:41:33.883019 line       496                         i_j_list.append((
excute 13:41:33.885998 line       497                             i, j,
excute 13:41:33.892985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.895973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:41:33.902954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:33.905947 line       494                         if (i == j):
excute 13:41:33.909968 line       495                             continue
excute 13:41:33.912958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:33.915950 line       494                         if (i == j):
excute 13:41:33.922900 line       496                         i_j_list.append((
excute 13:41:33.925923 line       497                             i, j,
excute 13:41:33.928914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.931907 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:41:33.934898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:33.938857 line       494                         if (i == j):
excute 13:41:33.941880 line       496                         i_j_list.append((
excute 13:41:33.945839 line       497                             i, j,
excute 13:41:33.948863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.951823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3)]
excute 13:41:33.955843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:33.958834 line       494                         if (i == j):
excute 13:41:33.965786 line       496                         i_j_list.append((
excute 13:41:33.969775 line       497                             i, j,
excute 13:41:33.972766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.975791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0)]
excute 13:41:33.978782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:33.982741 line       494                         if (i == j):
excute 13:41:33.985763 line       496                         i_j_list.append((
excute 13:41:33.988755 line       497                             i, j,
excute 13:41:33.992746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:33.995736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:41:33.998728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:34.002687 line       494                         if (i == j):
excute 13:41:34.007673 line       496                         i_j_list.append((
excute 13:41:34.013658 line       497                             i, j,
excute 13:41:34.016649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.019641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:41:34.022633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:34.026622 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:41:34.029614 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:34.033603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:34.036595 line       494                         if (i == j):
excute 13:41:34.040586 line       496                         i_j_list.append((
excute 13:41:34.043576 line       497                             i, j,
excute 13:41:34.046569 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.049560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0)]
excute 13:41:34.052553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:34.057540 line       494                         if (i == j):
excute 13:41:34.061529 line       496                         i_j_list.append((
excute 13:41:34.064520 line       497                             i, j,
excute 13:41:34.067513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.070504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0)]
excute 13:41:34.073496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:34.076504 line       494                         if (i == j):
excute 13:41:34.079481 line       496                         i_j_list.append((
excute 13:41:34.082473 line       497                             i, j,
excute 13:41:34.086461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.089454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0)]
excute 13:41:34.092445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:34.095438 line       494                         if (i == j):
excute 13:41:34.099435 line       496                         i_j_list.append((
excute 13:41:34.102419 line       497                             i, j,
excute 13:41:34.105411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.108403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0)]
excute 13:41:34.111395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:34.114387 line       494                         if (i == j):
excute 13:41:34.118377 line       496                         i_j_list.append((
excute 13:41:34.121368 line       497                             i, j,
excute 13:41:34.124361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.127352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0)]
excute 13:41:34.130345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:34.134335 line       494                         if (i == j):
excute 13:41:34.137334 line       495                             continue
excute 13:41:34.140318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:34.143310 line       494                         if (i == j):
excute 13:41:34.147300 line       496                         i_j_list.append((
excute 13:41:34.150292 line       497                             i, j,
excute 13:41:34.153283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.157274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3)]
excute 13:41:34.161263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:34.164254 line       494                         if (i == j):
excute 13:41:34.168244 line       496                         i_j_list.append((
excute 13:41:34.171236 line       497                             i, j,
excute 13:41:34.174259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.177251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0)]
excute 13:41:34.180243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:34.184227 line       494                         if (i == j):
excute 13:41:34.187224 line       496                         i_j_list.append((
excute 13:41:34.190216 line       497                             i, j,
excute 13:41:34.193208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.196201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0)]
excute 13:41:34.199192 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:34.203152 line       494                         if (i == j):
excute 13:41:34.207140 line       496                         i_j_list.append((
excute 13:41:34.210164 line       497                             i, j,
excute 13:41:34.213156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.216147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0)]
excute 13:41:34.220105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:34.223097 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:41:34.227091 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:34.231077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:34.234099 line       494                         if (i == j):
excute 13:41:34.237092 line       496                         i_j_list.append((
excute 13:41:34.240082 line       497                             i, j,
excute 13:41:34.243078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.246067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0)]
excute 13:41:34.250025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:34.253017 line       494                         if (i == j):
excute 13:41:34.257006 line       496                         i_j_list.append((
excute 13:41:34.260998 line       497                             i, j,
excute 13:41:34.264018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.267012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:41:34.270970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:34.273988 line       494                         if (i == j):
excute 13:41:34.277951 line       496                         i_j_list.append((
excute 13:41:34.280977 line       497                             i, j,
excute 13:41:34.283966 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.286960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:41:34.289950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:34.293913 line       494                         if (i == j):
excute 13:41:34.297898 line       496                         i_j_list.append((
excute 13:41:34.300889 line       497                             i, j,
excute 13:41:34.303909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.306905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:41:34.309896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:34.312889 line       494                         if (i == j):
excute 13:41:34.316855 line       496                         i_j_list.append((
excute 13:41:34.319870 line       497                             i, j,
excute 13:41:34.322861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.326821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:41:34.334802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:34.341781 line       494                         if (i == j):
excute 13:41:34.346800 line       496                         i_j_list.append((
excute 13:41:34.349790 line       497                             i, j,
excute 13:41:34.352782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.355775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:41:34.359764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:34.365726 line       494                         if (i == j):
excute 13:41:34.368739 line       495                             continue
excute 13:41:34.372720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:34.375701 line       494                         if (i == j):
excute 13:41:34.379677 line       496                         i_j_list.append((
excute 13:41:34.382670 line       497                             i, j,
excute 13:41:34.386659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.389651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:41:34.392643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:34.395635 line       494                         if (i == j):
excute 13:41:34.399624 line       496                         i_j_list.append((
excute 13:41:34.402617 line       497                             i, j,
excute 13:41:34.405609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.409601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:41:34.412623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:34.415614 line       494                         if (i == j):
excute 13:41:34.423562 line       496                         i_j_list.append((
excute 13:41:34.426553 line       497                             i, j,
excute 13:41:34.429545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.432537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:41:34.435529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:34.442512 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:41:34.446501 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:34.451497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:34.456473 line       494                         if (i == j):
excute 13:41:34.459464 line       496                         i_j_list.append((
excute 13:41:34.463456 line       497                             i, j,
excute 13:41:34.468441 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.471433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0)]
excute 13:41:34.474425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:34.477416 line       494                         if (i == j):
excute 13:41:34.481406 line       496                         i_j_list.append((
excute 13:41:34.484398 line       497                             i, j,
excute 13:41:34.487390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.490382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:41:34.493374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:34.496366 line       494                         if (i == j):
excute 13:41:34.500356 line       496                         i_j_list.append((
excute 13:41:34.503347 line       497                             i, j,
excute 13:41:34.506339 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.510330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:41:34.513321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:34.516313 line       494                         if (i == j):
excute 13:41:34.520303 line       496                         i_j_list.append((
excute 13:41:34.523294 line       497                             i, j,
excute 13:41:34.526286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.529278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:41:34.533267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:34.540251 line       494                         if (i == j):
excute 13:41:34.545238 line       496                         i_j_list.append((
excute 13:41:34.548229 line       497                             i, j,
excute 13:41:34.551219 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.554213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:41:34.557203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:34.561194 line       494                         if (i == j):
excute 13:41:34.565184 line       496                         i_j_list.append((
excute 13:41:34.568176 line       497                             i, j,
excute 13:41:34.572164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.575166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:41:34.578149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:34.581142 line       494                         if (i == j):
excute 13:41:34.585129 line       496                         i_j_list.append((
excute 13:41:34.588123 line       497                             i, j,
excute 13:41:34.591145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.594137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3)]
excute 13:41:34.597129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:34.601098 line       494                         if (i == j):
excute 13:41:34.604087 line       495                             continue
excute 13:41:34.607102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:34.610094 line       494                         if (i == j):
excute 13:41:34.614052 line       496                         i_j_list.append((
excute 13:41:34.617046 line       497                             i, j,
excute 13:41:34.620067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.623059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0)]
excute 13:41:34.627018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:34.630022 line       494                         if (i == j):
excute 13:41:34.633032 line       496                         i_j_list.append((
excute 13:41:34.637022 line       497                             i, j,
excute 13:41:34.640014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.643007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:41:34.645998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:34.649957 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:41:34.652979 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:41:34.656938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:34.659960 line       494                         if (i == j):
excute 13:41:34.662953 line       496                         i_j_list.append((
excute 13:41:34.666943 line       497                             i, j,
excute 13:41:34.669907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.673891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0)]
excute 13:41:34.676883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:34.679876 line       494                         if (i == j):
excute 13:41:34.683864 line       496                         i_j_list.append((
excute 13:41:34.686857 line       497                             i, j,
excute 13:41:34.689849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.692841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:41:34.696831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:34.699822 line       494                         if (i == j):
excute 13:41:34.703812 line       496                         i_j_list.append((
excute 13:41:34.706803 line       497                             i, j,
excute 13:41:34.709795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.712788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:41:34.716778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:34.719807 line       494                         if (i == j):
excute 13:41:34.723760 line       496                         i_j_list.append((
excute 13:41:34.726782 line       497                             i, j,
excute 13:41:34.729773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.732767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:41:34.735758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:34.739716 line       494                         if (i == j):
excute 13:41:34.742739 line       496                         i_j_list.append((
excute 13:41:34.746698 line       497                             i, j,
excute 13:41:34.749689 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.752713 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:41:34.755705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:34.759695 line       494                         if (i == j):
excute 13:41:34.762687 line       496                         i_j_list.append((
excute 13:41:34.765679 line       497                             i, j,
excute 13:41:34.768670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.772629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:41:34.776619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:34.780606 line       494                         if (i == j):
excute 13:41:34.783598 line       496                         i_j_list.append((
excute 13:41:34.786590 line       497                             i, j,
excute 13:41:34.790580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.793571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3)]
excute 13:41:34.796564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:34.799555 line       494                         if (i == j):
excute 13:41:34.803545 line       496                         i_j_list.append((
excute 13:41:34.806536 line       497                             i, j,
excute 13:41:34.809528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.812521 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0)]
excute 13:41:34.815512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:34.818505 line       494                         if (i == j):
excute 13:41:34.822495 line       495                             continue
excute 13:41:34.825486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:34.828478 line       494                         if (i == j):
excute 13:41:34.831470 line       496                         i_j_list.append((
excute 13:41:34.834462 line       497                             i, j,
excute 13:41:34.837454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.841444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:41:34.844436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:34.847460 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:41:34.850452 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:41:34.854409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:41:34.858399 line       494                         if (i == j):
excute 13:41:34.862388 line       496                         i_j_list.append((
excute 13:41:34.865406 line       497                             i, j,
excute 13:41:34.868403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.871395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0)]
excute 13:41:34.875355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:41:34.879342 line       494                         if (i == j):
excute 13:41:34.882334 line       496                         i_j_list.append((
excute 13:41:34.885326 line       497                             i, j,
excute 13:41:34.888318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.891310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:41:34.894302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:41:34.898292 line       494                         if (i == j):
excute 13:41:34.902281 line       496                         i_j_list.append((
excute 13:41:34.905284 line       497                             i, j,
excute 13:41:34.908277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.911257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:41:34.914249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:41:34.918240 line       494                         if (i == j):
excute 13:41:34.922228 line       496                         i_j_list.append((
excute 13:41:34.925220 line       497                             i, j,
excute 13:41:34.928211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.931204 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:41:34.934196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:41:34.938185 line       494                         if (i == j):
excute 13:41:34.941177 line       496                         i_j_list.append((
excute 13:41:34.944169 line       497                             i, j,
excute 13:41:34.947161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.950153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:41:34.954143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:41:34.957134 line       494                         if (i == j):
excute 13:41:34.961125 line       496                         i_j_list.append((
excute 13:41:34.964115 line       497                             i, j,
excute 13:41:34.967108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.971099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:41:34.974089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:41:34.979078 line       494                         if (i == j):
excute 13:41:34.982069 line       496                         i_j_list.append((
excute 13:41:34.985060 line       497                             i, j,
excute 13:41:34.989049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:34.992040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 3)]
excute 13:41:34.995033 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:41:34.998024 line       494                         if (i == j):
excute 13:41:35.008607 line       496                         i_j_list.append((
excute 13:41:35.012596 line       497                             i, j,
excute 13:41:35.016585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:35.020575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 3), (9, 7, 3, 0)]
excute 13:41:35.023566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:41:35.028588 line       494                         if (i == j):
excute 13:41:35.031577 line       496                         i_j_list.append((
excute 13:41:35.034567 line       497                             i, j,
excute 13:41:35.038556 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:41:35.041549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 3), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 3), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 3), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 6, 1, 3), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 3), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 6, 3, 3), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 3), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 3), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 3), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:41:35.045507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:41:35.048531 line       494                         if (i == j):
excute 13:41:35.052523 line       495                             continue
excute 13:41:35.055514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:41:35.059471 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:41:35.062469 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 6, 0, 3), (7, 6, 0, 3), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 1, 0), (3, 1, 1, 0), (3, 2, 1, 0), (3, 4, 1, 0), (3, 5, 1, 0), (3, 7, 1, 0), (3, 8, 1, 0), (3, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (2, 6, 1, 3), (3, 6, 1, 3), (8, 6, 1, 3), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (4, 6, 2, 3), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (5, 0, 3, 0), (5, 1, 3, 0), (5, 2, 3, 0), (5, 3, 3, 0), (5, 4, 3, 0), (5, 7, 3, 0), (5, 8, 3, 0), (5, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (1, 6, 3, 3), (5, 6, 3, 3), (9, 6, 3, 3), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:41:35.065484 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:41:35.068478 line       505                     if (self.RELOCATE):
excute 13:41:35.072436 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:41:35.075457 line       505                     if (self.RELOCATE):
excute 13:41:35.079416 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:41:35.083436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:41:35.086428 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:35.090419 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:35.094376 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.100359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:41:35.104348 line       556                     i = i_j[0]
excute 13:41:35.109336 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:35.114322 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.120309 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:41:35.123298 line       556                     i = i_j[0]
excute 13:41:35.127288 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:35.131279 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.134268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:41:35.138257 line       556                     i = i_j[0]
excute 13:41:35.141249 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:35.144242 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.148231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:41:35.151223 line       556                     i = i_j[0]
excute 13:41:35.155213 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:35.158205 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.161197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:41:35.165186 line       556                     i = i_j[0]
excute 13:41:35.168177 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:35.171170 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.175159 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:41:35.178151 line       556                     i = i_j[0]
excute 13:41:35.182141 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:35.186162 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.189153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:41:35.192145 line       556                     i = i_j[0]
excute 13:41:35.196104 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:35.199129 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.203085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:41:35.206077 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:35.210066 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:35.217049 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.220041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:41:35.224030 line       556                     i = i_j[0]
excute 13:41:35.228017 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:35.232008 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.235013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:41:35.237991 line       556                     i = i_j[0]
excute 13:41:35.241981 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:35.244973 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.247965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:41:35.250956 line       556                     i = i_j[0]
excute 13:41:35.254946 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:35.257937 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.261928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:41:35.264919 line       556                     i = i_j[0]
excute 13:41:35.267912 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:35.271901 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.274905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:41:35.277885 line       556                     i = i_j[0]
excute 13:41:35.281875 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:35.284867 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.289860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:41:35.292844 line       556                     i = i_j[0]
excute 13:41:35.296835 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:35.299827 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.302818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:41:35.305810 line       556                     i = i_j[0]
excute 13:41:35.309799 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:35.312791 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.315783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 3)
excute 13:41:35.318775 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:41:35.322766 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:35.325756 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.334734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 3)
excute 13:41:35.339721 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:41:35.344707 line       557                     j = i_j[1]
excute 13:41:35.348696 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.351687 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:41:35.355678 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:35.359666 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:35.363657 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.366648 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:41:35.369644 line       556                     i = i_j[0]
excute 13:41:35.373629 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:35.376625 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.380609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:41:35.383633 line       556                     i = i_j[0]
excute 13:41:35.388590 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:35.391583 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.395570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:41:35.399562 line       556                     i = i_j[0]
excute 13:41:35.403549 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:35.406542 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.410532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:41:35.415520 line       556                     i = i_j[0]
excute 13:41:35.418512 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:35.422500 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.426490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:41:35.430511 line       556                     i = i_j[0]
excute 13:41:35.434467 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:35.437459 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.440451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:41:35.443476 line       556                     i = i_j[0]
excute 13:41:35.447466 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:35.450425 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.455443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:41:35.458402 line       556                     i = i_j[0]
excute 13:41:35.463392 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:35.468377 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.471369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 1, 0)
excute 13:41:35.475358 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:35.479347 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:35.483337 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.486362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 1, 0)
excute 13:41:35.490320 line       556                     i = i_j[0]
excute 13:41:35.495304 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:35.498295 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.501287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 1, 0)
excute 13:41:35.505277 line       556                     i = i_j[0]
excute 13:41:35.509266 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:35.512290 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.516261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 1, 0)
excute 13:41:35.519271 line       556                     i = i_j[0]
excute 13:41:35.522263 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:35.526230 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.530213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 1, 0)
excute 13:41:35.533204 line       556                     i = i_j[0]
excute 13:41:35.536196 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:35.540185 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.545171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 1, 0)
excute 13:41:35.548163 line       556                     i = i_j[0]
excute 13:41:35.555144 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:35.558138 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.566114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 1, 0)
excute 13:41:35.572100 line       556                     i = i_j[0]
excute 13:41:35.576088 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:35.579081 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.583068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 1, 0)
excute 13:41:35.587061 line       556                     i = i_j[0]
excute 13:41:35.592049 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:35.595038 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.598029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:41:35.601022 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:35.605012 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:35.609010 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.611993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:41:35.614984 line       556                     i = i_j[0]
excute 13:41:35.618980 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:35.621967 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.624959 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:41:35.628948 line       556                     i = i_j[0]
excute 13:41:35.631941 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:35.635927 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.639918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:41:35.643907 line       556                     i = i_j[0]
excute 13:41:35.650888 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:35.654876 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.661864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:41:35.668840 line       556                     i = i_j[0]
excute 13:41:35.675822 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:41:35.678814 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.683800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:41:35.686791 line       556                     i = i_j[0]
excute 13:41:35.689785 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:35.693775 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.697765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:41:35.700757 line       556                     i = i_j[0]
excute 13:41:35.703749 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:35.707738 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.710727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:41:35.714717 line       556                     i = i_j[0]
excute 13:41:35.719708 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:35.723696 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.726686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 3)
excute 13:41:35.730682 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:41:35.733666 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:35.737658 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.741645 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 40
excute 13:41:35.744636 line       560                         if (t_tmp > self.TIME):
excute 13:41:35.749624 line       563                             if (available_vhecles[i][t] == 0):
excute 13:41:35.753615 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:41:35.756607 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:41:35.760595 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:41:35.763588 line       569                                     available_vhecles[i][t],
excute 13:41:35.766580 line       570                                     available_vhecles[j][t_tmp],
excute 13:41:35.769572 line       571                                     self.S_capacities[j],
excute 13:41:35.772564 line       572                                     demands[t][i][j],
excute 13:41:35.776553 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 28
calc_contract     13:41:35.779546 call       352     def caluculate_contract(
calc_contract     13:41:35.782536 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:41:35.783535 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:41:35.784533 line       362         if (available_vhecles_start >= demand):
calc_contract     13:41:35.785530 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:41:35.785530 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 2
calc_contract     13:41:35.786525 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 1
calc_contract     13:41:35.787523 line       385         return [can_contract, rsf, rse]
calc_contract     13:41:35.787523 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 1]
excute Modified var:.. can_contract = 2
excute Modified var:.. rse_tmp = 1
excute 13:41:35.788520 line       575                                 rsf += rsf_tmp
excute 13:41:35.792509 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 27
excute 13:41:35.796500 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 28
move_cars     Starting var:.. t_tmp = 40
move_cars     Starting var:.. can_contract = 2
move_cars     13:41:35.801500 call       388     def move_cars(
move_cars     13:41:35.805477 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:41:35.806474 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:41:35.808468 line       399         return available_vhecles
move_cars     13:41:35.809466 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:41:35.811461 line       579                                 success += can_contract
excute Modified var:.. success = 26
excute 13:41:35.815449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 1, 3)
excute 13:41:35.819439 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:41:35.823427 line       557                     j = i_j[1]
excute 13:41:35.827419 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.830410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 3)
excute 13:41:35.833402 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:41:35.837390 line       557                     j = i_j[1]
excute 13:41:35.840383 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.843375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:41:35.846367 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:41:35.850356 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:35.855342 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.858334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:41:35.861325 line       556                     i = i_j[0]
excute 13:41:35.864317 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:41:35.867309 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.871299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:41:35.874290 line       556                     i = i_j[0]
excute 13:41:35.877282 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:35.880274 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.884264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:41:35.887257 line       556                     i = i_j[0]
excute 13:41:35.890249 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:35.893240 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.897231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:41:35.902216 line       556                     i = i_j[0]
excute 13:41:35.906206 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:41:35.909198 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.912190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:41:35.916179 line       556                     i = i_j[0]
excute 13:41:35.919171 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:41:35.923162 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.926154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:41:35.930143 line       556                     i = i_j[0]
excute 13:41:35.933135 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:41:35.937124 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.941112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:41:35.944104 line       556                     i = i_j[0]
excute 13:41:35.947097 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:41:35.950090 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.955104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 3)
excute 13:41:35.958068 line       556                     i = i_j[0]
excute 13:41:35.964084 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:41:35.967110 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.971070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:41:35.974091 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:41:35.978051 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:41:35.981076 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.985032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:41:35.988054 line       556                     i = i_j[0]
excute 13:41:35.991045 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:41:35.995004 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:35.997996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:41:36.001019 line       556                     i = i_j[0]
excute 13:41:36.005976 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:41:36.009995 line       558                     if (i != j and demands[t][i][j]):
excute 13:41:36.013955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)