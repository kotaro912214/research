excute 13:49:16.048191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:49:16.052179 line       556                     i = i_j[0]
excute 13:49:16.056170 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:16.059161 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.063150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:49:16.067141 line       556                     i = i_j[0]
excute 13:49:16.071139 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:16.074121 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.078111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:49:16.081102 line       556                     i = i_j[0]
excute 13:49:16.085091 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:16.090079 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.094075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:49:16.097060 line       556                     i = i_j[0]
excute 13:49:16.101049 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:16.104041 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.108031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:49:16.111022 line       556                     i = i_j[0]
excute 13:49:16.115011 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:16.118004 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.121993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:49:16.125984 line       556                     i = i_j[0]
excute 13:49:16.128974 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:16.132963 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.136954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:49:16.139946 line       556                     i = i_j[0]
excute 13:49:16.143934 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:16.147923 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.151921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:49:16.154905 line       556                     i = i_j[0]
excute 13:49:16.158894 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:16.162884 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.166882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:16.169865 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:16.173855 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:16.177845 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.181835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:16.184825 line       556                     i = i_j[0]
excute 13:49:16.188815 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:16.193801 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.196793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:16.200783 line       556                     i = i_j[0]
excute 13:49:16.204773 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:16.207764 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.211754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:16.215744 line       556                     i = i_j[0]
excute 13:49:16.219732 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:16.223721 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.227713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:16.230704 line       556                     i = i_j[0]
excute 13:49:16.234694 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:16.238683 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.242672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:16.246662 line       556                     i = i_j[0]
excute 13:49:16.250651 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:16.254640 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.259627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:16.262619 line       556                     i = i_j[0]
excute 13:49:16.266608 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:16.270597 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.275585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:16.279574 line       556                     i = i_j[0]
excute 13:49:16.283564 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:16.286555 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.291543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:16.295531 line       556                     i = i_j[0]
excute 13:49:16.299552 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:16.303542 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.306532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:16.310521 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:16.314480 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:16.318501 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.322491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:16.326448 line       556                     i = i_j[0]
excute 13:49:16.337419 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:16.342404 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.348404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:16.355381 line       556                     i = i_j[0]
excute 13:49:16.362355 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:16.368335 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.373330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:16.378308 line       556                     i = i_j[0]
excute 13:49:16.383295 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:16.391273 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.396262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:16.402244 line       556                     i = i_j[0]
excute 13:49:16.407232 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:16.411223 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.416208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:16.420200 line       556                     i = i_j[0]
excute 13:49:16.428175 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:16.438148 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.443143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:16.447127 line       556                     i = i_j[0]
excute 13:49:16.456102 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:16.460093 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.468070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:16.475051 line       556                     i = i_j[0]
excute 13:49:16.485024 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:16.492005 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.503974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:16.510954 line       556                     i = i_j[0]
excute 13:49:16.517936 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:16.523920 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.529903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:49:16.534889 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:16.541871 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:16.550847 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.556832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:49:16.561818 line       556                     i = i_j[0]
excute 13:49:16.567802 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:16.575781 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.580769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:49:16.588745 line       556                     i = i_j[0]
excute 13:49:16.594730 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:16.599717 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.606699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:49:16.613681 line       556                     i = i_j[0]
excute 13:49:16.619664 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:16.624650 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.631632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:49:16.638613 line       556                     i = i_j[0]
excute 13:49:16.644597 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:16.651577 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.660555 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:49:16.666538 line       556                     i = i_j[0]
excute 13:49:16.673519 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:16.679506 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.688480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:49:16.693465 line       556                     i = i_j[0]
excute 13:49:16.701445 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:16.709423 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.720395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:49:16.728373 line       556                     i = i_j[0]
excute 13:49:16.735355 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:16.744330 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.753306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:49:16.761285 line       556                     i = i_j[0]
excute 13:49:16.770261 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:16.776246 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.784223 line       555                 for i_j in i_j_list:
excute 13:49:16.793199 line       581             self.write_matrix(
excute 13:49:16.798186 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:16.805167 line       583                 result_file_path,
excute 13:49:16.813146 line       584                 mode='a'
excute 13:49:16.819131 line       488         for t in time_steps:
excute Modified var:.. t = 141
excute 13:49:16.823119 line       489             if (t != self.TIME + 1):
excute 13:49:16.828108 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:16.834090 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:16.840075 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:16.844065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:16.851046 line       494                         if (i == j):
excute 13:49:16.856034 line       495                             continue
excute 13:49:16.860021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:16.866004 line       494                         if (i == j):
excute 13:49:16.870993 line       496                         i_j_list.append((
excute 13:49:16.874981 line       497                             i, j,
excute 13:49:16.879970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:16.889951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:49:16.895926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:16.899916 line       494                         if (i == j):
excute 13:49:16.904902 line       496                         i_j_list.append((
excute 13:49:16.908891 line       497                             i, j,
excute 13:49:16.914875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:16.920859 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:49:16.923851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:16.930832 line       494                         if (i == j):
excute 13:49:16.936816 line       496                         i_j_list.append((
excute 13:49:16.940806 line       497                             i, j,
excute 13:49:16.946791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:16.952775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:16.956763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:16.964742 line       494                         if (i == j):
excute 13:49:16.968731 line       496                         i_j_list.append((
excute 13:49:16.971722 line       497                             i, j,
excute 13:49:16.975711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:16.979702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:49:16.983690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:16.987680 line       494                         if (i == j):
excute 13:49:16.991669 line       496                         i_j_list.append((
excute 13:49:16.995659 line       497                             i, j,
excute 13:49:16.999647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.003637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:49:17.006629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:17.011617 line       494                         if (i == j):
excute 13:49:17.015606 line       496                         i_j_list.append((
excute 13:49:17.019594 line       497                             i, j,
excute 13:49:17.022586 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.026576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:49:17.029567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:17.033558 line       494                         if (i == j):
excute 13:49:17.036548 line       496                         i_j_list.append((
excute 13:49:17.040538 line       497                             i, j,
excute 13:49:17.043530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.046522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:49:17.050512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:17.054501 line       494                         if (i == j):
excute 13:49:17.058491 line       496                         i_j_list.append((
excute 13:49:17.062481 line       497                             i, j,
excute 13:49:17.066470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.069463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:49:17.072454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:17.076443 line       494                         if (i == j):
excute 13:49:17.081440 line       496                         i_j_list.append((
excute 13:49:17.084423 line       497                             i, j,
excute 13:49:17.088411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.091402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:49:17.094394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:17.098383 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:17.101375 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:17.105364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:17.110351 line       494                         if (i == j):
excute 13:49:17.115342 line       496                         i_j_list.append((
excute 13:49:17.120325 line       497                             i, j,
excute 13:49:17.125312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.129304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0)]
excute 13:49:17.134288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:17.139276 line       494                         if (i == j):
excute 13:49:17.143265 line       495                             continue
excute 13:49:17.146256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:17.152240 line       494                         if (i == j):
excute 13:49:17.156230 line       496                         i_j_list.append((
excute 13:49:17.161216 line       497                             i, j,
excute 13:49:17.165205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.170192 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:49:17.176175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:17.181163 line       494                         if (i == j):
excute 13:49:17.188144 line       496                         i_j_list.append((
excute 13:49:17.194128 line       497                             i, j,
excute 13:49:17.198118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.204101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:49:17.208090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:17.212081 line       494                         if (i == j):
excute 13:49:17.216069 line       496                         i_j_list.append((
excute 13:49:17.222054 line       497                             i, j,
excute 13:49:17.227039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.231029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:17.234021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:17.238011 line       494                         if (i == j):
excute 13:49:17.242000 line       496                         i_j_list.append((
excute 13:49:17.244991 line       497                             i, j,
excute 13:49:17.248982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.251973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:49:17.256961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:17.260950 line       494                         if (i == j):
excute 13:49:17.264940 line       496                         i_j_list.append((
excute 13:49:17.268929 line       497                             i, j,
excute 13:49:17.272917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.275911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1)]
excute 13:49:17.279900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:17.283889 line       494                         if (i == j):
excute 13:49:17.287878 line       496                         i_j_list.append((
excute 13:49:17.291867 line       497                             i, j,
excute 13:49:17.294860 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.298849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:49:17.302838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:17.306829 line       494                         if (i == j):
excute 13:49:17.310816 line       496                         i_j_list.append((
excute 13:49:17.314805 line       497                             i, j,
excute 13:49:17.317798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.321788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:49:17.328768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:17.336747 line       494                         if (i == j):
excute 13:49:17.341733 line       496                         i_j_list.append((
excute 13:49:17.346720 line       497                             i, j,
excute 13:49:17.352704 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.356692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:49:17.363676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:17.367663 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:17.374644 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:17.379634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:17.382624 line       494                         if (i == j):
excute 13:49:17.386614 line       496                         i_j_list.append((
excute 13:49:17.390603 line       497                             i, j,
excute 13:49:17.394593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.397584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:49:17.401573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:17.404565 line       494                         if (i == j):
excute 13:49:17.408555 line       496                         i_j_list.append((
excute 13:49:17.412545 line       497                             i, j,
excute 13:49:17.415536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.418529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:17.422518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:17.426509 line       494                         if (i == j):
excute 13:49:17.431494 line       495                             continue
excute 13:49:17.434516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:17.437508 line       494                         if (i == j):
excute 13:49:17.441498 line       496                         i_j_list.append((
excute 13:49:17.445460 line       497                             i, j,
excute 13:49:17.449447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.452436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:17.456425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:17.460415 line       494                         if (i == j):
excute 13:49:17.467413 line       496                         i_j_list.append((
excute 13:49:17.471419 line       497                             i, j,
excute 13:49:17.474409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.478367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:17.482358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:17.485351 line       494                         if (i == j):
excute 13:49:17.489338 line       496                         i_j_list.append((
excute 13:49:17.493327 line       497                             i, j,
excute 13:49:17.497319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.501308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:17.504300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:17.509289 line       494                         if (i == j):
excute 13:49:17.513277 line       496                         i_j_list.append((
excute 13:49:17.516298 line       497                             i, j,
excute 13:49:17.520288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.523279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:49:17.527270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:17.531228 line       494                         if (i == j):
excute 13:49:17.536215 line       496                         i_j_list.append((
excute 13:49:17.539204 line       497                             i, j,
excute 13:49:17.543195 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.546186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:49:17.549178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:17.553167 line       494                         if (i == j):
excute 13:49:17.557159 line       496                         i_j_list.append((
excute 13:49:17.561148 line       497                             i, j,
excute 13:49:17.565137 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.568129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:17.572118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:17.576108 line       494                         if (i == j):
excute 13:49:17.581096 line       496                         i_j_list.append((
excute 13:49:17.584086 line       497                             i, j,
excute 13:49:17.588076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.591068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:17.594060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:17.598049 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:17.602038 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:17.606029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:17.610016 line       494                         if (i == j):
excute 13:49:17.614006 line       496                         i_j_list.append((
excute 13:49:17.617996 line       497                             i, j,
excute 13:49:17.621984 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.625006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0)]
excute 13:49:17.628000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:17.632955 line       494                         if (i == j):
excute 13:49:17.637945 line       496                         i_j_list.append((
excute 13:49:17.641932 line       497                             i, j,
excute 13:49:17.644924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.648913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:49:17.651905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:17.656893 line       494                         if (i == j):
excute 13:49:17.660895 line       496                         i_j_list.append((
excute 13:49:17.663873 line       497                             i, j,
excute 13:49:17.667862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.670854 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:49:17.674844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:17.679846 line       494                         if (i == j):
excute 13:49:17.683821 line       495                             continue
excute 13:49:17.686812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:17.690801 line       494                         if (i == j):
excute 13:49:17.694790 line       496                         i_j_list.append((
excute 13:49:17.698777 line       497                             i, j,
excute 13:49:17.701770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.705759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:49:17.708751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:17.712741 line       494                         if (i == j):
excute 13:49:17.717731 line       496                         i_j_list.append((
excute 13:49:17.720719 line       497                             i, j,
excute 13:49:17.724708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.727701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:49:17.730693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:17.734682 line       494                         if (i == j):
excute 13:49:17.739671 line       496                         i_j_list.append((
excute 13:49:17.743660 line       497                             i, j,
excute 13:49:17.747649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.750641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1)]
excute 13:49:17.754631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:17.758633 line       494                         if (i == j):
excute 13:49:17.762609 line       496                         i_j_list.append((
excute 13:49:17.766599 line       497                             i, j,
excute 13:49:17.770588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.774576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0)]
excute 13:49:17.777568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:17.781558 line       494                         if (i == j):
excute 13:49:17.785546 line       496                         i_j_list.append((
excute 13:49:17.788539 line       497                             i, j,
excute 13:49:17.792529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.795520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:49:17.798512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:17.802502 line       494                         if (i == j):
excute 13:49:17.806490 line       496                         i_j_list.append((
excute 13:49:17.810515 line       497                             i, j,
excute 13:49:17.813503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.816495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:17.820485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:17.824475 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:17.827471 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:17.831424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:17.834447 line       494                         if (i == j):
excute 13:49:17.839405 line       496                         i_j_list.append((
excute 13:49:17.843391 line       497                             i, j,
excute 13:49:17.847380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.850373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0)]
excute 13:49:17.854362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:17.858351 line       494                         if (i == j):
excute 13:49:17.862342 line       496                         i_j_list.append((
excute 13:49:17.865332 line       497                             i, j,
excute 13:49:17.868325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.871317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0)]
excute 13:49:17.875306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:17.879297 line       494                         if (i == j):
excute 13:49:17.882288 line       496                         i_j_list.append((
excute 13:49:17.886277 line       497                             i, j,
excute 13:49:17.889269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.892261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:17.896250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:17.899274 line       494                         if (i == j):
excute 13:49:17.903263 line       496                         i_j_list.append((
excute 13:49:17.907220 line       497                             i, j,
excute 13:49:17.910213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.913205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:17.917196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:17.921185 line       494                         if (i == j):
excute 13:49:17.924207 line       495                             continue
excute 13:49:17.928201 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:17.931189 line       494                         if (i == j):
excute 13:49:17.935178 line       496                         i_j_list.append((
excute 13:49:17.939135 line       497                             i, j,
excute 13:49:17.942159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.948144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:17.952102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:17.956090 line       494                         if (i == j):
excute 13:49:17.960082 line       496                         i_j_list.append((
excute 13:49:17.964071 line       497                             i, j,
excute 13:49:17.968060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.971052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1)]
excute 13:49:17.975041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:17.979030 line       494                         if (i == j):
excute 13:49:17.984019 line       496                         i_j_list.append((
excute 13:49:17.987044 line       497                             i, j,
excute 13:49:17.990997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:17.994021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0)]
excute 13:49:17.997014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:18.001007 line       494                         if (i == j):
excute 13:49:18.004965 line       496                         i_j_list.append((
excute 13:49:18.008970 line       497                             i, j,
excute 13:49:18.011973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.014965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:18.018954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:18.022945 line       494                         if (i == j):
excute 13:49:18.026905 line       496                         i_j_list.append((
excute 13:49:18.029895 line       497                             i, j,
excute 13:49:18.032887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.036876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:18.040865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:18.044855 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:18.049840 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:18.053830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:18.057819 line       494                         if (i == j):
excute 13:49:18.061811 line       496                         i_j_list.append((
excute 13:49:18.066827 line       497                             i, j,
excute 13:49:18.070797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.074775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0)]
excute 13:49:18.077767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:18.082754 line       494                         if (i == j):
excute 13:49:18.086743 line       496                         i_j_list.append((
excute 13:49:18.090730 line       497                             i, j,
excute 13:49:18.093722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.096714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:49:18.099706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:18.103695 line       494                         if (i == j):
excute 13:49:18.107685 line       496                         i_j_list.append((
excute 13:49:18.110677 line       497                             i, j,
excute 13:49:18.113669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.117661 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:49:18.120650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:18.124643 line       494                         if (i == j):
excute 13:49:18.127663 line       496                         i_j_list.append((
excute 13:49:18.131653 line       497                             i, j,
excute 13:49:18.135620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.138634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:49:18.141626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:18.145616 line       494                         if (i == j):
excute 13:49:18.150574 line       496                         i_j_list.append((
excute 13:49:18.154559 line       497                             i, j,
excute 13:49:18.158550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.161540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:49:18.164533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:18.168539 line       494                         if (i == j):
excute 13:49:18.172511 line       495                             continue
excute 13:49:18.175504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:18.178496 line       494                         if (i == j):
excute 13:49:18.186508 line       496                         i_j_list.append((
excute 13:49:18.190500 line       497                             i, j,
excute 13:49:18.193492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.197482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1)]
excute 13:49:18.200474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:18.204464 line       494                         if (i == j):
excute 13:49:18.211445 line       496                         i_j_list.append((
excute 13:49:18.215436 line       497                             i, j,
excute 13:49:18.219425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.222415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0)]
excute 13:49:18.226405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:18.229397 line       494                         if (i == j):
excute 13:49:18.233386 line       496                         i_j_list.append((
excute 13:49:18.237408 line       497                             i, j,
excute 13:49:18.240399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.243391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:49:18.247380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:18.251338 line       494                         if (i == j):
excute 13:49:18.257355 line       496                         i_j_list.append((
excute 13:49:18.261312 line       497                             i, j,
excute 13:49:18.268296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.271286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:49:18.277271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:18.281258 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:18.285247 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:18.289239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:18.293227 line       494                         if (i == j):
excute 13:49:18.297215 line       496                         i_j_list.append((
excute 13:49:18.301205 line       497                             i, j,
excute 13:49:18.304198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.308218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0)]
excute 13:49:18.311211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:18.315168 line       494                         if (i == j):
excute 13:49:18.319158 line       496                         i_j_list.append((
excute 13:49:18.322183 line       497                             i, j,
excute 13:49:18.326170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.333122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:49:18.338139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:18.342097 line       494                         if (i == j):
excute 13:49:18.347083 line       496                         i_j_list.append((
excute 13:49:18.351073 line       497                             i, j,
excute 13:49:18.356061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.360049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:49:18.364068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:18.368027 line       494                         if (i == j):
excute 13:49:18.372020 line       496                         i_j_list.append((
excute 13:49:18.376005 line       497                             i, j,
excute 13:49:18.380995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.385978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:49:18.389968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:18.394968 line       494                         if (i == j):
excute 13:49:18.398958 line       496                         i_j_list.append((
excute 13:49:18.401967 line       497                             i, j,
excute 13:49:18.405925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.408948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:49:18.411940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:18.416898 line       494                         if (i == j):
excute 13:49:18.420887 line       496                         i_j_list.append((
excute 13:49:18.423878 line       497                             i, j,
excute 13:49:18.427867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.431856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:49:18.434850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:18.438838 line       494                         if (i == j):
excute 13:49:18.443824 line       495                             continue
excute 13:49:18.447816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:18.450805 line       494                         if (i == j):
excute 13:49:18.455793 line       496                         i_j_list.append((
excute 13:49:18.459784 line       497                             i, j,
excute 13:49:18.463770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.466762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:49:18.470751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:18.474741 line       494                         if (i == j):
excute 13:49:18.477732 line       496                         i_j_list.append((
excute 13:49:18.481722 line       497                             i, j,
excute 13:49:18.484714 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.488703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:49:18.491695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:18.496682 line       494                         if (i == j):
excute 13:49:18.500673 line       496                         i_j_list.append((
excute 13:49:18.503666 line       497                             i, j,
excute 13:49:18.506657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.510646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:49:18.514636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:18.518626 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:18.521617 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:18.525606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:18.529596 line       494                         if (i == j):
excute 13:49:18.533584 line       496                         i_j_list.append((
excute 13:49:18.536606 line       497                             i, j,
excute 13:49:18.539599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.543589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0)]
excute 13:49:18.546580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:18.550538 line       494                         if (i == j):
excute 13:49:18.554527 line       496                         i_j_list.append((
excute 13:49:18.558518 line       497                             i, j,
excute 13:49:18.562508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.566495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:18.569487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:18.573478 line       494                         if (i == j):
excute 13:49:18.577466 line       496                         i_j_list.append((
excute 13:49:18.580458 line       497                             i, j,
excute 13:49:18.584447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.587439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:18.590431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:18.594421 line       494                         if (i == j):
excute 13:49:18.598410 line       496                         i_j_list.append((
excute 13:49:18.601402 line       497                             i, j,
excute 13:49:18.605391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.608383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:18.612375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:18.616372 line       494                         if (i == j):
excute 13:49:18.620351 line       496                         i_j_list.append((
excute 13:49:18.623343 line       497                             i, j,
excute 13:49:18.626335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.630325 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:18.633317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:18.637306 line       494                         if (i == j):
excute 13:49:18.641295 line       496                         i_j_list.append((
excute 13:49:18.645285 line       497                             i, j,
excute 13:49:18.648277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.652266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:18.656257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:18.659278 line       494                         if (i == j):
excute 13:49:18.664236 line       496                         i_j_list.append((
excute 13:49:18.668225 line       497                             i, j,
excute 13:49:18.672215 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.675206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1)]
excute 13:49:18.679196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:18.683183 line       494                         if (i == j):
excute 13:49:18.687174 line       495                             continue
excute 13:49:18.691164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:18.695153 line       494                         if (i == j):
excute 13:49:18.699143 line       496                         i_j_list.append((
excute 13:49:18.703133 line       497                             i, j,
excute 13:49:18.707123 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.710143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0)]
excute 13:49:18.714102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:18.718093 line       494                         if (i == j):
excute 13:49:18.722111 line       496                         i_j_list.append((
excute 13:49:18.726088 line       497                             i, j,
excute 13:49:18.729093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.733072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:18.736074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:18.740047 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:18.743056 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:18.747044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:18.751035 line       494                         if (i == j):
excute 13:49:18.755023 line       496                         i_j_list.append((
excute 13:49:18.758982 line       497                             i, j,
excute 13:49:18.761974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.766960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0)]
excute 13:49:18.769951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:18.773940 line       494                         if (i == j):
excute 13:49:18.777930 line       496                         i_j_list.append((
excute 13:49:18.781919 line       497                             i, j,
excute 13:49:18.784911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.787903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:49:18.791905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:18.795882 line       494                         if (i == j):
excute 13:49:18.798873 line       496                         i_j_list.append((
excute 13:49:18.802863 line       497                             i, j,
excute 13:49:18.805858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.809845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:49:18.813834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:18.817823 line       494                         if (i == j):
excute 13:49:18.821813 line       496                         i_j_list.append((
excute 13:49:18.824805 line       497                             i, j,
excute 13:49:18.828794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.831786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:49:18.834778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:18.838767 line       494                         if (i == j):
excute 13:49:18.842759 line       496                         i_j_list.append((
excute 13:49:18.845749 line       497                             i, j,
excute 13:49:18.849738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.852730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:49:18.856720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:18.860709 line       494                         if (i == j):
excute 13:49:18.863700 line       496                         i_j_list.append((
excute 13:49:18.867691 line       497                             i, j,
excute 13:49:18.871679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.875668 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:49:18.878661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:18.882650 line       494                         if (i == j):
excute 13:49:18.886640 line       496                         i_j_list.append((
excute 13:49:18.890631 line       497                             i, j,
excute 13:49:18.893621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.896613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1)]
excute 13:49:18.900601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:18.904592 line       494                         if (i == j):
excute 13:49:18.908581 line       496                         i_j_list.append((
excute 13:49:18.911573 line       497                             i, j,
excute 13:49:18.914565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.918555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0)]
excute 13:49:18.921546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:18.925535 line       494                         if (i == j):
excute 13:49:18.929525 line       495                             continue
excute 13:49:18.932516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:18.935509 line       494                         if (i == j):
excute 13:49:18.939498 line       496                         i_j_list.append((
excute 13:49:18.942491 line       497                             i, j,
excute 13:49:18.947479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.951466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:49:18.955456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:18.958447 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:18.965429 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:18.971416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:18.976400 line       494                         if (i == j):
excute 13:49:18.981386 line       496                         i_j_list.append((
excute 13:49:18.984378 line       497                             i, j,
excute 13:49:18.987370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:18.991360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0)]
excute 13:49:18.995350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:18.998342 line       494                         if (i == j):
excute 13:49:19.002331 line       496                         i_j_list.append((
excute 13:49:19.006320 line       497                             i, j,
excute 13:49:19.010310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.014298 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:19.018288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:19.022277 line       494                         if (i == j):
excute 13:49:19.027265 line       496                         i_j_list.append((
excute 13:49:19.030255 line       497                             i, j,
excute 13:49:19.034259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.037237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:19.040229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:19.044219 line       494                         if (i == j):
excute 13:49:19.048233 line       496                         i_j_list.append((
excute 13:49:19.052197 line       497                             i, j,
excute 13:49:19.056191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.059211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:19.063200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:19.067192 line       494                         if (i == j):
excute 13:49:19.071147 line       496                         i_j_list.append((
excute 13:49:19.076167 line       497                             i, j,
excute 13:49:19.079157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.083147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:19.086138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:19.090128 line       494                         if (i == j):
excute 13:49:19.094101 line       496                         i_j_list.append((
excute 13:49:19.097108 line       497                             i, j,
excute 13:49:19.101101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.104089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:19.108070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:19.112037 line       494                         if (i == j):
excute 13:49:19.115062 line       496                         i_j_list.append((
excute 13:49:19.119050 line       497                             i, j,
excute 13:49:19.122042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.126032 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:49:19.129023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:19.133979 line       494                         if (i == j):
excute 13:49:19.136972 line       496                         i_j_list.append((
excute 13:49:19.140961 line       497                             i, j,
excute 13:49:19.144951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.148940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0)]
excute 13:49:19.152929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:19.157917 line       494                         if (i == j):
excute 13:49:19.161904 line       496                         i_j_list.append((
excute 13:49:19.164900 line       497                             i, j,
excute 13:49:19.169885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:19.172876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:19.177861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:19.181850 line       494                         if (i == j):
excute 13:49:19.184842 line       495                             continue
excute 13:49:19.188831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:19.191823 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:19.195814 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 6, -2, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (0, 6, 0, 1), (1, 6, 0, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (5, 6, 1, 1), (8, 6, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (2, 6, 2, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 6, 3, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (4, 6, 4, 1), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (3, 6, 5, 1)]
excute 13:49:19.199804 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:19.203792 line       505                     if (self.RELOCATE):
excute 13:49:19.207783 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:19.211772 line       505                     if (self.RELOCATE):
excute 13:49:19.215761 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:19.219752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:19.223740 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:19.227729 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:19.231720 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.235718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:19.238700 line       556                     i = i_j[0]
excute 13:49:19.242690 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:19.246679 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.250669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:19.256651 line       556                     i = i_j[0]
excute 13:49:19.260641 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:19.264629 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.268620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:19.272609 line       556                     i = i_j[0]
excute 13:49:19.280587 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:19.284607 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.288595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:19.291589 line       556                     i = i_j[0]
excute 13:49:19.295546 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:19.299536 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.302559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:19.306550 line       556                     i = i_j[0]
excute 13:49:19.310540 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:19.313530 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.317500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:19.321478 line       556                     i = i_j[0]
excute 13:49:19.324500 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:19.331452 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.339430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:19.344419 line       556                     i = i_j[0]
excute 13:49:19.349435 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:19.353393 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.360374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 1)
excute 13:49:19.364364 line       556                     i = i_j[0]
excute 13:49:19.372342 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:19.379323 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.386307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:49:19.390293 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:19.394290 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:19.398274 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.403260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:19.406282 line       556                     i = i_j[0]
excute 13:49:19.410241 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:19.413264 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.417253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:19.421243 line       556                     i = i_j[0]
excute 13:49:19.425200 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:19.428225 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.432214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:49:19.436172 line       556                     i = i_j[0]
excute 13:49:19.439195 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:19.443184 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.447143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:49:19.451163 line       556                     i = i_j[0]
excute 13:49:19.455121 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:19.458145 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.463100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:49:19.466128 line       556                     i = i_j[0]
excute 13:49:19.470081 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:19.473103 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.477094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:49:19.481083 line       556                     i = i_j[0]
excute 13:49:19.485042 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:19.489061 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.493027 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:49:19.497008 line       556                     i = i_j[0]
excute 13:49:19.500031 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:19.504021 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.508012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:49:19.511968 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:19.514960 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:19.518949 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.522939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:49:19.526929 line       556                     i = i_j[0]
excute 13:49:19.529920 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:19.533909 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.537899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:19.540890 line       556                     i = i_j[0]
excute 13:49:19.546877 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:19.550866 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.554854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:19.557845 line       556                     i = i_j[0]
excute 13:49:19.565843 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:19.569844 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.572830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:49:19.576818 line       556                     i = i_j[0]
excute 13:49:19.581804 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:19.584798 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.589784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:49:19.593777 line       556                     i = i_j[0]
excute 13:49:19.597761 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:19.600753 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.604742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:49:19.607734 line       556                     i = i_j[0]
excute 13:49:19.611723 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:19.618704 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.622697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:49:19.625688 line       556                     i = i_j[0]
excute 13:49:19.629675 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:19.633667 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.637656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:49:19.641645 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:19.645635 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:19.649624 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.654612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:49:19.657601 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:19.661592 line       557                     j = i_j[1]
excute 13:49:19.665581 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.669572 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 152
excute 13:49:19.672562 line       560                         if (t_tmp > self.TIME):
excute 13:49:19.676552 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:19.679543 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:19.683533 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 178
excute 13:49:19.686524 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:19.690520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:49:19.696499 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:19.700489 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:19.704486 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.707470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:49:19.711458 line       556                     i = i_j[0]
excute 13:49:19.718439 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:19.722428 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.726419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:49:19.730408 line       556                     i = i_j[0]
excute 13:49:19.734397 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:19.738386 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.743384 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:49:19.746366 line       556                     i = i_j[0]
excute 13:49:19.750355 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:19.754343 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.758332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:49:19.761325 line       556                     i = i_j[0]
excute 13:49:19.765314 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:19.769304 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.774292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:49:19.778280 line       556                     i = i_j[0]
excute 13:49:19.782270 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:19.785261 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.789250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:49:19.793240 line       556                     i = i_j[0]
excute 13:49:19.798226 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:19.802216 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.806205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:49:19.809196 line       556                     i = i_j[0]
excute 13:49:19.813186 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:19.817176 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.821167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:49:19.824156 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:19.828146 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:19.832137 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.836126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:49:19.839116 line       556                     i = i_j[0]
excute 13:49:19.843106 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:19.847094 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.850125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:49:19.854112 line       556                     i = i_j[0]
excute 13:49:19.858092 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:19.862054 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.865077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:49:19.869067 line       556                     i = i_j[0]
excute 13:49:19.873057 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:19.876048 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.880007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:49:19.883030 line       556                     i = i_j[0]
excute 13:49:19.887020 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:19.891009 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.894967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:49:19.899987 line       556                     i = i_j[0]
excute 13:49:19.903975 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:19.907933 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.910955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:49:19.914945 line       556                     i = i_j[0]
excute 13:49:19.918936 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:19.921928 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.925884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:49:19.928907 line       556                     i = i_j[0]
excute 13:49:19.932902 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:19.936889 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.940881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 1)
excute 13:49:19.943868 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:19.948825 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:19.952845 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.956801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 1)
excute 13:49:19.960807 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:19.965786 line       557                     j = i_j[1]
excute 13:49:19.968768 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.972758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:19.975750 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:19.979741 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:19.983729 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:19.987720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:19.990711 line       556                     i = i_j[0]
excute 13:49:19.994700 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:19.997692 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.002680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:20.005702 line       556                     i = i_j[0]
excute 13:49:20.010660 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:20.013651 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.018636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:20.021630 line       556                     i = i_j[0]
excute 13:49:20.025620 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:20.029608 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.033598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:20.036590 line       556                     i = i_j[0]
excute 13:49:20.040579 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:20.044568 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.048557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:20.052547 line       556                     i = i_j[0]
excute 13:49:20.056536 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:20.060526 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.064514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:20.067538 line       556                     i = i_j[0]
excute 13:49:20.071528 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:20.075515 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.079474 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:20.082497 line       556                     i = i_j[0]
excute 13:49:20.086486 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:20.090475 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.094433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:49:20.097459 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:20.101447 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:20.106403 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.110423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:49:20.113417 line       556                     i = i_j[0]
excute 13:49:20.117371 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:20.120396 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.124390 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:49:20.128375 line       556                     i = i_j[0]
excute 13:49:20.132344 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:20.136321 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.143302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:49:20.147293 line       556                     i = i_j[0]
excute 13:49:20.154274 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:20.158264 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.163250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:49:20.166240 line       556                     i = i_j[0]
excute 13:49:20.170230 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:20.173222 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.177213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:49:20.180204 line       556                     i = i_j[0]
excute 13:49:20.184193 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:20.188182 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.191174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:49:20.195163 line       556                     i = i_j[0]
excute 13:49:20.199153 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:20.202145 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.207133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:49:20.210124 line       556                     i = i_j[0]
excute 13:49:20.214113 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:20.218102 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.223090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:49:20.226113 line       556                     i = i_j[0]
excute 13:49:20.230105 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:20.234060 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.242039 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:49:20.249019 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:20.253011 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:20.257033 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.261987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:20.265008 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:20.268998 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:20.272969 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.276979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:20.280934 line       556                     i = i_j[0]
excute 13:49:20.284924 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:20.287947 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.291906 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:20.294930 line       556                     i = i_j[0]
excute 13:49:20.298919 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:20.302909 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.306877 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:20.310862 line       556                     i = i_j[0]
excute 13:49:20.314845 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:20.317867 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.321857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:20.326813 line       556                     i = i_j[0]
excute 13:49:20.335789 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:20.340775 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.345765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:20.349751 line       556                     i = i_j[0]
excute 13:49:20.353739 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:20.357729 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.361720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:20.365709 line       556                     i = i_j[0]
excute 13:49:20.370697 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:20.373688 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.378677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:20.382664 line       556                     i = i_j[0]
excute 13:49:20.387652 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:20.390643 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.394633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:49:20.398621 line       556                     i = i_j[0]
excute 13:49:20.402611 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:20.406600 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.411587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:20.415609 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:20.419564 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:20.423554 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.427575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:20.430537 line       556                     i = i_j[0]
excute 13:49:20.434524 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:20.438513 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.441536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:20.445527 line       556                     i = i_j[0]
excute 13:49:20.449484 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:20.453473 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.457463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:20.460454 line       556                     i = i_j[0]
excute 13:49:20.467440 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:20.471458 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.475416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:20.478407 line       556                     i = i_j[0]
excute 13:49:20.483394 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:20.486417 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.490375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:20.494397 line       556                     i = i_j[0]
excute 13:49:20.498354 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:20.501349 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.505334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:20.509356 line       556                     i = i_j[0]
excute 13:49:20.513315 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:20.518300 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.522289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:20.525313 line       556                     i = i_j[0]
excute 13:49:20.529302 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:20.533261 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.536287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 1)
excute 13:49:20.540273 line       556                     i = i_j[0]
excute 13:49:20.544232 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:20.547254 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.551212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:49:20.555233 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:20.559191 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:20.563181 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.567202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:49:20.570163 line       556                     i = i_j[0]
excute 13:49:20.575149 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:20.578143 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.582131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:49:20.586120 line       556                     i = i_j[0]
excute 13:49:20.591108 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:20.594099 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.598118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:49:20.602107 line       556                     i = i_j[0]
excute 13:49:20.606099 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:20.609088 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.614044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:49:20.618034 line       556                     i = i_j[0]
excute 13:49:20.623054 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:20.627011 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.631001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:49:20.633993 line       556                     i = i_j[0]
excute 13:49:20.638980 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:20.641971 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.645960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:49:20.649950 line       556                     i = i_j[0]
excute 13:49:20.654937 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:20.657929 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.661917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:49:20.666903 line       556                     i = i_j[0]
excute 13:49:20.670892 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:20.677873 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.681863 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 1)
excute 13:49:20.685852 line       556                     i = i_j[0]
excute 13:49:20.692833 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:20.698820 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:20.702809 line       555                 for i_j in i_j_list:
excute 13:49:20.706798 line       581             self.write_matrix(
excute 13:49:20.710786 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:20.714775 line       583                 result_file_path,
excute 13:49:20.718767 line       584                 mode='a'
excute 13:49:20.726214 line       488         for t in time_steps:
excute Modified var:.. t = 142
excute 13:49:20.732198 line       489             if (t != self.TIME + 1):
excute 13:49:20.738182 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:20.741173 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:20.747159 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:20.751148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:20.756135 line       494                         if (i == j):
excute 13:49:20.761136 line       495                             continue
excute 13:49:20.766145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:20.773089 line       494                         if (i == j):
excute 13:49:20.780070 line       496                         i_j_list.append((
excute 13:49:20.784060 line       497                             i, j,
excute 13:49:20.790044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.802016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:49:20.810987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:20.815975 line       494                         if (i == j):
excute 13:49:20.820993 line       496                         i_j_list.append((
excute 13:49:20.826947 line       497                             i, j,
excute 13:49:20.830934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.836952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:49:20.840907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:20.846924 line       494                         if (i == j):
excute 13:49:20.853872 line       496                         i_j_list.append((
excute 13:49:20.857861 line       497                             i, j,
excute 13:49:20.864848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.869862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:20.873821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:20.876844 line       494                         if (i == j):
excute 13:49:20.882795 line       496                         i_j_list.append((
excute 13:49:20.885787 line       497                             i, j,
excute 13:49:20.889777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.893767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:49:20.897757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:20.902743 line       494                         if (i == j):
excute 13:49:20.916832 line       496                         i_j_list.append((
excute 13:49:20.920768 line       497                             i, j,
excute 13:49:20.923760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.928747 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:49:20.931772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:20.935740 line       494                         if (i == j):
excute 13:49:20.939721 line       496                         i_j_list.append((
excute 13:49:20.942741 line       497                             i, j,
excute 13:49:20.946732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.950725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:49:20.954710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:20.958705 line       494                         if (i == j):
excute 13:49:20.962659 line       496                         i_j_list.append((
excute 13:49:20.966647 line       497                             i, j,
excute 13:49:20.970635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.973626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:49:20.977618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:20.981608 line       494                         if (i == j):
excute 13:49:20.985595 line       496                         i_j_list.append((
excute 13:49:20.988588 line       497                             i, j,
excute 13:49:20.992578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:20.996567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:49:20.999559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:21.003548 line       494                         if (i == j):
excute 13:49:21.008535 line       496                         i_j_list.append((
excute 13:49:21.011558 line       497                             i, j,
excute 13:49:21.018508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.023525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:49:21.027515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:21.032471 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:21.035494 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:21.039452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:21.042474 line       494                         if (i == j):
excute 13:49:21.046434 line       496                         i_j_list.append((
excute 13:49:21.049456 line       497                             i, j,
excute 13:49:21.053413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.056407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1)]
excute 13:49:21.060396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:21.064386 line       494                         if (i == j):
excute 13:49:21.068375 line       495                             continue
excute 13:49:21.072365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:21.075357 line       494                         if (i == j):
excute 13:49:21.079346 line       496                         i_j_list.append((
excute 13:49:21.083335 line       497                             i, j,
excute 13:49:21.087324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.091314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0)]
excute 13:49:21.094306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:21.098293 line       494                         if (i == j):
excute 13:49:21.102286 line       496                         i_j_list.append((
excute 13:49:21.105276 line       497                             i, j,
excute 13:49:21.109266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.112258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:49:21.116247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:21.120237 line       494                         if (i == j):
excute 13:49:21.124226 line       496                         i_j_list.append((
excute 13:49:21.128215 line       497                             i, j,
excute 13:49:21.132207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.137191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:21.141181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:21.145169 line       494                         if (i == j):
excute 13:49:21.149159 line       496                         i_j_list.append((
excute 13:49:21.153148 line       497                             i, j,
excute 13:49:21.157168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.160161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:49:21.163152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:21.167141 line       494                         if (i == j):
excute 13:49:21.171132 line       496                         i_j_list.append((
excute 13:49:21.175092 line       497                             i, j,
excute 13:49:21.178112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.181103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:49:21.185094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:21.188085 line       494                         if (i == j):
excute 13:49:21.192076 line       496                         i_j_list.append((
excute 13:49:21.195037 line       497                             i, j,
excute 13:49:21.199027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.202018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:49:21.206007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:21.209997 line       494                         if (i == j):
excute 13:49:21.213986 line       496                         i_j_list.append((
excute 13:49:21.217975 line       497                             i, j,
excute 13:49:21.221966 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.225953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:49:21.229943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:21.233932 line       494                         if (i == j):
excute 13:49:21.237923 line       496                         i_j_list.append((
excute 13:49:21.241911 line       497                             i, j,
excute 13:49:21.245900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.249890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:49:21.253880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:21.257869 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:21.260860 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:21.264850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:21.268839 line       494                         if (i == j):
excute 13:49:21.271831 line       496                         i_j_list.append((
excute 13:49:21.275821 line       497                             i, j,
excute 13:49:21.279810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.283799 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1)]
excute 13:49:21.287789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:21.291777 line       494                         if (i == j):
excute 13:49:21.295766 line       496                         i_j_list.append((
excute 13:49:21.299757 line       497                             i, j,
excute 13:49:21.302749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.306737 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1)]
excute 13:49:21.309730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:21.313720 line       494                         if (i == j):
excute 13:49:21.317708 line       495                             continue
excute 13:49:21.321698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:21.325688 line       494                         if (i == j):
excute 13:49:21.333671 line       496                         i_j_list.append((
excute 13:49:21.338652 line       497                             i, j,
excute 13:49:21.342642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.346630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:49:21.351617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:21.357603 line       494                         if (i == j):
excute 13:49:21.362588 line       496                         i_j_list.append((
excute 13:49:21.368573 line       497                             i, j,
excute 13:49:21.373558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.380541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:21.385526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:21.394505 line       494                         if (i == j):
excute 13:49:21.398492 line       496                         i_j_list.append((
excute 13:49:21.402480 line       497                             i, j,
excute 13:49:21.408465 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.411456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:21.416445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:21.421437 line       494                         if (i == j):
excute 13:49:21.425422 line       496                         i_j_list.append((
excute 13:49:21.429409 line       497                             i, j,
excute 13:49:21.433398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.437388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:49:21.443372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:21.449356 line       494                         if (i == j):
excute 13:49:21.454342 line       496                         i_j_list.append((
excute 13:49:21.460326 line       497                             i, j,
excute 13:49:21.465313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.472294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:49:21.478280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:21.487254 line       494                         if (i == j):
excute 13:49:21.493239 line       496                         i_j_list.append((
excute 13:49:21.500220 line       497                             i, j,
excute 13:49:21.508198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.514183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:21.520167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:21.526151 line       494                         if (i == j):
excute 13:49:21.532134 line       496                         i_j_list.append((
excute 13:49:21.540112 line       497                             i, j,
excute 13:49:21.548092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.556071 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:21.561059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:21.567040 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:21.574022 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:21.582000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:21.587985 line       494                         if (i == j):
excute 13:49:21.593969 line       496                         i_j_list.append((
excute 13:49:21.600950 line       497                             i, j,
excute 13:49:21.607932 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.613915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1)]
excute 13:49:21.621895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:21.630871 line       494                         if (i == j):
excute 13:49:21.636855 line       496                         i_j_list.append((
excute 13:49:21.645830 line       497                             i, j,
excute 13:49:21.651814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.658795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1)]
excute 13:49:21.664779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:21.672760 line       494                         if (i == j):
excute 13:49:21.681735 line       496                         i_j_list.append((
excute 13:49:21.689712 line       497                             i, j,
excute 13:49:21.694700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.703675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0)]
excute 13:49:21.709659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:21.719634 line       494                         if (i == j):
excute 13:49:21.725618 line       495                             continue
excute 13:49:21.731603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:21.739579 line       494                         if (i == j):
excute 13:49:21.749554 line       496                         i_j_list.append((
excute 13:49:21.755539 line       497                             i, j,
excute 13:49:21.761521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.767505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:49:21.774489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:21.780470 line       494                         if (i == j):
excute 13:49:21.785457 line       496                         i_j_list.append((
excute 13:49:21.791442 line       497                             i, j,
excute 13:49:21.796428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.800417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:49:21.803408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:21.807400 line       494                         if (i == j):
excute 13:49:21.811388 line       496                         i_j_list.append((
excute 13:49:21.814379 line       497                             i, j,
excute 13:49:21.818369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.821360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:49:21.825349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:21.829344 line       494                         if (i == j):
excute 13:49:21.833363 line       496                         i_j_list.append((
excute 13:49:21.836352 line       497                             i, j,
excute 13:49:21.839344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.843333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:49:21.846326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:21.850315 line       494                         if (i == j):
excute 13:49:21.855271 line       496                         i_j_list.append((
excute 13:49:21.860258 line       497                             i, j,
excute 13:49:21.863250 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.867239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:49:21.870231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:21.874221 line       494                         if (i == j):
excute 13:49:21.878210 line       496                         i_j_list.append((
excute 13:49:21.882199 line       497                             i, j,
excute 13:49:21.885192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.889181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:21.893170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:21.897160 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:21.901149 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:21.905139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:21.908130 line       494                         if (i == j):
excute 13:49:21.912120 line       496                         i_j_list.append((
excute 13:49:21.915112 line       497                             i, j,
excute 13:49:21.919101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.923089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1)]
excute 13:49:21.926082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:21.930073 line       494                         if (i == j):
excute 13:49:21.934061 line       496                         i_j_list.append((
excute 13:49:21.937052 line       497                             i, j,
excute 13:49:21.941042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.944033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1)]
excute 13:49:21.948023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:21.953020 line       494                         if (i == j):
excute 13:49:21.957000 line       496                         i_j_list.append((
excute 13:49:21.962984 line       497                             i, j,
excute 13:49:21.969964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.972955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0)]
excute 13:49:21.976946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:21.981932 line       494                         if (i == j):
excute 13:49:21.985927 line       496                         i_j_list.append((
excute 13:49:21.988944 line       497                             i, j,
excute 13:49:21.992934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:21.995895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:21.999916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:22.003874 line       494                         if (i == j):
excute 13:49:22.007864 line       495                             continue
excute 13:49:22.011856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:22.014875 line       494                         if (i == j):
excute 13:49:22.018834 line       496                         i_j_list.append((
excute 13:49:22.021857 line       497                             i, j,
excute 13:49:22.025846 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.028837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:22.032829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:22.036787 line       494                         if (i == j):
excute 13:49:22.039808 line       496                         i_j_list.append((
excute 13:49:22.043798 line       497                             i, j,
excute 13:49:22.046789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.050748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0)]
excute 13:49:22.053772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:22.057730 line       494                         if (i == j):
excute 13:49:22.062716 line       496                         i_j_list.append((
excute 13:49:22.066705 line       497                             i, j,
excute 13:49:22.069698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.073687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0)]
excute 13:49:22.077677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:22.081682 line       494                         if (i == j):
excute 13:49:22.085654 line       496                         i_j_list.append((
excute 13:49:22.089668 line       497                             i, j,
excute 13:49:22.092667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.095659 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:22.099648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:22.103608 line       494                         if (i == j):
excute 13:49:22.106629 line       496                         i_j_list.append((
excute 13:49:22.110621 line       497                             i, j,
excute 13:49:22.113611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.117569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:22.120593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:22.124551 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:22.127574 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:22.131543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:22.135557 line       494                         if (i == j):
excute 13:49:22.139528 line       496                         i_j_list.append((
excute 13:49:22.142533 line       497                             i, j,
excute 13:49:22.145525 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.149502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1)]
excute 13:49:22.153498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:22.157464 line       494                         if (i == j):
excute 13:49:22.161451 line       496                         i_j_list.append((
excute 13:49:22.165476 line       497                             i, j,
excute 13:49:22.169430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.172454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1)]
excute 13:49:22.175446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:22.179403 line       494                         if (i == j):
excute 13:49:22.187382 line       496                         i_j_list.append((
excute 13:49:22.191371 line       497                             i, j,
excute 13:49:22.198354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.202342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0)]
excute 13:49:22.209324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:22.213313 line       494                         if (i == j):
excute 13:49:22.217303 line       496                         i_j_list.append((
excute 13:49:22.220296 line       497                             i, j,
excute 13:49:22.224285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.228275 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:49:22.231296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:22.235256 line       494                         if (i == j):
excute 13:49:22.239244 line       496                         i_j_list.append((
excute 13:49:22.242267 line       497                             i, j,
excute 13:49:22.246257 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.253206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:49:22.257195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:22.261206 line       494                         if (i == j):
excute 13:49:22.264210 line       495                             continue
excute 13:49:22.271204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:22.275179 line       494                         if (i == j):
excute 13:49:22.280134 line       496                         i_j_list.append((
excute 13:49:22.288208 line       497                             i, j,
excute 13:49:22.292201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.295228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:49:22.298216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:22.302206 line       494                         if (i == j):
excute 13:49:22.306175 line       496                         i_j_list.append((
excute 13:49:22.310154 line       497                             i, j,
excute 13:49:22.313178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.316171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:49:22.320127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:22.324152 line       494                         if (i == j):
excute 13:49:22.331100 line       496                         i_j_list.append((
excute 13:49:22.339080 line       497                             i, j,
excute 13:49:22.343067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.347066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:49:22.351078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:22.356032 line       494                         if (i == j):
excute 13:49:22.359059 line       496                         i_j_list.append((
excute 13:49:22.363013 line       497                             i, j,
excute 13:49:22.367004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.371989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:49:22.375978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:22.379973 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:22.382993 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:22.387960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:22.390972 line       494                         if (i == j):
excute 13:49:22.394963 line       496                         i_j_list.append((
excute 13:49:22.398955 line       497                             i, j,
excute 13:49:22.401944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.405922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1)]
excute 13:49:22.408928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:22.412892 line       494                         if (i == j):
excute 13:49:22.416907 line       496                         i_j_list.append((
excute 13:49:22.420866 line       497                             i, j,
excute 13:49:22.423881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.426873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1)]
excute 13:49:22.430870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:22.434821 line       494                         if (i == j):
excute 13:49:22.438810 line       496                         i_j_list.append((
excute 13:49:22.441838 line       497                             i, j,
excute 13:49:22.445794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.449811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0)]
excute 13:49:22.453802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:22.457759 line       494                         if (i == j):
excute 13:49:22.461781 line       496                         i_j_list.append((
excute 13:49:22.465769 line       497                             i, j,
excute 13:49:22.468760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.472720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:49:22.476739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:22.480699 line       494                         if (i == j):
excute 13:49:22.484688 line       496                         i_j_list.append((
excute 13:49:22.487710 line       497                             i, j,
excute 13:49:22.491668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.494695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:49:22.498649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:22.502640 line       494                         if (i == j):
excute 13:49:22.505663 line       496                         i_j_list.append((
excute 13:49:22.509653 line       497                             i, j,
excute 13:49:22.513642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.516633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:49:22.520601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:22.523616 line       494                         if (i == j):
excute 13:49:22.527603 line       495                             continue
excute 13:49:22.531580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:22.534588 line       494                         if (i == j):
excute 13:49:22.538544 line       496                         i_j_list.append((
excute 13:49:22.541566 line       497                             i, j,
excute 13:49:22.545555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.548547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:49:22.551540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:22.556496 line       494                         if (i == j):
excute 13:49:22.560517 line       496                         i_j_list.append((
excute 13:49:22.563510 line       497                             i, j,
excute 13:49:22.567499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.571456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:49:22.575446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:22.579469 line       494                         if (i == j):
excute 13:49:22.583423 line       496                         i_j_list.append((
excute 13:49:22.586446 line       497                             i, j,
excute 13:49:22.589438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.593427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:49:22.596419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:22.600409 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:22.604399 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:22.608372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:22.611382 line       494                         if (i == j):
excute 13:49:22.615338 line       496                         i_j_list.append((
excute 13:49:22.619360 line       497                             i, j,
excute 13:49:22.623316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.626340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1)]
excute 13:49:22.629331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:22.634287 line       494                         if (i == j):
excute 13:49:22.638278 line       496                         i_j_list.append((
excute 13:49:22.641267 line       497                             i, j,
excute 13:49:22.644260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.648249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1)]
excute 13:49:22.652240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:22.656236 line       494                         if (i == j):
excute 13:49:22.660217 line       496                         i_j_list.append((
excute 13:49:22.663241 line       497                             i, j,
excute 13:49:22.667232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.670225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0)]
excute 13:49:22.674214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:22.680164 line       494                         if (i == j):
excute 13:49:22.683155 line       496                         i_j_list.append((
excute 13:49:22.687145 line       497                             i, j,
excute 13:49:22.690169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.694162 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:22.697150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:22.701141 line       494                         if (i == j):
excute 13:49:22.705129 line       496                         i_j_list.append((
excute 13:49:22.709118 line       497                             i, j,
excute 13:49:22.713076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.716099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:22.720057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:22.724067 line       494                         if (i == j):
excute 13:49:22.728036 line       496                         i_j_list.append((
excute 13:49:22.731062 line       497                             i, j,
excute 13:49:22.734055 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.738043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:22.741033 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:22.745022 line       494                         if (i == j):
excute 13:49:22.748983 line       496                         i_j_list.append((
excute 13:49:22.753969 line       497                             i, j,
excute 13:49:22.756958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.760947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:49:22.763971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:22.767962 line       494                         if (i == j):
excute 13:49:22.771951 line       495                             continue
excute 13:49:22.775940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:22.779899 line       494                         if (i == j):
excute 13:49:22.784884 line       496                         i_j_list.append((
excute 13:49:22.787876 line       497                             i, j,
excute 13:49:22.790868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.794857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:22.798846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:22.801838 line       494                         if (i == j):
excute 13:49:22.805827 line       496                         i_j_list.append((
excute 13:49:22.809817 line       497                             i, j,
excute 13:49:22.812809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.815801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:22.819790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:22.823781 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:22.827802 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:22.831761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:22.834785 line       494                         if (i == j):
excute 13:49:22.838771 line       496                         i_j_list.append((
excute 13:49:22.842764 line       497                             i, j,
excute 13:49:22.845756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.849712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1)]
excute 13:49:22.853735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:22.857690 line       494                         if (i == j):
excute 13:49:22.861680 line       496                         i_j_list.append((
excute 13:49:22.864702 line       497                             i, j,
excute 13:49:22.868661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.871683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1)]
excute 13:49:22.875641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:22.878666 line       494                         if (i == j):
excute 13:49:22.883622 line       496                         i_j_list.append((
excute 13:49:22.887643 line       497                             i, j,
excute 13:49:22.890635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.894591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:49:22.897618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:22.901607 line       494                         if (i == j):
excute 13:49:22.905593 line       496                         i_j_list.append((
excute 13:49:22.909550 line       497                             i, j,
excute 13:49:22.912574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.915567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:49:22.919555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:22.923515 line       494                         if (i == j):
excute 13:49:22.927504 line       496                         i_j_list.append((
excute 13:49:22.930529 line       497                             i, j,
excute 13:49:22.934516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.937507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:49:22.940501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:22.944489 line       494                         if (i == j):
excute 13:49:22.949445 line       496                         i_j_list.append((
excute 13:49:22.952469 line       497                             i, j,
excute 13:49:22.956426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.960447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:49:22.964436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:22.968426 line       494                         if (i == j):
excute 13:49:22.972415 line       496                         i_j_list.append((
excute 13:49:22.976403 line       497                             i, j,
excute 13:49:22.980394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:22.983385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:49:22.989339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:22.993328 line       494                         if (i == j):
excute 13:49:22.997352 line       496                         i_j_list.append((
excute 13:49:23.000309 line       497                             i, j,
excute 13:49:23.004329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.007321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:49:23.011310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:23.015269 line       494                         if (i == j):
excute 13:49:23.019259 line       495                             continue
excute 13:49:23.023278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:23.027240 line       494                         if (i == j):
excute 13:49:23.030259 line       496                         i_j_list.append((
excute 13:49:23.034251 line       497                             i, j,
excute 13:49:23.038240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.041230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:49:23.045223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:23.049210 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:23.052201 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:23.056191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:23.060180 line       494                         if (i == j):
excute 13:49:23.064170 line       496                         i_j_list.append((
excute 13:49:23.068160 line       497                             i, j,
excute 13:49:23.071150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.075141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1)]
excute 13:49:23.078131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:23.082091 line       494                         if (i == j):
excute 13:49:23.087077 line       496                         i_j_list.append((
excute 13:49:23.091097 line       497                             i, j,
excute 13:49:23.094089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.098081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1)]
excute 13:49:23.101073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:23.105050 line       494                         if (i == j):
excute 13:49:23.109020 line       496                         i_j_list.append((
excute 13:49:23.113008 line       497                             i, j,
excute 13:49:23.116997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.119989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0)]
excute 13:49:23.123979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:23.127968 line       494                         if (i == j):
excute 13:49:23.132989 line       496                         i_j_list.append((
excute 13:49:23.136976 line       497                             i, j,
excute 13:49:23.139967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.143924 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:23.146917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:23.150937 line       494                         if (i == j):
excute 13:49:23.154927 line       496                         i_j_list.append((
excute 13:49:23.158916 line       497                             i, j,
excute 13:49:23.161910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.165866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:23.168889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:23.172848 line       494                         if (i == j):
excute 13:49:23.176837 line       496                         i_j_list.append((
excute 13:49:23.179859 line       497                             i, j,
excute 13:49:23.183853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.186809 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:23.190800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:23.194824 line       494                         if (i == j):
excute 13:49:23.199776 line       496                         i_j_list.append((
excute 13:49:23.202803 line       497                             i, j,
excute 13:49:23.205795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.209783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:49:23.213739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:23.217730 line       494                         if (i == j):
excute 13:49:23.222715 line       496                         i_j_list.append((
excute 13:49:23.229720 line       497                             i, j,
excute 13:49:23.233685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.240691 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:23.245653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:23.250640 line       494                         if (i == j):
excute 13:49:23.254662 line       496                         i_j_list.append((
excute 13:49:23.258649 line       497                             i, j,
excute 13:49:23.261641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:23.265633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 1), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 1), (3, 1, 5, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 1), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 1), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 1), (6, 1, 2, 1), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 1), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 1), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:23.268626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:23.272612 line       494                         if (i == j):
excute 13:49:23.277569 line       495                             continue
excute 13:49:23.281557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:23.284583 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:23.287572 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 0, -2, 1), (7, 1, -2, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (0, 1, 0, 1), (1, 0, 0, 1), (8, 0, 0, 1), (8, 1, 0, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (5, 0, 1, 1), (5, 1, 1, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 1), (6, 0, 2, 1), (6, 1, 2, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 0, 3, 1), (9, 1, 3, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (4, 0, 4, 1), (4, 1, 4, 1), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (3, 0, 5, 1), (3, 1, 5, 1)]
excute 13:49:23.292531 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:23.297515 line       505                     if (self.RELOCATE):
excute 13:49:23.301504 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:23.304526 line       505                     if (self.RELOCATE):
excute 13:49:23.308484 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:23.311507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:23.315497 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:23.323447 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:23.329431 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.337414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:23.342395 line       556                     i = i_j[0]
excute 13:49:23.346384 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:23.350373 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.355373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:23.358351 line       556                     i = i_j[0]
excute 13:49:23.362340 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:23.366363 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.370351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:23.374343 line       556                     i = i_j[0]
excute 13:49:23.378299 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:23.382319 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.386307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:23.390304 line       556                     i = i_j[0]
excute 13:49:23.394256 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:23.398245 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.402234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:23.406222 line       556                     i = i_j[0]
excute 13:49:23.410212 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:23.413204 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.417193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:23.421184 line       556                     i = i_j[0]
excute 13:49:23.424175 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:23.428164 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.432154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 1)
excute 13:49:23.435146 line       556                     i = i_j[0]
excute 13:49:23.439134 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:23.442127 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.447145 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 156
excute 13:49:23.451135 line       560                         if (t_tmp > self.TIME):
excute 13:49:23.455125 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:23.459115 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:23.464070 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 179
excute 13:49:23.470055 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:23.474041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 1)
excute 13:49:23.477034 line       556                     i = i_j[0]
excute 13:49:23.482022 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:23.485043 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.489001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:23.492992 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:23.496981 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:23.501968 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.505957 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:23.509977 line       556                     i = i_j[0]
excute 13:49:23.513936 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:23.516958 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.520950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:49:23.524938 line       556                     i = i_j[0]
excute 13:49:23.528901 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:23.531922 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.535908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:49:23.539900 line       556                     i = i_j[0]
excute 13:49:23.543888 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:23.546879 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.550868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:49:23.554858 line       556                     i = i_j[0]
excute 13:49:23.558816 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:23.562805 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.566795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:49:23.569817 line       556                     i = i_j[0]
excute 13:49:23.573776 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:23.576801 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.580788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:49:23.584780 line       556                     i = i_j[0]
excute 13:49:23.588736 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:23.591759 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.595751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:49:23.599738 line       556                     i = i_j[0]
excute 13:49:23.605689 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:23.609679 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.613668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:49:23.616662 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:23.620652 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:23.624645 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.628628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:23.631620 line       556                     i = i_j[0]
excute 13:49:23.640969 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:23.643959 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.647946 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:23.651937 line       556                     i = i_j[0]
excute 13:49:23.655894 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:23.658917 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.662908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:49:23.666895 line       556                     i = i_j[0]
excute 13:49:23.670854 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:23.673877 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.677866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:49:23.681856 line       556                     i = i_j[0]
excute 13:49:23.685814 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:23.688838 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.692826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:49:23.696816 line       556                     i = i_j[0]
excute 13:49:23.700783 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:23.704766 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.708751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:49:23.712741 line       556                     i = i_j[0]
excute 13:49:23.716730 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:23.719722 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.724709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:49:23.727700 line       556                     i = i_j[0]
excute 13:49:23.731690 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:23.734682 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.738671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:49:23.742661 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:23.745652 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:23.749642 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.753631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:49:23.757621 line       556                     i = i_j[0]
excute 13:49:23.762609 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:23.765631 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.769591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:49:23.773578 line       556                     i = i_j[0]
excute 13:49:23.777600 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:23.780591 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.784580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:49:23.788556 line       556                     i = i_j[0]
excute 13:49:23.791562 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:23.795554 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.799509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:49:23.802532 line       556                     i = i_j[0]
excute 13:49:23.807522 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:23.811476 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.815467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:49:23.818458 line       556                     i = i_j[0]
excute 13:49:23.822447 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:23.826439 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.830426 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:49:23.833418 line       556                     i = i_j[0]
excute 13:49:23.837418 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:23.841404 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.844389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:49:23.848378 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:23.852367 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:23.856358 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.860348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 1)
excute 13:49:23.863370 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:23.867361 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:23.871348 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.875306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 1)
excute 13:49:23.878333 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:23.882318 line       557                     j = i_j[1]
excute 13:49:23.887275 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.890297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:49:23.893290 line       556                     i = i_j[0]
excute 13:49:23.897279 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:23.901269 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.905227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:49:23.910213 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:23.913205 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:23.917194 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.921183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:49:23.925173 line       556                     i = i_j[0]
excute 13:49:23.928164 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:23.932155 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.936152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:49:23.939135 line       556                     i = i_j[0]
excute 13:49:23.943124 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:23.947149 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.952101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:49:23.955127 line       556                     i = i_j[0]
excute 13:49:23.959084 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:23.963072 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.967061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:49:23.970053 line       556                     i = i_j[0]
excute 13:49:23.974042 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:23.977034 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.982021 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:49:23.985013 line       556                     i = i_j[0]
excute 13:49:23.989002 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:23.991994 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:23.996981 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:49:23.999973 line       556                     i = i_j[0]
excute 13:49:24.003962 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:24.007951 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.013936 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 1)
excute 13:49:24.016928 line       556                     i = i_j[0]
excute 13:49:24.020921 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:24.023909 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.027900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 1)
excute 13:49:24.031887 line       556                     i = i_j[0]
excute 13:49:24.034879 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:24.038868 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.042858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:24.045850 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:24.049839 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:24.053829 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.057818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:24.061807 line       556                     i = i_j[0]
excute 13:49:24.064799 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:24.068789 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.072778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:24.075770 line       556                     i = i_j[0]
excute 13:49:24.079763 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:24.083750 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.087739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:24.090730 line       556                     i = i_j[0]
excute 13:49:24.094720 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:24.097711 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.101701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:24.105690 line       556                     i = i_j[0]
excute 13:49:24.108682 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:24.112672 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.118656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:24.121647 line       556                     i = i_j[0]
excute 13:49:24.128629 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:24.132620 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.141595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:24.148579 line       556                     i = i_j[0]
excute 13:49:24.152565 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:24.157552 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.161540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:49:24.164533 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:24.168554 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:24.172543 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.176533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:49:24.180524 line       556                     i = i_j[0]
excute 13:49:24.184481 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:24.187504 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.191461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:49:24.194488 line       556                     i = i_j[0]
excute 13:49:24.198474 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:24.202467 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.206422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:49:24.209445 line       556                     i = i_j[0]
excute 13:49:24.213431 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:24.217395 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.222379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:49:24.225401 line       556                     i = i_j[0]
excute 13:49:24.229361 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:24.233351 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.237340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:49:24.241329 line       556                     i = i_j[0]
excute 13:49:24.245318 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:24.249308 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.253296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:49:24.257317 line       556                     i = i_j[0]
excute 13:49:24.261278 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:24.265266 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.269252 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:49:24.273243 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:24.277233 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:24.281220 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.285210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:49:24.289199 line       556                     i = i_j[0]
excute 13:49:24.293190 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:24.296180 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.300170 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 147
excute 13:49:24.303162 line       560                         if (t_tmp > self.TIME):
excute 13:49:24.307152 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:24.310144 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 163
excute 13:49:24.314133 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:24.317124 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 180
excute 13:49:24.322117 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:24.328098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 1)
excute 13:49:24.335077 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:24.340066 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:24.344084 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.349041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 1)
excute 13:49:24.354030 line       556                     i = i_j[0]
excute 13:49:24.358020 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:24.361007 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.364997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:24.368986 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:24.372976 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:24.376965 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.380955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:24.384944 line       556                     i = i_j[0]
excute 13:49:24.390932 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:24.393920 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.397909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:24.401898 line       556                     i = i_j[0]
excute 13:49:24.404890 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:24.408879 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.412869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:24.416860 line       556                     i = i_j[0]
excute 13:49:24.419851 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:24.424839 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.428827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:24.431818 line       556                     i = i_j[0]
excute 13:49:24.435809 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:24.438800 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.442789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:24.446798 line       556                     i = i_j[0]
excute 13:49:24.450769 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:24.453760 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.458747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:24.461738 line       556                     i = i_j[0]
excute 13:49:24.465728 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:24.469718 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.473707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 1)
excute 13:49:24.476698 line       556                     i = i_j[0]
excute 13:49:24.480688 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:24.483712 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.487700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 1)
excute 13:49:24.491690 line       556                     i = i_j[0]
excute 13:49:24.495649 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:24.498671 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.502661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:24.506636 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:24.510609 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:24.514630 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.518602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:24.521612 line       556                     i = i_j[0]
excute 13:49:24.526566 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:24.530560 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.534545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:24.537571 line       556                     i = i_j[0]
excute 13:49:24.541526 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:24.544549 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.548541 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:24.552527 line       556                     i = i_j[0]
excute 13:49:24.556485 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:24.559510 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.564465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:24.567488 line       556                     i = i_j[0]
excute 13:49:24.571448 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:24.575435 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.578458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:24.582448 line       556                     i = i_j[0]
excute 13:49:24.586406 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:24.589429 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.593422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:24.597407 line       556                     i = i_j[0]
excute 13:49:24.601365 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:24.605355 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.608346 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 1)
excute 13:49:24.612335 line       556                     i = i_j[0]
excute 13:49:24.616328 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:24.620349 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.624335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 1)
excute 13:49:24.628327 line       556                     i = i_j[0]
excute 13:49:24.634279 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:24.638299 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.642259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:49:24.645279 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:24.649271 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:24.653226 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.658216 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:49:24.661205 line       556                     i = i_j[0]
excute 13:49:24.665209 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:24.668186 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.672176 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:49:24.675168 line       556                     i = i_j[0]
excute 13:49:24.679157 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:24.682149 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.686138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:49:24.690127 line       556                     i = i_j[0]
excute 13:49:24.694129 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:24.697109 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.701098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:49:24.704090 line       556                     i = i_j[0]
excute 13:49:24.708080 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:24.711072 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.716058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:49:24.719050 line       556                     i = i_j[0]
excute 13:49:24.723040 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:24.726032 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.730021 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:49:24.735009 line       556                     i = i_j[0]
excute 13:49:24.738997 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:24.741989 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.745978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 1)
excute 13:49:24.749968 line       556                     i = i_j[0]
excute 13:49:24.753961 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:24.756949 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.760938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 1)
excute 13:49:24.764930 line       556                     i = i_j[0]
excute 13:49:24.768951 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:24.772934 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:24.776897 line       555                 for i_j in i_j_list:
excute 13:49:24.779922 line       581             self.write_matrix(
excute 13:49:24.783909 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:24.786869 line       583                 result_file_path,
excute 13:49:24.790859 line       584                 mode='a'
excute 13:49:24.847709 line       488         for t in time_steps:
excute Modified var:.. t = 143
excute 13:49:24.856687 line       489             if (t != self.TIME + 1):
excute 13:49:24.865668 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:24.872674 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:24.876631 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:24.880620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:24.887603 line       494                         if (i == j):
excute 13:49:24.893616 line       495                             continue
excute 13:49:24.899570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:24.903557 line       494                         if (i == j):
excute 13:49:24.910540 line       496                         i_j_list.append((
excute 13:49:24.915528 line       497                             i, j,
excute 13:49:24.921511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:24.927494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:49:24.930485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:24.935474 line       494                         if (i == j):
excute 13:49:24.940459 line       496                         i_j_list.append((
excute 13:49:24.943450 line       497                             i, j,
excute 13:49:24.948440 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:24.951461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:49:24.955455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:24.959440 line       494                         if (i == j):
excute 13:49:24.966392 line       496                         i_j_list.append((
excute 13:49:24.970410 line       497                             i, j,
excute 13:49:24.974400 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:24.977391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:24.981382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:24.985341 line       494                         if (i == j):
excute 13:49:24.989327 line       496                         i_j_list.append((
excute 13:49:24.993321 line       497                             i, j,
excute 13:49:24.999863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.002857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:49:25.006847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:25.015105 line       494                         if (i == j):
excute 13:49:25.019098 line       496                         i_j_list.append((
excute 13:49:25.023082 line       497                             i, j,
excute 13:49:25.030064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.034053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:49:25.038043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:25.044027 line       494                         if (i == j):
excute 13:49:25.051009 line       496                         i_j_list.append((
excute 13:49:25.054032 line       497                             i, j,
excute 13:49:25.058024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.061979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:49:25.065002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:25.068961 line       494                         if (i == j):
excute 13:49:25.074945 line       496                         i_j_list.append((
excute 13:49:25.079933 line       497                             i, j,
excute 13:49:25.083922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.087911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:49:25.091900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:25.094893 line       494                         if (i == j):
excute 13:49:25.098881 line       496                         i_j_list.append((
excute 13:49:25.102872 line       497                             i, j,
excute 13:49:25.105863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.109853 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1)]
excute 13:49:25.112845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:25.116840 line       494                         if (i == j):
excute 13:49:25.121820 line       496                         i_j_list.append((
excute 13:49:25.127804 line       497                             i, j,
excute 13:49:25.134819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.138805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1)]
excute 13:49:25.141767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:25.146752 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:25.150743 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:25.155731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:25.158722 line       494                         if (i == j):
excute 13:49:25.163709 line       496                         i_j_list.append((
excute 13:49:25.166701 line       497                             i, j,
excute 13:49:25.169692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.173682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1)]
excute 13:49:25.177670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:25.180664 line       494                         if (i == j):
excute 13:49:25.184652 line       495                             continue
excute 13:49:25.188641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:25.192630 line       494                         if (i == j):
excute 13:49:25.196627 line       496                         i_j_list.append((
excute 13:49:25.199610 line       497                             i, j,
excute 13:49:25.202604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.206594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0)]
excute 13:49:25.210582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:25.213575 line       494                         if (i == j):
excute 13:49:25.217563 line       496                         i_j_list.append((
excute 13:49:25.221553 line       497                             i, j,
excute 13:49:25.224545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.227537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:49:25.231527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:25.234517 line       494                         if (i == j):
excute 13:49:25.239519 line       496                         i_j_list.append((
excute 13:49:25.242498 line       497                             i, j,
excute 13:49:25.246490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.250475 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:25.253468 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:25.257457 line       494                         if (i == j):
excute 13:49:25.262444 line       496                         i_j_list.append((
excute 13:49:25.269426 line       497                             i, j,
excute 13:49:25.274411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.279400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:49:25.282391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:25.286380 line       494                         if (i == j):
excute 13:49:25.290369 line       496                         i_j_list.append((
excute 13:49:25.293364 line       497                             i, j,
excute 13:49:25.297351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.300373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1)]
excute 13:49:25.303365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:25.307341 line       494                         if (i == j):
excute 13:49:25.311314 line       496                         i_j_list.append((
excute 13:49:25.314336 line       497                             i, j,
excute 13:49:25.318327 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.321319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:49:25.325275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:25.333254 line       494                         if (i == j):
excute 13:49:25.341233 line       496                         i_j_list.append((
excute 13:49:25.344255 line       497                             i, j,
excute 13:49:25.349211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.354200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1)]
excute 13:49:25.358188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:25.362177 line       494                         if (i == j):
excute 13:49:25.367164 line       496                         i_j_list.append((
excute 13:49:25.370186 line       497                             i, j,
excute 13:49:25.374179 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.377170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1)]
excute 13:49:25.381159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:25.386114 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:25.390102 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:25.394101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:25.398081 line       494                         if (i == j):
excute 13:49:25.402102 line       496                         i_j_list.append((
excute 13:49:25.405092 line       497                             i, j,
excute 13:49:25.408084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.412074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1)]
excute 13:49:25.415066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:25.419056 line       494                         if (i == j):
excute 13:49:25.423015 line       496                         i_j_list.append((
excute 13:49:25.426037 line       497                             i, j,
excute 13:49:25.430028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.433985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:49:25.437007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:25.440968 line       494                         if (i == j):
excute 13:49:25.444956 line       495                             continue
excute 13:49:25.448946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:25.452935 line       494                         if (i == j):
excute 13:49:25.457922 line       496                         i_j_list.append((
excute 13:49:25.460914 line       497                             i, j,
excute 13:49:25.464903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.468892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:25.472882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:25.476872 line       494                         if (i == j):
excute 13:49:25.480869 line       496                         i_j_list.append((
excute 13:49:25.483852 line       497                             i, j,
excute 13:49:25.487842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.491831 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:25.494823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:25.498812 line       494                         if (i == j):
excute 13:49:25.502801 line       496                         i_j_list.append((
excute 13:49:25.505823 line       497                             i, j,
excute 13:49:25.509782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.513773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:25.516795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:25.520777 line       494                         if (i == j):
excute 13:49:25.524742 line       496                         i_j_list.append((
excute 13:49:25.528732 line       497                             i, j,
excute 13:49:25.531758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.534747 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:49:25.538736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:25.542708 line       494                         if (i == j):
excute 13:49:25.546685 line       496                         i_j_list.append((
excute 13:49:25.549708 line       497                             i, j,
excute 13:49:25.553696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.558682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:49:25.562641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:25.565666 line       494                         if (i == j):
excute 13:49:25.569653 line       496                         i_j_list.append((
excute 13:49:25.573644 line       497                             i, j,
excute 13:49:25.576637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.580625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:49:25.583615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:25.590566 line       494                         if (i == j):
excute 13:49:25.594555 line       496                         i_j_list.append((
excute 13:49:25.598545 line       497                             i, j,
excute 13:49:25.601536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.605525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1)]
excute 13:49:25.609516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:25.612538 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:25.616531 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:25.620487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:25.624476 line       494                         if (i == j):
excute 13:49:25.628466 line       496                         i_j_list.append((
excute 13:49:25.632456 line       497                             i, j,
excute 13:49:25.636443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.639437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1)]
excute 13:49:25.643426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:25.647416 line       494                         if (i == j):
excute 13:49:25.651405 line       496                         i_j_list.append((
excute 13:49:25.655394 line       497                             i, j,
excute 13:49:25.660379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.664370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0)]
excute 13:49:25.667362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:25.671351 line       494                         if (i == j):
excute 13:49:25.676339 line       496                         i_j_list.append((
excute 13:49:25.680328 line       497                             i, j,
excute 13:49:25.685346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.689335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:49:25.692324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:25.696283 line       494                         if (i == j):
excute 13:49:25.700274 line       495                             continue
excute 13:49:25.704263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:25.708253 line       494                         if (i == j):
excute 13:49:25.712243 line       496                         i_j_list.append((
excute 13:49:25.716231 line       497                             i, j,
excute 13:49:25.719223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.723211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:49:25.726202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:25.730194 line       494                         if (i == j):
excute 13:49:25.734182 line       496                         i_j_list.append((
excute 13:49:25.738173 line       497                             i, j,
excute 13:49:25.741165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.744157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:49:25.748146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:25.752134 line       494                         if (i == j):
excute 13:49:25.756125 line       496                         i_j_list.append((
excute 13:49:25.761111 line       497                             i, j,
excute 13:49:25.764104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.768092 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1)]
excute 13:49:25.771084 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:25.776071 line       494                         if (i == j):
excute 13:49:25.783055 line       496                         i_j_list.append((
excute 13:49:25.787041 line       497                             i, j,
excute 13:49:25.790035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.793026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0)]
excute 13:49:25.797014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:25.800006 line       494                         if (i == j):
excute 13:49:25.803997 line       496                         i_j_list.append((
excute 13:49:25.807984 line       497                             i, j,
excute 13:49:25.810977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.813969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1)]
excute 13:49:25.817990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:25.821948 line       494                         if (i == j):
excute 13:49:25.825941 line       496                         i_j_list.append((
excute 13:49:25.828963 line       497                             i, j,
excute 13:49:25.831954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.835942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1)]
excute 13:49:25.838936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:25.842904 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:25.845915 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:25.849904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:25.853895 line       494                         if (i == j):
excute 13:49:25.857854 line       496                         i_j_list.append((
excute 13:49:25.860845 line       497                             i, j,
excute 13:49:25.865862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.868855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1)]
excute 13:49:25.872842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:25.876802 line       494                         if (i == j):
excute 13:49:25.880794 line       496                         i_j_list.append((
excute 13:49:25.883813 line       497                             i, j,
excute 13:49:25.887774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.890795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0)]
excute 13:49:25.894753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:25.897776 line       494                         if (i == j):
excute 13:49:25.901766 line       496                         i_j_list.append((
excute 13:49:25.905756 line       497                             i, j,
excute 13:49:25.908749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.912704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:25.915729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:25.919693 line       494                         if (i == j):
excute 13:49:25.923678 line       496                         i_j_list.append((
excute 13:49:25.926698 line       497                             i, j,
excute 13:49:25.930688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.933682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:25.937659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:25.940664 line       494                         if (i == j):
excute 13:49:25.944651 line       495                             continue
excute 13:49:25.949607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:25.952630 line       494                         if (i == j):
excute 13:49:25.956621 line       496                         i_j_list.append((
excute 13:49:25.960576 line       497                             i, j,
excute 13:49:25.963600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.968557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:25.971548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:25.976535 line       494                         if (i == j):
excute 13:49:25.979557 line       496                         i_j_list.append((
excute 13:49:25.983549 line       497                             i, j,
excute 13:49:25.986539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:25.990528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1)]
excute 13:49:25.993521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:25.997510 line       494                         if (i == j):
excute 13:49:26.001499 line       496                         i_j_list.append((
excute 13:49:26.005488 line       497                             i, j,
excute 13:49:26.008480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.012471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0)]
excute 13:49:26.015465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:26.019451 line       494                         if (i == j):
excute 13:49:26.023409 line       496                         i_j_list.append((
excute 13:49:26.027399 line       497                             i, j,
excute 13:49:26.031388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.034381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1)]
excute 13:49:26.037373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:26.041363 line       494                         if (i == j):
excute 13:49:26.045352 line       496                         i_j_list.append((
excute 13:49:26.049341 line       497                             i, j,
excute 13:49:26.053330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.056322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1)]
excute 13:49:26.060312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:26.065297 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:26.070287 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:26.074275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:26.078270 line       494                         if (i == j):
excute 13:49:26.082251 line       496                         i_j_list.append((
excute 13:49:26.085275 line       497                             i, j,
excute 13:49:26.089234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.092259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1)]
excute 13:49:26.096213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:26.099238 line       494                         if (i == j):
excute 13:49:26.103230 line       496                         i_j_list.append((
excute 13:49:26.107217 line       497                             i, j,
excute 13:49:26.110208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.113201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0)]
excute 13:49:26.117189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:26.121148 line       494                         if (i == j):
excute 13:49:26.125138 line       496                         i_j_list.append((
excute 13:49:26.128161 line       497                             i, j,
excute 13:49:26.131152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.135144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:49:26.139100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:26.142123 line       494                         if (i == j):
excute 13:49:26.146112 line       496                         i_j_list.append((
excute 13:49:26.150070 line       497                             i, j,
excute 13:49:26.154061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.158050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:49:26.162039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:26.166029 line       494                         if (i == j):
excute 13:49:26.171014 line       496                         i_j_list.append((
excute 13:49:26.175003 line       497                             i, j,
excute 13:49:26.178994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.181986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:49:26.185975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:26.189965 line       494                         if (i == j):
excute 13:49:26.194952 line       495                             continue
excute 13:49:26.197944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:26.201933 line       494                         if (i == j):
excute 13:49:26.205923 line       496                         i_j_list.append((
excute 13:49:26.208914 line       497                             i, j,
excute 13:49:26.212903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.216893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:49:26.220880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:26.223875 line       494                         if (i == j):
excute 13:49:26.228860 line       496                         i_j_list.append((
excute 13:49:26.231853 line       497                             i, j,
excute 13:49:26.234845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.238834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:49:26.242823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:26.246815 line       494                         if (i == j):
excute 13:49:26.250802 line       496                         i_j_list.append((
excute 13:49:26.255788 line       497                             i, j,
excute 13:49:26.258810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.262803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1)]
excute 13:49:26.265792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:26.269751 line       494                         if (i == j):
excute 13:49:26.273743 line       496                         i_j_list.append((
excute 13:49:26.280721 line       497                             i, j,
excute 13:49:26.284741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.288731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1)]
excute 13:49:26.291726 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:26.295713 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:26.299705 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:26.303693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:26.306682 line       494                         if (i == j):
excute 13:49:26.310641 line       496                         i_j_list.append((
excute 13:49:26.313665 line       497                             i, j,
excute 13:49:26.317654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.320645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1)]
excute 13:49:26.324636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:26.334580 line       494                         if (i == j):
excute 13:49:26.340561 line       496                         i_j_list.append((
excute 13:49:26.344562 line       497                             i, j,
excute 13:49:26.347576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.353526 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0)]
excute 13:49:26.364497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:26.369487 line       494                         if (i == j):
excute 13:49:26.375470 line       496                         i_j_list.append((
excute 13:49:26.381452 line       497                             i, j,
excute 13:49:26.385442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.393419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:49:26.397410 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:26.401399 line       494                         if (i == j):
excute 13:49:26.406421 line       496                         i_j_list.append((
excute 13:49:26.410377 line       497                             i, j,
excute 13:49:26.416358 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.421345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:49:26.424336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:26.434311 line       494                         if (i == j):
excute 13:49:26.438299 line       496                         i_j_list.append((
excute 13:49:26.447277 line       497                             i, j,
excute 13:49:26.451265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.457252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:49:26.467224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:26.474205 line       494                         if (i == j):
excute 13:49:26.483180 line       496                         i_j_list.append((
excute 13:49:26.494151 line       497                             i, j,
excute 13:49:26.505121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.516092 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:49:26.523073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:26.530054 line       494                         if (i == j):
excute 13:49:26.536038 line       495                             continue
excute 13:49:26.541025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:26.547009 line       494                         if (i == j):
excute 13:49:26.555986 line       496                         i_j_list.append((
excute 13:49:26.560971 line       497                             i, j,
excute 13:49:26.567954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.573937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:49:26.580918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:26.589894 line       494                         if (i == j):
excute 13:49:26.595878 line       496                         i_j_list.append((
excute 13:49:26.603857 line       497                             i, j,
excute 13:49:26.609842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.617820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1)]
excute 13:49:26.622806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:26.628791 line       494                         if (i == j):
excute 13:49:26.634776 line       496                         i_j_list.append((
excute 13:49:26.643751 line       497                             i, j,
excute 13:49:26.649734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.655720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1)]
excute 13:49:26.660705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:26.667687 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:26.673670 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:26.682647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:26.690625 line       494                         if (i == j):
excute 13:49:26.699602 line       496                         i_j_list.append((
excute 13:49:26.705587 line       497                             i, j,
excute 13:49:26.712567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.719549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1)]
excute 13:49:26.727526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:26.736503 line       494                         if (i == j):
excute 13:49:26.744481 line       496                         i_j_list.append((
excute 13:49:26.752459 line       497                             i, j,
excute 13:49:26.758444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.764427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0)]
excute 13:49:26.770413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:26.777395 line       494                         if (i == j):
excute 13:49:26.787366 line       496                         i_j_list.append((
excute 13:49:26.796342 line       497                             i, j,
excute 13:49:26.802328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.806317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:26.813300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:26.817286 line       494                         if (i == j):
excute 13:49:26.821275 line       496                         i_j_list.append((
excute 13:49:26.825265 line       497                             i, j,
excute 13:49:26.829254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.833244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:26.836235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:26.840227 line       494                         if (i == j):
excute 13:49:26.844214 line       496                         i_j_list.append((
excute 13:49:26.848204 line       497                             i, j,
excute 13:49:26.851196 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.855185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:26.858176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:26.862167 line       494                         if (i == j):
excute 13:49:26.866156 line       496                         i_j_list.append((
excute 13:49:26.869147 line       497                             i, j,
excute 13:49:26.873138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.876161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:26.880126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:26.884108 line       494                         if (i == j):
excute 13:49:26.888098 line       496                         i_j_list.append((
excute 13:49:26.891091 line       497                             i, j,
excute 13:49:26.896079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.899099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1)]
excute 13:49:26.903088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:26.907046 line       494                         if (i == j):
excute 13:49:26.911038 line       495                             continue
excute 13:49:26.914061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:26.918049 line       494                         if (i == j):
excute 13:49:26.922008 line       496                         i_j_list.append((
excute 13:49:26.925032 line       497                             i, j,
excute 13:49:26.929019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.933012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1)]
excute 13:49:26.936968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:26.940956 line       494                         if (i == j):
excute 13:49:26.944944 line       496                         i_j_list.append((
excute 13:49:26.950961 line       497                             i, j,
excute 13:49:26.954951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.957942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1)]
excute 13:49:26.961934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:26.966888 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:26.969911 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:26.973899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:26.977857 line       494                         if (i == j):
excute 13:49:26.981848 line       496                         i_j_list.append((
excute 13:49:26.985837 line       497                             i, j,
excute 13:49:26.989826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:26.993816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1)]
excute 13:49:26.997806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:27.002790 line       494                         if (i == j):
excute 13:49:27.007792 line       496                         i_j_list.append((
excute 13:49:27.010771 line       497                             i, j,
excute 13:49:27.014762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.018749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0)]
excute 13:49:27.022739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:27.026728 line       494                         if (i == j):
excute 13:49:27.030718 line       496                         i_j_list.append((
excute 13:49:27.034706 line       497                             i, j,
excute 13:49:27.038696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.041688 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:49:27.045677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:27.049666 line       494                         if (i == j):
excute 13:49:27.054653 line       496                         i_j_list.append((
excute 13:49:27.058642 line       497                             i, j,
excute 13:49:27.061634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.065623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:49:27.069613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:27.073602 line       494                         if (i == j):
excute 13:49:27.077597 line       496                         i_j_list.append((
excute 13:49:27.081581 line       497                             i, j,
excute 13:49:27.085571 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.089558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:49:27.092552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:27.096549 line       494                         if (i == j):
excute 13:49:27.101528 line       496                         i_j_list.append((
excute 13:49:27.105516 line       497                             i, j,
excute 13:49:27.108509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.112499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:49:27.115490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:27.119479 line       494                         if (i == j):
excute 13:49:27.123468 line       496                         i_j_list.append((
excute 13:49:27.126491 line       497                             i, j,
excute 13:49:27.130480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.134439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1)]
excute 13:49:27.138429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:27.141420 line       494                         if (i == j):
excute 13:49:27.145410 line       496                         i_j_list.append((
excute 13:49:27.149400 line       497                             i, j,
excute 13:49:27.152391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.156380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:49:27.160369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:27.163362 line       494                         if (i == j):
excute 13:49:27.167351 line       495                             continue
excute 13:49:27.171341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:27.174332 line       494                         if (i == j):
excute 13:49:27.178323 line       496                         i_j_list.append((
excute 13:49:27.182310 line       497                             i, j,
excute 13:49:27.185303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.188295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1)]
excute 13:49:27.192315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:27.196273 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:27.200265 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:27.204252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:27.209239 line       494                         if (i == j):
excute 13:49:27.213229 line       496                         i_j_list.append((
excute 13:49:27.217219 line       497                             i, j,
excute 13:49:27.220211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.224200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1)]
excute 13:49:27.228189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:27.232179 line       494                         if (i == j):
excute 13:49:27.237164 line       496                         i_j_list.append((
excute 13:49:27.240157 line       497                             i, j,
excute 13:49:27.244147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.247139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0)]
excute 13:49:27.251128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:27.256113 line       494                         if (i == j):
excute 13:49:27.260105 line       496                         i_j_list.append((
excute 13:49:27.263095 line       497                             i, j,
excute 13:49:27.267086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.270076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:27.274067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:27.279053 line       494                         if (i == j):
excute 13:49:27.285035 line       496                         i_j_list.append((
excute 13:49:27.289026 line       497                             i, j,
excute 13:49:27.293016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.297005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:27.299997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:27.303987 line       494                         if (i == j):
excute 13:49:27.308972 line       496                         i_j_list.append((
excute 13:49:27.312962 line       497                             i, j,
excute 13:49:27.316952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.320941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:27.323933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:27.330915 line       494                         if (i == j):
excute 13:49:27.337895 line       496                         i_j_list.append((
excute 13:49:27.341884 line       497                             i, j,
excute 13:49:27.344876 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.348867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:27.353852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:27.357843 line       494                         if (i == j):
excute 13:49:27.362829 line       496                         i_j_list.append((
excute 13:49:27.366819 line       497                             i, j,
excute 13:49:27.370806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.374797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:49:27.377790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:27.382777 line       494                         if (i == j):
excute 13:49:27.387764 line       496                         i_j_list.append((
excute 13:49:27.391753 line       497                             i, j,
excute 13:49:27.395742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.401724 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0)]
excute 13:49:27.406710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:27.412695 line       494                         if (i == j):
excute 13:49:27.416686 line       496                         i_j_list.append((
excute 13:49:27.420674 line       497                             i, j,
excute 13:49:27.424663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:27.427655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 1), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 1), (3, 0, 5, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 1), (3, 9, 5, 1), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 1), (4, 9, 4, 1), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 2, 1), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 1), (6, 9, 2, 1), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0), (9, 8, 3, 1)]
excute 13:49:27.431645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:27.435635 line       494                         if (i == j):
excute 13:49:27.439624 line       495                             continue
excute 13:49:27.442615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:27.446605 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:27.450596 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 0, -2, 1), (7, 6, -2, 1), (7, 8, -2, 1), (7, 9, -2, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 7, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 7, 0, 0), (0, 6, 0, 1), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 0, 1), (1, 6, 0, 1), (1, 8, 0, 1), (1, 9, 0, 1), (5, 0, 0, 1), (5, 6, 0, 1), (5, 8, 0, 1), (5, 9, 0, 1), (8, 0, 0, 1), (8, 6, 0, 1), (8, 9, 0, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (2, 0, 2, 1), (2, 6, 2, 1), (2, 8, 2, 1), (2, 9, 2, 1), (6, 0, 2, 1), (6, 8, 2, 1), (6, 9, 2, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 0, 3, 1), (9, 6, 3, 1), (9, 8, 3, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 7, 4, 0), (4, 0, 4, 1), (4, 6, 4, 1), (4, 8, 4, 1), (4, 9, 4, 1), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 7, 5, 0), (3, 0, 5, 1), (3, 6, 5, 1), (3, 8, 5, 1), (3, 9, 5, 1)]
excute 13:49:27.454599 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:27.458574 line       505                     if (self.RELOCATE):
excute 13:49:27.462564 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:27.466552 line       505                     if (self.RELOCATE):
excute 13:49:27.470543 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:27.473533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:27.477522 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:27.481512 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:27.486500 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.490488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:27.493478 line       556                     i = i_j[0]
excute 13:49:27.498467 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:27.502456 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.506446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:27.511432 line       556                     i = i_j[0]
excute 13:49:27.515422 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:27.519409 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.523399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:27.526391 line       556                     i = i_j[0]
excute 13:49:27.530381 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:27.533372 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.537362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:27.541352 line       556                     i = i_j[0]
excute 13:49:27.544343 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:27.548333 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.552322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 1)
excute 13:49:27.556312 line       556                     i = i_j[0]
excute 13:49:27.560301 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:27.563292 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.567283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 1)
excute 13:49:27.571271 line       556                     i = i_j[0]
excute 13:49:27.574263 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:27.578253 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.582256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 1)
excute 13:49:27.585234 line       556                     i = i_j[0]
excute 13:49:27.589224 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:27.593243 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.597209 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:49:27.600228 line       560                         if (t_tmp > self.TIME):
excute 13:49:27.604216 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:27.608187 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:27.611164 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 181
excute 13:49:27.615154 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:27.620143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 1)
excute 13:49:27.623133 line       556                     i = i_j[0]
excute 13:49:27.628119 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:27.632110 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.636098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:49:27.639091 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:27.643080 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:27.648067 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.652055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:27.656078 line       556                     i = i_j[0]
excute 13:49:27.660070 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:27.663056 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.667015 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:27.670038 line       556                     i = i_j[0]
excute 13:49:27.674028 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:27.678017 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.682006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:49:27.685996 line       556                     i = i_j[0]
excute 13:49:27.689972 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:27.692978 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.696934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:49:27.700955 line       556                     i = i_j[0]
excute 13:49:27.704945 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:27.708934 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.712893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:49:27.716882 line       556                     i = i_j[0]
excute 13:49:27.725148 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:27.728169 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.735117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:49:27.738107 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:27.742099 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:27.746087 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.750043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:27.754035 line       556                     i = i_j[0]
excute 13:49:27.758054 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:27.761014 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.765016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:27.767996 line       556                     i = i_j[0]
excute 13:49:27.771984 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:27.775974 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.781958 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:49:27.784982 line       556                     i = i_j[0]
excute 13:49:27.788971 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:27.792960 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.796951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:49:27.799942 line       556                     i = i_j[0]
excute 13:49:27.803932 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:27.807921 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.811910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:49:27.814902 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:27.819861 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:27.824876 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.828834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:49:27.831826 line       556                     i = i_j[0]
excute 13:49:27.835815 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:27.839804 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.843793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:49:27.846785 line       556                     i = i_j[0]
excute 13:49:27.850774 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:27.854763 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.858754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:49:27.861780 line       556                     i = i_j[0]
excute 13:49:27.865766 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:27.869758 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.873717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:49:27.876737 line       556                     i = i_j[0]
excute 13:49:27.880730 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:27.884684 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.887675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:49:27.891664 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:27.895655 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:27.899644 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.903634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:49:27.906659 line       556                     i = i_j[0]
excute 13:49:27.910646 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:27.914638 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.918594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:49:27.921617 line       556                     i = i_j[0]
excute 13:49:27.927570 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:27.931559 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.934582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:49:27.938574 line       556                     i = i_j[0]
excute 13:49:27.942530 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:27.946554 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.951505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:49:27.955494 line       556                     i = i_j[0]
excute 13:49:27.959484 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:27.965470 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.970454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:49:27.973447 line       556                     i = i_j[0]
excute 13:49:27.978447 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:27.981424 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:27.985446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:49:27.989410 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:27.993403 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:27.997391 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.001373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 1)
excute 13:49:28.005361 line       556                     i = i_j[0]
excute 13:49:28.009350 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.013352 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.017330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:49:28.020353 line       556                     i = i_j[0]
excute 13:49:28.024311 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.028303 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.032289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 1)
excute 13:49:28.036288 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:28.039270 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.043259 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.047249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:49:28.050241 line       556                     i = i_j[0]
excute 13:49:28.055229 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:28.058220 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.062209 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 1)
excute 13:49:28.065201 line       556                     i = i_j[0]
excute 13:49:28.069195 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.072182 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.076171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 1)
excute 13:49:28.080161 line       556                     i = i_j[0]
excute 13:49:28.084150 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.088139 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.092130 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 151
excute 13:49:28.095121 line       560                         if (t_tmp > self.TIME):
excute 13:49:28.099111 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:28.102134 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:28.106092 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:28.109118 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:28.112110 line       569                                     available_vhecles[i][t],
excute 13:49:28.116098 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:28.119089 line       571                                     self.S_capacities[j],
excute 13:49:28.123080 line       572                                     demands[t][i][j],
excute 13:49:28.126070 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 143
calc_contract     13:49:28.132023 call       352     def caluculate_contract(
calc_contract     13:49:28.135049 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:28.136045 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:28.137010 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:28.137010 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:28.138007 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:28.138007 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:28.139006 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:28.140003 line       575                                 rsf += rsf_tmp
excute 13:49:28.144022 line       576                                 rse += rse_tmp
excute 13:49:28.147018 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 143
move_cars     Starting var:.. t_tmp = 151
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:28.151006 call       388     def move_cars(
move_cars     13:49:28.154961 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:28.156956 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     13:49:28.157954 line       399         return available_vhecles
move_cars     13:49:28.159948 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:49:28.161978 line       579                                 success += can_contract
excute Modified var:.. success = 63
excute 13:49:28.165964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 1)
excute 13:49:28.169941 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:28.173911 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.177906 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.181922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:49:28.184913 line       556                     i = i_j[0]
excute 13:49:28.188905 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:28.192874 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.195884 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 153
excute 13:49:28.199872 line       560                         if (t_tmp > self.TIME):
excute 13:49:28.203862 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:28.207821 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:28.210844 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 182
excute 13:49:28.214824 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:28.218792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 1)
excute 13:49:28.221814 line       556                     i = i_j[0]
excute 13:49:28.225773 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.228798 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.233753 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 1)
excute 13:49:28.236777 line       556                     i = i_j[0]
excute 13:49:28.240764 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.244756 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.248715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 1)
excute 13:49:28.251734 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:28.255724 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.260680 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.264669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:49:28.267691 line       556                     i = i_j[0]
excute 13:49:28.271651 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:28.275640 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.280627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 1)
excute 13:49:28.284617 line       556                     i = i_j[0]
excute 13:49:28.288606 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.291597 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.296583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:28.299576 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:28.306559 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:28.310547 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.314536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:28.317558 line       556                     i = i_j[0]
excute 13:49:28.321518 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:28.325505 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.335480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:28.343491 line       556                     i = i_j[0]
excute 13:49:28.347448 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:28.351439 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.356423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:28.359446 line       556                     i = i_j[0]
excute 13:49:28.363435 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:28.367425 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.372381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:28.375404 line       556                     i = i_j[0]
excute 13:49:28.379363 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:28.387345 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.391332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:49:28.396316 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:28.402301 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:28.406297 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.410278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:49:28.413302 line       556                     i = i_j[0]
excute 13:49:28.418259 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:28.421282 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.425240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:49:28.428265 line       556                     i = i_j[0]
excute 13:49:28.432253 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:28.436244 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.440200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:49:28.444188 line       556                     i = i_j[0]
excute 13:49:28.449210 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:28.453195 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.457188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:49:28.461162 line       556                     i = i_j[0]
excute 13:49:28.465167 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:28.468159 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.472150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:49:28.476105 line       556                     i = i_j[0]
excute 13:49:28.480094 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:28.484117 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.488102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:49:28.492061 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:28.495083 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.500050 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.504029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:49:28.507056 line       556                     i = i_j[0]
excute 13:49:28.512008 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:28.515035 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.519024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:49:28.523019 line       556                     i = i_j[0]
excute 13:49:28.527004 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.529995 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.533987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:49:28.537974 line       556                     i = i_j[0]
excute 13:49:28.541928 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.545953 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.549944 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 1)
excute 13:49:28.553933 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:28.557886 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.561874 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.565864 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 154
excute 13:49:28.568889 line       560                         if (t_tmp > self.TIME):
excute 13:49:28.572880 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:28.576867 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:28.579865 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 183
excute 13:49:28.583846 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:28.587808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 1)
excute 13:49:28.590796 line       556                     i = i_j[0]
excute 13:49:28.594786 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.598774 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.602764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 1)
excute 13:49:28.605756 line       556                     i = i_j[0]
excute 13:49:28.609745 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.613735 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.617725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:28.620716 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:28.624706 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:28.628694 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.632685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:28.635676 line       556                     i = i_j[0]
excute 13:49:28.640664 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:28.643690 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.649650 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:28.653628 line       556                     i = i_j[0]
excute 13:49:28.657617 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:28.661607 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.665603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:28.668619 line       556                     i = i_j[0]
excute 13:49:28.672612 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:28.676599 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.680557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:28.683583 line       556                     i = i_j[0]
excute 13:49:28.687538 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:28.690562 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.694551 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:28.698539 line       556                     i = i_j[0]
excute 13:49:28.702498 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:28.705521 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.709511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 1)
excute 13:49:28.714499 line       556                     i = i_j[0]
excute 13:49:28.718487 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.721478 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.725446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:49:28.729457 line       556                     i = i_j[0]
excute 13:49:28.733426 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:28.736441 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.740399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 1)
excute 13:49:28.743423 line       556                     i = i_j[0]
excute 13:49:28.747413 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.752398 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.756385 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:28.760377 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:28.764332 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:28.768330 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.771313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:28.775302 line       556                     i = i_j[0]
excute 13:49:28.779293 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:28.785278 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.789268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:28.792257 line       556                     i = i_j[0]
excute 13:49:28.809411 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:28.812436 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.816391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:28.819415 line       556                     i = i_j[0]
excute 13:49:28.824371 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:28.827393 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.831381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:28.835341 line       556                     i = i_j[0]
excute 13:49:28.839330 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:28.842321 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.846319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 1)
excute 13:49:28.849303 line       556                     i = i_j[0]
excute 13:49:28.855289 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.858311 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.862269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 1)
excute 13:49:28.866258 line       556                     i = i_j[0]
excute 13:49:28.869281 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:28.873273 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.877228 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 1)
excute 13:49:28.880252 line       556                     i = i_j[0]
excute 13:49:28.884245 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:28.888233 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.892202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 1)
excute 13:49:28.895211 line       556                     i = i_j[0]
excute 13:49:28.899184 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:28.903160 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.906182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:49:28.910172 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:28.914131 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:28.918151 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.922115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:49:28.925132 line       556                     i = i_j[0]
excute 13:49:28.929090 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:28.932116 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.936102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:49:28.940095 line       556                     i = i_j[0]
excute 13:49:28.944083 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:28.947073 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.952030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:49:28.958012 line       556                     i = i_j[0]
excute 13:49:28.962002 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:28.964993 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.968982 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:49:28.972973 line       556                     i = i_j[0]
excute 13:49:28.976962 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:28.979953 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.983943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 1)
excute 13:49:28.987933 line       556                     i = i_j[0]
excute 13:49:28.991923 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:28.994945 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:28.998904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 1)
excute 13:49:29.001926 line       556                     i = i_j[0]
excute 13:49:29.005916 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:29.009908 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:29.013864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 1)
excute 13:49:29.016889 line       556                     i = i_j[0]
excute 13:49:29.020875 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:29.024868 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:29.028856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 1)
excute 13:49:29.031847 line       556                     i = i_j[0]
excute 13:49:29.035826 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:29.039794 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:29.042817 line       555                 for i_j in i_j_list:
excute 13:49:29.046808 line       581             self.write_matrix(
excute 13:49:29.049799 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:29.053789 line       583                 result_file_path,
excute 13:49:29.057747 line       584                 mode='a'
excute 13:49:29.065816 line       488         for t in time_steps:
excute Modified var:.. t = 144
excute 13:49:29.069813 line       489             if (t != self.TIME + 1):
excute 13:49:29.076786 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:29.083768 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:29.088753 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:29.095737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:29.099724 line       494                         if (i == j):
excute 13:49:29.104711 line       495                             continue
excute 13:49:29.108702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:29.112691 line       494                         if (i == j):
excute 13:49:29.119672 line       496                         i_j_list.append((
excute 13:49:29.126652 line       497                             i, j,
excute 13:49:29.140615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.146598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:49:29.154576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:29.163554 line       494                         if (i == j):
excute 13:49:29.169539 line       496                         i_j_list.append((
excute 13:49:29.173526 line       497                             i, j,
excute 13:49:29.179510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.182510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:49:29.186494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:29.193475 line       494                         if (i == j):
excute 13:49:29.197466 line       496                         i_j_list.append((
excute 13:49:29.204456 line       497                             i, j,
excute 13:49:29.208432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.211425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:29.215414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:29.220402 line       494                         if (i == j):
excute 13:49:29.223394 line       496                         i_j_list.append((
excute 13:49:29.227382 line       497                             i, j,
excute 13:49:29.234376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.239352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:49:29.245334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:29.249324 line       494                         if (i == j):
excute 13:49:29.252315 line       496                         i_j_list.append((
excute 13:49:29.256305 line       497                             i, j,
excute 13:49:29.260294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.264301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:49:29.268273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:29.272262 line       494                         if (i == j):
excute 13:49:29.277250 line       496                         i_j_list.append((
excute 13:49:29.281239 line       497                             i, j,
excute 13:49:29.286225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.290214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:49:29.293206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:29.297196 line       494                         if (i == j):
excute 13:49:29.301186 line       496                         i_j_list.append((
excute 13:49:29.305175 line       497                             i, j,
excute 13:49:29.308166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.312156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1)]
excute 13:49:29.315149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:29.319138 line       494                         if (i == j):
excute 13:49:29.323127 line       496                         i_j_list.append((
excute 13:49:29.330108 line       497                             i, j,
excute 13:49:29.337091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.342077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0)]
excute 13:49:29.345069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:29.349058 line       494                         if (i == j):
excute 13:49:29.357037 line       496                         i_j_list.append((
excute 13:49:29.363031 line       497                             i, j,
excute 13:49:29.367030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.372994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:49:29.375985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:29.379975 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:29.383964 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:29.387952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:29.391942 line       494                         if (i == j):
excute 13:49:29.395932 line       496                         i_j_list.append((
excute 13:49:29.398924 line       497                             i, j,
excute 13:49:29.402914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.406904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:49:29.409897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:29.413885 line       494                         if (i == j):
excute 13:49:29.418873 line       495                             continue
excute 13:49:29.421864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:29.425854 line       494                         if (i == j):
excute 13:49:29.429857 line       496                         i_j_list.append((
excute 13:49:29.433831 line       497                             i, j,
excute 13:49:29.436823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.440811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:49:29.443805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:29.447796 line       494                         if (i == j):
excute 13:49:29.451785 line       496                         i_j_list.append((
excute 13:49:29.455774 line       497                             i, j,
excute 13:49:29.458764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.463766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:49:29.468739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:29.473726 line       494                         if (i == j):
excute 13:49:29.477713 line       496                         i_j_list.append((
excute 13:49:29.480706 line       497                             i, j,
excute 13:49:29.484729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.488684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:49:29.491677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:29.495667 line       494                         if (i == j):
excute 13:49:29.500655 line       496                         i_j_list.append((
excute 13:49:29.503679 line       497                             i, j,
excute 13:49:29.507665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.511624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1)]
excute 13:49:29.515613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:29.518606 line       494                         if (i == j):
excute 13:49:29.523593 line       496                         i_j_list.append((
excute 13:49:29.526584 line       497                             i, j,
excute 13:49:29.530573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.534563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0)]
excute 13:49:29.537555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:29.542542 line       494                         if (i == j):
excute 13:49:29.545539 line       496                         i_j_list.append((
excute 13:49:29.549522 line       497                             i, j,
excute 13:49:29.552514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.556503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1)]
excute 13:49:29.559495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:29.563485 line       494                         if (i == j):
excute 13:49:29.567475 line       496                         i_j_list.append((
excute 13:49:29.570466 line       497                             i, j,
excute 13:49:29.574456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.578445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0)]
excute 13:49:29.582435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:29.585426 line       494                         if (i == j):
excute 13:49:29.590414 line       496                         i_j_list.append((
excute 13:49:29.593405 line       497                             i, j,
excute 13:49:29.597395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.601383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:49:29.604376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:29.608366 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:29.612354 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:29.618338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:29.622328 line       494                         if (i == j):
excute 13:49:29.626316 line       496                         i_j_list.append((
excute 13:49:29.629310 line       497                             i, j,
excute 13:49:29.633298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.637289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:49:29.640278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:29.645267 line       494                         if (i == j):
excute 13:49:29.649257 line       496                         i_j_list.append((
excute 13:49:29.653246 line       497                             i, j,
excute 13:49:29.657234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.660226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:29.664222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:29.667208 line       494                         if (i == j):
excute 13:49:29.671197 line       495                             continue
excute 13:49:29.674189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:29.679177 line       494                         if (i == j):
excute 13:49:29.683165 line       496                         i_j_list.append((
excute 13:49:29.687154 line       497                             i, j,
excute 13:49:29.691144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.695137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:29.698125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:29.702115 line       494                         if (i == j):
excute 13:49:29.706104 line       496                         i_j_list.append((
excute 13:49:29.710093 line       497                             i, j,
excute 13:49:29.715081 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.718072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:29.722061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:29.726051 line       494                         if (i == j):
excute 13:49:29.730040 line       496                         i_j_list.append((
excute 13:49:29.734029 line       497                             i, j,
excute 13:49:29.738018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.741011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1)]
excute 13:49:29.745000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:29.748990 line       494                         if (i == j):
excute 13:49:29.753977 line       496                         i_j_list.append((
excute 13:49:29.756973 line       497                             i, j,
excute 13:49:29.760957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.763948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0)]
excute 13:49:29.766941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:29.770930 line       494                         if (i == j):
excute 13:49:29.774920 line       496                         i_j_list.append((
excute 13:49:29.778909 line       497                             i, j,
excute 13:49:29.784891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.787884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1)]
excute 13:49:29.790876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:29.794865 line       494                         if (i == j):
excute 13:49:29.798856 line       496                         i_j_list.append((
excute 13:49:29.801847 line       497                             i, j,
excute 13:49:29.805836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.808860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0)]
excute 13:49:29.811854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:29.815841 line       494                         if (i == j):
excute 13:49:29.819799 line       496                         i_j_list.append((
excute 13:49:29.822826 line       497                             i, j,
excute 13:49:29.826812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.829807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:29.833768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:29.837752 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:29.841747 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:29.844734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:29.848723 line       494                         if (i == j):
excute 13:49:29.851715 line       496                         i_j_list.append((
excute 13:49:29.857699 line       497                             i, j,
excute 13:49:29.861688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.864678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0)]
excute 13:49:29.868670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:29.872657 line       494                         if (i == j):
excute 13:49:29.876649 line       496                         i_j_list.append((
excute 13:49:29.879669 line       497                             i, j,
excute 13:49:29.884626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.887648 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:49:29.891611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:29.894634 line       494                         if (i == j):
excute 13:49:29.898619 line       496                         i_j_list.append((
excute 13:49:29.902579 line       497                             i, j,
excute 13:49:29.905571 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.908563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:49:29.912552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:29.917540 line       494                         if (i == j):
excute 13:49:29.920531 line       495                             continue
excute 13:49:29.924520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:29.928509 line       494                         if (i == j):
excute 13:49:29.932500 line       496                         i_j_list.append((
excute 13:49:29.935491 line       497                             i, j,
excute 13:49:29.939480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.943470 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:49:29.947460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:29.952445 line       494                         if (i == j):
excute 13:49:29.956436 line       496                         i_j_list.append((
excute 13:49:29.960425 line       497                             i, j,
excute 13:49:29.964413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.967405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1)]
excute 13:49:29.971395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:29.975384 line       494                         if (i == j):
excute 13:49:29.980371 line       496                         i_j_list.append((
excute 13:49:29.984364 line       497                             i, j,
excute 13:49:29.989346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:29.992336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0)]
excute 13:49:29.995329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:29.999318 line       494                         if (i == j):
excute 13:49:30.003307 line       496                         i_j_list.append((
excute 13:49:30.007297 line       497                             i, j,
excute 13:49:30.010289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.014278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1)]
excute 13:49:30.017270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:30.021263 line       494                         if (i == j):
excute 13:49:30.025249 line       496                         i_j_list.append((
excute 13:49:30.028241 line       497                             i, j,
excute 13:49:30.031233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.035222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0)]
excute 13:49:30.038214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:30.042204 line       494                         if (i == j):
excute 13:49:30.046194 line       496                         i_j_list.append((
excute 13:49:30.049185 line       497                             i, j,
excute 13:49:30.052177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.056180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:30.059193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:30.063149 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:30.066172 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:30.070165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:30.074151 line       494                         if (i == j):
excute 13:49:30.078110 line       496                         i_j_list.append((
excute 13:49:30.081132 line       497                             i, j,
excute 13:49:30.085121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.089079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0)]
excute 13:49:30.093099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:30.097067 line       494                         if (i == j):
excute 13:49:30.101077 line       496                         i_j_list.append((
excute 13:49:30.104070 line       497                             i, j,
excute 13:49:30.108059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.111051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0)]
excute 13:49:30.115043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:30.119032 line       494                         if (i == j):
excute 13:49:30.122022 line       496                         i_j_list.append((
excute 13:49:30.126015 line       497                             i, j,
excute 13:49:30.129004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.133002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:30.135955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:30.140942 line       494                         if (i == j):
excute 13:49:30.144930 line       496                         i_j_list.append((
excute 13:49:30.147954 line       497                             i, j,
excute 13:49:30.151942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.155933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:30.158923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:30.162916 line       494                         if (i == j):
excute 13:49:30.166872 line       495                             continue
excute 13:49:30.169894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:30.173887 line       494                         if (i == j):
excute 13:49:30.177874 line       496                         i_j_list.append((
excute 13:49:30.180865 line       497                             i, j,
excute 13:49:30.183857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.187847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1)]
excute 13:49:30.190839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:30.195795 line       494                         if (i == j):
excute 13:49:30.199783 line       496                         i_j_list.append((
excute 13:49:30.202808 line       497                             i, j,
excute 13:49:30.206796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.209787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0)]
excute 13:49:30.213782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:30.217745 line       494                         if (i == j):
excute 13:49:30.220761 line       496                         i_j_list.append((
excute 13:49:30.224751 line       497                             i, j,
excute 13:49:30.227739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.231698 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1)]
excute 13:49:30.234692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:30.238680 line       494                         if (i == j):
excute 13:49:30.243668 line       496                         i_j_list.append((
excute 13:49:30.246657 line       497                             i, j,
excute 13:49:30.249649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.253640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0)]
excute 13:49:30.258627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:30.262618 line       494                         if (i == j):
excute 13:49:30.266603 line       496                         i_j_list.append((
excute 13:49:30.270595 line       497                             i, j,
excute 13:49:30.274585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.278573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:30.282562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:30.286551 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:30.290539 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:30.293532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:30.298553 line       494                         if (i == j):
excute 13:49:30.302540 line       496                         i_j_list.append((
excute 13:49:30.306531 line       497                             i, j,
excute 13:49:30.309525 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.313494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0)]
excute 13:49:30.316502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:30.320461 line       494                         if (i == j):
excute 13:49:30.324465 line       496                         i_j_list.append((
excute 13:49:30.330435 line       497                             i, j,
excute 13:49:30.337417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.341403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:49:30.344396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:30.348385 line       494                         if (i == j):
excute 13:49:30.353374 line       496                         i_j_list.append((
excute 13:49:30.357397 line       497                             i, j,
excute 13:49:30.360386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.364375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:49:30.368365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:30.372323 line       494                         if (i == j):
excute 13:49:30.376312 line       496                         i_j_list.append((
excute 13:49:30.379334 line       497                             i, j,
excute 13:49:30.384291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.387312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:49:30.391302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:30.395294 line       494                         if (i == j):
excute 13:49:30.400248 line       496                         i_j_list.append((
excute 13:49:30.404267 line       497                             i, j,
excute 13:49:30.408260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.411217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:49:30.418198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:30.422188 line       494                         if (i == j):
excute 13:49:30.426178 line       495                             continue
excute 13:49:30.430167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:30.436151 line       494                         if (i == j):
excute 13:49:30.440173 line       496                         i_j_list.append((
excute 13:49:30.444163 line       497                             i, j,
excute 13:49:30.455111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.458092 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:49:30.462081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:30.466071 line       494                         if (i == j):
excute 13:49:30.470061 line       496                         i_j_list.append((
excute 13:49:30.473084 line       497                             i, j,
excute 13:49:30.477077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.480065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1)]
excute 13:49:30.484023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:30.487046 line       494                         if (i == j):
excute 13:49:30.491010 line       496                         i_j_list.append((
excute 13:49:30.495025 line       497                             i, j,
excute 13:49:30.498020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.501976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0)]
excute 13:49:30.505999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:30.509954 line       494                         if (i == j):
excute 13:49:30.514940 line       496                         i_j_list.append((
excute 13:49:30.517934 line       497                             i, j,
excute 13:49:30.521923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.525913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:49:30.528904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:30.532893 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:30.536883 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:30.541871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:30.544862 line       494                         if (i == j):
excute 13:49:30.548851 line       496                         i_j_list.append((
excute 13:49:30.552841 line       497                             i, j,
excute 13:49:30.555833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.559822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0)]
excute 13:49:30.563811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:30.567802 line       494                         if (i == j):
excute 13:49:30.570793 line       496                         i_j_list.append((
excute 13:49:30.574782 line       497                             i, j,
excute 13:49:30.577774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.581763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:49:30.584755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:30.589741 line       494                         if (i == j):
excute 13:49:30.592734 line       496                         i_j_list.append((
excute 13:49:30.596723 line       497                             i, j,
excute 13:49:30.599715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.603704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:49:30.608689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:30.612678 line       494                         if (i == j):
excute 13:49:30.616692 line       496                         i_j_list.append((
excute 13:49:30.620658 line       497                             i, j,
excute 13:49:30.623682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.626675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:49:30.630663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:30.634626 line       494                         if (i == j):
excute 13:49:30.638611 line       496                         i_j_list.append((
excute 13:49:30.641635 line       497                             i, j,
excute 13:49:30.645623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.648614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:49:30.651607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:30.656595 line       494                         if (i == j):
excute 13:49:30.660552 line       496                         i_j_list.append((
excute 13:49:30.663575 line       497                             i, j,
excute 13:49:30.666536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.670556 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1)]
excute 13:49:30.673551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:30.677541 line       494                         if (i == j):
excute 13:49:30.681498 line       495                             continue
excute 13:49:30.684522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:30.688508 line       494                         if (i == j):
excute 13:49:30.692467 line       496                         i_j_list.append((
excute 13:49:30.695489 line       497                             i, j,
excute 13:49:30.699448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.702438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1)]
excute 13:49:30.705431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:30.710418 line       494                         if (i == j):
excute 13:49:30.715407 line       496                         i_j_list.append((
excute 13:49:30.718398 line       497                             i, j,
excute 13:49:30.722387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.726377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0)]
excute 13:49:30.729368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:30.733358 line       494                         if (i == j):
excute 13:49:30.738345 line       496                         i_j_list.append((
excute 13:49:30.742334 line       497                             i, j,
excute 13:49:30.745357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.748351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:49:30.752337 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:30.756296 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:30.759319 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:30.763308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:30.767298 line       494                         if (i == j):
excute 13:49:30.771288 line       496                         i_j_list.append((
excute 13:49:30.774278 line       497                             i, j,
excute 13:49:30.778237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.782258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0)]
excute 13:49:30.785252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:30.789239 line       494                         if (i == j):
excute 13:49:30.793231 line       496                         i_j_list.append((
excute 13:49:30.797186 line       497                             i, j,
excute 13:49:30.800209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.803201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:30.807190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:30.812146 line       494                         if (i == j):
excute 13:49:30.816135 line       496                         i_j_list.append((
excute 13:49:30.819127 line       497                             i, j,
excute 13:49:30.823117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.826108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:30.829100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:30.833090 line       494                         if (i == j):
excute 13:49:30.837081 line       496                         i_j_list.append((
excute 13:49:30.841070 line       497                             i, j,
excute 13:49:30.844060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.847052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:30.851042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:30.855031 line       494                         if (i == j):
excute 13:49:30.859020 line       496                         i_j_list.append((
excute 13:49:30.862012 line       497                             i, j,
excute 13:49:30.866002 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.868993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:30.871985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:30.875974 line       494                         if (i == j):
excute 13:49:30.879964 line       496                         i_j_list.append((
excute 13:49:30.882956 line       497                             i, j,
excute 13:49:30.886945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.889937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1)]
excute 13:49:30.893940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:30.896919 line       494                         if (i == j):
excute 13:49:30.900908 line       496                         i_j_list.append((
excute 13:49:30.904897 line       497                             i, j,
excute 13:49:30.907889 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.910881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0)]
excute 13:49:30.915869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:30.919891 line       494                         if (i == j):
excute 13:49:30.923848 line       495                             continue
excute 13:49:30.926870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:30.929863 line       494                         if (i == j):
excute 13:49:30.933852 line       496                         i_j_list.append((
excute 13:49:30.937810 line       497                             i, j,
excute 13:49:30.940833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.943825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:30.948784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:30.952771 line       494                         if (i == j):
excute 13:49:30.957759 line       496                         i_j_list.append((
excute 13:49:30.961748 line       497                             i, j,
excute 13:49:30.967732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:30.971721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:30.975711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:30.979700 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:30.982692 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:30.987679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:30.991679 line       494                         if (i == j):
excute 13:49:30.995655 line       496                         i_j_list.append((
excute 13:49:30.999646 line       497                             i, j,
excute 13:49:31.003634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.006625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0)]
excute 13:49:31.010615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:31.014606 line       494                         if (i == j):
excute 13:49:31.020589 line       496                         i_j_list.append((
excute 13:49:31.023612 line       497                             i, j,
excute 13:49:31.027605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.030594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:49:31.034583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:31.038542 line       494                         if (i == j):
excute 13:49:31.042562 line       496                         i_j_list.append((
excute 13:49:31.045553 line       497                             i, j,
excute 13:49:31.049526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.052534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:49:31.056528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:31.060483 line       494                         if (i == j):
excute 13:49:31.064505 line       496                         i_j_list.append((
excute 13:49:31.067498 line       497                             i, j,
excute 13:49:31.071466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.074444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:49:31.077436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:31.081425 line       494                         if (i == j):
excute 13:49:31.085415 line       496                         i_j_list.append((
excute 13:49:31.089404 line       497                             i, j,
excute 13:49:31.092428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.096396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:49:31.099408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:31.103368 line       494                         if (i == j):
excute 13:49:31.107358 line       496                         i_j_list.append((
excute 13:49:31.110379 line       497                             i, j,
excute 13:49:31.114356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.117361 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1)]
excute 13:49:31.122319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:31.126307 line       494                         if (i == j):
excute 13:49:31.131295 line       496                         i_j_list.append((
excute 13:49:31.135282 line       497                             i, j,
excute 13:49:31.138274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.142263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0)]
excute 13:49:31.145255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:31.149245 line       494                         if (i == j):
excute 13:49:31.153234 line       496                         i_j_list.append((
excute 13:49:31.157230 line       497                             i, j,
excute 13:49:31.160214 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.163207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1)]
excute 13:49:31.167196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:31.171187 line       494                         if (i == j):
excute 13:49:31.174210 line       495                             continue
excute 13:49:31.178199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:31.182188 line       494                         if (i == j):
excute 13:49:31.186147 line       496                         i_j_list.append((
excute 13:49:31.189169 line       497                             i, j,
excute 13:49:31.193161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.196150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0)]
excute 13:49:31.200109 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:31.203136 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:31.207091 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:31.215070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:31.219057 line       494                         if (i == j):
excute 13:49:31.226054 line       496                         i_j_list.append((
excute 13:49:31.229032 line       497                             i, j,
excute 13:49:31.233022 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.237011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0)]
excute 13:49:31.240001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:31.243998 line       494                         if (i == j):
excute 13:49:31.247981 line       496                         i_j_list.append((
excute 13:49:31.250972 line       497                             i, j,
excute 13:49:31.254962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.257953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:31.261943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:31.265932 line       494                         if (i == j):
excute 13:49:31.269922 line       496                         i_j_list.append((
excute 13:49:31.272913 line       497                             i, j,
excute 13:49:31.276904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.280892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:31.284882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:31.287873 line       494                         if (i == j):
excute 13:49:31.291862 line       496                         i_j_list.append((
excute 13:49:31.294855 line       497                             i, j,
excute 13:49:31.298844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.301836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:31.305826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:31.312807 line       494                         if (i == j):
excute 13:49:31.320785 line       496                         i_j_list.append((
excute 13:49:31.325773 line       497                             i, j,
excute 13:49:31.337742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.342759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:31.345751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:31.350709 line       494                         if (i == j):
excute 13:49:31.359682 line       496                         i_j_list.append((
excute 13:49:31.365666 line       497                             i, j,
excute 13:49:31.372647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.381624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1)]
excute 13:49:31.385612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:31.390613 line       494                         if (i == j):
excute 13:49:31.399575 line       496                         i_j_list.append((
excute 13:49:31.407556 line       497                             i, j,
excute 13:49:31.411545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.417528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1), (9, 6, 3, 0)]
excute 13:49:31.423513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:31.430494 line       494                         if (i == j):
excute 13:49:31.436478 line       496                         i_j_list.append((
excute 13:49:31.440466 line       497                             i, j,
excute 13:49:31.444457 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.450439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1), (9, 6, 3, 0), (9, 7, 3, 1)]
excute 13:49:31.456424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:31.461412 line       494                         if (i == j):
excute 13:49:31.468392 line       496                         i_j_list.append((
excute 13:49:31.472382 line       497                             i, j,
excute 13:49:31.480359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:31.487341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 1), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 1), (3, 6, 5, 0), (3, 7, 5, 1), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 1), (4, 6, 4, 0), (4, 7, 4, 1), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 1), (6, 7, 2, 1), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 1), (9, 6, 3, 0), (9, 7, 3, 1), (9, 8, 3, 0)]
excute 13:49:31.496317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:31.504296 line       494                         if (i == j):
excute 13:49:31.512275 line       495                             continue
excute 13:49:31.520253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:31.525240 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:31.530225 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 5, -2, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 6, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 6, 0, 0), (8, 9, 0, 0), (0, 5, 0, 1), (0, 7, 0, 1), (5, 7, 0, 1), (8, 5, 0, 1), (8, 7, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 6, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (1, 5, 1, 1), (1, 7, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (2, 5, 2, 1), (2, 7, 2, 1), (6, 5, 2, 1), (6, 7, 2, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 6, 3, 0), (9, 8, 3, 0), (9, 5, 3, 1), (9, 7, 3, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 6, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (4, 5, 4, 1), (4, 7, 4, 1), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 6, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (3, 5, 5, 1), (3, 7, 5, 1)]
excute 13:49:31.538205 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:31.544190 line       505                     if (self.RELOCATE):
excute 13:49:31.552167 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:31.560146 line       505                     if (self.RELOCATE):
excute 13:49:31.566132 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:31.574109 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:31.582087 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:31.589070 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:31.597048 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.603031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:31.608019 line       556                     i = i_j[0]
excute 13:49:31.614003 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:31.619986 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.628962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:31.635944 line       556                     i = i_j[0]
excute 13:49:31.642925 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:31.651901 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.659880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:31.667859 line       556                     i = i_j[0]
excute 13:49:31.673843 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:31.679826 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.688817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:31.694787 line       556                     i = i_j[0]
excute 13:49:31.701769 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:31.707752 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.716728 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:31.724707 line       556                     i = i_j[0]
excute 13:49:31.731691 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:31.737672 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.746658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:31.751636 line       556                     i = i_j[0]
excute 13:49:31.759613 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:31.768590 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.774572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:31.782552 line       556                     i = i_j[0]
excute 13:49:31.790531 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:31.794519 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.801504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 1)
excute 13:49:31.806489 line       556                     i = i_j[0]
excute 13:49:31.812472 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:31.815463 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.821448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:49:31.825438 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:31.829427 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:31.833417 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.838402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:31.842392 line       556                     i = i_j[0]
excute 13:49:31.846382 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:31.850372 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.854361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:31.858350 line       556                     i = i_j[0]
excute 13:49:31.861341 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:31.865331 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.869322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:49:31.872312 line       556                     i = i_j[0]
excute 13:49:31.876302 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:31.880292 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.884282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:49:31.888270 line       556                     i = i_j[0]
excute 13:49:31.891262 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:31.895251 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.899244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:49:31.903230 line       556                     i = i_j[0]
excute 13:49:31.907220 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:31.911209 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.915199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:49:31.919188 line       556                     i = i_j[0]
excute 13:49:31.923177 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:31.927166 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.932153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:49:31.935145 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:31.939134 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:31.943125 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.949107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:49:31.953095 line       556                     i = i_j[0]
excute 13:49:31.957084 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:31.961073 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.965063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:49:31.968055 line       556                     i = i_j[0]
excute 13:49:31.972044 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:31.976034 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.980023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:49:31.984013 line       556                     i = i_j[0]
excute 13:49:31.988005 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:31.990995 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:31.994985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:49:31.998972 line       556                     i = i_j[0]
excute 13:49:32.002995 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:32.005988 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.009976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:49:32.013967 line       556                     i = i_j[0]
excute 13:49:32.017923 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:32.020946 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.025902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:49:32.028924 line       556                     i = i_j[0]
excute 13:49:32.032901 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:32.036872 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.040862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:49:32.043885 line       556                     i = i_j[0]
excute 13:49:32.047848 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:32.052828 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.056818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:49:32.060807 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:32.064797 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:32.068799 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.072775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:49:32.075767 line       556                     i = i_j[0]
excute 13:49:32.079756 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:32.083747 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.087737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:49:32.090728 line       556                     i = i_j[0]
excute 13:49:32.094717 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:32.097709 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.101697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:49:32.104690 line       556                     i = i_j[0]
excute 13:49:32.108679 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:32.112668 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.115660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:49:32.119650 line       556                     i = i_j[0]
excute 13:49:32.123639 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:32.126631 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.130620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:49:32.134611 line       556                     i = i_j[0]
excute 13:49:32.138603 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:32.142589 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.146580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:49:32.150568 line       556                     i = i_j[0]
excute 13:49:32.156551 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:32.159543 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.163542 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:49:32.166525 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:32.170514 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:32.174503 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.178495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 1)
excute 13:49:32.181485 line       556                     i = i_j[0]
excute 13:49:32.185474 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:32.188466 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.192455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 1)
excute 13:49:32.196444 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:32.200434 line       557                     j = i_j[1]
excute 13:49:32.204423 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.207415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:49:32.211405 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:32.215394 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:32.219385 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.223374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 1)
excute 13:49:32.226365 line       556                     i = i_j[0]
excute 13:49:32.230355 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:32.234344 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.238333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:49:32.242323 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:32.250301 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:32.258282 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.263266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:49:32.266258 line       556                     i = i_j[0]
excute 13:49:32.270279 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:32.274268 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.278230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:49:32.282216 line       556                     i = i_j[0]
excute 13:49:32.286204 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:32.290194 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.294183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:49:32.297175 line       556                     i = i_j[0]
excute 13:49:32.301165 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:32.304157 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.308145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:49:32.312135 line       556                     i = i_j[0]
excute 13:49:32.316125 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:32.319117 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.323106 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:49:32.329091 line       556                     i = i_j[0]
excute 13:49:32.339066 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:32.343052 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.347042 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:49:32.351033 line       556                     i = i_j[0]
excute 13:49:32.357017 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:32.362002 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.365991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 1)
excute 13:49:32.371975 line       556                     i = i_j[0]
excute 13:49:32.375982 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:32.378957 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.382947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 1)
excute 13:49:32.387932 line       556                     i = i_j[0]
excute 13:49:32.391923 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:32.394914 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.398903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:32.402893 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:32.406882 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:32.410872 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.414861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:32.418850 line       556                     i = i_j[0]
excute 13:49:32.422840 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:32.426833 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.430819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:32.434809 line       556                     i = i_j[0]
excute 13:49:32.438798 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:32.441789 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.445779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:32.449768 line       556                     i = i_j[0]
excute 13:49:32.453758 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:32.457746 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.463734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:32.470715 line       556                     i = i_j[0]
excute 13:49:32.474713 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:32.477727 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.481699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:32.485704 line       556                     i = i_j[0]
excute 13:49:32.489662 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:32.492687 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.496674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:32.500666 line       556                     i = i_j[0]
excute 13:49:32.505622 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:32.508644 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.512631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:49:32.516624 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:32.520579 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:32.524602 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.529558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:49:32.532548 line       556                     i = i_j[0]
excute 13:49:32.537543 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:32.540559 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.544546 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:49:32.548538 line       556                     i = i_j[0]
excute 13:49:32.552516 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:32.555516 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.559510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:49:32.563465 line       556                     i = i_j[0]
excute 13:49:32.568452 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:32.571474 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.575467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:49:32.579454 line       556                     i = i_j[0]
excute 13:49:32.583412 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:32.587400 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.591390 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:49:32.594412 line       556                     i = i_j[0]
excute 13:49:32.598370 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:32.601394 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.605383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:49:32.609373 line       556                     i = i_j[0]
excute 13:49:32.613332 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:32.617319 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.621310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 1)
excute 13:49:32.625300 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:32.629287 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:32.633278 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.637300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:49:32.641287 line       556                     i = i_j[0]
excute 13:49:32.645278 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:32.649267 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.653226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 1)
excute 13:49:32.657215 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:32.661202 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:32.665193 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.670179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 1)
excute 13:49:32.674168 line       556                     i = i_j[0]
excute 13:49:32.678157 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:32.681181 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.685139 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 155
excute 13:49:32.688161 line       560                         if (t_tmp > self.TIME):
excute 13:49:32.692154 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:32.696140 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:32.700132 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:32.703126 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:32.707112 line       569                                     available_vhecles[i][t],
excute 13:49:32.710103 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:32.714092 line       571                                     self.S_capacities[j],
excute 13:49:32.718082 line       572                                     demands[t][i][j],
excute 13:49:32.721074 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 4
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 144
calc_contract     13:49:32.725063 call       352     def caluculate_contract(
calc_contract     13:49:32.728033 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:32.729022 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:32.729022 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:32.730021 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:32.731019 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -2
calc_contract     13:49:32.731019 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 3
calc_contract     13:49:32.732016 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:32.733013 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-2, 3, 0]
excute Modified var:.. can_contract = -2
excute Modified var:.. rsf_tmp = 3
excute 13:49:32.734010 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 186
excute 13:49:32.738998 line       576                                 rse += rse_tmp
excute 13:49:32.742986 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 7
move_cars     Starting var:.. t = 144
move_cars     Starting var:.. t_tmp = 155
move_cars     Starting var:.. can_contract = -2
move_cars     13:49:32.746975 call       388     def move_cars(
move_cars     13:49:32.750965 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:32.751962 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:32.753958 line       399         return available_vhecles
move_cars     13:49:32.754954 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:49:32.756949 line       579                                 success += can_contract
excute Modified var:.. success = 61
excute 13:49:32.761933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:32.765925 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:32.771908 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:32.775896 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.779885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:32.783876 line       556                     i = i_j[0]
excute 13:49:32.787865 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:32.791857 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.795844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:32.799833 line       556                     i = i_j[0]
excute 13:49:32.803823 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:32.807812 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.812798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:32.815790 line       556                     i = i_j[0]
excute 13:49:32.819780 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:32.823770 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.828757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:32.831748 line       556                     i = i_j[0]
excute 13:49:32.836733 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:32.840724 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.845712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:32.848703 line       556                     i = i_j[0]
excute 13:49:32.853691 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:32.857679 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.861667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:32.864660 line       556                     i = i_j[0]
excute 13:49:32.868649 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:32.873636 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.877624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 1)
excute 13:49:32.881614 line       556                     i = i_j[0]
excute 13:49:32.885604 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:32.888595 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.892585 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 157
excute 13:49:32.896575 line       560                         if (t_tmp > self.TIME):
excute 13:49:32.902559 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:32.906547 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 164
excute 13:49:32.914526 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:32.918516 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:32.922504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 1)
excute 13:49:32.929487 line       556                     i = i_j[0]
excute 13:49:32.933477 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:32.937465 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.941458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:32.945444 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:32.950431 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:32.954420 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.958409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:32.962398 line       556                     i = i_j[0]
excute 13:49:32.966388 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:32.970376 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.975364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:32.979353 line       556                     i = i_j[0]
excute 13:49:32.983342 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:32.986334 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:32.994312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:33.002291 line       556                     i = i_j[0]
excute 13:49:33.006282 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:33.009271 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.013261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:33.017252 line       556                     i = i_j[0]
excute 13:49:33.021242 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:33.024232 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.029224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:33.032211 line       556                     i = i_j[0]
excute 13:49:33.036209 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:33.039192 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.043183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:33.047171 line       556                     i = i_j[0]
excute 13:49:33.051162 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:33.055154 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.059147 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 1)
excute 13:49:33.062166 line       556                     i = i_j[0]
excute 13:49:33.066121 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:33.069143 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.074099 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 1)
excute 13:49:33.078126 line       556                     i = i_j[0]
excute 13:49:33.082077 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:33.085101 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.090057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:49:33.093050 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:33.098035 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:33.102026 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.106013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:49:33.109005 line       556                     i = i_j[0]
excute 13:49:33.112994 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:33.115986 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.119976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:49:33.122968 line       556                     i = i_j[0]
excute 13:49:33.126957 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:33.130946 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.134947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:49:33.138926 line       556                     i = i_j[0]
excute 13:49:33.141917 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:33.145906 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.149896 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:49:33.153886 line       556                     i = i_j[0]
excute 13:49:33.157876 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:33.160866 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.164856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:49:33.167848 line       556                     i = i_j[0]
excute 13:49:33.171837 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:33.178818 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.183811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:49:33.186799 line       556                     i = i_j[0]
excute 13:49:33.191788 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:33.195775 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.199765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 1)
excute 13:49:33.203753 line       556                     i = i_j[0]
excute 13:49:33.207743 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:33.211732 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.215721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 1)
excute 13:49:33.219711 line       556                     i = i_j[0]
excute 13:49:33.224699 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:33.228686 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:33.231679 line       555                 for i_j in i_j_list:
excute 13:49:33.236665 line       581             self.write_matrix(
excute 13:49:33.239657 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:33.243647 line       583                 result_file_path,
excute 13:49:33.246639 line       584                 mode='a'
excute 13:49:33.254616 line       488         for t in time_steps:
excute Modified var:.. t = 145
excute 13:49:33.259605 line       489             if (t != self.TIME + 1):
excute 13:49:33.263595 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:33.267583 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:33.272568 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:33.277555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:33.284537 line       494                         if (i == j):
excute 13:49:33.291519 line       495                             continue
excute 13:49:33.298498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:33.302489 line       494                         if (i == j):
excute 13:49:33.308473 line       496                         i_j_list.append((
excute 13:49:33.312463 line       497                             i, j,
excute 13:49:33.318446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.324431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:49:33.339391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:33.348365 line       494                         if (i == j):
excute 13:49:33.355349 line       496                         i_j_list.append((
excute 13:49:33.361331 line       497                             i, j,
excute 13:49:33.365322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.370307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:49:33.376291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:33.381279 line       494                         if (i == j):
excute 13:49:33.386267 line       496                         i_j_list.append((
excute 13:49:33.392251 line       497                             i, j,
excute 13:49:33.398235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.402224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:33.409218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:33.413192 line       494                         if (i == j):
excute 13:49:33.417183 line       496                         i_j_list.append((
excute 13:49:33.424162 line       497                             i, j,
excute 13:49:33.430155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.437131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1)]
excute 13:49:33.444110 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:33.451091 line       494                         if (i == j):
excute 13:49:33.456078 line       496                         i_j_list.append((
excute 13:49:33.459069 line       497                             i, j,
excute 13:49:33.463060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.466050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0)]
excute 13:49:33.469043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:33.473031 line       494                         if (i == j):
excute 13:49:33.477022 line       496                         i_j_list.append((
excute 13:49:33.481011 line       497                             i, j,
excute 13:49:33.485000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.487992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:49:33.491982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:33.495971 line       494                         if (i == j):
excute 13:49:33.499961 line       496                         i_j_list.append((
excute 13:49:33.502952 line       497                             i, j,
excute 13:49:33.506941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.510932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:49:33.513924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:33.518910 line       494                         if (i == j):
excute 13:49:33.522901 line       496                         i_j_list.append((
excute 13:49:33.526888 line       497                             i, j,
excute 13:49:33.529881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.533871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:49:33.536863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:33.541848 line       494                         if (i == j):
excute 13:49:33.544842 line       496                         i_j_list.append((
excute 13:49:33.548831 line       497                             i, j,
excute 13:49:33.552820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.556810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:49:33.564788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:33.568787 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:33.571769 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:33.575759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:33.579749 line       494                         if (i == j):
excute 13:49:33.583738 line       496                         i_j_list.append((
excute 13:49:33.587727 line       497                             i, j,
excute 13:49:33.591716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.597700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0)]
excute 13:49:33.600690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:33.604681 line       494                         if (i == j):
excute 13:49:33.608670 line       495                             continue
excute 13:49:33.611662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:33.615653 line       494                         if (i == j):
excute 13:49:33.619641 line       496                         i_j_list.append((
excute 13:49:33.622632 line       497                             i, j,
excute 13:49:33.626621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.630613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:49:33.633604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:33.637593 line       494                         if (i == j):
excute 13:49:33.641583 line       496                         i_j_list.append((
excute 13:49:33.644574 line       497                             i, j,
excute 13:49:33.648565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.651555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:49:33.655547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:33.659535 line       494                         if (i == j):
excute 13:49:33.663526 line       496                         i_j_list.append((
excute 13:49:33.667515 line       497                             i, j,
excute 13:49:33.670506 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.674494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1)]
excute 13:49:33.677487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:33.682475 line       494                         if (i == j):
excute 13:49:33.685466 line       496                         i_j_list.append((
excute 13:49:33.689455 line       497                             i, j,
excute 13:49:33.693444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.697433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0)]
excute 13:49:33.701421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:33.705412 line       494                         if (i == j):
excute 13:49:33.709400 line       496                         i_j_list.append((
excute 13:49:33.712391 line       497                             i, j,
excute 13:49:33.716383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.720374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:49:33.724372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:33.728355 line       494                         if (i == j):
excute 13:49:33.731344 line       496                         i_j_list.append((
excute 13:49:33.735332 line       497                             i, j,
excute 13:49:33.739322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.742314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:49:33.746303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:33.751289 line       494                         if (i == j):
excute 13:49:33.755280 line       496                         i_j_list.append((
excute 13:49:33.758270 line       497                             i, j,
excute 13:49:33.762260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.765252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:49:33.768244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:33.772234 line       494                         if (i == j):
excute 13:49:33.776223 line       496                         i_j_list.append((
excute 13:49:33.779214 line       497                             i, j,
excute 13:49:33.783204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.786196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1)]
excute 13:49:33.790184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:33.793177 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:33.797166 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:33.803151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:33.807140 line       494                         if (i == j):
excute 13:49:33.811131 line       496                         i_j_list.append((
excute 13:49:33.814153 line       497                             i, j,
excute 13:49:33.818142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.822131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0)]
excute 13:49:33.825126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:33.829082 line       494                         if (i == j):
excute 13:49:33.833071 line       496                         i_j_list.append((
excute 13:49:33.836097 line       497                             i, j,
excute 13:49:33.840059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.844075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:49:33.847064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:33.851053 line       494                         if (i == j):
excute 13:49:33.855043 line       495                             continue
excute 13:49:33.859032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:33.862023 line       494                         if (i == j):
excute 13:49:33.865983 line       496                         i_j_list.append((
excute 13:49:33.869005 line       497                             i, j,
excute 13:49:33.872997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.875991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:49:33.878978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:33.882968 line       494                         if (i == j):
excute 13:49:33.886925 line       496                         i_j_list.append((
excute 13:49:33.890916 line       497                             i, j,
excute 13:49:33.893906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.896899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1)]
excute 13:49:33.900889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:33.905877 line       494                         if (i == j):
excute 13:49:33.909865 line       496                         i_j_list.append((
excute 13:49:33.913855 line       497                             i, j,
excute 13:49:33.916848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.920837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0)]
excute 13:49:33.924838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:33.927818 line       494                         if (i == j):
excute 13:49:33.931807 line       496                         i_j_list.append((
excute 13:49:33.935796 line       497                             i, j,
excute 13:49:33.938789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.942778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:49:33.946767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:33.950787 line       494                         if (i == j):
excute 13:49:33.955745 line       496                         i_j_list.append((
excute 13:49:33.958735 line       497                             i, j,
excute 13:49:33.964720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.969706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:49:33.973695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:33.977682 line       494                         if (i == j):
excute 13:49:33.981672 line       496                         i_j_list.append((
excute 13:49:33.985662 line       497                             i, j,
excute 13:49:33.989653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:33.992645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:49:33.996633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:34.000623 line       494                         if (i == j):
excute 13:49:34.007608 line       496                         i_j_list.append((
excute 13:49:34.010595 line       497                             i, j,
excute 13:49:34.014584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.017577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1)]
excute 13:49:34.021572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:34.024557 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:34.028547 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:34.032536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:34.035528 line       494                         if (i == j):
excute 13:49:34.039518 line       496                         i_j_list.append((
excute 13:49:34.042509 line       497                             i, j,
excute 13:49:34.045501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.049490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0)]
excute 13:49:34.052482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:34.056472 line       494                         if (i == j):
excute 13:49:34.060462 line       496                         i_j_list.append((
excute 13:49:34.063453 line       497                             i, j,
excute 13:49:34.067442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.070466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:49:34.074426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:34.077448 line       494                         if (i == j):
excute 13:49:34.081437 line       496                         i_j_list.append((
excute 13:49:34.085406 line       497                             i, j,
excute 13:49:34.088420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.092377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:49:34.095370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:34.099359 line       494                         if (i == j):
excute 13:49:34.103349 line       495                             continue
excute 13:49:34.107338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:34.112358 line       494                         if (i == j):
excute 13:49:34.116340 line       496                         i_j_list.append((
excute 13:49:34.119336 line       497                             i, j,
excute 13:49:34.123329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.126317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1)]
excute 13:49:34.130307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:34.134265 line       494                         if (i == j):
excute 13:49:34.138255 line       496                         i_j_list.append((
excute 13:49:34.141278 line       497                             i, j,
excute 13:49:34.145266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.148258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0)]
excute 13:49:34.152252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:34.156206 line       494                         if (i == j):
excute 13:49:34.160196 line       496                         i_j_list.append((
excute 13:49:34.163223 line       497                             i, j,
excute 13:49:34.167208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.170199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0)]
excute 13:49:34.173192 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:34.177181 line       494                         if (i == j):
excute 13:49:34.181170 line       496                         i_j_list.append((
excute 13:49:34.185161 line       497                             i, j,
excute 13:49:34.188151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.191144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0)]
excute 13:49:34.195137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:34.199126 line       494                         if (i == j):
excute 13:49:34.203081 line       496                         i_j_list.append((
excute 13:49:34.206104 line       497                             i, j,
excute 13:49:34.209096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.214052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:49:34.217075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:34.221033 line       494                         if (i == j):
excute 13:49:34.225023 line       496                         i_j_list.append((
excute 13:49:34.229011 line       497                             i, j,
excute 13:49:34.232004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.234995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1)]
excute 13:49:34.238984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:34.242975 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:34.245965 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:34.249956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:34.252978 line       494                         if (i == j):
excute 13:49:34.256936 line       496                         i_j_list.append((
excute 13:49:34.260925 line       497                             i, j,
excute 13:49:34.263918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.267907 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0)]
excute 13:49:34.270930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:34.275887 line       494                         if (i == j):
excute 13:49:34.282867 line       496                         i_j_list.append((
excute 13:49:34.290845 line       497                             i, j,
excute 13:49:34.293839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.300819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0)]
excute 13:49:34.306803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:34.310826 line       494                         if (i == j):
excute 13:49:34.315781 line       496                         i_j_list.append((
excute 13:49:34.319782 line       497                             i, j,
excute 13:49:34.322760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.326750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:34.331738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:34.340713 line       494                         if (i == j):
excute 13:49:34.345701 line       496                         i_j_list.append((
excute 13:49:34.348691 line       497                             i, j,
excute 13:49:34.352683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.357667 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:34.361657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:34.365645 line       494                         if (i == j):
excute 13:49:34.370632 line       495                             continue
excute 13:49:34.374624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:34.377614 line       494                         if (i == j):
excute 13:49:34.382602 line       496                         i_j_list.append((
excute 13:49:34.386590 line       497                             i, j,
excute 13:49:34.390578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.393571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:34.397560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:34.401550 line       494                         if (i == j):
excute 13:49:34.405544 line       496                         i_j_list.append((
excute 13:49:34.409529 line       497                             i, j,
excute 13:49:34.414515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.419503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0)]
excute 13:49:34.422493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:34.426484 line       494                         if (i == j):
excute 13:49:34.430474 line       496                         i_j_list.append((
excute 13:49:34.433465 line       497                             i, j,
excute 13:49:34.437454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.440446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0)]
excute 13:49:34.444436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:34.448425 line       494                         if (i == j):
excute 13:49:34.452415 line       496                         i_j_list.append((
excute 13:49:34.456404 line       497                             i, j,
excute 13:49:34.459395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.463385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:34.467374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:34.471365 line       494                         if (i == j):
excute 13:49:34.475352 line       496                         i_j_list.append((
excute 13:49:34.479344 line       497                             i, j,
excute 13:49:34.482336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.486325 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1)]
excute 13:49:34.489317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:34.493306 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:34.497295 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:34.502282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:34.505274 line       494                         if (i == j):
excute 13:49:34.509265 line       496                         i_j_list.append((
excute 13:49:34.513252 line       497                             i, j,
excute 13:49:34.516243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.520234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0)]
excute 13:49:34.524223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:34.529211 line       494                         if (i == j):
excute 13:49:34.533210 line       496                         i_j_list.append((
excute 13:49:34.537187 line       497                             i, j,
excute 13:49:34.543619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.547627 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:49:34.550636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:34.554626 line       494                         if (i == j):
excute 13:49:34.558615 line       496                         i_j_list.append((
excute 13:49:34.562601 line       497                             i, j,
excute 13:49:34.565594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.568587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:49:34.572577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:34.576535 line       494                         if (i == j):
excute 13:49:34.580556 line       496                         i_j_list.append((
excute 13:49:34.583547 line       497                             i, j,
excute 13:49:34.587505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.590498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:49:34.594487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:34.598475 line       494                         if (i == j):
excute 13:49:34.602467 line       496                         i_j_list.append((
excute 13:49:34.606454 line       497                             i, j,
excute 13:49:34.609477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.612468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1)]
excute 13:49:34.616429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:34.620419 line       494                         if (i == j):
excute 13:49:34.626425 line       495                             continue
excute 13:49:34.629423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:34.633381 line       494                         if (i == j):
excute 13:49:34.637370 line       496                         i_j_list.append((
excute 13:49:34.641362 line       497                             i, j,
excute 13:49:34.645351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.649346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0)]
excute 13:49:34.652362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:34.656351 line       494                         if (i == j):
excute 13:49:34.660341 line       496                         i_j_list.append((
excute 13:49:34.664331 line       497                             i, j,
excute 13:49:34.667325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.671312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:49:34.674303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:34.678281 line       494                         if (i == j):
excute 13:49:34.682252 line       496                         i_j_list.append((
excute 13:49:34.685274 line       497                             i, j,
excute 13:49:34.689265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.692256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:49:34.696246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:34.700204 line       494                         if (i == j):
excute 13:49:34.704194 line       496                         i_j_list.append((
excute 13:49:34.707218 line       497                             i, j,
excute 13:49:34.711206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.715164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1)]
excute 13:49:34.719155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:34.723143 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:34.727133 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:34.731120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:34.734145 line       494                         if (i == j):
excute 13:49:34.738133 line       496                         i_j_list.append((
excute 13:49:34.742124 line       497                             i, j,
excute 13:49:34.745114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.749104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0)]
excute 13:49:34.752064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:34.756054 line       494                         if (i == j):
excute 13:49:34.760043 line       496                         i_j_list.append((
excute 13:49:34.763034 line       497                             i, j,
excute 13:49:34.767024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.770047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:49:34.774006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:34.777996 line       494                         if (i == j):
excute 13:49:34.781985 line       496                         i_j_list.append((
excute 13:49:34.785008 line       497                             i, j,
excute 13:49:34.788998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.791988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:49:34.794983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:34.798971 line       494                         if (i == j):
excute 13:49:34.802962 line       496                         i_j_list.append((
excute 13:49:34.806917 line       497                             i, j,
excute 13:49:34.809910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.813932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:49:34.817920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:34.821887 line       494                         if (i == j):
excute 13:49:34.825869 line       496                         i_j_list.append((
excute 13:49:34.830856 line       497                             i, j,
excute 13:49:34.836837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.841824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1)]
excute 13:49:34.845815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:34.850801 line       494                         if (i == j):
excute 13:49:34.854793 line       496                         i_j_list.append((
excute 13:49:34.857781 line       497                             i, j,
excute 13:49:34.861770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.864763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0)]
excute 13:49:34.868752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:34.871744 line       494                         if (i == j):
excute 13:49:34.875733 line       495                             continue
excute 13:49:34.879723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:34.882715 line       494                         if (i == j):
excute 13:49:34.886704 line       496                         i_j_list.append((
excute 13:49:34.890693 line       497                             i, j,
excute 13:49:34.893685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.897674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:49:34.900667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:34.904656 line       494                         if (i == j):
excute 13:49:34.908645 line       496                         i_j_list.append((
excute 13:49:34.911637 line       497                             i, j,
excute 13:49:34.914630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.918619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:49:34.921611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:34.925601 line       494                         if (i == j):
excute 13:49:34.929591 line       496                         i_j_list.append((
excute 13:49:34.934576 line       497                             i, j,
excute 13:49:34.938566 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.941591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1)]
excute 13:49:34.945548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:34.949570 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:34.953558 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:34.957549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:34.961536 line       494                         if (i == j):
excute 13:49:34.965495 line       496                         i_j_list.append((
excute 13:49:34.968518 line       497                             i, j,
excute 13:49:34.972507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.976498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0)]
excute 13:49:34.979488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:34.983460 line       494                         if (i == j):
excute 13:49:34.987436 line       496                         i_j_list.append((
excute 13:49:34.990458 line       497                             i, j,
excute 13:49:34.994450 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:34.997441 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:35.001429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:35.005422 line       494                         if (i == j):
excute 13:49:35.009385 line       496                         i_j_list.append((
excute 13:49:35.013399 line       497                             i, j,
excute 13:49:35.016390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.020382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:35.023370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:35.027360 line       494                         if (i == j):
excute 13:49:35.031349 line       496                         i_j_list.append((
excute 13:49:35.036319 line       497                             i, j,
excute 13:49:35.039329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.043285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:35.046309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:35.050268 line       494                         if (i == j):
excute 13:49:35.054258 line       496                         i_j_list.append((
excute 13:49:35.058247 line       497                             i, j,
excute 13:49:35.062237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.065229 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1)]
excute 13:49:35.069218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:35.073207 line       494                         if (i == j):
excute 13:49:35.078195 line       496                         i_j_list.append((
excute 13:49:35.081186 line       497                             i, j,
excute 13:49:35.085175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.089164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0)]
excute 13:49:35.092157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:35.097142 line       494                         if (i == j):
excute 13:49:35.101132 line       496                         i_j_list.append((
excute 13:49:35.104125 line       497                             i, j,
excute 13:49:35.108114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.111106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:49:35.115095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:35.119085 line       494                         if (i == j):
excute 13:49:35.123074 line       495                             continue
excute 13:49:35.127063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:35.131052 line       494                         if (i == j):
excute 13:49:35.136040 line       496                         i_j_list.append((
excute 13:49:35.140027 line       497                             i, j,
excute 13:49:35.144016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.147009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:35.150997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:35.154987 line       494                         if (i == j):
excute 13:49:35.158976 line       496                         i_j_list.append((
excute 13:49:35.161968 line       497                             i, j,
excute 13:49:35.165958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.168949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1)]
excute 13:49:35.171941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:35.175930 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:35.179922 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:35.182912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:35.186901 line       494                         if (i == j):
excute 13:49:35.190891 line       496                         i_j_list.append((
excute 13:49:35.194881 line       497                             i, j,
excute 13:49:35.197872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.201862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0)]
excute 13:49:35.204853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:35.208844 line       494                         if (i == j):
excute 13:49:35.212833 line       496                         i_j_list.append((
excute 13:49:35.215824 line       497                             i, j,
excute 13:49:35.218816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.222805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:49:35.225797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:35.229787 line       494                         if (i == j):
excute 13:49:35.233777 line       496                         i_j_list.append((
excute 13:49:35.237767 line       497                             i, j,
excute 13:49:35.241759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.244748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:49:35.248738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:35.253725 line       494                         if (i == j):
excute 13:49:35.258712 line       496                         i_j_list.append((
excute 13:49:35.262700 line       497                             i, j,
excute 13:49:35.265693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.269682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:49:35.272674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:35.277661 line       494                         if (i == j):
excute 13:49:35.282647 line       496                         i_j_list.append((
excute 13:49:35.285639 line       497                             i, j,
excute 13:49:35.289628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.293618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1)]
excute 13:49:35.297606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:35.301598 line       494                         if (i == j):
excute 13:49:35.305586 line       496                         i_j_list.append((
excute 13:49:35.309575 line       497                             i, j,
excute 13:49:35.312567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.316556 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0)]
excute 13:49:35.322540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:35.330519 line       494                         if (i == j):
excute 13:49:35.337499 line       496                         i_j_list.append((
excute 13:49:35.344482 line       497                             i, j,
excute 13:49:35.349469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.353460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:49:35.358476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:35.362468 line       494                         if (i == j):
excute 13:49:35.366455 line       496                         i_j_list.append((
excute 13:49:35.370413 line       497                             i, j,
excute 13:49:35.373434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.377395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:49:35.380417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:35.385377 line       494                         if (i == j):
excute 13:49:35.389379 line       495                             continue
excute 13:49:35.393384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:35.396376 line       494                         if (i == j):
excute 13:49:35.400363 line       496                         i_j_list.append((
excute 13:49:35.404354 line       497                             i, j,
excute 13:49:35.408342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.411333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1)]
excute 13:49:35.415325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:35.419282 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:35.423271 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:35.427259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:35.431251 line       494                         if (i == j):
excute 13:49:35.435238 line       496                         i_j_list.append((
excute 13:49:35.438262 line       497                             i, j,
excute 13:49:35.442219 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.445243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0)]
excute 13:49:35.451229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:35.455217 line       494                         if (i == j):
excute 13:49:35.459205 line       496                         i_j_list.append((
excute 13:49:35.464175 line       497                             i, j,
excute 13:49:35.470178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.473170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:35.477157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:35.481117 line       494                         if (i == j):
excute 13:49:35.485106 line       496                         i_j_list.append((
excute 13:49:35.489132 line       497                             i, j,
excute 13:49:35.492119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.496106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:35.500064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:35.504058 line       494                         if (i == j):
excute 13:49:35.508043 line       496                         i_j_list.append((
excute 13:49:35.511066 line       497                             i, j,
excute 13:49:35.515056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.518048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:35.522038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:35.525996 line       494                         if (i == j):
excute 13:49:35.529990 line       496                         i_j_list.append((
excute 13:49:35.533010 line       497                             i, j,
excute 13:49:35.536999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.540955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1)]
excute 13:49:35.543947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:35.548935 line       494                         if (i == j):
excute 13:49:35.553921 line       496                         i_j_list.append((
excute 13:49:35.556912 line       497                             i, j,
excute 13:49:35.560901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.563894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0)]
excute 13:49:35.567883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:35.571872 line       494                         if (i == j):
excute 13:49:35.575862 line       496                         i_j_list.append((
excute 13:49:35.578854 line       497                             i, j,
excute 13:49:35.582843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.585835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:49:35.589824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:35.593824 line       494                         if (i == j):
excute 13:49:35.597820 line       496                         i_j_list.append((
excute 13:49:35.600795 line       497                             i, j,
excute 13:49:35.604784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.607776 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:35.611768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:35.614758 line       494                         if (i == j):
excute 13:49:35.618747 line       496                         i_j_list.append((
excute 13:49:35.622736 line       497                             i, j,
excute 13:49:35.625728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:35.629718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:35.633707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:35.637708 line       494                         if (i == j):
excute 13:49:35.641686 line       495                             continue
excute 13:49:35.644678 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:35.648667 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:35.653653 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 4, -2, 1), (7, 9, -2, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (0, 4, 0, 1), (0, 9, 0, 1), (5, 4, 0, 1), (5, 9, 0, 1), (6, 4, 0, 1), (6, 9, 0, 1), (8, 4, 0, 1), (8, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (1, 4, 1, 1), (1, 9, 1, 1), (2, 4, 1, 1), (2, 9, 1, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 4, 3, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (3, 4, 4, 1), (3, 9, 4, 1), (4, 9, 4, 1)]
excute 13:49:35.657656 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:35.661632 line       505                     if (self.RELOCATE):
excute 13:49:35.665625 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:35.669611 line       505                     if (self.RELOCATE):
excute 13:49:35.673600 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:35.676592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:35.679584 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:35.683573 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:35.687562 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.691552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:35.694544 line       556                     i = i_j[0]
excute 13:49:35.698533 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:35.702523 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.706514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:35.709504 line       556                     i = i_j[0]
excute 13:49:35.713494 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:35.717483 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.721474 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:35.724464 line       556                     i = i_j[0]
excute 13:49:35.728455 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:35.731446 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.735436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:35.739427 line       556                     i = i_j[0]
excute 13:49:35.743414 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:35.747404 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.751392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:35.757377 line       556                     i = i_j[0]
excute 13:49:35.765360 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:35.773334 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.777325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:35.780316 line       556                     i = i_j[0]
excute 13:49:35.785303 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:35.788295 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.792284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 1)
excute 13:49:35.796273 line       556                     i = i_j[0]
excute 13:49:35.800263 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:35.803254 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.808242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 1)
excute 13:49:35.811233 line       556                     i = i_j[0]
excute 13:49:35.816222 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:35.819214 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.826194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:49:35.831179 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:35.835168 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:35.841152 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.845151 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:35.849133 line       556                     i = i_j[0]
excute 13:49:35.853120 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:35.860105 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.867084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:35.871073 line       556                     i = i_j[0]
excute 13:49:35.876059 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:35.879051 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.883045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:49:35.887030 line       556                     i = i_j[0]
excute 13:49:35.891021 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:35.894012 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.898001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:49:35.905747 line       556                     i = i_j[0]
excute 13:49:35.909738 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:35.912730 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.916719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:49:35.919712 line       556                     i = i_j[0]
excute 13:49:35.923702 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:35.927692 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.931681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:49:35.935671 line       556                     i = i_j[0]
excute 13:49:35.939660 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:35.943649 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.950629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:49:35.955618 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:35.959605 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:35.964594 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.968582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:49:35.971607 line       556                     i = i_j[0]
excute 13:49:35.976562 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:35.980549 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.983575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:49:35.987564 line       556                     i = i_j[0]
excute 13:49:35.991555 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:35.994543 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:35.998533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:49:36.002505 line       556                     i = i_j[0]
excute 13:49:36.005513 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:36.009503 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.013461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:49:36.017450 line       556                     i = i_j[0]
excute 13:49:36.020477 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:36.024466 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.028424 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:49:36.031444 line       556                     i = i_j[0]
excute 13:49:36.035403 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:36.038425 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.042416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:49:36.046405 line       556                     i = i_j[0]
excute 13:49:36.050363 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:36.053385 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.058342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:49:36.063330 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:36.067319 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:36.072305 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.076295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:49:36.080288 line       556                     i = i_j[0]
excute 13:49:36.083276 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:36.087265 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.092251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:49:36.095244 line       556                     i = i_j[0]
excute 13:49:36.099233 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:36.103223 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.107211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:49:36.110205 line       556                     i = i_j[0]
excute 13:49:36.114194 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:36.118182 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.122172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:49:36.126161 line       556                     i = i_j[0]
excute 13:49:36.130151 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:36.134140 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.139127 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:49:36.142119 line       556                     i = i_j[0]
excute 13:49:36.146138 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:36.150128 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.154120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:49:36.158106 line       556                     i = i_j[0]
excute 13:49:36.162064 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:36.166053 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.170043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:49:36.173036 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:36.177025 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:36.181014 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.185004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:49:36.188994 line       556                     i = i_j[0]
excute 13:49:36.192984 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:36.195974 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.200961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:49:36.203952 line       556                     i = i_j[0]
excute 13:49:36.207944 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:36.210934 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.214924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:49:36.218912 line       556                     i = i_j[0]
excute 13:49:36.221904 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:36.225894 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.229885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:49:36.232875 line       556                     i = i_j[0]
excute 13:49:36.236865 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:36.240864 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.244843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:49:36.247836 line       556                     i = i_j[0]
excute 13:49:36.251825 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:36.255815 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.259805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:49:36.262827 line       556                     i = i_j[0]
excute 13:49:36.267782 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:36.271772 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.276762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 1)
excute 13:49:36.279783 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:36.283771 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:36.287761 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.291717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:49:36.294741 line       556                     i = i_j[0]
excute 13:49:36.298733 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:36.302721 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.306713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 1)
excute 13:49:36.309700 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:36.313658 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:36.317648 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.321640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 1)
excute 13:49:36.325627 line       556                     i = i_j[0]
excute 13:49:36.331612 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:36.338595 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.342581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 1)
excute 13:49:36.346572 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:36.350561 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:36.358539 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.364522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 1)
excute 13:49:36.371505 line       556                     i = i_j[0]
excute 13:49:36.379515 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:36.386464 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.391451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 1)
excute 13:49:36.396448 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:36.403419 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:36.408406 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.413395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 1)
excute 13:49:36.422368 line       556                     i = i_j[0]
excute 13:49:36.431345 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:36.435334 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.439323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:49:36.443313 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:36.451292 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:36.457277 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.461265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:49:36.469243 line       556                     i = i_j[0]
excute 13:49:36.477223 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:36.484203 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.493180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:49:36.501158 line       556                     i = i_j[0]
excute 13:49:36.509139 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:36.516118 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.522102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:49:36.528085 line       556                     i = i_j[0]
excute 13:49:36.535067 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:36.541051 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.549034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:49:36.556010 line       556                     i = i_j[0]
excute 13:49:36.562992 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:36.568976 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.573962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:49:36.580945 line       556                     i = i_j[0]
excute 13:49:36.589921 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:36.594908 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.600893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:49:36.606875 line       556                     i = i_j[0]
excute 13:49:36.612859 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:36.618843 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.625824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:49:36.633803 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:36.640785 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:36.646768 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.653752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:49:36.658738 line       556                     i = i_j[0]
excute 13:49:36.664721 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:36.670703 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.676688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:49:36.683671 line       556                     i = i_j[0]
excute 13:49:36.690652 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:36.696635 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.703617 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:49:36.709601 line       556                     i = i_j[0]
excute 13:49:36.716581 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:36.723563 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.730544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:49:36.735531 line       556                     i = i_j[0]
excute 13:49:36.745505 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:36.752486 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.761464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:49:36.770438 line       556                     i = i_j[0]
excute 13:49:36.778417 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:36.782405 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.792381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:49:36.796369 line       556                     i = i_j[0]
excute 13:49:36.800359 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:36.803349 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.807339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 1)
excute 13:49:36.811336 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:36.814320 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:36.818309 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.823297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 1)
excute 13:49:36.827286 line       556                     i = i_j[0]
excute 13:49:36.831276 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:36.835265 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.840251 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 153
excute 13:49:36.846235 line       560                         if (t_tmp > self.TIME):
excute 13:49:36.853218 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:36.859200 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:36.863189 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:36.866183 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:36.870172 line       569                                     available_vhecles[i][t],
excute 13:49:36.873164 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:36.877153 line       571                                     self.S_capacities[j],
excute 13:49:36.881143 line       572                                     demands[t][i][j],
excute 13:49:36.885133 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 145
calc_contract     13:49:36.890119 call       352     def caluculate_contract(
calc_contract     13:49:36.893112 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:36.894107 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:36.894107 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:36.895107 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:36.896104 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:36.896104 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:36.897100 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rsf_tmp = 0
excute 13:49:36.898099 line       575                                 rsf += rsf_tmp
excute 13:49:36.902088 line       576                                 rse += rse_tmp
excute 13:49:36.906076 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 145
move_cars     Starting var:.. t_tmp = 153
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:36.910066 call       388     def move_cars(
move_cars     13:49:36.914056 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:36.915053 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:49:36.916050 line       399         return available_vhecles
move_cars     13:49:36.918043 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:36.920040 line       579                                 success += can_contract
excute Modified var:.. success = 62
excute 13:49:36.925025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 1)
excute 13:49:36.929015 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:36.934001 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:36.937990 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:36.941980 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 152
excute 13:49:36.945969 line       560                         if (t_tmp > self.TIME):
excute 13:49:36.950957 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:36.954956 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:36.958935 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:36.964920 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:36.969906 line       569                                     available_vhecles[i][t],
excute 13:49:36.973895 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:36.978881 line       571                                     self.S_capacities[j],
excute 13:49:36.981873 line       572                                     demands[t][i][j],
excute 13:49:36.985864 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 145
calc_contract     13:49:36.989855 call       352     def caluculate_contract(
calc_contract     13:49:36.993842 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:36.994840 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:36.995837 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:36.996834 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:36.996834 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:36.997830 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:36.998830 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:36.999827 line       575                                 rsf += rsf_tmp
excute 13:49:37.003815 line       576                                 rse += rse_tmp
excute 13:49:37.007804 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 145
move_cars     Starting var:.. t_tmp = 152
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:37.011794 call       388     def move_cars(
move_cars     13:49:37.015782 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:37.016781 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:37.018775 line       399         return available_vhecles
move_cars     13:49:37.019773 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:37.022763 line       579                                 success += can_contract
excute Modified var:.. success = 63
excute 13:49:37.026755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 1)
excute 13:49:37.030742 line       556                     i = i_j[0]
excute 13:49:37.034732 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:37.038722 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.043707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:37.046701 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:37.051688 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:37.055678 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.059664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:37.063654 line       556                     i = i_j[0]
excute 13:49:37.067645 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:37.070635 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.074625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:37.078614 line       556                     i = i_j[0]
excute 13:49:37.082605 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:37.085595 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.089585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:37.094578 line       556                     i = i_j[0]
excute 13:49:37.098563 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:37.101553 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.105542 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:37.109532 line       556                     i = i_j[0]
excute 13:49:37.113534 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:37.116544 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.120502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:37.124495 line       556                     i = i_j[0]
excute 13:49:37.128480 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:37.131474 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.136464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:37.139484 line       556                     i = i_j[0]
excute 13:49:37.143440 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:37.147429 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.151452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:37.154442 line       556                     i = i_j[0]
excute 13:49:37.158432 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:37.162421 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.166380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 1)
excute 13:49:37.169402 line       556                     i = i_j[0]
excute 13:49:37.173395 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:37.177381 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.181374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:49:37.184365 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:37.188320 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:37.193308 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.200304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:49:37.204280 line       556                     i = i_j[0]
excute 13:49:37.212256 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:37.216248 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.221265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:49:37.225253 line       556                     i = i_j[0]
excute 13:49:37.229213 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:37.232237 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.236223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:49:37.240215 line       556                     i = i_j[0]
excute 13:49:37.244172 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:37.247194 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.251184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:49:37.255173 line       556                     i = i_j[0]
excute 13:49:37.259154 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:37.263152 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.272568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:49:37.276587 line       556                     i = i_j[0]
excute 13:49:37.280586 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:37.284565 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.288561 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:49:37.292516 line       556                     i = i_j[0]
excute 13:49:37.296539 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:37.302492 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.307477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:37.310471 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:37.314460 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:37.318450 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.322441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:37.328423 line       556                     i = i_j[0]
excute 13:49:37.340391 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:37.345407 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.349400 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:37.353356 line       556                     i = i_j[0]
excute 13:49:37.359339 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:37.362364 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.366334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:37.370310 line       556                     i = i_j[0]
excute 13:49:37.374299 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:37.378297 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.382278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:37.385302 line       556                     i = i_j[0]
excute 13:49:37.390258 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:37.394246 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.398243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:37.402227 line       556                     i = i_j[0]
excute 13:49:37.407212 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:37.410236 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.414224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:37.418215 line       556                     i = i_j[0]
excute 13:49:37.422207 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:37.426194 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.430150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:37.433178 line       556                     i = i_j[0]
excute 13:49:37.437170 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:37.441152 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.445120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 1)
excute 13:49:37.449100 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:37.454087 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:37.458111 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.462065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 1)
excute 13:49:37.465088 line       556                     i = i_j[0]
excute 13:49:37.469080 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:37.473067 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.477026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 1)
excute 13:49:37.480047 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:37.484037 line       557                     j = i_j[1]
excute 13:49:37.488026 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:37.492015 line       555                 for i_j in i_j_list:
excute 13:49:37.495008 line       581             self.write_matrix(
excute 13:49:37.498998 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:37.502955 line       583                 result_file_path,
excute 13:49:37.506945 line       584                 mode='a'
excute 13:49:37.513926 line       488         for t in time_steps:
excute Modified var:.. t = 146
excute 13:49:37.518943 line       489             if (t != self.TIME + 1):
excute 13:49:37.523900 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:37.528886 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:37.531880 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:37.535869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:37.540858 line       494                         if (i == j):
excute 13:49:37.544844 line       495                             continue
excute 13:49:37.548832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:37.554818 line       494                         if (i == j):
excute 13:49:37.558817 line       496                         i_j_list.append((
excute 13:49:37.562798 line       497                             i, j,
excute 13:49:37.566786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.572769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:49:37.586731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:37.594742 line       494                         if (i == j):
excute 13:49:37.601692 line       496                         i_j_list.append((
excute 13:49:37.605682 line       497                             i, j,
excute 13:49:37.611666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.617682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:49:37.621639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:37.625628 line       494                         if (i == j):
excute 13:49:37.629617 line       496                         i_j_list.append((
excute 13:49:37.633606 line       497                             i, j,
excute 13:49:37.638595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.645577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:37.650561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:37.655557 line       494                         if (i == j):
excute 13:49:37.659537 line       496                         i_j_list.append((
excute 13:49:37.662559 line       497                             i, j,
excute 13:49:37.667547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.671505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:49:37.674498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:37.679484 line       494                         if (i == j):
excute 13:49:37.682477 line       496                         i_j_list.append((
excute 13:49:37.686466 line       497                             i, j,
excute 13:49:37.690455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.694444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:49:37.698434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:37.702423 line       494                         if (i == j):
excute 13:49:37.706413 line       496                         i_j_list.append((
excute 13:49:37.711398 line       497                             i, j,
excute 13:49:37.715387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.719377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:49:37.723367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:37.727355 line       494                         if (i == j):
excute 13:49:37.731347 line       496                         i_j_list.append((
excute 13:49:37.734338 line       497                             i, j,
excute 13:49:37.738362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.741349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:49:37.745310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:37.748333 line       494                         if (i == j):
excute 13:49:37.752321 line       496                         i_j_list.append((
excute 13:49:37.756312 line       497                             i, j,
excute 13:49:37.759303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.763296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:49:37.766282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:37.770241 line       494                         if (i == j):
excute 13:49:37.774231 line       496                         i_j_list.append((
excute 13:49:37.777221 line       497                             i, j,
excute 13:49:37.781212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.785200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:49:37.788194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:37.793182 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:37.797169 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:37.802188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:37.805179 line       494                         if (i == j):
excute 13:49:37.809137 line       496                         i_j_list.append((
excute 13:49:37.812162 line       497                             i, j,
excute 13:49:37.817116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.821107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0)]
excute 13:49:37.825096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:37.830083 line       494                         if (i == j):
excute 13:49:37.834069 line       495                             continue
excute 13:49:37.839056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:37.842080 line       494                         if (i == j):
excute 13:49:37.846039 line       496                         i_j_list.append((
excute 13:49:37.849063 line       497                             i, j,
excute 13:49:37.853051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.856042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:49:37.860001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:37.863024 line       494                         if (i == j):
excute 13:49:37.867013 line       496                         i_j_list.append((
excute 13:49:37.870008 line       497                             i, j,
excute 13:49:37.873994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.876986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:49:37.880945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:37.884934 line       494                         if (i == j):
excute 13:49:37.887957 line       496                         i_j_list.append((
excute 13:49:37.891916 line       497                             i, j,
excute 13:49:37.894938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.897930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:49:37.901920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:37.905879 line       494                         if (i == j):
excute 13:49:37.909868 line       496                         i_j_list.append((
excute 13:49:37.912893 line       497                             i, j,
excute 13:49:37.917847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.921867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:49:37.924858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:37.928842 line       494                         if (i == j):
excute 13:49:37.932812 line       496                         i_j_list.append((
excute 13:49:37.935829 line       497                             i, j,
excute 13:49:37.939822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.942811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1)]
excute 13:49:37.946801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:37.950760 line       494                         if (i == j):
excute 13:49:37.955747 line       496                         i_j_list.append((
excute 13:49:37.959767 line       497                             i, j,
excute 13:49:37.962757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.965750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0)]
excute 13:49:37.969739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:37.973697 line       494                         if (i == j):
excute 13:49:37.978684 line       496                         i_j_list.append((
excute 13:49:37.981676 line       497                             i, j,
excute 13:49:37.985666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:37.988658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:49:37.992647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:37.996637 line       494                         if (i == j):
excute 13:49:38.000625 line       496                         i_j_list.append((
excute 13:49:38.003651 line       497                             i, j,
excute 13:49:38.007605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.010629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1)]
excute 13:49:38.014587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:38.017611 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:38.022568 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:38.026556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:38.030546 line       494                         if (i == j):
excute 13:49:38.033538 line       496                         i_j_list.append((
excute 13:49:38.037527 line       497                             i, j,
excute 13:49:38.040519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.043511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0)]
excute 13:49:38.047500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:38.051490 line       494                         if (i == j):
excute 13:49:38.056476 line       496                         i_j_list.append((
excute 13:49:38.059501 line       497                             i, j,
excute 13:49:38.063488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.066480 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:49:38.070439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:38.074427 line       494                         if (i == j):
excute 13:49:38.078417 line       495                             continue
excute 13:49:38.081408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:38.085399 line       494                         if (i == j):
excute 13:49:38.091383 line       496                         i_j_list.append((
excute 13:49:38.095371 line       497                             i, j,
excute 13:49:38.098362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.102384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:49:38.105379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:38.109333 line       494                         if (i == j):
excute 13:49:38.113355 line       496                         i_j_list.append((
excute 13:49:38.117334 line       497                             i, j,
excute 13:49:38.120338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.125293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:38.129282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:38.133271 line       494                         if (i == j):
excute 13:49:38.137260 line       496                         i_j_list.append((
excute 13:49:38.141250 line       497                             i, j,
excute 13:49:38.145239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.149228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:38.153218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:38.157207 line       494                         if (i == j):
excute 13:49:38.161197 line       496                         i_j_list.append((
excute 13:49:38.165184 line       497                             i, j,
excute 13:49:38.168178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.171170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:49:38.175159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:38.179149 line       494                         if (i == j):
excute 13:49:38.183139 line       496                         i_j_list.append((
excute 13:49:38.186130 line       497                             i, j,
excute 13:49:38.194107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.197100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:49:38.205078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:38.209069 line       494                         if (i == j):
excute 13:49:38.213058 line       496                         i_j_list.append((
excute 13:49:38.217047 line       497                             i, j,
excute 13:49:38.221037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.224028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:38.229046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:38.233004 line       494                         if (i == j):
excute 13:49:38.237025 line       496                         i_j_list.append((
excute 13:49:38.240017 line       497                             i, j,
excute 13:49:38.243011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.246997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1)]
excute 13:49:38.249990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:38.254956 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:38.257968 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:38.261957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:38.265948 line       494                         if (i == j):
excute 13:49:38.269937 line       496                         i_j_list.append((
excute 13:49:38.272930 line       497                             i, j,
excute 13:49:38.275919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.279913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0)]
excute 13:49:38.283887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:38.287857 line       494                         if (i == j):
excute 13:49:38.290883 line       496                         i_j_list.append((
excute 13:49:38.294869 line       497                             i, j,
excute 13:49:38.297862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.301821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1)]
excute 13:49:38.305808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:38.309799 line       494                         if (i == j):
excute 13:49:38.313788 line       496                         i_j_list.append((
excute 13:49:38.317778 line       497                             i, j,
excute 13:49:38.320770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.324760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0)]
excute 13:49:38.337724 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:38.343708 line       494                         if (i == j):
excute 13:49:38.347729 line       495                             continue
excute 13:49:38.350719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:38.354713 line       494                         if (i == j):
excute 13:49:38.359667 line       496                         i_j_list.append((
excute 13:49:38.363655 line       497                             i, j,
excute 13:49:38.367645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.371666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:49:38.374655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:38.378614 line       494                         if (i == j):
excute 13:49:38.382612 line       496                         i_j_list.append((
excute 13:49:38.386592 line       497                             i, j,
excute 13:49:38.390583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.394573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0)]
excute 13:49:38.398562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:38.403547 line       494                         if (i == j):
excute 13:49:38.407538 line       496                         i_j_list.append((
excute 13:49:38.410528 line       497                             i, j,
excute 13:49:38.415549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.418541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1)]
excute 13:49:38.422529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:38.426522 line       494                         if (i == j):
excute 13:49:38.430508 line       496                         i_j_list.append((
excute 13:49:38.433468 line       497                             i, j,
excute 13:49:38.437456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.441447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0)]
excute 13:49:38.444439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:38.449426 line       494                         if (i == j):
excute 13:49:38.453414 line       496                         i_j_list.append((
excute 13:49:38.457435 line       497                             i, j,
excute 13:49:38.462392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.467377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:49:38.471402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:38.475357 line       494                         if (i == j):
excute 13:49:38.479352 line       496                         i_j_list.append((
excute 13:49:38.482371 line       497                             i, j,
excute 13:49:38.486325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.490317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1)]
excute 13:49:38.493309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:38.498297 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:38.501288 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:38.505276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:38.509266 line       494                         if (i == j):
excute 13:49:38.514254 line       496                         i_j_list.append((
excute 13:49:38.517275 line       497                             i, j,
excute 13:49:38.520266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.524257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0)]
excute 13:49:38.527250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:38.531238 line       494                         if (i == j):
excute 13:49:38.535197 line       496                         i_j_list.append((
excute 13:49:38.540183 line       497                             i, j,
excute 13:49:38.544173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.547165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1)]
excute 13:49:38.551154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:38.556142 line       494                         if (i == j):
excute 13:49:38.560129 line       496                         i_j_list.append((
excute 13:49:38.564120 line       497                             i, j,
excute 13:49:38.567112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.571101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0)]
excute 13:49:38.574092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:38.578082 line       494                         if (i == j):
excute 13:49:38.583068 line       496                         i_j_list.append((
excute 13:49:38.586061 line       497                             i, j,
excute 13:49:38.589053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.593042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:38.596034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:38.601022 line       494                         if (i == j):
excute 13:49:38.605009 line       495                             continue
excute 13:49:38.608032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:38.611024 line       494                         if (i == j):
excute 13:49:38.615015 line       496                         i_j_list.append((
excute 13:49:38.618991 line       497                             i, j,
excute 13:49:38.621995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.637985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:38.642990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:38.646980 line       494                         if (i == j):
excute 13:49:38.650972 line       496                         i_j_list.append((
excute 13:49:38.654958 line       497                             i, j,
excute 13:49:38.657949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.661940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1)]
excute 13:49:38.664934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:38.668918 line       494                         if (i == j):
excute 13:49:38.672879 line       496                         i_j_list.append((
excute 13:49:38.675902 line       497                             i, j,
excute 13:49:38.679891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.682883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0)]
excute 13:49:38.686872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:38.690831 line       494                         if (i == j):
excute 13:49:38.693853 line       496                         i_j_list.append((
excute 13:49:38.697843 line       497                             i, j,
excute 13:49:38.700836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.704825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:38.707817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:38.711775 line       494                         if (i == j):
excute 13:49:38.715796 line       496                         i_j_list.append((
excute 13:49:38.719784 line       497                             i, j,
excute 13:49:38.722777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.725769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1)]
excute 13:49:38.729759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:38.733749 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:38.736740 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:38.740701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:38.745684 line       494                         if (i == j):
excute 13:49:38.748676 line       496                         i_j_list.append((
excute 13:49:38.752664 line       497                             i, j,
excute 13:49:38.755658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.759647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0)]
excute 13:49:38.763635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:38.767625 line       494                         if (i == j):
excute 13:49:38.771616 line       496                         i_j_list.append((
excute 13:49:38.775605 line       497                             i, j,
excute 13:49:38.778598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.782587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1)]
excute 13:49:38.786576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:38.790565 line       494                         if (i == j):
excute 13:49:38.794555 line       496                         i_j_list.append((
excute 13:49:38.798545 line       497                             i, j,
excute 13:49:38.801536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.805525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0)]
excute 13:49:38.809515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:38.813505 line       494                         if (i == j):
excute 13:49:38.817492 line       496                         i_j_list.append((
excute 13:49:38.821483 line       497                             i, j,
excute 13:49:38.825471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.829462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:49:38.832454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:38.837441 line       494                         if (i == j):
excute 13:49:38.841462 line       496                         i_j_list.append((
excute 13:49:38.844451 line       497                             i, j,
excute 13:49:38.849442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.855391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:49:38.858384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:38.862373 line       494                         if (i == j):
excute 13:49:38.866363 line       495                             continue
excute 13:49:38.870352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:38.874342 line       494                         if (i == j):
excute 13:49:38.878330 line       496                         i_j_list.append((
excute 13:49:38.881323 line       497                             i, j,
excute 13:49:38.885312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.888304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:49:38.892294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:38.896281 line       494                         if (i == j):
excute 13:49:38.899275 line       496                         i_j_list.append((
excute 13:49:38.903264 line       497                             i, j,
excute 13:49:38.907253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.910245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:49:38.914235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:38.918225 line       494                         if (i == j):
excute 13:49:38.921216 line       496                         i_j_list.append((
excute 13:49:38.925205 line       497                             i, j,
excute 13:49:38.929210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.932187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:49:38.935179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:38.940166 line       494                         if (i == j):
excute 13:49:38.944156 line       496                         i_j_list.append((
excute 13:49:38.949141 line       497                             i, j,
excute 13:49:38.954136 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.958117 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1)]
excute 13:49:38.962106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:38.966096 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:38.970085 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:38.975072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:38.979061 line       494                         if (i == j):
excute 13:49:38.982053 line       496                         i_j_list.append((
excute 13:49:38.986042 line       497                             i, j,
excute 13:49:38.989034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:38.992026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0)]
excute 13:49:38.996016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:39.000005 line       494                         if (i == j):
excute 13:49:39.002996 line       496                         i_j_list.append((
excute 13:49:39.006984 line       497                             i, j,
excute 13:49:39.009977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.013969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1)]
excute 13:49:39.017958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:39.021945 line       494                         if (i == j):
excute 13:49:39.026932 line       496                         i_j_list.append((
excute 13:49:39.029925 line       497                             i, j,
excute 13:49:39.037902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.040896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0)]
excute 13:49:39.046879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:39.050868 line       494                         if (i == j):
excute 13:49:39.056853 line       496                         i_j_list.append((
excute 13:49:39.059844 line       497                             i, j,
excute 13:49:39.062837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.066827 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:49:39.069818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:39.073807 line       494                         if (i == j):
excute 13:49:39.077797 line       496                         i_j_list.append((
excute 13:49:39.080789 line       497                             i, j,
excute 13:49:39.084779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.087770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:49:39.091760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:39.094751 line       494                         if (i == j):
excute 13:49:39.098741 line       496                         i_j_list.append((
excute 13:49:39.102730 line       497                             i, j,
excute 13:49:39.105753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.109744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:49:39.112735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:39.116692 line       494                         if (i == j):
excute 13:49:39.120682 line       495                             continue
excute 13:49:39.124672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:39.129657 line       494                         if (i == j):
excute 13:49:39.133646 line       496                         i_j_list.append((
excute 13:49:39.137638 line       497                             i, j,
excute 13:49:39.141627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.145616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:49:39.148608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:39.152597 line       494                         if (i == j):
excute 13:49:39.157584 line       496                         i_j_list.append((
excute 13:49:39.161573 line       497                             i, j,
excute 13:49:39.165562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.168554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:49:39.171546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:39.175537 line       494                         if (i == j):
excute 13:49:39.179524 line       496                         i_j_list.append((
excute 13:49:39.183515 line       497                             i, j,
excute 13:49:39.186507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.190496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1)]
excute 13:49:39.194485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:39.198474 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:39.202464 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:39.205456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:39.209445 line       494                         if (i == j):
excute 13:49:39.213435 line       496                         i_j_list.append((
excute 13:49:39.217424 line       497                             i, j,
excute 13:49:39.221414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.224406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0)]
excute 13:49:39.228395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:39.232384 line       494                         if (i == j):
excute 13:49:39.237372 line       496                         i_j_list.append((
excute 13:49:39.241360 line       497                             i, j,
excute 13:49:39.244352 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.248341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1)]
excute 13:49:39.252332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:39.256321 line       494                         if (i == j):
excute 13:49:39.261307 line       496                         i_j_list.append((
excute 13:49:39.265296 line       497                             i, j,
excute 13:49:39.268287 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.272277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0)]
excute 13:49:39.276268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:39.280256 line       494                         if (i == j):
excute 13:49:39.283248 line       496                         i_j_list.append((
excute 13:49:39.287237 line       497                             i, j,
excute 13:49:39.291227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.294219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:39.298208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:39.302198 line       494                         if (i == j):
excute 13:49:39.306200 line       496                         i_j_list.append((
excute 13:49:39.309178 line       497                             i, j,
excute 13:49:39.312170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.316160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:39.319151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:39.323143 line       494                         if (i == j):
excute 13:49:39.333115 line       496                         i_j_list.append((
excute 13:49:39.338104 line       497                             i, j,
excute 13:49:39.343087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.346078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:39.349070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:39.353059 line       494                         if (i == j):
excute 13:49:39.358048 line       496                         i_j_list.append((
excute 13:49:39.362037 line       497                             i, j,
excute 13:49:39.367024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.370016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1)]
excute 13:49:39.374035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:39.378025 line       494                         if (i == j):
excute 13:49:39.382014 line       495                             continue
excute 13:49:39.386003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:39.389963 line       494                         if (i == j):
excute 13:49:39.392985 line       496                         i_j_list.append((
excute 13:49:39.396974 line       497                             i, j,
excute 13:49:39.400933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.403955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0)]
excute 13:49:39.406916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:39.410905 line       494                         if (i == j):
excute 13:49:39.415893 line       496                         i_j_list.append((
excute 13:49:39.418916 line       497                             i, j,
excute 13:49:39.421908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.425898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1)]
excute 13:49:39.428889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:39.432878 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:39.436846 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:39.439860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:39.443849 line       494                         if (i == j):
excute 13:49:39.448807 line       496                         i_j_list.append((
excute 13:49:39.452795 line       497                             i, j,
excute 13:49:39.456785 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.460774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0)]
excute 13:49:39.464768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:39.469749 line       494                         if (i == j):
excute 13:49:39.472740 line       496                         i_j_list.append((
excute 13:49:39.476729 line       497                             i, j,
excute 13:49:39.479721 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.483710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:49:39.486702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:39.490691 line       494                         if (i == j):
excute 13:49:39.494681 line       496                         i_j_list.append((
excute 13:49:39.497673 line       497                             i, j,
excute 13:49:39.501662 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.504654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:49:39.508655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:39.512633 line       494                         if (i == j):
excute 13:49:39.516623 line       496                         i_j_list.append((
excute 13:49:39.519614 line       497                             i, j,
excute 13:49:39.522607 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.526596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:49:39.529588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:39.533577 line       494                         if (i == j):
excute 13:49:39.537566 line       496                         i_j_list.append((
excute 13:49:39.540558 line       497                             i, j,
excute 13:49:39.543550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.547539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:49:39.550531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:39.554521 line       494                         if (i == j):
excute 13:49:39.559513 line       496                         i_j_list.append((
excute 13:49:39.562502 line       497                             i, j,
excute 13:49:39.566491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.572474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:49:39.575497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:39.579456 line       494                         if (i == j):
excute 13:49:39.583446 line       496                         i_j_list.append((
excute 13:49:39.587435 line       497                             i, j,
excute 13:49:39.591422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.594414 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1)]
excute 13:49:39.597406 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:39.601395 line       494                         if (i == j):
excute 13:49:39.605396 line       496                         i_j_list.append((
excute 13:49:39.608377 line       497                             i, j,
excute 13:49:39.612366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.615358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:49:39.620346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:39.624335 line       494                         if (i == j):
excute 13:49:39.627326 line       495                             continue
excute 13:49:39.631315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:39.635305 line       494                         if (i == j):
excute 13:49:39.639294 line       496                         i_j_list.append((
excute 13:49:39.642286 line       497                             i, j,
excute 13:49:39.646275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.649268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1)]
excute 13:49:39.653257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:39.657247 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:39.660238 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:39.664231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:39.668218 line       494                         if (i == j):
excute 13:49:39.673206 line       496                         i_j_list.append((
excute 13:49:39.677194 line       497                             i, j,
excute 13:49:39.680185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.684176 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0)]
excute 13:49:39.691156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:39.695147 line       494                         if (i == j):
excute 13:49:39.699135 line       496                         i_j_list.append((
excute 13:49:39.707113 line       497                             i, j,
excute 13:49:39.710105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.715093 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1)]
excute 13:49:39.719081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:39.723072 line       494                         if (i == j):
excute 13:49:39.726062 line       496                         i_j_list.append((
excute 13:49:39.730051 line       497                             i, j,
excute 13:49:39.733044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.736036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0)]
excute 13:49:39.740025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:39.744023 line       494                         if (i == j):
excute 13:49:39.748004 line       496                         i_j_list.append((
excute 13:49:39.750996 line       497                             i, j,
excute 13:49:39.754985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.757977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:39.761966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:39.765957 line       494                         if (i == j):
excute 13:49:39.769946 line       496                         i_j_list.append((
excute 13:49:39.772937 line       497                             i, j,
excute 13:49:39.777924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.781914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:39.786901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:39.790890 line       494                         if (i == j):
excute 13:49:39.794880 line       496                         i_j_list.append((
excute 13:49:39.798868 line       497                             i, j,
excute 13:49:39.801861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.805850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:39.809853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:39.813830 line       494                         if (i == j):
excute 13:49:39.817819 line       496                         i_j_list.append((
excute 13:49:39.820810 line       497                             i, j,
excute 13:49:39.826794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.831812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:49:39.834804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:39.838793 line       494                         if (i == j):
excute 13:49:39.842783 line       496                         i_j_list.append((
excute 13:49:39.846772 line       497                             i, j,
excute 13:49:39.849764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.854719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0)]
excute 13:49:39.858710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:39.863695 line       494                         if (i == j):
excute 13:49:39.867685 line       496                         i_j_list.append((
excute 13:49:39.870679 line       497                             i, j,
excute 13:49:39.874667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:39.879653 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 4, 0), (3, 1, 4, 1), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 4, 0), (4, 1, 4, 1), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 1), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 1), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 1), (9, 0, 3, 0), (9, 1, 3, 1), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:39.882644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:39.886642 line       494                         if (i == j):
excute 13:49:39.890623 line       495                             continue
excute 13:49:39.894613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:39.897606 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:39.901595 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 8, -2, 0), (7, 1, -2, 1), (7, 6, -2, 1), (7, 9, -2, 1), (6, 0, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 1, -1, 1), (6, 9, -1, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (5, 0, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 7, 0, 0), (0, 1, 0, 1), (0, 6, 0, 1), (0, 9, 0, 1), (5, 1, 0, 1), (5, 6, 0, 1), (5, 9, 0, 1), (8, 1, 0, 1), (8, 6, 0, 1), (8, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (1, 6, 2, 1), (1, 9, 2, 1), (2, 1, 2, 1), (2, 6, 2, 1), (2, 9, 2, 1), (9, 0, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 1, 3, 1), (9, 6, 3, 1), (3, 0, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (4, 0, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (3, 1, 4, 1), (3, 6, 4, 1), (3, 9, 4, 1), (4, 1, 4, 1), (4, 6, 4, 1), (4, 9, 4, 1)]
excute 13:49:39.905584 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:39.910573 line       505                     if (self.RELOCATE):
excute 13:49:39.914561 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:39.917553 line       505                     if (self.RELOCATE):
excute 13:49:39.921542 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:39.925529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:39.928523 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:39.932513 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:39.936500 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:39.940491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:39.944481 line       556                     i = i_j[0]
excute 13:49:39.949467 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:39.952458 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:39.957451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:39.961436 line       556                     i = i_j[0]
excute 13:49:39.977424 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:39.981418 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:39.986404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:39.992048 line       556                     i = i_j[0]
excute 13:49:39.996040 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.000029 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.004019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:40.007050 line       556                     i = i_j[0]
excute 13:49:40.011004 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:40.014023 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.018017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:40.022007 line       556                     i = i_j[0]
excute 13:49:40.025974 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:40.028983 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.032973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 1)
excute 13:49:40.036962 line       556                     i = i_j[0]
excute 13:49:40.039956 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:40.043943 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.047903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 1)
excute 13:49:40.050926 line       556                     i = i_j[0]
excute 13:49:40.054914 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:40.058905 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.062863 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 1)
excute 13:49:40.065885 line       556                     i = i_j[0]
excute 13:49:40.069878 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:40.073863 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.077823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:49:40.081812 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:40.086797 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:40.090788 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.095788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:49:40.098767 line       556                     i = i_j[0]
excute 13:49:40.102755 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:40.105748 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.110736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:49:40.113727 line       556                     i = i_j[0]
excute 13:49:40.117716 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:40.121713 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.125694 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:49:40.128717 line       556                     i = i_j[0]
excute 13:49:40.133709 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.136695 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.140655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:49:40.143679 line       556                     i = i_j[0]
excute 13:49:40.147666 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:40.151662 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.155614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:49:40.158638 line       556                     i = i_j[0]
excute 13:49:40.162628 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:40.166616 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.170601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:49:40.173596 line       556                     i = i_j[0]
excute 13:49:40.177569 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:40.180578 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.184568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 1)
excute 13:49:40.190520 line       556                     i = i_j[0]
excute 13:49:40.193543 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:40.197533 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.201493 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 1)
excute 13:49:40.204484 line       556                     i = i_j[0]
excute 13:49:40.208474 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:40.212465 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.216452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:40.220441 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:40.224431 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:40.228420 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.232409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:40.236399 line       556                     i = i_j[0]
excute 13:49:40.240387 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:40.244378 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.248368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:49:40.251359 line       556                     i = i_j[0]
excute 13:49:40.256345 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.260334 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.263327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:49:40.267316 line       556                     i = i_j[0]
excute 13:49:40.271305 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:40.275295 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.280282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:49:40.284273 line       556                     i = i_j[0]
excute 13:49:40.287263 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:40.292249 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.296238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:49:40.299231 line       556                     i = i_j[0]
excute 13:49:40.303221 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:40.307209 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.311199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:49:40.315188 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:40.319178 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:40.324166 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.335134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:49:40.342129 line       556                     i = i_j[0]
excute 13:49:40.346104 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:40.350095 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.355081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:49:40.360068 line       556                     i = i_j[0]
excute 13:49:40.364057 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:40.367050 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.372035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:49:40.376026 line       556                     i = i_j[0]
excute 13:49:40.380014 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.384023 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.387995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:49:40.391983 line       556                     i = i_j[0]
excute 13:49:40.397966 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:40.401956 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.405945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:49:40.409936 line       556                     i = i_j[0]
excute 13:49:40.413924 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:40.416916 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.423898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:49:40.430878 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:40.434867 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:40.438856 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.442845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:49:40.446836 line       556                     i = i_j[0]
excute 13:49:40.451824 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:40.454815 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.458804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:49:40.462794 line       556                     i = i_j[0]
excute 13:49:40.467787 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:40.470771 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.474762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:49:40.478750 line       556                     i = i_j[0]
excute 13:49:40.481743 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.485732 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.489721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:49:40.492744 line       556                     i = i_j[0]
excute 13:49:40.496703 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:40.500691 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.505680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:49:40.509675 line       556                     i = i_j[0]
excute 13:49:40.513660 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:40.516650 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.520640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:49:40.524628 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:40.529616 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:40.536595 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.544574 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 154
excute 13:49:40.551581 line       560                         if (t_tmp > self.TIME):
excute 13:49:40.555544 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:40.559535 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:40.563525 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:40.567514 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:40.570506 line       569                                     available_vhecles[i][t],
excute 13:49:40.574495 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:40.578484 line       571                                     self.S_capacities[j],
excute 13:49:40.582474 line       572                                     demands[t][i][j],
excute 13:49:40.586463 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 146
calc_contract     13:49:40.590452 call       352     def caluculate_contract(
calc_contract     13:49:40.593444 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:40.593444 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:40.594443 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:40.595441 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:40.596436 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:40.596436 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:40.597433 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:40.598431 line       575                                 rsf += rsf_tmp
excute 13:49:40.602422 line       576                                 rse += rse_tmp
excute 13:49:40.606410 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 0
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 146
move_cars     Starting var:.. t_tmp = 154
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:40.610399 call       388     def move_cars(
move_cars     13:49:40.614389 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:49:40.616384 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:40.617381 line       399         return available_vhecles
move_cars     13:49:40.619376 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:40.621371 line       579                                 success += can_contract
excute Modified var:.. success = 64
excute 13:49:40.625360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:49:40.629347 line       556                     i = i_j[0]
excute 13:49:40.633352 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:40.637325 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.641316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:49:40.645306 line       556                     i = i_j[0]
excute 13:49:40.649296 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:40.653284 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.657274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 1)
excute 13:49:40.661262 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:40.665254 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:40.669241 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.673231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:49:40.677220 line       556                     i = i_j[0]
excute 13:49:40.680210 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:40.684202 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.688190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 1)
excute 13:49:40.691183 line       556                     i = i_j[0]
excute 13:49:40.696171 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:40.699162 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.705146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:49:40.708137 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:40.713125 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:40.717113 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.721104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:49:40.725092 line       556                     i = i_j[0]
excute 13:49:40.729082 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:40.733071 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.737060 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:49:40.741050 line       560                         if (t_tmp > self.TIME):
excute 13:49:40.745038 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:40.749027 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:40.752021 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:40.756010 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:40.759002 line       569                                     available_vhecles[i][t],
excute 13:49:40.762991 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:40.766980 line       571                                     self.S_capacities[j],
excute 13:49:40.770970 line       572                                     demands[t][i][j],
excute 13:49:40.774959 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 6
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 146
calc_contract     13:49:40.778949 call       352     def caluculate_contract(
calc_contract     13:49:40.781942 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:40.781942 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:40.782939 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:40.783937 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:40.784934 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -2
calc_contract     13:49:40.784934 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 3
calc_contract     13:49:40.785931 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:40.786929 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-2, 3, 0]
excute Modified var:.. can_contract = -2
excute Modified var:.. rsf_tmp = 3
excute 13:49:40.787924 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 189
excute 13:49:40.791915 line       576                                 rse += rse_tmp
excute 13:49:40.795911 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 8
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 146
move_cars     Starting var:.. t_tmp = 161
move_cars     Starting var:.. can_contract = -2
move_cars     13:49:40.799892 call       388     def move_cars(
move_cars     13:49:40.803881 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:40.804880 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:40.807871 line       399         return available_vhecles
move_cars     13:49:40.808870 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:40.811861 line       579                                 success += can_contract
excute Modified var:.. success = 62
excute 13:49:40.815848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 1)
excute 13:49:40.819840 line       556                     i = i_j[0]
excute 13:49:40.823828 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:40.827817 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.831808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:49:40.834798 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:40.839790 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:40.842808 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.846797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:49:40.850787 line       556                     i = i_j[0]
excute 13:49:40.854776 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:40.857768 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.862725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:49:40.865747 line       556                     i = i_j[0]
excute 13:49:40.869738 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:40.873694 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.877717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:49:40.881703 line       556                     i = i_j[0]
excute 13:49:40.885662 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.888686 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.892674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:49:40.896632 line       556                     i = i_j[0]
excute 13:49:40.899657 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:40.903645 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.907604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:49:40.912594 line       556                     i = i_j[0]
excute 13:49:40.916580 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:40.919573 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.923562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:49:40.927551 line       556                     i = i_j[0]
excute 13:49:40.931541 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:40.934533 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.938552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:40.942522 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:40.945533 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:40.951487 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.955477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:40.962482 line       556                     i = i_j[0]
excute 13:49:40.967446 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:40.970435 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.976421 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:40.980440 line       556                     i = i_j[0]
excute 13:49:40.984399 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:40.987421 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:40.991412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:40.995369 line       556                     i = i_j[0]
excute 13:49:40.998391 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:41.002381 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.006340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:41.009362 line       556                     i = i_j[0]
excute 13:49:41.014320 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:41.017344 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.021333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:41.025320 line       556                     i = i_j[0]
excute 13:49:41.029280 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:41.032304 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.036291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 1)
excute 13:49:41.040249 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:41.043272 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:41.047262 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.051219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 1)
excute 13:49:41.056208 line       556                     i = i_j[0]
excute 13:49:41.061194 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:41.065181 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.069173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:49:41.073162 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:41.077152 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:41.081141 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.086128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:49:41.090117 line       556                     i = i_j[0]
excute 13:49:41.094107 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:41.098096 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.102084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:49:41.106073 line       556                     i = i_j[0]
excute 13:49:41.110063 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:41.113056 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.118040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:41.122031 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:41.126020 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:41.130014 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.133998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:41.137988 line       556                     i = i_j[0]
excute 13:49:41.141979 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:41.144970 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.149956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:41.153946 line       556                     i = i_j[0]
excute 13:49:41.157935 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:41.161925 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.165914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:41.169904 line       556                     i = i_j[0]
excute 13:49:41.173892 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:41.177880 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.180873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:41.184863 line       556                     i = i_j[0]
excute 13:49:41.188854 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:41.191844 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.195833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:41.199822 line       556                     i = i_j[0]
excute 13:49:41.202815 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:41.206805 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.210795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:41.213785 line       556                     i = i_j[0]
excute 13:49:41.217776 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:41.221763 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.225754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 1)
excute 13:49:41.229743 line       556                     i = i_j[0]
excute 13:49:41.233739 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:41.237722 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.241711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:49:41.245701 line       556                     i = i_j[0]
excute 13:49:41.250688 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:41.254675 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.258666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:49:41.262655 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:41.267642 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:41.271633 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.275622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:49:41.279608 line       556                     i = i_j[0]
excute 13:49:41.282601 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:41.286591 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.290582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:49:41.293572 line       556                     i = i_j[0]
excute 13:49:41.297563 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:41.301550 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.304573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:49:41.308565 line       556                     i = i_j[0]
excute 13:49:41.312539 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:41.315544 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.319505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:49:41.324489 line       556                     i = i_j[0]
excute 13:49:41.334463 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:41.340451 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.345433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:49:41.348426 line       556                     i = i_j[0]
excute 13:49:41.353412 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:41.360396 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.366379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:41.372362 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:41.381368 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:41.388319 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.397296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:41.403282 line       556                     i = i_j[0]
excute 13:49:41.408265 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:41.412257 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.417241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:41.421230 line       556                     i = i_j[0]
excute 13:49:41.430208 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:41.435193 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.446165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:41.450156 line       556                     i = i_j[0]
excute 13:49:41.456138 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:41.460126 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.469104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:41.474093 line       556                     i = i_j[0]
excute 13:49:41.482070 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:41.490047 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.499036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:41.505006 line       556                     i = i_j[0]
excute 13:49:41.514980 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:41.520971 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.528943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 1)
excute 13:49:41.536922 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:41.542907 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:41.549886 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.555871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 1)
excute 13:49:41.560857 line       556                     i = i_j[0]
excute 13:49:41.569835 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:41.577812 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.583795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 1)
excute 13:49:41.590777 line       556                     i = i_j[0]
excute 13:49:41.595764 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:41.603742 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.610724 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 154
excute 13:49:41.616707 line       560                         if (t_tmp > self.TIME):
excute 13:49:41.624687 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:41.632666 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:41.642639 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:41.649619 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:41.657598 line       569                                     available_vhecles[i][t],
excute 13:49:41.663583 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:41.671563 line       571                                     self.S_capacities[j],
excute 13:49:41.675550 line       572                                     demands[t][i][j],
excute 13:49:41.683529 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -2
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 146
calc_contract     13:49:41.689515 call       352     def caluculate_contract(
calc_contract     13:49:41.693504 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:41.694500 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:41.696495 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:41.697491 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:41.698490 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 2
calc_contract     13:49:41.698490 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 3
calc_contract     13:49:41.700484 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:41.701482 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 3]
excute Modified var:.. can_contract = 2
excute Modified var:.. rsf_tmp = 0
excute Modified var:.. rse_tmp = 3
excute 13:49:41.703476 line       575                                 rsf += rsf_tmp
excute 13:49:41.712452 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 167
excute 13:49:41.719433 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 146
move_cars     Starting var:.. t_tmp = 154
move_cars     Starting var:.. can_contract = 2
move_cars     13:49:41.727412 call       388     def move_cars(
move_cars     13:49:41.734394 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:41.737385 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     13:49:41.739380 line       399         return available_vhecles
move_cars     13:49:41.741375 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:41.745363 line       579                                 success += can_contract
excute Modified var:.. success = 64
excute 13:49:41.754341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 1)
excute 13:49:41.762319 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:41.768302 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:41.775285 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.784260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 1)
excute 13:49:41.789246 line       556                     i = i_j[0]
excute 13:49:41.797239 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:41.804207 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.811188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 1)
excute 13:49:41.815178 line       556                     i = i_j[0]
excute 13:49:41.820165 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:41.825152 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:41.830138 line       555                 for i_j in i_j_list:
excute 13:49:41.833128 line       581             self.write_matrix(
excute 13:49:41.837118 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:41.842104 line       583                 result_file_path,
excute 13:49:41.846095 line       584                 mode='a'
excute 13:49:41.851081 line       488         for t in time_steps:
excute Modified var:.. t = 147
excute 13:49:41.855071 line       489             if (t != self.TIME + 1):
excute 13:49:41.861054 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:41.867038 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:41.874020 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:41.880005 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:41.883993 line       494                         if (i == j):
excute 13:49:41.889978 line       495                             continue
excute 13:49:41.892970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:41.898953 line       494                         if (i == j):
excute 13:49:41.904939 line       496                         i_j_list.append((
excute 13:49:41.909927 line       497                             i, j,
excute 13:49:41.915939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:41.919898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:41.930872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:41.937849 line       494                         if (i == j):
excute 13:49:41.945833 line       496                         i_j_list.append((
excute 13:49:41.949817 line       497                             i, j,
excute 13:49:41.955802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:41.958793 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:49:41.964778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:41.968767 line       494                         if (i == j):
excute 13:49:41.973754 line       496                         i_j_list.append((
excute 13:49:41.977742 line       497                             i, j,
excute 13:49:41.981732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:41.985722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1)]
excute 13:49:41.992702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:41.996692 line       494                         if (i == j):
excute 13:49:42.000681 line       496                         i_j_list.append((
excute 13:49:42.004671 line       497                             i, j,
excute 13:49:42.009658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.012649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0)]
excute 13:49:42.016638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:42.020628 line       494                         if (i == j):
excute 13:49:42.024619 line       496                         i_j_list.append((
excute 13:49:42.027611 line       497                             i, j,
excute 13:49:42.031599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.034591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:49:42.037582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:42.041572 line       494                         if (i == j):
excute 13:49:42.046562 line       496                         i_j_list.append((
excute 13:49:42.050547 line       497                             i, j,
excute 13:49:42.053573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.057562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:49:42.061519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:42.064541 line       494                         if (i == j):
excute 13:49:42.068508 line       496                         i_j_list.append((
excute 13:49:42.072490 line       497                             i, j,
excute 13:49:42.075512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.078504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:49:42.082462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:42.086452 line       494                         if (i == j):
excute 13:49:42.090444 line       496                         i_j_list.append((
excute 13:49:42.093435 line       497                             i, j,
excute 13:49:42.097424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.101413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:49:42.104405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:42.108395 line       494                         if (i == j):
excute 13:49:42.112384 line       496                         i_j_list.append((
excute 13:49:42.116373 line       497                             i, j,
excute 13:49:42.119365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.123354 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:49:42.127344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:42.131333 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:42.135323 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:42.139312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:42.144298 line       494                         if (i == j):
excute 13:49:42.151279 line       496                         i_j_list.append((
excute 13:49:42.156268 line       497                             i, j,
excute 13:49:42.161285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.164244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0)]
excute 13:49:42.169231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:42.175248 line       494                         if (i == j):
excute 13:49:42.179238 line       495                             continue
excute 13:49:42.182197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:42.188212 line       494                         if (i == j):
excute 13:49:42.193168 line       496                         i_j_list.append((
excute 13:49:42.198186 line       497                             i, j,
excute 13:49:42.202144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.207160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:49:42.211120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:42.215109 line       494                         if (i == j):
excute 13:49:42.220096 line       496                         i_j_list.append((
excute 13:49:42.223087 line       497                             i, j,
excute 13:49:42.227077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.231067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1)]
excute 13:49:42.234058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:42.238058 line       494                         if (i == j):
excute 13:49:42.242039 line       496                         i_j_list.append((
excute 13:49:42.245060 line       497                             i, j,
excute 13:49:42.248051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.253008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0)]
excute 13:49:42.257012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:42.260997 line       494                         if (i == j):
excute 13:49:42.264015 line       496                         i_j_list.append((
excute 13:49:42.268003 line       497                             i, j,
excute 13:49:42.270997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.274962 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:49:42.278938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:42.281962 line       494                         if (i == j):
excute 13:49:42.285951 line       496                         i_j_list.append((
excute 13:49:42.289918 line       497                             i, j,
excute 13:49:42.292933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.295923 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:49:42.299881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:42.302904 line       494                         if (i == j):
excute 13:49:42.306895 line       496                         i_j_list.append((
excute 13:49:42.310854 line       497                             i, j,
excute 13:49:42.313877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.316869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:49:42.320825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:42.324816 line       494                         if (i == j):
excute 13:49:42.335786 line       496                         i_j_list.append((
excute 13:49:42.343772 line       497                             i, j,
excute 13:49:42.346758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.349749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:49:42.355732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:42.360721 line       494                         if (i == j):
excute 13:49:42.364711 line       496                         i_j_list.append((
excute 13:49:42.367702 line       497                             i, j,
excute 13:49:42.371691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.375681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:49:42.379669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:42.383691 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:42.387678 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:42.391637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:42.394660 line       494                         if (i == j):
excute 13:49:42.398619 line       496                         i_j_list.append((
excute 13:49:42.401643 line       497                             i, j,
excute 13:49:42.405630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.408622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0)]
excute 13:49:42.412580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:42.415609 line       494                         if (i == j):
excute 13:49:42.419598 line       496                         i_j_list.append((
excute 13:49:42.423550 line       497                             i, j,
excute 13:49:42.426578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.430532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:42.433562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:42.437514 line       494                         if (i == j):
excute 13:49:42.441503 line       495                             continue
excute 13:49:42.444527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:42.448492 line       494                         if (i == j):
excute 13:49:42.452476 line       496                         i_j_list.append((
excute 13:49:42.455497 line       497                             i, j,
excute 13:49:42.461451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.465473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1)]
excute 13:49:42.470426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:42.474415 line       494                         if (i == j):
excute 13:49:42.478403 line       496                         i_j_list.append((
excute 13:49:42.485385 line       497                             i, j,
excute 13:49:42.489374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.493364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0)]
excute 13:49:42.496388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:42.500347 line       494                         if (i == j):
excute 13:49:42.504350 line       496                         i_j_list.append((
excute 13:49:42.507359 line       497                             i, j,
excute 13:49:42.511349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.514339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:42.518299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:42.521323 line       494                         if (i == j):
excute 13:49:42.525291 line       496                         i_j_list.append((
excute 13:49:42.529270 line       497                             i, j,
excute 13:49:42.532261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.536250 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:49:42.540241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:42.544260 line       494                         if (i == j):
excute 13:49:42.547251 line       496                         i_j_list.append((
excute 13:49:42.551240 line       497                             i, j,
excute 13:49:42.554233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.558222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:49:42.562181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:42.566171 line       494                         if (i == j):
excute 13:49:42.570158 line       496                         i_j_list.append((
excute 13:49:42.574147 line       497                             i, j,
excute 13:49:42.581129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.585131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:42.588143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:42.592102 line       494                         if (i == j):
excute 13:49:42.596124 line       496                         i_j_list.append((
excute 13:49:42.599113 line       497                             i, j,
excute 13:49:42.602105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.606065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:42.609088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:42.613044 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:42.616068 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:42.620026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:42.624014 line       494                         if (i == j):
excute 13:49:42.628037 line       496                         i_j_list.append((
excute 13:49:42.631995 line       497                             i, j,
excute 13:49:42.635984 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.639006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0)]
excute 13:49:42.642996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:42.646976 line       494                         if (i == j):
excute 13:49:42.649976 line       496                         i_j_list.append((
excute 13:49:42.653967 line       497                             i, j,
excute 13:49:42.656960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.660947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:49:42.664906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:42.669905 line       494                         if (i == j):
excute 13:49:42.673884 line       496                         i_j_list.append((
excute 13:49:42.676874 line       497                             i, j,
excute 13:49:42.680865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.684852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0)]
excute 13:49:42.687846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:42.691833 line       494                         if (i == j):
excute 13:49:42.695824 line       495                             continue
excute 13:49:42.699813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:42.703803 line       494                         if (i == j):
excute 13:49:42.707792 line       496                         i_j_list.append((
excute 13:49:42.710784 line       497                             i, j,
excute 13:49:42.714805 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.718783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0)]
excute 13:49:42.721784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:42.732269 line       494                         if (i == j):
excute 13:49:42.736292 line       496                         i_j_list.append((
excute 13:49:42.740282 line       497                             i, j,
excute 13:49:42.743274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.747234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:49:42.750255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:42.754249 line       494                         if (i == j):
excute 13:49:42.758202 line       496                         i_j_list.append((
excute 13:49:42.761194 line       497                             i, j,
excute 13:49:42.765183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.770172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:49:42.774161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:42.779149 line       494                         if (i == j):
excute 13:49:42.783138 line       496                         i_j_list.append((
excute 13:49:42.787127 line       497                             i, j,
excute 13:49:42.790119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.794107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:49:42.797100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:42.801089 line       494                         if (i == j):
excute 13:49:42.805079 line       496                         i_j_list.append((
excute 13:49:42.809067 line       497                             i, j,
excute 13:49:42.813055 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.816049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:49:42.820039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:42.824026 line       494                         if (i == j):
excute 13:49:42.828015 line       496                         i_j_list.append((
excute 13:49:42.831007 line       497                             i, j,
excute 13:49:42.833999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.838986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:49:42.842976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:42.846965 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:42.849957 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:42.853946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:42.857935 line       494                         if (i == j):
excute 13:49:42.860926 line       496                         i_j_list.append((
excute 13:49:42.864916 line       497                             i, j,
excute 13:49:42.867941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.872929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0)]
excute 13:49:42.875919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:42.879910 line       494                         if (i == j):
excute 13:49:42.884863 line       496                         i_j_list.append((
excute 13:49:42.887855 line       497                             i, j,
excute 13:49:42.891844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.894836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0)]
excute 13:49:42.897828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:42.901818 line       494                         if (i == j):
excute 13:49:42.905807 line       496                         i_j_list.append((
excute 13:49:42.908799 line       497                             i, j,
excute 13:49:42.911791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.915780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:42.918772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:42.922762 line       494                         if (i == j):
excute 13:49:42.925754 line       496                         i_j_list.append((
excute 13:49:42.929743 line       497                             i, j,
excute 13:49:42.932735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.935727 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1)]
excute 13:49:42.939717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:42.947697 line       494                         if (i == j):
excute 13:49:42.952688 line       495                             continue
excute 13:49:42.956672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:42.960662 line       494                         if (i == j):
excute 13:49:42.968639 line       496                         i_j_list.append((
excute 13:49:42.973630 line       497                             i, j,
excute 13:49:42.977648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:42.980639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0)]
excute 13:49:42.984628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:42.988587 line       494                         if (i == j):
excute 13:49:42.992578 line       496                         i_j_list.append((
excute 13:49:42.995599 line       497                             i, j,
excute 13:49:42.999588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.002580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0)]
excute 13:49:43.006571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:43.010561 line       494                         if (i == j):
excute 13:49:43.014518 line       496                         i_j_list.append((
excute 13:49:43.017508 line       497                             i, j,
excute 13:49:43.020500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.024489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0)]
excute 13:49:43.027482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:43.031471 line       494                         if (i == j):
excute 13:49:43.035460 line       496                         i_j_list.append((
excute 13:49:43.038452 line       497                             i, j,
excute 13:49:43.041445 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.045434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:43.048425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:43.052415 line       494                         if (i == j):
excute 13:49:43.056405 line       496                         i_j_list.append((
excute 13:49:43.059396 line       497                             i, j,
excute 13:49:43.063387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.066377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:43.069370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:43.073359 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:43.077381 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:43.081371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:43.085359 line       494                         if (i == j):
excute 13:49:43.089319 line       496                         i_j_list.append((
excute 13:49:43.092340 line       497                             i, j,
excute 13:49:43.096299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.099322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0)]
excute 13:49:43.102315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:43.106303 line       494                         if (i == j):
excute 13:49:43.110293 line       496                         i_j_list.append((
excute 13:49:43.113286 line       497                             i, j,
excute 13:49:43.117274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.120265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:49:43.124255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:43.128245 line       494                         if (i == j):
excute 13:49:43.132203 line       496                         i_j_list.append((
excute 13:49:43.135226 line       497                             i, j,
excute 13:49:43.139216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.142208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:49:43.146166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:43.150154 line       494                         if (i == j):
excute 13:49:43.153178 line       496                         i_j_list.append((
excute 13:49:43.157168 line       497                             i, j,
excute 13:49:43.161139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.164150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1)]
excute 13:49:43.167140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:43.174091 line       494                         if (i == j):
excute 13:49:43.179078 line       496                         i_j_list.append((
excute 13:49:43.183099 line       497                             i, j,
excute 13:49:43.186090 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.190048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0)]
excute 13:49:43.193072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:43.197029 line       494                         if (i == j):
excute 13:49:43.201052 line       495                             continue
excute 13:49:43.204042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:43.208000 line       494                         if (i == j):
excute 13:49:43.211023 line       496                         i_j_list.append((
excute 13:49:43.214982 line       497                             i, j,
excute 13:49:43.218972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.222964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:49:43.225954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:43.229942 line       494                         if (i == j):
excute 13:49:43.233932 line       496                         i_j_list.append((
excute 13:49:43.237921 line       497                             i, j,
excute 13:49:43.241910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.245900 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:49:43.248892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:43.253878 line       494                         if (i == j):
excute 13:49:43.257869 line       496                         i_j_list.append((
excute 13:49:43.261856 line       497                             i, j,
excute 13:49:43.264849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.268838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:49:43.272828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:43.277816 line       494                         if (i == j):
excute 13:49:43.282800 line       496                         i_j_list.append((
excute 13:49:43.286788 line       497                             i, j,
excute 13:49:43.289781 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.292773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:49:43.296761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:43.299753 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:43.303744 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:43.306735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:43.310724 line       494                         if (i == j):
excute 13:49:43.313717 line       496                         i_j_list.append((
excute 13:49:43.317705 line       497                             i, j,
excute 13:49:43.321696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.324687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0)]
excute 13:49:43.330673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:43.343638 line       494                         if (i == j):
excute 13:49:43.349654 line       496                         i_j_list.append((
excute 13:49:43.353642 line       497                             i, j,
excute 13:49:43.357634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.361621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:49:43.365611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:43.369570 line       494                         if (i == j):
excute 13:49:43.373567 line       496                         i_j_list.append((
excute 13:49:43.377548 line       497                             i, j,
excute 13:49:43.381537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.386527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:49:43.390511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:43.394502 line       494                         if (i == j):
excute 13:49:43.399493 line       496                         i_j_list.append((
excute 13:49:43.402512 line       497                             i, j,
excute 13:49:43.406500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.409492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1)]
excute 13:49:43.413451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:43.417472 line       494                         if (i == j):
excute 13:49:43.421429 line       496                         i_j_list.append((
excute 13:49:43.424453 line       497                             i, j,
excute 13:49:43.428411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.431434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0)]
excute 13:49:43.434426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:43.438415 line       494                         if (i == j):
excute 13:49:43.442405 line       496                         i_j_list.append((
excute 13:49:43.446363 line       497                             i, j,
excute 13:49:43.449390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.453376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:49:43.457365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:43.461322 line       494                         if (i == j):
excute 13:49:43.465312 line       495                             continue
excute 13:49:43.468304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:43.471296 line       494                         if (i == j):
excute 13:49:43.475285 line       496                         i_j_list.append((
excute 13:49:43.479274 line       497                             i, j,
excute 13:49:43.482266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.486255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:49:43.491244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:43.495233 line       494                         if (i == j):
excute 13:49:43.500221 line       496                         i_j_list.append((
excute 13:49:43.503212 line       497                             i, j,
excute 13:49:43.507201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.511191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:49:43.515180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:43.519174 line       494                         if (i == j):
excute 13:49:43.523158 line       496                         i_j_list.append((
excute 13:49:43.526151 line       497                             i, j,
excute 13:49:43.530140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.533132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:49:43.537121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:43.541111 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:43.544103 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:43.549088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:43.552081 line       494                         if (i == j):
excute 13:49:43.556071 line       496                         i_j_list.append((
excute 13:49:43.561056 line       497                             i, j,
excute 13:49:43.564047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.567039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0)]
excute 13:49:43.571028 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:43.575020 line       494                         if (i == j):
excute 13:49:43.579040 line       496                         i_j_list.append((
excute 13:49:43.582032 line       497                             i, j,
excute 13:49:43.586021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.589979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:43.594997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:43.598988 line       494                         if (i == j):
excute 13:49:43.602951 line       496                         i_j_list.append((
excute 13:49:43.605967 line       497                             i, j,
excute 13:49:43.608929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.612918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:43.616908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:43.621896 line       494                         if (i == j):
excute 13:49:43.625882 line       496                         i_j_list.append((
excute 13:49:43.628876 line       497                             i, j,
excute 13:49:43.632865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.636855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1)]
excute 13:49:43.640842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:43.644832 line       494                         if (i == j):
excute 13:49:43.647823 line       496                         i_j_list.append((
excute 13:49:43.652811 line       497                             i, j,
excute 13:49:43.656801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.660789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0)]
excute 13:49:43.663814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:43.667802 line       494                         if (i == j):
excute 13:49:43.671793 line       496                         i_j_list.append((
excute 13:49:43.675781 line       497                             i, j,
excute 13:49:43.678743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.682732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:43.686721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:43.690712 line       494                         if (i == j):
excute 13:49:43.695698 line       496                         i_j_list.append((
excute 13:49:43.699685 line       497                             i, j,
excute 13:49:43.706666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.709658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:49:43.716639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:43.720630 line       494                         if (i == j):
excute 13:49:43.725617 line       495                             continue
excute 13:49:43.728609 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:43.732596 line       494                         if (i == j):
excute 13:49:43.736587 line       496                         i_j_list.append((
excute 13:49:43.739578 line       497                             i, j,
excute 13:49:43.742570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.746560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:43.749583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:43.753542 line       494                         if (i == j):
excute 13:49:43.757537 line       496                         i_j_list.append((
excute 13:49:43.761521 line       497                             i, j,
excute 13:49:43.764545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.767536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:43.776480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:43.789445 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:43.792469 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:43.797442 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:43.801413 line       494                         if (i == j):
excute 13:49:43.805402 line       496                         i_j_list.append((
excute 13:49:43.809429 line       497                             i, j,
excute 13:49:43.812417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.816404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0)]
excute 13:49:43.819396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:43.823387 line       494                         if (i == j):
excute 13:49:43.827375 line       496                         i_j_list.append((
excute 13:49:43.831366 line       497                             i, j,
excute 13:49:43.834356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.838317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0)]
excute 13:49:43.842304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:43.846293 line       494                         if (i == j):
excute 13:49:43.850282 line       496                         i_j_list.append((
excute 13:49:43.853274 line       497                             i, j,
excute 13:49:43.856267 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.860255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0)]
excute 13:49:43.863247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:43.867237 line       494                         if (i == j):
excute 13:49:43.871226 line       496                         i_j_list.append((
excute 13:49:43.874218 line       497                             i, j,
excute 13:49:43.877210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.881199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1)]
excute 13:49:43.884191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:43.889180 line       494                         if (i == j):
excute 13:49:43.893168 line       496                         i_j_list.append((
excute 13:49:43.897157 line       497                             i, j,
excute 13:49:43.902144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.905136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0)]
excute 13:49:43.909125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:43.913122 line       494                         if (i == j):
excute 13:49:43.916107 line       496                         i_j_list.append((
excute 13:49:43.921095 line       497                             i, j,
excute 13:49:43.924086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.927078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0)]
excute 13:49:43.931067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:43.935057 line       494                         if (i == j):
excute 13:49:43.939047 line       496                         i_j_list.append((
excute 13:49:43.943047 line       497                             i, j,
excute 13:49:43.946028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.951015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0)]
excute 13:49:43.955004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:43.959989 line       494                         if (i == j):
excute 13:49:43.963992 line       496                         i_j_list.append((
excute 13:49:43.967969 line       497                             i, j,
excute 13:49:43.971959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:43.975948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0)]
excute 13:49:43.979936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:43.983925 line       494                         if (i == j):
excute 13:49:43.987915 line       495                             continue
excute 13:49:43.990906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:43.993898 line       494                         if (i == j):
excute 13:49:43.997887 line       496                         i_j_list.append((
excute 13:49:44.001878 line       497                             i, j,
excute 13:49:44.005866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.008858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0)]
excute 13:49:44.012848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:44.016841 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:44.020827 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:44.023818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:44.027808 line       494                         if (i == j):
excute 13:49:44.031797 line       496                         i_j_list.append((
excute 13:49:44.034789 line       497                             i, j,
excute 13:49:44.038778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.041770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0)]
excute 13:49:44.044762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:44.048751 line       494                         if (i == j):
excute 13:49:44.052741 line       496                         i_j_list.append((
excute 13:49:44.056735 line       497                             i, j,
excute 13:49:44.059722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.063712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:44.066703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:44.070694 line       494                         if (i == j):
excute 13:49:44.074683 line       496                         i_j_list.append((
excute 13:49:44.095452 line       497                             i, j,
excute 13:49:44.099444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.103433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:44.108421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:44.112411 line       494                         if (i == j):
excute 13:49:44.117398 line       496                         i_j_list.append((
excute 13:49:44.121387 line       497                             i, j,
excute 13:49:44.125377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.129365 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 1)]
excute 13:49:44.133355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:44.137374 line       494                         if (i == j):
excute 13:49:44.141332 line       496                         i_j_list.append((
excute 13:49:44.145321 line       497                             i, j,
excute 13:49:44.148345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.152334 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 1), (9, 4, 3, 0)]
excute 13:49:44.156323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:44.160284 line       494                         if (i == j):
excute 13:49:44.163306 line       496                         i_j_list.append((
excute 13:49:44.167295 line       497                             i, j,
excute 13:49:44.170289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.174278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:44.177267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:44.181227 line       494                         if (i == j):
excute 13:49:44.185216 line       496                         i_j_list.append((
excute 13:49:44.188237 line       497                             i, j,
excute 13:49:44.192229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.195221 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:49:44.199208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:44.203168 line       494                         if (i == j):
excute 13:49:44.207189 line       496                         i_j_list.append((
excute 13:49:44.212144 line       497                             i, j,
excute 13:49:44.216133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.220122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:44.224111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:44.227105 line       494                         if (i == j):
excute 13:49:44.232100 line       496                         i_j_list.append((
excute 13:49:44.235115 line       497                             i, j,
excute 13:49:44.238107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:44.242099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 1), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 1), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:44.245101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:44.249080 line       494                         if (i == j):
excute 13:49:44.254031 line       495                             continue
excute 13:49:44.257055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:44.260045 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:44.264035 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (7, 3, -2, 1), (8, 3, -2, 1), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (6, 3, -1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (5, 3, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (0, 3, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (1, 3, 2, 1), (2, 3, 2, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 3, 3, 1), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (4, 3, 4, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:49:44.267995 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:44.271017 line       505                     if (self.RELOCATE):
excute 13:49:44.275008 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:44.279994 line       505                     if (self.RELOCATE):
excute 13:49:44.283965 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:44.286974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:44.290965 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:44.294923 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:44.298912 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.302900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:44.306890 line       556                     i = i_j[0]
excute 13:49:44.310879 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:44.314903 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.318858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:44.321880 line       556                     i = i_j[0]
excute 13:49:44.326837 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:44.335813 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.342795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:44.346783 line       556                     i = i_j[0]
excute 13:49:44.351772 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:44.355761 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.362740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:44.365765 line       556                     i = i_j[0]
excute 13:49:44.369753 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:44.373710 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.378702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:44.381723 line       556                     i = i_j[0]
excute 13:49:44.386678 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:44.390665 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.395655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:44.399641 line       556                     i = i_j[0]
excute 13:49:44.403633 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:44.407621 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.410646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:44.416599 line       556                     i = i_j[0]
excute 13:49:44.420585 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:44.423577 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.428565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -2, 0)
excute 13:49:44.431557 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:44.435547 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:44.439536 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.443526 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -2, 0)
excute 13:49:44.448513 line       556                     i = i_j[0]
excute 13:49:44.452534 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:44.456491 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.460480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -2, 0)
excute 13:49:44.467460 line       556                     i = i_j[0]
excute 13:49:44.471451 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:44.476439 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.480428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -2, 0)
excute 13:49:44.484415 line       556                     i = i_j[0]
excute 13:49:44.488404 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:44.492394 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.496414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -2, 0)
excute 13:49:44.500403 line       556                     i = i_j[0]
excute 13:49:44.504376 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:44.507385 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.512341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -2, 0)
excute 13:49:44.515363 line       556                     i = i_j[0]
excute 13:49:44.520318 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:44.525314 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.528299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -2, 0)
excute 13:49:44.532288 line       556                     i = i_j[0]
excute 13:49:44.536277 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:44.540267 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.544255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -2, 0)
excute 13:49:44.547248 line       556                     i = i_j[0]
excute 13:49:44.551254 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:44.555227 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.560245 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 1)
excute 13:49:44.566197 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:44.571183 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:44.575171 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.580159 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -2, 1)
excute 13:49:44.583150 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:44.587141 line       557                     j = i_j[1]
excute 13:49:44.591130 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.595120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:49:44.598111 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:44.602100 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:44.606093 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.610081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:49:44.613071 line       556                     i = i_j[0]
excute 13:49:44.620054 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:44.625040 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.629030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:49:44.633018 line       556                     i = i_j[0]
excute 13:49:44.637008 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:44.640997 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.644987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:49:44.648976 line       556                     i = i_j[0]
excute 13:49:44.653994 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:44.656984 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.660977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:49:44.664943 line       556                     i = i_j[0]
excute 13:49:44.668928 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:44.672910 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.679892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:49:44.683881 line       556                     i = i_j[0]
excute 13:49:44.687871 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:44.690862 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.696849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:49:44.699840 line       556                     i = i_j[0]
excute 13:49:44.703828 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:44.706820 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.710810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:49:44.715796 line       556                     i = i_j[0]
excute 13:49:44.719785 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:44.722779 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.728763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 1)
excute 13:49:44.731784 line       556                     i = i_j[0]
excute 13:49:44.735774 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:44.739765 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.743756 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:49:44.746745 line       560                         if (t_tmp > self.TIME):
excute 13:49:44.750707 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:44.753729 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:44.757715 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:44.761695 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:44.764699 line       569                                     available_vhecles[i][t],
excute 13:49:44.768654 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:44.771678 line       571                                     self.S_capacities[j],
excute 13:49:44.774670 line       572                                     demands[t][i][j],
excute 13:49:44.778660 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 5
calc_contract     Starting var:.. available_vhecles_target = -4
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 147
calc_contract     13:49:44.781651 call       352     def caluculate_contract(
calc_contract     13:49:44.785609 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:44.785609 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:44.786608 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:44.787606 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:44.787606 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:44.788604 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:44.789615 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rse_tmp = 0
excute 13:49:44.790599 line       575                                 rsf += rsf_tmp
excute 13:49:44.794585 line       576                                 rse += rse_tmp
excute 13:49:44.798574 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 147
move_cars     Starting var:.. t_tmp = 161
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:44.801600 call       388     def move_cars(
move_cars     13:49:44.805559 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:44.807551 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:44.808581 line       399         return available_vhecles
move_cars     13:49:44.809580 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:44.812538 line       579                                 success += can_contract
excute Modified var:.. success = 65
excute 13:49:44.816529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:49:44.819551 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:44.824505 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:44.828499 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.832486 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:49:44.836475 line       556                     i = i_j[0]
excute 13:49:44.841461 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:44.845450 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.849439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:49:44.852465 line       556                     i = i_j[0]
excute 13:49:44.856441 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:44.860409 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.863433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:49:44.867422 line       556                     i = i_j[0]
excute 13:49:44.871381 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:44.874372 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.879359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:49:44.886340 line       556                     i = i_j[0]
excute 13:49:44.890361 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:44.894350 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.898333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:49:44.901302 line       556                     i = i_j[0]
excute 13:49:44.905323 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:44.909311 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.912303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:49:44.916294 line       556                     i = i_j[0]
excute 13:49:44.920251 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:44.923273 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.927255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:49:44.931222 line       556                     i = i_j[0]
excute 13:49:44.935241 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:44.939230 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.943189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 1)
excute 13:49:44.946213 line       556                     i = i_j[0]
excute 13:49:44.951176 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:44.955157 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.960146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:49:44.963136 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:44.968124 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:44.971115 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.976103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:49:44.980091 line       556                     i = i_j[0]
excute 13:49:44.984081 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:44.987073 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:44.992058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:44.995051 line       556                     i = i_j[0]
excute 13:49:44.999040 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:45.003030 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.007019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:49:45.011009 line       556                     i = i_j[0]
excute 13:49:45.014998 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:45.018987 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.023974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:49:45.026964 line       556                     i = i_j[0]
excute 13:49:45.031953 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:45.035943 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.040927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:49:45.043921 line       556                     i = i_j[0]
excute 13:49:45.047910 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:45.051899 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.056887 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:49:45.059878 line       556                     i = i_j[0]
excute 13:49:45.063867 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:45.067856 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.071846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:45.075835 line       556                     i = i_j[0]
excute 13:49:45.080821 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:45.083813 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.088801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 1)
excute 13:49:45.091790 line       556                     i = i_j[0]
excute 13:49:45.096778 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:45.099770 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.103759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:49:45.106751 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:45.110741 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:45.114730 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.118721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:49:45.121711 line       556                     i = i_j[0]
excute 13:49:45.125702 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:45.129690 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.132682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:49:45.138666 line       556                     i = i_j[0]
excute 13:49:45.143652 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:45.146646 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.150635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:49:45.155621 line       556                     i = i_j[0]
excute 13:49:45.158614 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:45.162603 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.166592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:49:45.170581 line       556                     i = i_j[0]
excute 13:49:45.175569 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:45.178561 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.182549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:49:45.186539 line       556                     i = i_j[0]
excute 13:49:45.190528 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:45.194517 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.198507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:49:45.202496 line       556                     i = i_j[0]
excute 13:49:45.206486 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:45.210475 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.215463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:49:45.218453 line       556                     i = i_j[0]
excute 13:49:45.222443 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:45.226431 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.229423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:45.233413 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:45.237410 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:45.242389 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.246379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:45.250368 line       556                     i = i_j[0]
excute 13:49:45.254370 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:45.257349 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.261339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:45.265329 line       556                     i = i_j[0]
excute 13:49:45.269318 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:45.272342 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.276329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:45.280321 line       556                     i = i_j[0]
excute 13:49:45.284309 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:45.287299 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.292256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:45.295246 line       556                     i = i_j[0]
excute 13:49:45.299236 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:45.303225 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.311204 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:45.315221 line       556                     i = i_j[0]
excute 13:49:45.319183 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:45.322207 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.328162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:45.334144 line       556                     i = i_j[0]
excute 13:49:45.341125 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:45.348107 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.352097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:45.356085 line       556                     i = i_j[0]
excute 13:49:45.361071 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:45.365060 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.369051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 1)
excute 13:49:45.373041 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:45.377034 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:45.381019 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.386005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 1)
excute 13:49:45.389995 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:45.394989 line       557                     j = i_j[1]
excute 13:49:45.398972 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.402960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:45.408974 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:45.412935 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:45.416926 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.420913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:45.423936 line       556                     i = i_j[0]
excute 13:49:45.427924 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:45.431916 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.435896 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:45.438894 line       556                     i = i_j[0]
excute 13:49:45.442852 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:45.450866 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.454853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:45.458811 line       556                     i = i_j[0]
excute 13:49:45.462832 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:45.465822 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.469782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:45.472803 line       556                     i = i_j[0]
excute 13:49:45.476764 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:45.480752 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.484742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:45.488731 line       556                     i = i_j[0]
excute 13:49:45.492720 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:45.496710 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.500700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:45.504688 line       556                     i = i_j[0]
excute 13:49:45.508678 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:45.512698 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.516686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:45.520676 line       556                     i = i_j[0]
excute 13:49:45.524634 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:45.527659 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.531651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 1)
excute 13:49:45.535638 line       556                     i = i_j[0]
excute 13:49:45.539595 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:45.543583 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.546609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:45.551563 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:45.557990 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:45.567763 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.571754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:45.575741 line       556                     i = i_j[0]
excute 13:49:45.579729 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:45.582722 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.586711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:45.590732 line       556                     i = i_j[0]
excute 13:49:45.594691 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:45.597715 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.601702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:45.605664 line       556                     i = i_j[0]
excute 13:49:45.609651 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:45.612673 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.616663 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:45.620639 line       556                     i = i_j[0]
excute 13:49:45.624611 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:45.627634 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.631593 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:45.634614 line       556                     i = i_j[0]
excute 13:49:45.639572 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:45.642562 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.646558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:45.650540 line       556                     i = i_j[0]
excute 13:49:45.654530 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:45.659516 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.663507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:45.667495 line       556                     i = i_j[0]
excute 13:49:45.671485 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:45.674476 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.678480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 1)
excute 13:49:45.681458 line       556                     i = i_j[0]
excute 13:49:45.685447 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:45.688439 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.692428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:49:45.695420 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:45.699409 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:45.703400 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.707388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:49:45.710381 line       556                     i = i_j[0]
excute 13:49:45.715367 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:45.718359 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.722348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 0)
excute 13:49:45.725340 line       556                     i = i_j[0]
excute 13:49:45.729329 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:45.732322 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.736311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:49:45.740300 line       556                     i = i_j[0]
excute 13:49:45.744291 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:45.747281 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.751271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:49:45.754263 line       556                     i = i_j[0]
excute 13:49:45.760248 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:45.764269 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.768227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:49:45.771249 line       556                     i = i_j[0]
excute 13:49:45.775207 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:45.778199 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.782188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:49:45.786177 line       556                     i = i_j[0]
excute 13:49:45.790169 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:45.793191 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.797183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:49:45.801139 line       556                     i = i_j[0]
excute 13:49:45.804129 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:45.808119 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.811111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:49:45.815100 line       556                     i = i_j[0]
excute 13:49:45.819090 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:45.822083 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:45.826071 line       555                 for i_j in i_j_list:
excute 13:49:45.830061 line       581             self.write_matrix(
excute 13:49:45.833052 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:45.836044 line       583                 result_file_path,
excute 13:49:45.842029 line       584                 mode='a'
excute 13:49:45.848679 line       488         for t in time_steps:
excute Modified var:.. t = 148
excute 13:49:45.854666 line       489             if (t != self.TIME + 1):
excute 13:49:45.858651 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:45.863636 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:45.870617 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:45.877598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:45.882585 line       494                         if (i == j):
excute 13:49:45.889566 line       495                             continue
excute 13:49:45.895587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:45.899542 line       494                         if (i == j):
excute 13:49:45.905524 line       496                         i_j_list.append((
excute 13:49:45.908515 line       497                             i, j,
excute 13:49:45.914530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:45.919497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:45.929460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:45.938436 line       494                         if (i == j):
excute 13:49:45.944420 line       496                         i_j_list.append((
excute 13:49:45.947412 line       497                             i, j,
excute 13:49:45.954394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:45.960378 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:49:45.969354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:45.973345 line       494                         if (i == j):
excute 13:49:45.978362 line       496                         i_j_list.append((
excute 13:49:45.981323 line       497                             i, j,
excute 13:49:45.987337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:45.992294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:49:45.999274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:46.003263 line       494                         if (i == j):
excute 13:49:46.007256 line       496                         i_j_list.append((
excute 13:49:46.012273 line       497                             i, j,
excute 13:49:46.015261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.019257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:49:46.022243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:46.026238 line       494                         if (i == j):
excute 13:49:46.030222 line       496                         i_j_list.append((
excute 13:49:46.034219 line       497                             i, j,
excute 13:49:46.037208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.041161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:49:46.044193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:46.048181 line       494                         if (i == j):
excute 13:49:46.052133 line       496                         i_j_list.append((
excute 13:49:46.055154 line       497                             i, j,
excute 13:49:46.059149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.062144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:49:46.066095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:46.071120 line       494                         if (i == j):
excute 13:49:46.075071 line       496                         i_j_list.append((
excute 13:49:46.078093 line       497                             i, j,
excute 13:49:46.082084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.085075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:49:46.088067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:46.092060 line       494                         if (i == j):
excute 13:49:46.096021 line       496                         i_j_list.append((
excute 13:49:46.099038 line       497                             i, j,
excute 13:49:46.103027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.106018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:49:46.109010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:46.113002 line       494                         if (i == j):
excute 13:49:46.116960 line       496                         i_j_list.append((
excute 13:49:46.119982 line       497                             i, j,
excute 13:49:46.123940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.126963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:49:46.129955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:46.133913 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:46.137903 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:46.145881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:46.149872 line       494                         if (i == j):
excute 13:49:46.153862 line       496                         i_j_list.append((
excute 13:49:46.157850 line       497                             i, j,
excute 13:49:46.161840 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.164832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1)]
excute 13:49:46.168821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:46.173807 line       494                         if (i == j):
excute 13:49:46.177797 line       495                             continue
excute 13:49:46.180824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:46.184777 line       494                         if (i == j):
excute 13:49:46.189745 line       496                         i_j_list.append((
excute 13:49:46.196722 line       497                             i, j,
excute 13:49:46.201709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.206694 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0)]
excute 13:49:46.213682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:46.221658 line       494                         if (i == j):
excute 13:49:46.228636 line       496                         i_j_list.append((
excute 13:49:46.232627 line       497                             i, j,
excute 13:49:46.236617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.239609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:49:46.242601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:46.247587 line       494                         if (i == j):
excute 13:49:46.250610 line       496                         i_j_list.append((
excute 13:49:46.254598 line       497                             i, j,
excute 13:49:46.257559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.261548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:49:46.264540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:46.268529 line       494                         if (i == j):
excute 13:49:46.272518 line       496                         i_j_list.append((
excute 13:49:46.276512 line       497                             i, j,
excute 13:49:46.280499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.284489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:49:46.288478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:46.294460 line       494                         if (i == j):
excute 13:49:46.298449 line       496                         i_j_list.append((
excute 13:49:46.302438 line       497                             i, j,
excute 13:49:46.309422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.313411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:49:46.316403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:46.320400 line       494                         if (i == j):
excute 13:49:46.324381 line       496                         i_j_list.append((
excute 13:49:46.332361 line       497                             i, j,
excute 13:49:46.339342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.344330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:49:46.351309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:46.358291 line       494                         if (i == j):
excute 13:49:46.365282 line       496                         i_j_list.append((
excute 13:49:46.371258 line       497                             i, j,
excute 13:49:46.375246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.385219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:49:46.391204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:46.396189 line       494                         if (i == j):
excute 13:49:46.403172 line       496                         i_j_list.append((
excute 13:49:46.406174 line       497                             i, j,
excute 13:49:46.410153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.414141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:49:46.421123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:46.425113 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:46.430100 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:46.434091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:46.444061 line       494                         if (i == j):
excute 13:49:46.451042 line       496                         i_j_list.append((
excute 13:49:46.457026 line       497                             i, j,
excute 13:49:46.463010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.472983 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1)]
excute 13:49:46.476974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:46.485950 line       494                         if (i == j):
excute 13:49:46.493927 line       496                         i_j_list.append((
excute 13:49:46.501908 line       497                             i, j,
excute 13:49:46.507891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.516866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:49:46.523847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:46.530828 line       494                         if (i == j):
excute 13:49:46.538807 line       495                             continue
excute 13:49:46.544791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:46.549779 line       494                         if (i == j):
excute 13:49:46.556761 line       496                         i_j_list.append((
excute 13:49:46.561747 line       497                             i, j,
excute 13:49:46.569724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.576707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:46.584686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:46.591667 line       494                         if (i == j):
excute 13:49:46.598648 line       496                         i_j_list.append((
excute 13:49:46.603633 line       497                             i, j,
excute 13:49:46.609617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.617597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:46.624579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:46.630562 line       494                         if (i == j):
excute 13:49:46.636546 line       496                         i_j_list.append((
excute 13:49:46.642531 line       497                             i, j,
excute 13:49:46.650508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.657490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:46.664472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:46.673448 line       494                         if (i == j):
excute 13:49:46.679432 line       496                         i_j_list.append((
excute 13:49:46.684418 line       497                             i, j,
excute 13:49:46.690402 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.698383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:49:46.704364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:46.711346 line       494                         if (i == j):
excute 13:49:46.720322 line       496                         i_j_list.append((
excute 13:49:46.725309 line       497                             i, j,
excute 13:49:46.732289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.737277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:49:46.744258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:46.750242 line       494                         if (i == j):
excute 13:49:46.758221 line       496                         i_j_list.append((
excute 13:49:46.766199 line       497                             i, j,
excute 13:49:46.771186 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.776173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:46.784152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:46.790136 line       494                         if (i == j):
excute 13:49:46.797117 line       496                         i_j_list.append((
excute 13:49:46.804099 line       497                             i, j,
excute 13:49:46.810082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.814071 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:46.817063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:46.822051 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:46.825042 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:46.829032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:46.832023 line       494                         if (i == j):
excute 13:49:46.836012 line       496                         i_j_list.append((
excute 13:49:46.840002 line       497                             i, j,
excute 13:49:46.842994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.845985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1)]
excute 13:49:46.849977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:46.853968 line       494                         if (i == j):
excute 13:49:46.857954 line       496                         i_j_list.append((
excute 13:49:46.861944 line       497                             i, j,
excute 13:49:46.864936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.867928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0)]
excute 13:49:46.871948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:46.875917 line       494                         if (i == j):
excute 13:49:46.878930 line       496                         i_j_list.append((
excute 13:49:46.882921 line       497                             i, j,
excute 13:49:46.885911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.889877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0)]
excute 13:49:46.892892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:46.896851 line       494                         if (i == j):
excute 13:49:46.902866 line       495                             continue
excute 13:49:46.906823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:46.909815 line       494                         if (i == j):
excute 13:49:46.913804 line       496                         i_j_list.append((
excute 13:49:46.916796 line       497                             i, j,
excute 13:49:46.920787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.923777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0)]
excute 13:49:46.926769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:46.930759 line       494                         if (i == j):
excute 13:49:46.934748 line       496                         i_j_list.append((
excute 13:49:46.937740 line       497                             i, j,
excute 13:49:46.941729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.944722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:49:46.949708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:46.952700 line       494                         if (i == j):
excute 13:49:46.956689 line       496                         i_j_list.append((
excute 13:49:46.960679 line       497                             i, j,
excute 13:49:46.964668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.967660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:49:46.970652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:46.974641 line       494                         if (i == j):
excute 13:49:46.979629 line       496                         i_j_list.append((
excute 13:49:46.983627 line       497                             i, j,
excute 13:49:46.986612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:46.990601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:49:46.993593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:46.997582 line       494                         if (i == j):
excute 13:49:47.003565 line       496                         i_j_list.append((
excute 13:49:47.006589 line       497                             i, j,
excute 13:49:47.010577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.013570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:49:47.017559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:47.021517 line       494                         if (i == j):
excute 13:49:47.025507 line       496                         i_j_list.append((
excute 13:49:47.028530 line       497                             i, j,
excute 13:49:47.032500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.035510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:49:47.038502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:47.042479 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:47.045485 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:47.049474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:47.053432 line       494                         if (i == j):
excute 13:49:47.057421 line       496                         i_j_list.append((
excute 13:49:47.061412 line       497                             i, j,
excute 13:49:47.064404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.068393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1)]
excute 13:49:47.072380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:47.076400 line       494                         if (i == j):
excute 13:49:47.079393 line       496                         i_j_list.append((
excute 13:49:47.083383 line       497                             i, j,
excute 13:49:47.086376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.090364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0)]
excute 13:49:47.093356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:47.097313 line       494                         if (i == j):
excute 13:49:47.101305 line       496                         i_j_list.append((
excute 13:49:47.107323 line       497                             i, j,
excute 13:49:47.110310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.114268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:47.117292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:47.121251 line       494                         if (i == j):
excute 13:49:47.125245 line       496                         i_j_list.append((
excute 13:49:47.128264 line       497                             i, j,
excute 13:49:47.131254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.135246 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:47.138235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:47.142226 line       494                         if (i == j):
excute 13:49:47.146215 line       495                             continue
excute 13:49:47.150172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:47.153164 line       494                         if (i == j):
excute 13:49:47.157154 line       496                         i_j_list.append((
excute 13:49:47.161143 line       497                             i, j,
excute 13:49:47.164134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.167127 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:47.171116 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:47.175107 line       494                         if (i == j):
excute 13:49:47.179096 line       496                         i_j_list.append((
excute 13:49:47.182119 line       497                             i, j,
excute 13:49:47.186108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.189100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0)]
excute 13:49:47.193058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:47.196081 line       494                         if (i == j):
excute 13:49:47.200071 line       496                         i_j_list.append((
excute 13:49:47.204028 line       497                             i, j,
excute 13:49:47.210012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.217019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0)]
excute 13:49:47.220985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:47.224973 line       494                         if (i == j):
excute 13:49:47.228961 line       496                         i_j_list.append((
excute 13:49:47.232951 line       497                             i, j,
excute 13:49:47.235943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.239932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:47.242924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:47.246914 line       494                         if (i == j):
excute 13:49:47.250903 line       496                         i_j_list.append((
excute 13:49:47.254925 line       497                             i, j,
excute 13:49:47.257917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.261874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:47.265868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:47.268855 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:47.272844 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:47.276834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:47.280823 line       494                         if (i == j):
excute 13:49:47.284812 line       496                         i_j_list.append((
excute 13:49:47.287804 line       497                             i, j,
excute 13:49:47.290797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.294785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1)]
excute 13:49:47.297778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:47.301768 line       494                         if (i == j):
excute 13:49:47.306756 line       496                         i_j_list.append((
excute 13:49:47.311742 line       497                             i, j,
excute 13:49:47.315731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.319721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0)]
excute 13:49:47.322713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:47.328698 line       494                         if (i == j):
excute 13:49:47.336676 line       496                         i_j_list.append((
excute 13:49:47.342661 line       497                             i, j,
excute 13:49:47.347650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.350636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:49:47.353629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:47.360611 line       494                         if (i == j):
excute 13:49:47.364600 line       496                         i_j_list.append((
excute 13:49:47.368589 line       497                             i, j,
excute 13:49:47.372578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.376567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:49:47.379559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:47.383548 line       494                         if (i == j):
excute 13:49:47.387537 line       496                         i_j_list.append((
excute 13:49:47.391527 line       497                             i, j,
excute 13:49:47.394519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.398513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:49:47.401500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:47.405491 line       494                         if (i == j):
excute 13:49:47.409479 line       495                             continue
excute 13:49:47.412471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:47.418456 line       494                         if (i == j):
excute 13:49:47.422445 line       496                         i_j_list.append((
excute 13:49:47.426435 line       497                             i, j,
excute 13:49:47.429426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.433416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:49:47.436408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:47.440398 line       494                         if (i == j):
excute 13:49:47.445383 line       496                         i_j_list.append((
excute 13:49:47.449374 line       497                             i, j,
excute 13:49:47.453362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.457352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:49:47.462341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:47.467328 line       494                         if (i == j):
excute 13:49:47.472312 line       496                         i_j_list.append((
excute 13:49:47.476303 line       497                             i, j,
excute 13:49:47.480291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.484281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:49:47.488268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:47.492259 line       494                         if (i == j):
excute 13:49:47.496280 line       496                         i_j_list.append((
excute 13:49:47.500270 line       497                             i, j,
excute 13:49:47.503262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.507249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:49:47.511207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:47.515196 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:47.519187 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:47.523207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:47.527197 line       494                         if (i == j):
excute 13:49:47.531155 line       496                         i_j_list.append((
excute 13:49:47.534177 line       497                             i, j,
excute 13:49:47.538146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.541159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1)]
excute 13:49:47.544151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:47.548141 line       494                         if (i == j):
excute 13:49:47.552099 line       496                         i_j_list.append((
excute 13:49:47.556089 line       497                             i, j,
excute 13:49:47.559081 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.563070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0)]
excute 13:49:47.567060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:47.571050 line       494                         if (i == j):
excute 13:49:47.575037 line       496                         i_j_list.append((
excute 13:49:47.579027 line       497                             i, j,
excute 13:49:47.583017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.587006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:49:47.590994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:47.594985 line       494                         if (i == j):
excute 13:49:47.598974 line       496                         i_j_list.append((
excute 13:49:47.602964 line       497                             i, j,
excute 13:49:47.606952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.610940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:49:47.613935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:47.617924 line       494                         if (i == j):
excute 13:49:47.622910 line       496                         i_j_list.append((
excute 13:49:47.625901 line       497                             i, j,
excute 13:49:47.629891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.632884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:49:47.636873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:47.640863 line       494                         if (i == j):
excute 13:49:47.644852 line       496                         i_j_list.append((
excute 13:49:47.648840 line       497                             i, j,
excute 13:49:47.651832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.655823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:49:47.658813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:47.662804 line       494                         if (i == j):
excute 13:49:47.666792 line       495                             continue
excute 13:49:47.670783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:47.673804 line       494                         if (i == j):
excute 13:49:47.677763 line       496                         i_j_list.append((
excute 13:49:47.680788 line       497                             i, j,
excute 13:49:47.684775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.687767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:49:47.691726 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:47.694749 line       494                         if (i == j):
excute 13:49:47.698738 line       496                         i_j_list.append((
excute 13:49:47.702697 line       497                             i, j,
excute 13:49:47.706687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.709679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:49:47.713668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:47.718654 line       494                         if (i == j):
excute 13:49:47.723641 line       496                         i_j_list.append((
excute 13:49:47.728628 line       497                             i, j,
excute 13:49:47.731620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.735609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:49:47.738601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:47.742591 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:47.746580 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:47.750569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:47.754589 line       494                         if (i == j):
excute 13:49:47.758546 line       496                         i_j_list.append((
excute 13:49:47.761570 line       497                             i, j,
excute 13:49:47.765559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.768554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1)]
excute 13:49:47.772541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:47.776498 line       494                         if (i == j):
excute 13:49:47.780489 line       496                         i_j_list.append((
excute 13:49:47.783511 line       497                             i, j,
excute 13:49:47.787506 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.790492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0)]
excute 13:49:47.793485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:47.797473 line       494                         if (i == j):
excute 13:49:47.801463 line       496                         i_j_list.append((
excute 13:49:47.805432 line       497                             i, j,
excute 13:49:47.808448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.812402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:47.815428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:47.819397 line       494                         if (i == j):
excute 13:49:47.823373 line       496                         i_j_list.append((
excute 13:49:47.828362 line       497                             i, j,
excute 13:49:47.831353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.835342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:47.842323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:47.846311 line       494                         if (i == j):
excute 13:49:47.850300 line       496                         i_j_list.append((
excute 13:49:47.854290 line       497                             i, j,
excute 13:49:47.858281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.862269 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:47.866258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:47.870249 line       494                         if (i == j):
excute 13:49:47.875237 line       496                         i_j_list.append((
excute 13:49:47.878228 line       497                             i, j,
excute 13:49:47.882217 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.886207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:47.890196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:47.894185 line       494                         if (i == j):
excute 13:49:47.899171 line       496                         i_j_list.append((
excute 13:49:47.903159 line       497                             i, j,
excute 13:49:47.908148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.914130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:49:47.919118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:47.925101 line       494                         if (i == j):
excute 13:49:47.932082 line       495                             continue
excute 13:49:47.939063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:47.944051 line       494                         if (i == j):
excute 13:49:47.951033 line       496                         i_j_list.append((
excute 13:49:47.957017 line       497                             i, j,
excute 13:49:47.963000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.969982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:47.972973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:47.977960 line       494                         if (i == j):
excute 13:49:47.981949 line       496                         i_j_list.append((
excute 13:49:47.984941 line       497                             i, j,
excute 13:49:47.988930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:47.991922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:47.995913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:48.000898 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:48.005884 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:48.011870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:48.017853 line       494                         if (i == j):
excute 13:49:48.021842 line       496                         i_j_list.append((
excute 13:49:48.025831 line       497                             i, j,
excute 13:49:48.028823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.033811 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1)]
excute 13:49:48.036802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:48.040791 line       494                         if (i == j):
excute 13:49:48.044781 line       496                         i_j_list.append((
excute 13:49:48.047773 line       497                             i, j,
excute 13:49:48.051762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.054754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0)]
excute 13:49:48.058745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:48.062734 line       494                         if (i == j):
excute 13:49:48.066723 line       496                         i_j_list.append((
excute 13:49:48.069714 line       497                             i, j,
excute 13:49:48.072706 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.076695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0)]
excute 13:49:48.079687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:48.083687 line       494                         if (i == j):
excute 13:49:48.087666 line       496                         i_j_list.append((
excute 13:49:48.090658 line       497                             i, j,
excute 13:49:48.094648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.097639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0)]
excute 13:49:48.101629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:48.104620 line       494                         if (i == j):
excute 13:49:48.108610 line       496                         i_j_list.append((
excute 13:49:48.111602 line       497                             i, j,
excute 13:49:48.115592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.118583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0)]
excute 13:49:48.121575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:48.125564 line       494                         if (i == j):
excute 13:49:48.129554 line       496                         i_j_list.append((
excute 13:49:48.133543 line       497                             i, j,
excute 13:49:48.137534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.141523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0)]
excute 13:49:48.144515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:48.148504 line       494                         if (i == j):
excute 13:49:48.152493 line       496                         i_j_list.append((
excute 13:49:48.156482 line       497                             i, j,
excute 13:49:48.160472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.163463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0)]
excute 13:49:48.166456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:48.170445 line       494                         if (i == j):
excute 13:49:48.174434 line       496                         i_j_list.append((
excute 13:49:48.177426 line       497                             i, j,
excute 13:49:48.185462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.189481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0)]
excute 13:49:48.192472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:48.196467 line       494                         if (i == j):
excute 13:49:48.200456 line       495                             continue
excute 13:49:48.204446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:48.207437 line       494                         if (i == j):
excute 13:49:48.211400 line       496                         i_j_list.append((
excute 13:49:48.215384 line       497                             i, j,
excute 13:49:48.218411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.221400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0)]
excute 13:49:48.225389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:48.229348 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:48.232370 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:48.236360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:48.241316 line       494                         if (i == j):
excute 13:49:48.245304 line       496                         i_j_list.append((
excute 13:49:48.248296 line       497                             i, j,
excute 13:49:48.252285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.255278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1)]
excute 13:49:48.259267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:48.263257 line       494                         if (i == j):
excute 13:49:48.267245 line       496                         i_j_list.append((
excute 13:49:48.270237 line       497                             i, j,
excute 13:49:48.274227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.278216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0)]
excute 13:49:48.281208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:48.285197 line       494                         if (i == j):
excute 13:49:48.289192 line       496                         i_j_list.append((
excute 13:49:48.292179 line       497                             i, j,
excute 13:49:48.296168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.299160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:48.302152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:48.306141 line       494                         if (i == j):
excute 13:49:48.311128 line       496                         i_j_list.append((
excute 13:49:48.314120 line       497                             i, j,
excute 13:49:48.318111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.321102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:48.325091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:48.331076 line       494                         if (i == j):
excute 13:49:48.340056 line       496                         i_j_list.append((
excute 13:49:48.345039 line       497                             i, j,
excute 13:49:48.350024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.353048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:48.359000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:48.363990 line       494                         if (i == j):
excute 13:49:48.367978 line       496                         i_j_list.append((
excute 13:49:48.370970 line       497                             i, j,
excute 13:49:48.374959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.378978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:48.382969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:48.386957 line       494                         if (i == j):
excute 13:49:48.390947 line       496                         i_j_list.append((
excute 13:49:48.394936 line       497                             i, j,
excute 13:49:48.397930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.401917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:49:48.404909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:48.408903 line       494                         if (i == j):
excute 13:49:48.412888 line       496                         i_j_list.append((
excute 13:49:48.416856 line       497                             i, j,
excute 13:49:48.419869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.422861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:48.426851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:48.430822 line       494                         if (i == j):
excute 13:49:48.434799 line       496                         i_j_list.append((
excute 13:49:48.437821 line       497                             i, j,
excute 13:49:48.441779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:48.445804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 3, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:48.449798 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:48.453783 line       494                         if (i == j):
excute 13:49:48.457738 line       495                             continue
excute 13:49:48.461761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:48.465718 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:48.468707 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 1, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (7, 0, -2, 1), (8, 0, -2, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (5, 0, 0, 1), (6, 0, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (1, 0, 2, 1), (2, 0, 2, 1), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 0, 3, 1), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (4, 0, 4, 1), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (3, 0, 6, 1)]
excute 13:49:48.472696 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:48.476695 line       505                     if (self.RELOCATE):
excute 13:49:48.480677 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:48.484666 line       505                     if (self.RELOCATE):
excute 13:49:48.488653 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:48.491647 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:48.495636 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:48.500628 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:48.503645 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.507636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:48.512590 line       556                     i = i_j[0]
excute 13:49:48.516580 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:48.519573 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.524560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:48.528549 line       556                     i = i_j[0]
excute 13:49:48.532537 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:48.536539 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.539520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:48.543508 line       556                     i = i_j[0]
excute 13:49:48.548495 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:48.552514 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.556504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:48.560475 line       556                     i = i_j[0]
excute 13:49:48.564452 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:48.567474 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.571434 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:48.574427 line       556                     i = i_j[0]
excute 13:49:48.579414 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:48.583401 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.587392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:48.591385 line       556                     i = i_j[0]
excute 13:49:48.595370 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:48.598362 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.602351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:48.606341 line       556                     i = i_j[0]
excute 13:49:48.610330 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:48.614318 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.618308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -2, 0)
excute 13:49:48.621301 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:48.625289 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:48.629279 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.633269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -2, 0)
excute 13:49:48.637258 line       556                     i = i_j[0]
excute 13:49:48.641247 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:48.644238 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.648229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -2, 0)
excute 13:49:48.653215 line       556                     i = i_j[0]
excute 13:49:48.658200 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:48.661193 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.665183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -2, 0)
excute 13:49:48.668205 line       556                     i = i_j[0]
excute 13:49:48.672199 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:48.676184 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.680175 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -2, 0)
excute 13:49:48.683133 line       556                     i = i_j[0]
excute 13:49:48.691112 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:48.698094 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.702086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -2, 0)
excute 13:49:48.705075 line       556                     i = i_j[0]
excute 13:49:48.710062 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:48.716049 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.720047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -2, 0)
excute 13:49:48.723061 line       556                     i = i_j[0]
excute 13:49:48.727029 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:48.730040 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.734029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -2, 0)
excute 13:49:48.737994 line       556                     i = i_j[0]
excute 13:49:48.741978 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:48.745002 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.748959 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 1)
excute 13:49:48.751981 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:48.756936 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:48.761923 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.764949 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -2, 1)
excute 13:49:48.768936 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:48.772901 line       557                     j = i_j[1]
excute 13:49:48.776887 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.780873 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 162
excute 13:49:48.783864 line       560                         if (t_tmp > self.TIME):
excute 13:49:48.790846 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:48.794835 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:48.798826 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:48.801816 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:48.805806 line       569                                     available_vhecles[i][t],
excute 13:49:48.808798 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:48.812787 line       571                                     self.S_capacities[j],
excute 13:49:48.815779 line       572                                     demands[t][i][j],
excute 13:49:48.819768 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 148
calc_contract     13:49:48.823757 call       352     def caluculate_contract(
calc_contract     13:49:48.826750 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:48.826750 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:48.827747 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:48.828745 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:48.828745 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:48.829742 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:48.830739 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:48.831737 line       575                                 rsf += rsf_tmp
excute 13:49:48.834728 line       576                                 rse += rse_tmp
excute 13:49:48.838717 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 8
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 148
move_cars     Starting var:.. t_tmp = 162
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:48.841710 call       388     def move_cars(
move_cars     13:49:48.845699 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:48.847694 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     13:49:48.848691 line       399         return available_vhecles
move_cars     13:49:48.850689 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:48.852683 line       579                                 success += can_contract
excute Modified var:.. success = 66
excute 13:49:48.859662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:49:48.863651 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:48.867640 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:48.871630 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.874622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:49:48.878611 line       556                     i = i_j[0]
excute 13:49:48.883599 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:48.886590 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.890592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:49:48.893571 line       556                     i = i_j[0]
excute 13:49:48.897560 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:48.901549 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.905539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:49:48.908531 line       556                     i = i_j[0]
excute 13:49:48.912520 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:48.915513 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.919501 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:49:48.922494 line       556                     i = i_j[0]
excute 13:49:48.926483 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:48.930472 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.933464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:49:48.937453 line       556                     i = i_j[0]
excute 13:49:48.941443 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:48.944435 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.950420 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:49:48.953412 line       556                     i = i_j[0]
excute 13:49:48.958400 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:48.964382 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.970366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:49:48.974355 line       556                     i = i_j[0]
excute 13:49:48.978345 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:48.982334 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:48.986325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:49:48.989315 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:48.994317 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:48.997295 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.001283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:49:49.005272 line       556                     i = i_j[0]
excute 13:49:49.009262 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:49.013253 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.018238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:49:49.021262 line       556                     i = i_j[0]
excute 13:49:49.025253 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:49.029240 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.033199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:49:49.036226 line       556                     i = i_j[0]
excute 13:49:49.040212 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:49.044169 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.048192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:49:49.052147 line       556                     i = i_j[0]
excute 13:49:49.056136 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.060126 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.067141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:49:49.070131 line       556                     i = i_j[0]
excute 13:49:49.074121 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.078091 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.081101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:49:49.085091 line       556                     i = i_j[0]
excute 13:49:49.089051 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.093039 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.097029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:49:49.101018 line       556                     i = i_j[0]
excute 13:49:49.105008 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:49.108997 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.112986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 1)
excute 13:49:49.116976 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:49.120965 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:49.124955 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.128944 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 1)
excute 13:49:49.132933 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:49.136922 line       557                     j = i_j[1]
excute 13:49:49.141910 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.144931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:49:49.148916 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:49.152911 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:49.156867 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.160857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:49:49.163849 line       556                     i = i_j[0]
excute 13:49:49.168869 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:49.171858 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.175848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:49:49.179837 line       556                     i = i_j[0]
excute 13:49:49.183796 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:49.186819 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.190808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:49.194801 line       556                     i = i_j[0]
excute 13:49:49.198794 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:49.201781 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.205737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:49:49.208761 line       556                     i = i_j[0]
excute 13:49:49.212750 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.216740 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.220730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:49:49.223720 line       556                     i = i_j[0]
excute 13:49:49.227713 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:49.231701 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.235657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:49:49.238681 line       556                     i = i_j[0]
excute 13:49:49.242656 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.246628 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.249651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:49:49.253641 line       556                     i = i_j[0]
excute 13:49:49.258597 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.261619 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.265579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:49.270564 line       556                     i = i_j[0]
excute 13:49:49.274553 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:49.278573 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.282564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:49:49.285555 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:49.289545 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:49.293503 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.297503 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:49:49.300516 line       556                     i = i_j[0]
excute 13:49:49.304504 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:49.308494 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.311485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:49:49.315478 line       556                     i = i_j[0]
excute 13:49:49.319433 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:49.322457 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.327415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:49:49.337402 line       556                     i = i_j[0]
excute 13:49:49.348356 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.352345 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.357334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:49:49.363318 line       556                     i = i_j[0]
excute 13:49:49.368305 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:49.372327 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.377279 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:49:49.380270 line       556                     i = i_j[0]
excute 13:49:49.384259 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.388249 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.392238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:49:49.396227 line       556                     i = i_j[0]
excute 13:49:49.400216 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.404206 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.408195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:49:49.411187 line       556                     i = i_j[0]
excute 13:49:49.415177 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:49.419166 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.423155 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:49.426147 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:49.430137 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:49.434126 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.438115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:49.441107 line       556                     i = i_j[0]
excute 13:49:49.445097 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:49.449091 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.453075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:49.456067 line       556                     i = i_j[0]
excute 13:49:49.460056 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:49.464045 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.468035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:49.471027 line       556                     i = i_j[0]
excute 13:49:49.477011 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.480003 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.483993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:49.486985 line       556                     i = i_j[0]
excute 13:49:49.490974 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:49.494963 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.498954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:49.501944 line       556                     i = i_j[0]
excute 13:49:49.505935 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.509924 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.513914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:49.516905 line       556                     i = i_j[0]
excute 13:49:49.520894 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.524896 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.528878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:49.531865 line       556                     i = i_j[0]
excute 13:49:49.540329 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:49.544320 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.548310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 1)
excute 13:49:49.551301 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:49.556288 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:49.559280 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.564269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:49:49.567260 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:49.571250 line       557                     j = i_j[1]
excute 13:49:49.576237 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.580226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:49.584215 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:49.589201 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:49.593192 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.597180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:49.600203 line       556                     i = i_j[0]
excute 13:49:49.604192 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:49.608154 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.612139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:49.618157 line       556                     i = i_j[0]
excute 13:49:49.622113 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:49.625136 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.629128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:49.633115 line       556                     i = i_j[0]
excute 13:49:49.637073 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:49.640095 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.645052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:49.648043 line       556                     i = i_j[0]
excute 13:49:49.653032 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.657020 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.660042 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:49.664035 line       556                     i = i_j[0]
excute 13:49:49.667989 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:49.671979 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.675968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:49.681954 line       556                     i = i_j[0]
excute 13:49:49.686941 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.689964 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.693952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:49.697944 line       556                     i = i_j[0]
excute 13:49:49.701902 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.705903 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.709878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 1)
excute 13:49:49.712871 line       556                     i = i_j[0]
excute 13:49:49.717858 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:49.720850 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.724839 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:49.728828 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:49.732818 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:49.736807 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.740796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 0)
excute 13:49:49.744786 line       556                     i = i_j[0]
excute 13:49:49.749772 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:49.752764 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.757752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 0)
excute 13:49:49.761740 line       556                     i = i_j[0]
excute 13:49:49.765729 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:49.768722 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.772711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 0)
excute 13:49:49.776700 line       556                     i = i_j[0]
excute 13:49:49.780690 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.785678 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.790663 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:49.793655 line       556                     i = i_j[0]
excute 13:49:49.797644 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:49.800637 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.804625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:49.807618 line       556                     i = i_j[0]
excute 13:49:49.811608 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.815597 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.819586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:49.823576 line       556                     i = i_j[0]
excute 13:49:49.827565 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.831554 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.835543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:49.839533 line       556                     i = i_j[0]
excute 13:49:49.843523 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:49.846515 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.850510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 1)
excute 13:49:49.855490 line       556                     i = i_j[0]
excute 13:49:49.859480 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:49.863468 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.867457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:49:49.870449 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:49.874438 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:49.878430 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.882422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 0)
excute 13:49:49.886407 line       556                     i = i_j[0]
excute 13:49:49.891395 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:49.894384 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.899372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:49:49.902365 line       556                     i = i_j[0]
excute 13:49:49.907351 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:49.910344 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.914332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:49:49.917323 line       556                     i = i_j[0]
excute 13:49:49.921314 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:49.925302 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.928295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:49:49.932284 line       556                     i = i_j[0]
excute 13:49:49.936275 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:49.939265 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.943256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:49:49.948242 line       556                     i = i_j[0]
excute 13:49:49.953228 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:49.957219 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.963203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:49:49.966194 line       556                     i = i_j[0]
excute 13:49:49.970184 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:49.974173 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.978163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:49:49.982152 line       556                     i = i_j[0]
excute 13:49:49.986142 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:49.991127 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:49.995123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 1)
excute 13:49:49.998109 line       556                     i = i_j[0]
excute 13:49:50.002107 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:50.005090 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:50.010078 line       555                 for i_j in i_j_list:
excute 13:49:50.013069 line       581             self.write_matrix(
excute 13:49:50.017058 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:50.021047 line       583                 result_file_path,
excute 13:49:50.025037 line       584                 mode='a'
excute 13:49:50.031586 line       488         for t in time_steps:
excute Modified var:.. t = 149
excute 13:49:50.036572 line       489             if (t != self.TIME + 1):
excute 13:49:50.040564 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:50.045548 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:50.049539 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:50.054525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:50.060509 line       494                         if (i == j):
excute 13:49:50.063502 line       495                             continue
excute 13:49:50.069484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:50.073477 line       494                         if (i == j):
excute 13:49:50.077464 line       496                         i_j_list.append((
excute 13:49:50.083447 line       497                             i, j,
excute 13:49:50.088436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.095416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:50.106387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:50.112370 line       494                         if (i == j):
excute 13:49:50.118388 line       496                         i_j_list.append((
excute 13:49:50.124340 line       497                             i, j,
excute 13:49:50.128328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.135309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1)]
excute 13:49:50.141292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:50.145282 line       494                         if (i == j):
excute 13:49:50.152269 line       496                         i_j_list.append((
excute 13:49:50.155257 line       497                             i, j,
excute 13:49:50.161242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.167223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1)]
excute 13:49:50.172210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:50.177199 line       494                         if (i == j):
excute 13:49:50.183182 line       496                         i_j_list.append((
excute 13:49:50.186172 line       497                             i, j,
excute 13:49:50.190161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.197143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0)]
excute 13:49:50.200135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:50.204123 line       494                         if (i == j):
excute 13:49:50.208128 line       496                         i_j_list.append((
excute 13:49:50.212103 line       497                             i, j,
excute 13:49:50.216092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.220082 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2)]
excute 13:49:50.224071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:50.228061 line       494                         if (i == j):
excute 13:49:50.232050 line       496                         i_j_list.append((
excute 13:49:50.236039 line       497                             i, j,
excute 13:49:50.240029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.243021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0)]
excute 13:49:50.247010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:50.251000 line       494                         if (i == j):
excute 13:49:50.254989 line       496                         i_j_list.append((
excute 13:49:50.258977 line       497                             i, j,
excute 13:49:50.262968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.265959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:49:50.269950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:50.273938 line       494                         if (i == j):
excute 13:49:50.278927 line       496                         i_j_list.append((
excute 13:49:50.282915 line       497                             i, j,
excute 13:49:50.286903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.289896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:49:50.293886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:50.298873 line       494                         if (i == j):
excute 13:49:50.302862 line       496                         i_j_list.append((
excute 13:49:50.309841 line       497                             i, j,
excute 13:49:50.315829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.322808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:49:50.326797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:50.339764 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:50.344750 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:50.349737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:50.353725 line       494                         if (i == j):
excute 13:49:50.357715 line       496                         i_j_list.append((
excute 13:49:50.361706 line       497                             i, j,
excute 13:49:50.368685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.372674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0)]
excute 13:49:50.375666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:50.379656 line       494                         if (i == j):
excute 13:49:50.384644 line       495                             continue
excute 13:49:50.387634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:50.391624 line       494                         if (i == j):
excute 13:49:50.394616 line       496                         i_j_list.append((
excute 13:49:50.398606 line       497                             i, j,
excute 13:49:50.402593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.405585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1)]
excute 13:49:50.409575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:50.412566 line       494                         if (i == j):
excute 13:49:50.416556 line       496                         i_j_list.append((
excute 13:49:50.419548 line       497                             i, j,
excute 13:49:50.423537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.426529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1)]
excute 13:49:50.430520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:50.433511 line       494                         if (i == j):
excute 13:49:50.438499 line       496                         i_j_list.append((
excute 13:49:50.441489 line       497                             i, j,
excute 13:49:50.444481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.448474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0)]
excute 13:49:50.452460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:50.456449 line       494                         if (i == j):
excute 13:49:50.460439 line       496                         i_j_list.append((
excute 13:49:50.466425 line       497                             i, j,
excute 13:49:50.470444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.474436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2)]
excute 13:49:50.478394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:50.482394 line       494                         if (i == j):
excute 13:49:50.486371 line       496                         i_j_list.append((
excute 13:49:50.490359 line       497                             i, j,
excute 13:49:50.493360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.497371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0)]
excute 13:49:50.501331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:50.506317 line       494                         if (i == j):
excute 13:49:50.510306 line       496                         i_j_list.append((
excute 13:49:50.513329 line       497                             i, j,
excute 13:49:50.517301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.520312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:49:50.523302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:50.527292 line       494                         if (i == j):
excute 13:49:50.531249 line       496                         i_j_list.append((
excute 13:49:50.535240 line       497                             i, j,
excute 13:49:50.538231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.541223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:49:50.545211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:50.548204 line       494                         if (i == j):
excute 13:49:50.552193 line       496                         i_j_list.append((
excute 13:49:50.556182 line       497                             i, j,
excute 13:49:50.559174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.562166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:49:50.566159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:50.569148 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:50.573137 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:50.577128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:50.580118 line       494                         if (i == j):
excute 13:49:50.584122 line       496                         i_j_list.append((
excute 13:49:50.587100 line       497                             i, j,
excute 13:49:50.590092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.594081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0)]
excute 13:49:50.597073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:50.601062 line       494                         if (i == j):
excute 13:49:50.606051 line       496                         i_j_list.append((
excute 13:49:50.609041 line       497                             i, j,
excute 13:49:50.612033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.616022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:50.619015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:50.623004 line       494                         if (i == j):
excute 13:49:50.626993 line       495                             continue
excute 13:49:50.630982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:50.633974 line       494                         if (i == j):
excute 13:49:50.637964 line       496                         i_j_list.append((
excute 13:49:50.640956 line       497                             i, j,
excute 13:49:50.644946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.647937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1)]
excute 13:49:50.651927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:50.655916 line       494                         if (i == j):
excute 13:49:50.659913 line       496                         i_j_list.append((
excute 13:49:50.663895 line       497                             i, j,
excute 13:49:50.670876 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.673869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0)]
excute 13:49:50.681847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:50.685839 line       494                         if (i == j):
excute 13:49:50.689827 line       496                         i_j_list.append((
excute 13:49:50.692851 line       497                             i, j,
excute 13:49:50.696819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.699834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2)]
excute 13:49:50.702822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:50.707780 line       494                         if (i == j):
excute 13:49:50.712765 line       496                         i_j_list.append((
excute 13:49:50.715758 line       497                             i, j,
excute 13:49:50.719747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.722739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0)]
excute 13:49:50.726728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:50.730718 line       494                         if (i == j):
excute 13:49:50.735718 line       496                         i_j_list.append((
excute 13:49:50.738697 line       497                             i, j,
excute 13:49:50.741689 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.745678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:49:50.748670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:50.752660 line       494                         if (i == j):
excute 13:49:50.757647 line       496                         i_j_list.append((
excute 13:49:50.760638 line       497                             i, j,
excute 13:49:50.764627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.768616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:50.772606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:50.777592 line       494                         if (i == j):
excute 13:49:50.781580 line       496                         i_j_list.append((
excute 13:49:50.784574 line       497                             i, j,
excute 13:49:50.788563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.791555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:50.795543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:50.798537 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:50.802526 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:50.805518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:50.810503 line       494                         if (i == j):
excute 13:49:50.814492 line       496                         i_j_list.append((
excute 13:49:50.817484 line       497                             i, j,
excute 13:49:50.821473 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.824468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0)]
excute 13:49:50.828456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:50.832445 line       494                         if (i == j):
excute 13:49:50.836436 line       496                         i_j_list.append((
excute 13:49:50.840425 line       497                             i, j,
excute 13:49:50.844414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.847406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:49:50.851395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:50.856386 line       494                         if (i == j):
excute 13:49:50.860369 line       496                         i_j_list.append((
excute 13:49:50.864358 line       497                             i, j,
excute 13:49:50.867351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.870343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1)]
excute 13:49:50.874333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:50.878322 line       494                         if (i == j):
excute 13:49:50.881313 line       495                             continue
excute 13:49:50.885303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:50.888295 line       494                         if (i == j):
excute 13:49:50.892284 line       496                         i_j_list.append((
excute 13:49:50.909797 line       497                             i, j,
excute 13:49:50.914820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.918807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0)]
excute 13:49:50.921805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:50.925787 line       494                         if (i == j):
excute 13:49:50.929780 line       496                         i_j_list.append((
excute 13:49:50.933766 line       497                             i, j,
excute 13:49:50.936756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.940715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2)]
excute 13:49:50.943706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:50.948695 line       494                         if (i == j):
excute 13:49:50.952684 line       496                         i_j_list.append((
excute 13:49:50.956673 line       497                             i, j,
excute 13:49:50.962658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.966647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0)]
excute 13:49:50.973627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:50.978648 line       494                         if (i == j):
excute 13:49:50.982604 line       496                         i_j_list.append((
excute 13:49:50.985630 line       497                             i, j,
excute 13:49:50.988620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:50.992607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:49:50.995599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:50.999589 line       494                         if (i == j):
excute 13:49:51.003547 line       496                         i_j_list.append((
excute 13:49:51.006538 line       497                             i, j,
excute 13:49:51.010527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.014518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:49:51.018538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:51.022531 line       494                         if (i == j):
excute 13:49:51.027483 line       496                         i_j_list.append((
excute 13:49:51.030508 line       497                             i, j,
excute 13:49:51.033507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.037492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:49:51.040448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:51.044437 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:51.047429 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:51.051418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:51.055408 line       494                         if (i == j):
excute 13:49:51.059397 line       496                         i_j_list.append((
excute 13:49:51.062425 line       497                             i, j,
excute 13:49:51.066380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.069402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0)]
excute 13:49:51.072398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:51.076389 line       494                         if (i == j):
excute 13:49:51.080377 line       496                         i_j_list.append((
excute 13:49:51.084368 line       497                             i, j,
excute 13:49:51.087359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.091351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0)]
excute 13:49:51.094304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:51.098303 line       494                         if (i == j):
excute 13:49:51.102283 line       496                         i_j_list.append((
excute 13:49:51.106284 line       497                             i, j,
excute 13:49:51.109263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.112256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1)]
excute 13:49:51.116245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:51.121239 line       494                         if (i == j):
excute 13:49:51.125221 line       496                         i_j_list.append((
excute 13:49:51.128213 line       497                             i, j,
excute 13:49:51.139519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.143539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1)]
excute 13:49:51.146531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:51.150520 line       494                         if (i == j):
excute 13:49:51.154514 line       495                             continue
excute 13:49:51.158502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:51.161497 line       494                         if (i == j):
excute 13:49:51.165462 line       496                         i_j_list.append((
excute 13:49:51.168476 line       497                             i, j,
excute 13:49:51.172467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.175457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2)]
excute 13:49:51.179424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:51.183407 line       494                         if (i == j):
excute 13:49:51.187396 line       496                         i_j_list.append((
excute 13:49:51.191385 line       497                             i, j,
excute 13:49:51.194406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.198364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0)]
excute 13:49:51.201391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:51.205348 line       494                         if (i == j):
excute 13:49:51.209337 line       496                         i_j_list.append((
excute 13:49:51.212361 line       497                             i, j,
excute 13:49:51.216347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.219339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0)]
excute 13:49:51.224297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:51.228285 line       494                         if (i == j):
excute 13:49:51.232273 line       496                         i_j_list.append((
excute 13:49:51.236264 line       497                             i, j,
excute 13:49:51.239286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.242278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:51.246268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:51.250227 line       494                         if (i == j):
excute 13:49:51.254248 line       496                         i_j_list.append((
excute 13:49:51.257241 line       497                             i, j,
excute 13:49:51.261227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.264220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:51.268211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:51.272168 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:51.275191 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:51.279180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:51.283169 line       494                         if (i == j):
excute 13:49:51.287128 line       496                         i_j_list.append((
excute 13:49:51.290150 line       497                             i, j,
excute 13:49:51.294109 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.297134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0)]
excute 13:49:51.300126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:51.304103 line       494                         if (i == j):
excute 13:49:51.308073 line       496                         i_j_list.append((
excute 13:49:51.311094 line       497                             i, j,
excute 13:49:51.315084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.318076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:49:51.322034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:51.330014 line       494                         if (i == j):
excute 13:49:51.336013 line       496                         i_j_list.append((
excute 13:49:51.340019 line       497                             i, j,
excute 13:49:51.343975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.348993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1)]
excute 13:49:51.352952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:51.361931 line       494                         if (i == j):
excute 13:49:51.367912 line       496                         i_j_list.append((
excute 13:49:51.374893 line       497                             i, j,
excute 13:49:51.378888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.384865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1)]
excute 13:49:51.392845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:51.398829 line       494                         if (i == j):
excute 13:49:51.407806 line       496                         i_j_list.append((
excute 13:49:51.413789 line       497                             i, j,
excute 13:49:51.420801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.428781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0)]
excute 13:49:51.432737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:51.436727 line       494                         if (i == j):
excute 13:49:51.442712 line       495                             continue
excute 13:49:51.446701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:51.452685 line       494                         if (i == j):
excute 13:49:51.459666 line       496                         i_j_list.append((
excute 13:49:51.465650 line       497                             i, j,
excute 13:49:51.469639 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.473629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:49:51.477619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:51.485598 line       494                         if (i == j):
excute 13:49:51.493575 line       496                         i_j_list.append((
excute 13:49:51.501553 line       497                             i, j,
excute 13:49:51.509533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.516517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:49:51.524493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:51.532471 line       494                         if (i == j):
excute 13:49:51.540452 line       496                         i_j_list.append((
excute 13:49:51.545436 line       497                             i, j,
excute 13:49:51.551421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.557405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:49:51.562392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:51.568375 line       494                         if (i == j):
excute 13:49:51.576354 line       496                         i_j_list.append((
excute 13:49:51.583335 line       497                             i, j,
excute 13:49:51.591315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.595304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:49:51.604280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:51.612259 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:51.620250 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:51.627224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:51.632206 line       494                         if (i == j):
excute 13:49:51.640184 line       496                         i_j_list.append((
excute 13:49:51.646169 line       497                             i, j,
excute 13:49:51.652152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.659133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0)]
excute 13:49:51.665117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:51.671102 line       494                         if (i == j):
excute 13:49:51.679081 line       496                         i_j_list.append((
excute 13:49:51.688056 line       497                             i, j,
excute 13:49:51.695037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.700024 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:49:51.708999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:51.715983 line       494                         if (i == j):
excute 13:49:51.721966 line       496                         i_j_list.append((
excute 13:49:51.730941 line       497                             i, j,
excute 13:49:51.735929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.742908 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1)]
excute 13:49:51.748893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:51.755889 line       494                         if (i == j):
excute 13:49:51.761859 line       496                         i_j_list.append((
excute 13:49:51.767843 line       497                             i, j,
excute 13:49:51.775821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.783799 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1)]
excute 13:49:51.790782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:51.797763 line       494                         if (i == j):
excute 13:49:51.803747 line       496                         i_j_list.append((
excute 13:49:51.807735 line       497                             i, j,
excute 13:49:51.811725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.814717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0)]
excute 13:49:51.818706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:51.823694 line       494                         if (i == j):
excute 13:49:51.828680 line       496                         i_j_list.append((
excute 13:49:51.832668 line       497                             i, j,
excute 13:49:51.835661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.839651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2)]
excute 13:49:51.843640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:51.847630 line       494                         if (i == j):
excute 13:49:51.851621 line       495                             continue
excute 13:49:51.854610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:51.858602 line       494                         if (i == j):
excute 13:49:51.862590 line       496                         i_j_list.append((
excute 13:49:51.866579 line       497                             i, j,
excute 13:49:51.870570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.873563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0)]
excute 13:49:51.877550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:51.881540 line       494                         if (i == j):
excute 13:49:51.885529 line       496                         i_j_list.append((
excute 13:49:51.889518 line       497                             i, j,
excute 13:49:51.893507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.897496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:49:51.901486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:51.905475 line       494                         if (i == j):
excute 13:49:51.910463 line       496                         i_j_list.append((
excute 13:49:51.913453 line       497                             i, j,
excute 13:49:51.917444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.920434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:49:51.924423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:51.927415 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:51.931404 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:51.935396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:51.938386 line       494                         if (i == j):
excute 13:49:51.944371 line       496                         i_j_list.append((
excute 13:49:51.949356 line       497                             i, j,
excute 13:49:51.953346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.957337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0)]
excute 13:49:51.962324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:51.968307 line       494                         if (i == j):
excute 13:49:51.971300 line       496                         i_j_list.append((
excute 13:49:51.975289 line       497                             i, j,
excute 13:49:51.980308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:51.983300 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:51.986291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:51.990278 line       494                         if (i == j):
excute 13:49:51.995242 line       496                         i_j_list.append((
excute 13:49:51.998258 line       497                             i, j,
excute 13:49:52.002249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.006205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1)]
excute 13:49:52.009229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:52.013217 line       494                         if (i == j):
excute 13:49:52.017177 line       496                         i_j_list.append((
excute 13:49:52.020198 line       497                             i, j,
excute 13:49:52.024189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.028147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1)]
excute 13:49:52.031172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:52.035129 line       494                         if (i == j):
excute 13:49:52.039118 line       496                         i_j_list.append((
excute 13:49:52.042142 line       497                             i, j,
excute 13:49:52.046102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.050087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0)]
excute 13:49:52.054078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:52.059066 line       494                         if (i == j):
excute 13:49:52.063055 line       496                         i_j_list.append((
excute 13:49:52.067044 line       497                             i, j,
excute 13:49:52.070036 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.074026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2)]
excute 13:49:52.077017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:52.082003 line       494                         if (i == j):
excute 13:49:52.085994 line       496                         i_j_list.append((
excute 13:49:52.088985 line       497                             i, j,
excute 13:49:52.092975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.095967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0)]
excute 13:49:52.100952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:52.103946 line       494                         if (i == j):
excute 13:49:52.108932 line       495                             continue
excute 13:49:52.111924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:52.114916 line       494                         if (i == j):
excute 13:49:52.118905 line       496                         i_j_list.append((
excute 13:49:52.122895 line       497                             i, j,
excute 13:49:52.125886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.129875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:52.133865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:52.137853 line       494                         if (i == j):
excute 13:49:52.141843 line       496                         i_j_list.append((
excute 13:49:52.145833 line       497                             i, j,
excute 13:49:52.150820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.154809 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:52.158797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:52.162787 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:52.165779 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:52.169768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:52.174755 line       494                         if (i == j):
excute 13:49:52.177748 line       496                         i_j_list.append((
excute 13:49:52.181738 line       497                             i, j,
excute 13:49:52.185726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.188718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0)]
excute 13:49:52.192707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:52.197695 line       494                         if (i == j):
excute 13:49:52.201690 line       496                         i_j_list.append((
excute 13:49:52.204676 line       497                             i, j,
excute 13:49:52.208665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.211657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:49:52.215646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:52.219635 line       494                         if (i == j):
excute 13:49:52.224623 line       496                         i_j_list.append((
excute 13:49:52.228610 line       497                             i, j,
excute 13:49:52.231604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.234596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1)]
excute 13:49:52.238584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:52.243571 line       494                         if (i == j):
excute 13:49:52.246564 line       496                         i_j_list.append((
excute 13:49:52.251550 line       497                             i, j,
excute 13:49:52.255541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.259530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1)]
excute 13:49:52.264721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:52.268712 line       494                         if (i == j):
excute 13:49:52.272703 line       496                         i_j_list.append((
excute 13:49:52.276724 line       497                             i, j,
excute 13:49:52.279715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.283704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0)]
excute 13:49:52.287663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:52.290685 line       494                         if (i == j):
excute 13:49:52.294675 line       496                         i_j_list.append((
excute 13:49:52.298665 line       497                             i, j,
excute 13:49:52.301656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.305647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2)]
excute 13:49:52.308638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:52.312626 line       494                         if (i == j):
excute 13:49:52.316617 line       496                         i_j_list.append((
excute 13:49:52.320606 line       497                             i, j,
excute 13:49:52.323598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.328554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0)]
excute 13:49:52.332544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:52.342517 line       494                         if (i == j):
excute 13:49:52.349498 line       496                         i_j_list.append((
excute 13:49:52.357476 line       497                             i, j,
excute 13:49:52.364471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.369445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:49:52.373432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:52.378420 line       494                         if (i == j):
excute 13:49:52.382417 line       495                             continue
excute 13:49:52.386429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:52.390388 line       494                         if (i == j):
excute 13:49:52.394379 line       496                         i_j_list.append((
excute 13:49:52.398367 line       497                             i, j,
excute 13:49:52.402357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.405349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:49:52.409339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:52.413328 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:52.417317 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:52.422303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:52.425326 line       494                         if (i == j):
excute 13:49:52.430281 line       496                         i_j_list.append((
excute 13:49:52.433306 line       497                             i, j,
excute 13:49:52.437263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.440286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0)]
excute 13:49:52.444244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:52.449230 line       494                         if (i == j):
excute 13:49:52.456211 line       496                         i_j_list.append((
excute 13:49:52.463192 line       497                             i, j,
excute 13:49:52.467181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.470174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:52.474166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:52.477155 line       494                         if (i == j):
excute 13:49:52.481144 line       496                         i_j_list.append((
excute 13:49:52.485133 line       497                             i, j,
excute 13:49:52.488126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.492115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1)]
excute 13:49:52.495107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:52.499096 line       494                         if (i == j):
excute 13:49:52.503085 line       496                         i_j_list.append((
excute 13:49:52.507075 line       497                             i, j,
excute 13:49:52.511066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.514056 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1)]
excute 13:49:52.517048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:52.521037 line       494                         if (i == j):
excute 13:49:52.525027 line       496                         i_j_list.append((
excute 13:49:52.529016 line       497                             i, j,
excute 13:49:52.532041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.536029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1), (9, 4, 3, 0)]
excute 13:49:52.539023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:52.543011 line       494                         if (i == j):
excute 13:49:52.547000 line       496                         i_j_list.append((
excute 13:49:52.550989 line       497                             i, j,
excute 13:49:52.553983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.557971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 2)]
excute 13:49:52.561930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:52.565917 line       494                         if (i == j):
excute 13:49:52.569907 line       496                         i_j_list.append((
excute 13:49:52.572899 line       497                             i, j,
excute 13:49:52.576888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.579881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 2), (9, 6, 3, 0)]
excute 13:49:52.583869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:52.587861 line       494                         if (i == j):
excute 13:49:52.591849 line       496                         i_j_list.append((
excute 13:49:52.594840 line       497                             i, j,
excute 13:49:52.597832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.601821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 2), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:52.604814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:52.608804 line       494                         if (i == j):
excute 13:49:52.612792 line       496                         i_j_list.append((
excute 13:49:52.616782 line       497                             i, j,
excute 13:49:52.619773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:52.623763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 2), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1), (9, 4, 3, 0), (9, 5, 3, 2), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:52.626755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:52.630745 line       494                         if (i == j):
excute 13:49:52.634734 line       495                             continue
excute 13:49:52.638723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:52.641715 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:52.645705 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 4, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 2, -2, 1), (7, 3, -2, 1), (7, 5, -2, 2), (6, 0, -1, 0), (6, 1, -1, 0), (6, 4, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 4, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (6, 2, -1, 1), (6, 3, -1, 1), (8, 2, -1, 1), (8, 3, -1, 1), (6, 5, -1, 2), (8, 5, -1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (5, 2, 0, 1), (5, 3, 0, 1), (0, 1, 1, 0), (0, 4, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (0, 2, 1, 1), (0, 3, 1, 1), (0, 5, 1, 2), (1, 0, 2, 0), (1, 4, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (1, 2, 2, 1), (1, 3, 2, 1), (2, 3, 2, 1), (1, 5, 2, 2), (2, 5, 2, 2), (9, 0, 3, 0), (9, 1, 3, 0), (9, 4, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 2, 3, 1), (9, 3, 3, 1), (9, 5, 3, 2), (4, 0, 4, 0), (4, 1, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (4, 2, 4, 1), (4, 3, 4, 1), (4, 5, 4, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 4, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (3, 2, 6, 1), (3, 5, 6, 2)]
excute 13:49:52.648697 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:52.652687 line       505                     if (self.RELOCATE):
excute 13:49:52.657674 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:52.660696 line       505                     if (self.RELOCATE):
excute 13:49:52.665655 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:52.669642 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:52.673631 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:52.678618 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:52.681610 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.686596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:52.689589 line       556                     i = i_j[0]
excute 13:49:52.693577 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:52.697568 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.701555 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:52.704549 line       556                     i = i_j[0]
excute 13:49:52.709537 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:52.713526 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.718510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:52.721504 line       556                     i = i_j[0]
excute 13:49:52.725493 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:52.729482 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.733473 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:52.737461 line       556                     i = i_j[0]
excute 13:49:52.741458 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:52.744442 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.748432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:52.752434 line       556                     i = i_j[0]
excute 13:49:52.756411 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:52.759402 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.764390 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 1)
excute 13:49:52.770371 line       556                     i = i_j[0]
excute 13:49:52.774362 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:52.777385 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.781374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 1)
excute 13:49:52.785335 line       556                     i = i_j[0]
excute 13:49:52.789323 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:52.793322 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.797300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 2)
excute 13:49:52.800293 line       556                     i = i_j[0]
excute 13:49:52.804282 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:52.808271 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.812260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:49:52.816250 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:52.820240 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:52.824229 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.829215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:49:52.832208 line       556                     i = i_j[0]
excute 13:49:52.837195 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:52.841183 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.845173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:49:52.848164 line       556                     i = i_j[0]
excute 13:49:52.852154 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:52.858137 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.863123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:49:52.867128 line       556                     i = i_j[0]
excute 13:49:52.871104 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:52.875091 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.879082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:49:52.882074 line       556                     i = i_j[0]
excute 13:49:52.887061 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:52.890052 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.898030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:49:52.902021 line       556                     i = i_j[0]
excute 13:49:52.910000 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:52.916980 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.920994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:49:52.923994 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:52.927951 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:52.931940 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.936928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:49:52.940917 line       556                     i = i_j[0]
excute 13:49:52.945919 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:52.949896 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.953883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:49:52.957871 line       556                     i = i_j[0]
excute 13:49:52.961861 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:52.965851 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.969840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:49:52.974827 line       556                     i = i_j[0]
excute 13:49:52.978816 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:52.981807 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:52.986794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:49:52.993776 line       556                     i = i_j[0]
excute 13:49:52.997763 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:53.001753 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.005743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:49:53.008734 line       556                     i = i_j[0]
excute 13:49:53.012723 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:53.016712 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.020703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 1)
excute 13:49:53.024691 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:53.028683 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:53.032672 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.037658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 1)
excute 13:49:53.040651 line       556                     i = i_j[0]
excute 13:49:53.044640 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:53.048629 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.052618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 1)
excute 13:49:53.056608 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:53.060597 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:53.065585 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.069574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 1)
excute 13:49:53.072565 line       556                     i = i_j[0]
excute 13:49:53.078551 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:53.081541 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.086527 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 2)
excute 13:49:53.089519 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:53.093509 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:53.098495 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.102485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 2)
excute 13:49:53.106474 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:53.110464 line       557                     j = i_j[1]
excute 13:49:53.114453 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.118442 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:49:53.122432 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:53.126421 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:53.130410 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.135395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:49:53.139387 line       556                     i = i_j[0]
excute 13:49:53.143375 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:53.147365 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.151356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:49:53.155345 line       556                     i = i_j[0]
excute 13:49:53.159332 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:53.162325 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.167313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:49:53.170304 line       556                     i = i_j[0]
excute 13:49:53.175291 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:53.179282 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.184265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:49:53.187258 line       556                     i = i_j[0]
excute 13:49:53.191247 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:53.194239 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.198229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:49:53.202219 line       556                     i = i_j[0]
excute 13:49:53.206208 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:53.209199 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.213189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:49:53.216180 line       556                     i = i_j[0]
excute 13:49:53.220170 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:53.224158 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.228148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 1)
excute 13:49:53.231140 line       556                     i = i_j[0]
excute 13:49:53.235130 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:53.238152 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.242143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 1)
excute 13:49:53.246132 line       556                     i = i_j[0]
excute 13:49:53.250123 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:53.253113 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.259066 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 158
excute 13:49:53.262059 line       560                         if (t_tmp > self.TIME):
excute 13:49:53.266048 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:53.270037 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:53.274026 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:53.279045 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:53.283035 line       569                                     available_vhecles[i][t],
excute 13:49:53.287024 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:53.290014 line       571                                     self.S_capacities[j],
excute 13:49:53.294005 line       572                                     demands[t][i][j],
excute 13:49:53.296994 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -4
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 149
calc_contract     13:49:53.300985 call       352     def caluculate_contract(
calc_contract     13:49:53.303946 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:53.303946 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:53.304944 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:53.305973 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:53.306970 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:53.306970 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:53.307967 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:53.308940 line       575                                 rsf += rsf_tmp
excute 13:49:53.312922 line       576                                 rse += rse_tmp
excute 13:49:53.315945 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 149
move_cars     Starting var:.. t_tmp = 158
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:53.319913 call       388     def move_cars(
move_cars     13:49:53.323893 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:53.324890 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:53.327883 line       399         return available_vhecles
move_cars     13:49:53.330876 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:53.333865 line       579                                 success += can_contract
excute Modified var:.. success = 67
excute 13:49:53.341845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:49:53.346831 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:53.350819 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:53.355808 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.360794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:53.363817 line       556                     i = i_j[0]
excute 13:49:53.368775 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:53.371794 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.375758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:49:53.379775 line       556                     i = i_j[0]
excute 13:49:53.384729 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:53.388720 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.393704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:49:53.397696 line       556                     i = i_j[0]
excute 13:49:53.402684 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:53.405675 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.409664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:49:53.413653 line       556                     i = i_j[0]
excute 13:49:53.418643 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:53.421632 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.426617 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:53.429640 line       556                     i = i_j[0]
excute 13:49:53.433631 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:53.437620 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.441578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 1)
excute 13:49:53.444600 line       556                     i = i_j[0]
excute 13:49:53.450553 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:53.453545 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.457534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 1)
excute 13:49:53.462524 line       556                     i = i_j[0]
excute 13:49:53.468517 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:53.472495 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.476485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 2)
excute 13:49:53.480505 line       556                     i = i_j[0]
excute 13:49:53.484463 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:53.488455 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.492473 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:49:53.497461 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:53.501423 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:53.505408 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.509415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:49:53.513418 line       556                     i = i_j[0]
excute 13:49:53.517408 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:53.520399 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.524394 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:49:53.528346 line       556                     i = i_j[0]
excute 13:49:53.532336 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:53.535358 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.539347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:49:53.543337 line       556                     i = i_j[0]
excute 13:49:53.547296 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:53.550319 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.555274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:49:53.558298 line       556                     i = i_j[0]
excute 13:49:53.562254 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:53.566244 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.569268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:49:53.573225 line       556                     i = i_j[0]
excute 13:49:53.577214 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:53.581203 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.585193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:53.588185 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:53.593204 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:53.597193 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.601184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:53.605172 line       556                     i = i_j[0]
excute 13:49:53.609131 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:53.612153 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.616142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:53.620131 line       556                     i = i_j[0]
excute 13:49:53.629905 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:53.633923 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.637888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:53.641877 line       556                     i = i_j[0]
excute 13:49:53.646865 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:53.651848 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.655838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:53.658829 line       556                     i = i_j[0]
excute 13:49:53.662819 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:53.666808 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.670831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:53.673821 line       556                     i = i_j[0]
excute 13:49:53.677812 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:53.681800 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.685759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:53.688781 line       556                     i = i_j[0]
excute 13:49:53.693739 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:53.697726 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.701715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 1)
excute 13:49:53.704707 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:53.708696 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:53.712687 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.716707 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 154
excute 13:49:53.720696 line       560                         if (t_tmp > self.TIME):
excute 13:49:53.724656 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:53.727677 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:53.731666 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:53.735624 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:53.738616 line       569                                     available_vhecles[i][t],
excute 13:49:53.742605 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:53.745597 line       571                                     self.S_capacities[j],
excute 13:49:53.748590 line       572                                     demands[t][i][j],
excute 13:49:53.752578 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 149
calc_contract     13:49:53.755572 call       352     def caluculate_contract(
calc_contract     13:49:53.759572 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:53.759572 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:53.760566 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:53.761555 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:53.761555 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:53.762555 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:53.763553 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:53.764550 line       575                                 rsf += rsf_tmp
excute 13:49:53.767541 line       576                                 rse += rse_tmp
excute 13:49:53.771530 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 2
move_cars     Starting var:.. t = 149
move_cars     Starting var:.. t_tmp = 154
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:53.775519 call       388     def move_cars(
move_cars     13:49:53.780507 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:53.782501 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:53.784495 line       399         return available_vhecles
move_cars     13:49:53.786488 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:53.789481 line       579                                 success += can_contract
excute Modified var:.. success = 68
excute 13:49:53.798457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 1)
excute 13:49:53.802446 line       556                     i = i_j[0]
excute 13:49:53.807434 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:53.811425 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.815412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 1)
excute 13:49:53.818437 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:53.822405 line       557                     j = i_j[1]
excute 13:49:53.826383 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.829407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 2)
excute 13:49:53.833395 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:53.837387 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:53.841376 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.845366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 2)
excute 13:49:53.848354 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:53.852344 line       557                     j = i_j[1]
excute 13:49:53.857299 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.862287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:53.865280 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:53.869269 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:53.873258 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.878249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:53.882233 line       556                     i = i_j[0]
excute 13:49:53.890212 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:53.897193 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.903177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:53.907166 line       556                     i = i_j[0]
excute 13:49:53.913152 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:53.917140 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.920130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:53.924120 line       556                     i = i_j[0]
excute 13:49:53.928110 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:53.931102 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.935093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:53.939083 line       556                     i = i_j[0]
excute 13:49:53.943071 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:53.948059 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.952078 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:53.956066 line       556                     i = i_j[0]
excute 13:49:53.960042 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:53.964014 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.968003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 1)
excute 13:49:53.970995 line       556                     i = i_j[0]
excute 13:49:53.974984 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:53.977976 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:53.982963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 1)
excute 13:49:53.985955 line       556                     i = i_j[0]
excute 13:49:53.993935 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:53.997924 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.001913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 2)
excute 13:49:54.005902 line       556                     i = i_j[0]
excute 13:49:54.010889 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:54.014878 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.018867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 4, 0)
excute 13:49:54.022857 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:54.027845 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:54.031834 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.035823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 4, 0)
excute 13:49:54.039812 line       556                     i = i_j[0]
excute 13:49:54.043809 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:54.047791 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.051780 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 4, 0)
excute 13:49:54.055770 line       556                     i = i_j[0]
excute 13:49:54.060755 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:54.063749 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.068735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 4, 0)
excute 13:49:54.071728 line       556                     i = i_j[0]
excute 13:49:54.076713 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:54.079707 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.083696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 4, 0)
excute 13:49:54.087685 line       556                     i = i_j[0]
excute 13:49:54.091675 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:54.095663 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.099653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 4, 0)
excute 13:49:54.104639 line       556                     i = i_j[0]
excute 13:49:54.108629 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:54.112618 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.116607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 4, 1)
excute 13:49:54.119599 line       556                     i = i_j[0]
excute 13:49:54.123589 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:54.127576 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.131580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 4, 1)
excute 13:49:54.134559 line       556                     i = i_j[0]
excute 13:49:54.138549 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:54.142538 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.146528 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 4, 2)
excute 13:49:54.149519 line       556                     i = i_j[0]
excute 13:49:54.153508 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:54.157498 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.161488 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 156
excute 13:49:54.164511 line       560                         if (t_tmp > self.TIME):
excute 13:49:54.168499 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:54.172456 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:54.175480 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:54.179439 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:54.182462 line       569                                     available_vhecles[i][t],
excute 13:49:54.185455 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:54.189443 line       571                                     self.S_capacities[j],
excute 13:49:54.192435 line       572                                     demands[t][i][j],
excute 13:49:54.196393 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 149
calc_contract     13:49:54.199384 call       352     def caluculate_contract(
calc_contract     13:49:54.202376 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:54.203375 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:54.204371 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:54.205369 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:54.206367 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:54.206367 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 3
calc_contract     13:49:54.208370 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:54.209365 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 3]
excute Modified var:.. rse_tmp = 3
excute 13:49:54.210357 line       575                                 rsf += rsf_tmp
excute 13:49:54.214344 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 170
excute 13:49:54.218333 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 4
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 149
move_cars     Starting var:.. t_tmp = 156
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:54.222324 call       388     def move_cars(
move_cars     13:49:54.226313 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:54.227311 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:54.228308 line       399         return available_vhecles
move_cars     13:49:54.230302 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:54.232297 line       579                                 success += can_contract
excute Modified var:.. success = 69
excute 13:49:54.236286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:49:54.240276 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:54.244265 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:54.248254 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.252278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:49:54.256234 line       556                     i = i_j[0]
excute 13:49:54.260226 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:54.263213 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.267203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:49:54.270195 line       556                     i = i_j[0]
excute 13:49:54.275193 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:54.278174 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.282163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:49:54.286152 line       556                     i = i_j[0]
excute 13:49:54.290143 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:54.293134 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.297123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:49:54.301122 line       556                     i = i_j[0]
excute 13:49:54.304104 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:54.308094 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.314078 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:49:54.317070 line       556                     i = i_j[0]
excute 13:49:54.321059 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:54.325050 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.332030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:49:54.337017 line       556                     i = i_j[0]
excute 13:49:54.341006 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:54.344996 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.349983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 1)
excute 13:49:54.353972 line       556                     i = i_j[0]
excute 13:49:54.357963 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:54.362947 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.366936 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 2)
excute 13:49:54.370926 line       556                     i = i_j[0]
excute 13:49:54.374916 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:54.377907 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:54.382894 line       555                 for i_j in i_j_list:
excute 13:49:54.386883 line       581             self.write_matrix(
excute 13:49:54.389875 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:54.393864 line       583                 result_file_path,
excute 13:49:54.396857 line       584                 mode='a'
excute 13:49:54.403838 line       488         for t in time_steps:
excute Modified var:.. t = 150
excute 13:49:54.407828 line       489             if (t != self.TIME + 1):
excute 13:49:54.411817 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:54.417801 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:54.423784 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:54.430767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:54.433759 line       494                         if (i == j):
excute 13:49:54.438745 line       495                             continue
excute 13:49:54.442735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:54.447721 line       494                         if (i == j):
excute 13:49:54.453705 line       496                         i_j_list.append((
excute 13:49:54.457694 line       497                             i, j,
excute 13:49:54.463679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.473654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:54.478639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:54.487614 line       494                         if (i == j):
excute 13:49:54.491604 line       496                         i_j_list.append((
excute 13:49:54.495594 line       497                             i, j,
excute 13:49:54.498585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.505584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1)]
excute 13:49:54.510553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:54.515541 line       494                         if (i == j):
excute 13:49:54.521524 line       496                         i_j_list.append((
excute 13:49:54.525513 line       497                             i, j,
excute 13:49:54.529509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.532495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0)]
excute 13:49:54.539476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:54.543466 line       494                         if (i == j):
excute 13:49:54.548453 line       496                         i_j_list.append((
excute 13:49:54.551443 line       497                             i, j,
excute 13:49:54.555434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.559423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:49:54.562414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:54.567402 line       494                         if (i == j):
excute 13:49:54.571391 line       496                         i_j_list.append((
excute 13:49:54.575380 line       497                             i, j,
excute 13:49:54.578371 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.584356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:49:54.588345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:54.592334 line       494                         if (i == j):
excute 13:49:54.596324 line       496                         i_j_list.append((
excute 13:49:54.599315 line       497                             i, j,
excute 13:49:54.603306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.606296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1)]
excute 13:49:54.609289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:54.613278 line       494                         if (i == j):
excute 13:49:54.620260 line       496                         i_j_list.append((
excute 13:49:54.624249 line       497                             i, j,
excute 13:49:54.627241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.631230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0)]
excute 13:49:54.635221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:54.639209 line       494                         if (i == j):
excute 13:49:54.642202 line       496                         i_j_list.append((
excute 13:49:54.646191 line       497                             i, j,
excute 13:49:54.649182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.653172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:49:54.656164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:54.660153 line       494                         if (i == j):
excute 13:49:54.664143 line       496                         i_j_list.append((
excute 13:49:54.668131 line       497                             i, j,
excute 13:49:54.675113 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.679104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:49:54.684088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:54.691070 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:54.696057 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:54.702042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:54.705033 line       494                         if (i == j):
excute 13:49:54.709023 line       496                         i_j_list.append((
excute 13:49:54.714009 line       497                             i, j,
excute 13:49:54.717000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.720990 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0)]
excute 13:49:54.724981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:54.729966 line       494                         if (i == j):
excute 13:49:54.733957 line       495                             continue
excute 13:49:54.736948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:54.740940 line       494                         if (i == j):
excute 13:49:54.744926 line       496                         i_j_list.append((
excute 13:49:54.748917 line       497                             i, j,
excute 13:49:54.751910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.755898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1)]
excute 13:49:54.759888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:54.763877 line       494                         if (i == j):
excute 13:49:54.768865 line       496                         i_j_list.append((
excute 13:49:54.771856 line       497                             i, j,
excute 13:49:54.774848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.778840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0)]
excute 13:49:54.782827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:54.785819 line       494                         if (i == j):
excute 13:49:54.790806 line       496                         i_j_list.append((
excute 13:49:54.793827 line       497                             i, j,
excute 13:49:54.796819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.800808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:49:54.803800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:54.807760 line       494                         if (i == j):
excute 13:49:54.811749 line       496                         i_j_list.append((
excute 13:49:54.814772 line       497                             i, j,
excute 13:49:54.818730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.821752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:49:54.824744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:54.830700 line       494                         if (i == j):
excute 13:49:54.834689 line       496                         i_j_list.append((
excute 13:49:54.837680 line       497                             i, j,
excute 13:49:54.841669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.845658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1)]
excute 13:49:54.849648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:54.853638 line       494                         if (i == j):
excute 13:49:54.858622 line       496                         i_j_list.append((
excute 13:49:54.865604 line       497                             i, j,
excute 13:49:54.870590 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.874583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0)]
excute 13:49:54.877604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:54.881563 line       494                         if (i == j):
excute 13:49:54.885583 line       496                         i_j_list.append((
excute 13:49:54.888575 line       497                             i, j,
excute 13:49:54.892563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.895560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:49:54.899514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:54.902536 line       494                         if (i == j):
excute 13:49:54.906527 line       496                         i_j_list.append((
excute 13:49:54.910515 line       497                             i, j,
excute 13:49:54.913478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.917466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:49:54.921456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:54.925444 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:54.928437 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:54.934419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:54.938409 line       494                         if (i == j):
excute 13:49:54.941433 line       496                         i_j_list.append((
excute 13:49:54.945422 line       497                             i, j,
excute 13:49:54.949411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.953370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:49:54.956361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:54.960350 line       494                         if (i == j):
excute 13:49:54.966336 line       496                         i_j_list.append((
excute 13:49:54.971353 line       497                             i, j,
excute 13:49:54.975349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:54.978336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:54.982323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:54.987312 line       494                         if (i == j):
excute 13:49:54.991269 line       495                             continue
excute 13:49:54.994293 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:54.998281 line       494                         if (i == j):
excute 13:49:55.002275 line       496                         i_j_list.append((
excute 13:49:55.006260 line       497                             i, j,
excute 13:49:55.010221 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.013241 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:55.017207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:55.020223 line       494                         if (i == j):
excute 13:49:55.024211 line       496                         i_j_list.append((
excute 13:49:55.028200 line       497                             i, j,
excute 13:49:55.031195 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.036180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:55.039174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:55.043163 line       494                         if (i == j):
excute 13:49:55.047153 line       496                         i_j_list.append((
excute 13:49:55.050143 line       497                             i, j,
excute 13:49:55.054131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.058090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:55.061112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:55.065073 line       494                         if (i == j):
excute 13:49:55.069094 line       496                         i_j_list.append((
excute 13:49:55.072083 line       497                             i, j,
excute 13:49:55.076073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.079066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:49:55.083023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:55.086046 line       494                         if (i == j):
excute 13:49:55.090038 line       496                         i_j_list.append((
excute 13:49:55.094025 line       497                             i, j,
excute 13:49:55.097017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.100008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:49:55.103998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:55.107989 line       494                         if (i == j):
excute 13:49:55.111978 line       496                         i_j_list.append((
excute 13:49:55.114969 line       497                             i, j,
excute 13:49:55.117960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.121951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:55.124941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:55.128931 line       494                         if (i == j):
excute 13:49:55.132921 line       496                         i_j_list.append((
excute 13:49:55.139871 line       497                             i, j,
excute 13:49:55.143860 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.149843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:55.153833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:55.158820 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:55.161811 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:55.167796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:55.170789 line       494                         if (i == j):
excute 13:49:55.174780 line       496                         i_j_list.append((
excute 13:49:55.178768 line       497                             i, j,
excute 13:49:55.182757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.186747 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0)]
excute 13:49:55.189739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:55.194725 line       494                         if (i == j):
excute 13:49:55.198714 line       496                         i_j_list.append((
excute 13:49:55.202704 line       497                             i, j,
excute 13:49:55.205696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.209685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:49:55.212678 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:55.217665 line       494                         if (i == j):
excute 13:49:55.221654 line       496                         i_j_list.append((
excute 13:49:55.224646 line       497                             i, j,
excute 13:49:55.228635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.232624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1)]
excute 13:49:55.236613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:55.242598 line       494                         if (i == j):
excute 13:49:55.247593 line       495                             continue
excute 13:49:55.250574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:55.254563 line       494                         if (i == j):
excute 13:49:55.258576 line       496                         i_j_list.append((
excute 13:49:55.262543 line       497                             i, j,
excute 13:49:55.265568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.268559 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0)]
excute 13:49:55.272547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:55.276538 line       494                         if (i == j):
excute 13:49:55.280518 line       496                         i_j_list.append((
excute 13:49:55.283486 line       497                             i, j,
excute 13:49:55.287475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.290467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:49:55.293460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:55.297449 line       494                         if (i == j):
excute 13:49:55.301438 line       496                         i_j_list.append((
excute 13:49:55.304430 line       497                             i, j,
excute 13:49:55.307422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.311411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1)]
excute 13:49:55.314403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:55.318393 line       494                         if (i == j):
excute 13:49:55.322382 line       496                         i_j_list.append((
excute 13:49:55.325407 line       497                             i, j,
excute 13:49:55.333361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.338342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0)]
excute 13:49:55.345323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:55.351310 line       494                         if (i == j):
excute 13:49:55.355297 line       496                         i_j_list.append((
excute 13:49:55.358320 line       497                             i, j,
excute 13:49:55.362311 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.366267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:49:55.371253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:55.378233 line       494                         if (i == j):
excute 13:49:55.383220 line       496                         i_j_list.append((
excute 13:49:55.387214 line       497                             i, j,
excute 13:49:55.390235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.393226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:49:55.397214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:55.401174 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:55.404195 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:55.408185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:55.412142 line       494                         if (i == j):
excute 13:49:55.415166 line       496                         i_j_list.append((
excute 13:49:55.419155 line       497                             i, j,
excute 13:49:55.422149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.426136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0)]
excute 13:49:55.429098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:55.434086 line       494                         if (i == j):
excute 13:49:55.438075 line       496                         i_j_list.append((
excute 13:49:55.441067 line       497                             i, j,
excute 13:49:55.445056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.450073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0)]
excute 13:49:55.454063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:55.458022 line       494                         if (i == j):
excute 13:49:55.462010 line       496                         i_j_list.append((
excute 13:49:55.466030 line       497                             i, j,
excute 13:49:55.469022 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.472984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1)]
excute 13:49:55.476003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:55.479963 line       494                         if (i == j):
excute 13:49:55.483953 line       496                         i_j_list.append((
excute 13:49:55.486974 line       497                             i, j,
excute 13:49:55.490963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.493957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0)]
excute 13:49:55.497946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:55.501909 line       494                         if (i == j):
excute 13:49:55.504928 line       495                             continue
excute 13:49:55.508916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:55.512907 line       494                         if (i == j):
excute 13:49:55.516865 line       496                         i_j_list.append((
excute 13:49:55.520853 line       497                             i, j,
excute 13:49:55.524843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.528832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0)]
excute 13:49:55.531825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:55.535814 line       494                         if (i == j):
excute 13:49:55.540801 line       496                         i_j_list.append((
excute 13:49:55.543823 line       497                             i, j,
excute 13:49:55.547812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.552800 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1)]
excute 13:49:55.556787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:55.560778 line       494                         if (i == j):
excute 13:49:55.564767 line       496                         i_j_list.append((
excute 13:49:55.568724 line       497                             i, j,
excute 13:49:55.571747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.575706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0)]
excute 13:49:55.578729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:55.582688 line       494                         if (i == j):
excute 13:49:55.586677 line       496                         i_j_list.append((
excute 13:49:55.589701 line       497                             i, j,
excute 13:49:55.593689 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.596681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0)]
excute 13:49:55.599673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:55.603662 line       494                         if (i == j):
excute 13:49:55.607651 line       496                         i_j_list.append((
excute 13:49:55.611610 line       497                             i, j,
excute 13:49:55.615601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.619590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0)]
excute 13:49:55.623577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:55.626601 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:55.630590 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:55.638043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:55.641038 line       494                         if (i == j):
excute 13:49:55.645026 line       496                         i_j_list.append((
excute 13:49:55.649016 line       497                             i, j,
excute 13:49:55.653007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.656997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0)]
excute 13:49:55.660987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:55.664976 line       494                         if (i == j):
excute 13:49:55.668964 line       496                         i_j_list.append((
excute 13:49:55.672954 line       497                             i, j,
excute 13:49:55.676945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.680933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:49:55.684921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:55.689908 line       494                         if (i == j):
excute 13:49:55.693899 line       496                         i_j_list.append((
excute 13:49:55.696890 line       497                             i, j,
excute 13:49:55.700879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.704868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1)]
excute 13:49:55.708858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:55.712848 line       494                         if (i == j):
excute 13:49:55.716836 line       496                         i_j_list.append((
excute 13:49:55.720826 line       497                             i, j,
excute 13:49:55.724815 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.728804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0)]
excute 13:49:55.731796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:55.736782 line       494                         if (i == j):
excute 13:49:55.739776 line       496                         i_j_list.append((
excute 13:49:55.743764 line       497                             i, j,
excute 13:49:55.747754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.750746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:49:55.756763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:55.760719 line       494                         if (i == j):
excute 13:49:55.764712 line       495                             continue
excute 13:49:55.767734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:55.770722 line       494                         if (i == j):
excute 13:49:55.774713 line       496                         i_j_list.append((
excute 13:49:55.778701 line       497                             i, j,
excute 13:49:55.781692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.785682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1)]
excute 13:49:55.788675 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:55.792667 line       494                         if (i == j):
excute 13:49:55.796653 line       496                         i_j_list.append((
excute 13:49:55.800631 line       497                             i, j,
excute 13:49:55.803638 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.806627 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0)]
excute 13:49:55.810616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:55.814606 line       494                         if (i == j):
excute 13:49:55.818564 line       496                         i_j_list.append((
excute 13:49:55.821587 line       497                             i, j,
excute 13:49:55.824580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.828568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:49:55.831560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:55.835518 line       494                         if (i == j):
excute 13:49:55.839523 line       496                         i_j_list.append((
excute 13:49:55.842530 line       497                             i, j,
excute 13:49:55.846521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.849512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:49:55.853501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:55.857462 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:55.861481 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:55.865470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:55.869427 line       494                         if (i == j):
excute 13:49:55.873416 line       496                         i_j_list.append((
excute 13:49:55.877405 line       497                             i, j,
excute 13:49:55.880398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.884388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0)]
excute 13:49:55.887378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:55.891373 line       494                         if (i == j):
excute 13:49:55.895358 line       496                         i_j_list.append((
excute 13:49:55.898349 line       497                             i, j,
excute 13:49:55.901342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.905330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:49:55.908323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:55.912312 line       494                         if (i == j):
excute 13:49:55.916302 line       496                         i_j_list.append((
excute 13:49:55.919293 line       497                             i, j,
excute 13:49:55.922285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.926274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1)]
excute 13:49:55.929267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:55.933256 line       494                         if (i == j):
excute 13:49:55.937246 line       496                         i_j_list.append((
excute 13:49:55.941237 line       497                             i, j,
excute 13:49:55.944228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.949214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0)]
excute 13:49:55.953205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:55.957194 line       494                         if (i == j):
excute 13:49:55.962181 line       496                         i_j_list.append((
excute 13:49:55.966201 line       497                             i, j,
excute 13:49:55.969194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.973181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:49:55.976175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:55.980163 line       494                         if (i == j):
excute 13:49:55.984155 line       496                         i_j_list.append((
excute 13:49:55.988142 line       497                             i, j,
excute 13:49:55.991133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:55.995126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:49:55.998115 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:56.002086 line       494                         if (i == j):
excute 13:49:56.006064 line       495                             continue
excute 13:49:56.009087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:56.013075 line       494                         if (i == j):
excute 13:49:56.017064 line       496                         i_j_list.append((
excute 13:49:56.021053 line       497                             i, j,
excute 13:49:56.024047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.028005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:49:56.031994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:56.035984 line       494                         if (i == j):
excute 13:49:56.039972 line       496                         i_j_list.append((
excute 13:49:56.043963 line       497                             i, j,
excute 13:49:56.047952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.050976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:49:56.054963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:56.058921 line       494                         if (i == j):
excute 13:49:56.062910 line       496                         i_j_list.append((
excute 13:49:56.067898 line       497                             i, j,
excute 13:49:56.075875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.079865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:49:56.086845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:56.093845 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:56.096850 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:56.100840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:56.104831 line       494                         if (i == j):
excute 13:49:56.108820 line       496                         i_j_list.append((
excute 13:49:56.111813 line       497                             i, j,
excute 13:49:56.115769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.118792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0)]
excute 13:49:56.121784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:56.125776 line       494                         if (i == j):
excute 13:49:56.129765 line       496                         i_j_list.append((
excute 13:49:56.133720 line       497                             i, j,
excute 13:49:56.136713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.140701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:56.143694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:56.147683 line       494                         if (i == j):
excute 13:49:56.151672 line       496                         i_j_list.append((
excute 13:49:56.155662 line       497                             i, j,
excute 13:49:56.158654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.162643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1)]
excute 13:49:56.166633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:56.172618 line       494                         if (i == j):
excute 13:49:56.176606 line       496                         i_j_list.append((
excute 13:49:56.179599 line       497                             i, j,
excute 13:49:56.185582 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.191565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0)]
excute 13:49:56.194558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:56.198547 line       494                         if (i == j):
excute 13:49:56.202536 line       496                         i_j_list.append((
excute 13:49:56.206526 line       497                             i, j,
excute 13:49:56.209552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.212541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:56.216498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:56.220500 line       494                         if (i == j):
excute 13:49:56.224491 line       496                         i_j_list.append((
excute 13:49:56.227469 line       497                             i, j,
excute 13:49:56.230462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.234451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:56.237443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:56.241444 line       494                         if (i == j):
excute 13:49:56.245422 line       496                         i_j_list.append((
excute 13:49:56.248414 line       497                             i, j,
excute 13:49:56.252516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.256392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1)]
excute 13:49:56.259387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:56.263375 line       494                         if (i == j):
excute 13:49:56.268363 line       495                             continue
excute 13:49:56.274348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:56.277369 line       494                         if (i == j):
excute 13:49:56.281357 line       496                         i_j_list.append((
excute 13:49:56.285316 line       497                             i, j,
excute 13:49:56.292296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.296317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0)]
excute 13:49:56.299310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:56.303302 line       494                         if (i == j):
excute 13:49:56.307288 line       496                         i_j_list.append((
excute 13:49:56.311281 line       497                             i, j,
excute 13:49:56.314272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.317262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:56.321250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:56.325209 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:56.333189 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:56.338176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:56.344159 line       494                         if (i == j):
excute 13:49:56.363108 line       496                         i_j_list.append((
excute 13:49:56.367099 line       497                             i, j,
excute 13:49:56.372084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.381060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0)]
excute 13:49:56.386046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:56.393029 line       494                         if (i == j):
excute 13:49:56.399013 line       496                         i_j_list.append((
excute 13:49:56.403001 line       497                             i, j,
excute 13:49:56.405993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.409982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:49:56.414971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:56.419956 line       494                         if (i == j):
excute 13:49:56.426938 line       496                         i_j_list.append((
excute 13:49:56.431927 line       497                             i, j,
excute 13:49:56.435914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.445886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1)]
excute 13:49:56.449878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:56.456857 line       494                         if (i == j):
excute 13:49:56.460849 line       496                         i_j_list.append((
excute 13:49:56.470822 line       497                             i, j,
excute 13:49:56.477802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.486777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0)]
excute 13:49:56.495753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:56.503733 line       494                         if (i == j):
excute 13:49:56.513705 line       496                         i_j_list.append((
excute 13:49:56.519688 line       497                             i, j,
excute 13:49:56.525675 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.530660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:49:56.539636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:56.547615 line       494                         if (i == j):
excute 13:49:56.553599 line       496                         i_j_list.append((
excute 13:49:56.559583 line       497                             i, j,
excute 13:49:56.565568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.571550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:49:56.577535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:56.584516 line       494                         if (i == j):
excute 13:49:56.591497 line       496                         i_j_list.append((
excute 13:49:56.599475 line       497                             i, j,
excute 13:49:56.607456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.616431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1)]
excute 13:49:56.621417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:56.628401 line       494                         if (i == j):
excute 13:49:56.636387 line       496                         i_j_list.append((
excute 13:49:56.643359 line       497                             i, j,
excute 13:49:56.650340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.658319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0)]
excute 13:49:56.663304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:56.671284 line       494                         if (i == j):
excute 13:49:56.680260 line       495                             continue
excute 13:49:56.688241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:56.696216 line       494                         if (i == j):
excute 13:49:56.704197 line       496                         i_j_list.append((
excute 13:49:56.710181 line       497                             i, j,
excute 13:49:56.717161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.725140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:49:56.733117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:56.739102 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:56.746083 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:56.753065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:56.759050 line       494                         if (i == j):
excute 13:49:56.766032 line       496                         i_j_list.append((
excute 13:49:56.774009 line       497                             i, j,
excute 13:49:56.779994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.787973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0)]
excute 13:49:56.794954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:56.801940 line       494                         if (i == j):
excute 13:49:56.807919 line       496                         i_j_list.append((
excute 13:49:56.811907 line       497                             i, j,
excute 13:49:56.814899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.818888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:56.822878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:56.826868 line       494                         if (i == j):
excute 13:49:56.829861 line       496                         i_j_list.append((
excute 13:49:56.833848 line       497                             i, j,
excute 13:49:56.836841 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.840829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1)]
excute 13:49:56.843823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:56.847811 line       494                         if (i == j):
excute 13:49:56.851802 line       496                         i_j_list.append((
excute 13:49:56.855804 line       497                             i, j,
excute 13:49:56.858782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.861774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0)]
excute 13:49:56.865763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:56.869767 line       494                         if (i == j):
excute 13:49:56.875737 line       496                         i_j_list.append((
excute 13:49:56.880737 line       497                             i, j,
excute 13:49:56.883716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.887722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:56.890697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:56.896682 line       494                         if (i == j):
excute 13:49:56.900671 line       496                         i_j_list.append((
excute 13:49:56.904660 line       497                             i, j,
excute 13:49:56.907652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.911641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:56.915630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:56.919620 line       494                         if (i == j):
excute 13:49:56.923609 line       496                         i_j_list.append((
excute 13:49:56.927598 line       497                             i, j,
excute 13:49:56.931591 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.934579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:49:56.938569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:56.942558 line       494                         if (i == j):
excute 13:49:56.946547 line       496                         i_j_list.append((
excute 13:49:56.950568 line       497                             i, j,
excute 13:49:56.953529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.957518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0)]
excute 13:49:56.961518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:56.965497 line       494                         if (i == j):
excute 13:49:56.969486 line       496                         i_j_list.append((
excute 13:49:56.972478 line       497                             i, j,
excute 13:49:56.975470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:56.979459 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 1), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 1), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 1), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 1), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 1), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 1), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 1), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:56.982451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:56.986441 line       494                         if (i == j):
excute 13:49:56.990431 line       495                             continue
excute 13:49:56.994419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:56.998411 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:57.001401 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 2, -2, 1), (7, 6, -2, 1), (6, 0, -1, 0), (6, 1, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (6, 2, -1, 1), (8, 2, -1, 1), (8, 6, -1, 1), (0, 1, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (0, 2, 1, 1), (0, 6, 1, 1), (5, 2, 1, 1), (5, 6, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (2, 6, 2, 1), (1, 0, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (1, 2, 3, 1), (1, 6, 3, 1), (9, 2, 3, 1), (9, 6, 3, 1), (4, 0, 5, 0), (4, 1, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 7, 5, 0), (4, 8, 5, 0), (4, 9, 5, 0), (4, 2, 5, 1), (4, 6, 5, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (3, 2, 6, 1), (3, 6, 6, 1)]
excute 13:49:57.005391 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:57.009380 line       505                     if (self.RELOCATE):
excute 13:49:57.013369 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:57.017359 line       505                     if (self.RELOCATE):
excute 13:49:57.021356 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:57.024340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:57.028329 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:57.031321 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:57.035311 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.039300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:57.043289 line       556                     i = i_j[0]
excute 13:49:57.051270 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:57.056255 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.064233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:57.071214 line       556                     i = i_j[0]
excute 13:49:57.078228 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:57.082217 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.086209 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:57.090165 line       556                     i = i_j[0]
excute 13:49:57.094155 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:57.097177 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.102165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:57.106152 line       556                     i = i_j[0]
excute 13:49:57.110143 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:57.113134 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.117109 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:57.120118 line       556                     i = i_j[0]
excute 13:49:57.124104 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:57.128097 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.132053 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:57.135075 line       556                     i = i_j[0]
excute 13:49:57.139065 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:57.143054 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.147013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 1)
excute 13:49:57.151002 line       556                     i = i_j[0]
excute 13:49:57.155989 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:57.159976 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.163967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 1)
excute 13:49:57.166958 line       556                     i = i_j[0]
excute 13:49:57.170947 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:57.173940 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.177929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:49:57.180921 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:57.184911 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:57.188901 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.193889 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:49:57.196880 line       556                     i = i_j[0]
excute 13:49:57.201868 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:57.210843 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.219819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:49:57.226831 line       556                     i = i_j[0]
excute 13:49:57.230819 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:57.236773 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.240793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:49:57.244785 line       556                     i = i_j[0]
excute 13:49:57.248741 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:57.251763 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.256720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:49:57.259742 line       556                     i = i_j[0]
excute 13:49:57.263735 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:57.267709 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.271680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:49:57.274703 line       556                     i = i_j[0]
excute 13:49:57.279672 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:57.282680 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.286670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:49:57.290627 line       556                     i = i_j[0]
excute 13:49:57.294650 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:57.297640 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.301598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:49:57.305590 line       556                     i = i_j[0]
excute 13:49:57.312584 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:57.316570 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.320559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:49:57.323571 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:57.329526 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:57.336507 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.340495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:49:57.344485 line       556                     i = i_j[0]
excute 13:49:57.348475 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:57.353462 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.357451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:49:57.361440 line       556                     i = i_j[0]
excute 13:49:57.366428 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:57.371416 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.378396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:49:57.382384 line       556                     i = i_j[0]
excute 13:49:57.387369 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:57.390361 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.394350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:49:57.398339 line       556                     i = i_j[0]
excute 13:49:57.402330 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:57.405321 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.410316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:49:57.414329 line       556                     i = i_j[0]
excute 13:49:57.418319 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:57.421311 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.425300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:49:57.429288 line       556                     i = i_j[0]
excute 13:49:57.433279 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:57.436272 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.440229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 1)
excute 13:49:57.444217 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:57.448207 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:57.452206 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.457185 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 162
excute 13:49:57.460176 line       560                         if (t_tmp > self.TIME):
excute 13:49:57.465161 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:57.469151 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:57.472142 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:57.475134 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:57.479124 line       569                                     available_vhecles[i][t],
excute 13:49:57.483113 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:57.486136 line       571                                     self.S_capacities[j],
excute 13:49:57.490127 line       572                                     demands[t][i][j],
excute 13:49:57.493121 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 5
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 150
calc_contract     13:49:57.497077 call       352     def caluculate_contract(
calc_contract     13:49:57.500069 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:57.500069 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:57.501066 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:57.502079 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:57.502079 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:57.503061 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:57.504058 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. rse_tmp = 0
excute 13:49:57.505056 line       575                                 rsf += rsf_tmp
excute 13:49:57.509077 line       576                                 rse += rse_tmp
excute 13:49:57.514032 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 2
move_cars     Starting var:.. t = 150
move_cars     Starting var:.. t_tmp = 162
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:57.518020 call       388     def move_cars(
move_cars     13:49:57.522013 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:57.523009 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:57.524006 line       399         return available_vhecles
move_cars     13:49:57.525004 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:49:57.527996 line       579                                 success += can_contract
excute Modified var:.. success = 70
excute 13:49:57.531986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 1)
excute 13:49:57.535975 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:57.539964 line       557                     j = i_j[1]
excute 13:49:57.543953 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.547942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 1)
excute 13:49:57.550933 line       556                     i = i_j[0]
excute 13:49:57.555919 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:57.559910 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.563899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:49:57.567904 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:57.571879 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:57.575865 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.579857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:49:57.583845 line       556                     i = i_j[0]
excute 13:49:57.587839 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:57.590827 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.594816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:57.598805 line       556                     i = i_j[0]
excute 13:49:57.602795 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:57.606784 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.610774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:49:57.616757 line       556                     i = i_j[0]
excute 13:49:57.620746 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:57.623769 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.627727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:49:57.631718 line       556                     i = i_j[0]
excute 13:49:57.635740 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:57.639726 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.643720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:49:57.646710 line       556                     i = i_j[0]
excute 13:49:57.650698 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:57.654689 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.659641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:57.662635 line       556                     i = i_j[0]
excute 13:49:57.666623 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:57.670613 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.674604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:49:57.678593 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:57.683580 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:57.688578 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.692555 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:49:57.696544 line       556                     i = i_j[0]
excute 13:49:57.700535 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:57.704523 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.708511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:49:57.718490 line       556                     i = i_j[0]
excute 13:49:57.723471 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:57.726462 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.730452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:49:57.734441 line       556                     i = i_j[0]
excute 13:49:57.737432 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:57.741422 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.745413 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:49:57.748403 line       556                     i = i_j[0]
excute 13:49:57.752393 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:57.755386 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.759374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:49:57.763397 line       556                     i = i_j[0]
excute 13:49:57.767355 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:57.770377 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.774369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:49:57.778325 line       556                     i = i_j[0]
excute 13:49:57.783313 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:57.786305 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.791291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 1)
excute 13:49:57.795313 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:57.799268 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:57.803258 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.811236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 1)
excute 13:49:57.818218 line       556                     i = i_j[0]
excute 13:49:57.824203 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:57.828192 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.832181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 1)
excute 13:49:57.835206 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:57.840193 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:57.844182 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.848137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 1)
excute 13:49:57.851129 line       556                     i = i_j[0]
excute 13:49:57.855118 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:57.859121 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.863098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:57.866121 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:57.870079 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:57.876064 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.880085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:57.883077 line       556                     i = i_j[0]
excute 13:49:57.887065 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:57.891056 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.895013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:57.898035 line       556                     i = i_j[0]
excute 13:49:57.901993 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:57.905984 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.909975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:57.912965 line       556                     i = i_j[0]
excute 13:49:57.916955 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:57.920976 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.925931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:57.928953 line       556                     i = i_j[0]
excute 13:49:57.932910 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:57.936932 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.940901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:57.943914 line       556                     i = i_j[0]
excute 13:49:57.948870 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:57.951897 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.956880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:57.959838 line       556                     i = i_j[0]
excute 13:49:57.965826 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:57.971807 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.974799 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:57.978788 line       556                     i = i_j[0]
excute 13:49:57.982809 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:57.986801 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:57.990757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:49:57.993780 line       556                     i = i_j[0]
excute 13:49:57.998768 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:58.001759 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.005751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:49:58.009737 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:58.013729 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:58.017716 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.021708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:49:58.026664 line       556                     i = i_j[0]
excute 13:49:58.030651 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:58.034639 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.037665 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:49:58.041652 line       556                     i = i_j[0]
excute 13:49:58.045612 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:58.048633 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.052624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:49:58.056611 line       556                     i = i_j[0]
excute 13:49:58.060601 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:58.064591 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.068581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:49:58.071572 line       556                     i = i_j[0]
excute 13:49:58.075563 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:58.079518 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.082545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:49:58.086531 line       556                     i = i_j[0]
excute 13:49:58.090525 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:58.094480 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.097502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:49:58.101495 line       556                     i = i_j[0]
excute 13:49:58.105450 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:58.108474 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.112463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:58.116452 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:58.120443 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:58.124435 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.129387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:58.132408 line       556                     i = i_j[0]
excute 13:49:58.136398 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:58.140387 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.144345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:58.148334 line       556                     i = i_j[0]
excute 13:49:58.154320 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:58.159306 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.163295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:58.167283 line       556                     i = i_j[0]
excute 13:49:58.171275 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:58.174265 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.178255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:58.181246 line       556                     i = i_j[0]
excute 13:49:58.185236 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:58.189225 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.192217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:58.196206 line       556                     i = i_j[0]
excute 13:49:58.200196 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:58.203188 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.207178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:58.211177 line       556                     i = i_j[0]
excute 13:49:58.214158 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:58.218148 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.222137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 1)
excute 13:49:58.225129 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:58.229119 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:58.233141 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.237132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 1)
excute 13:49:58.241118 line       556                     i = i_j[0]
excute 13:49:58.245077 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:58.248099 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.252089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 1)
excute 13:49:58.256079 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:58.260070 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:58.264055 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.268015 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:49:58.272004 line       556                     i = i_j[0]
excute 13:49:58.274995 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:58.279985 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.283973 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:49:58.287963 line       560                         if (t_tmp > self.TIME):
excute 13:49:58.291968 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:58.294944 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 171
excute 13:49:58.298933 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:58.302923 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:58.306912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 5, 0)
excute 13:49:58.310901 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:58.314891 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:58.319878 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.323868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 5, 0)
excute 13:49:58.332843 line       556                     i = i_j[0]
excute 13:49:58.341821 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:58.345806 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.350794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 5, 0)
excute 13:49:58.354815 line       556                     i = i_j[0]
excute 13:49:58.358771 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:58.362761 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.367749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 5, 0)
excute 13:49:58.372735 line       556                     i = i_j[0]
excute 13:49:58.379718 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:58.383707 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.387697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 5, 0)
excute 13:49:58.390688 line       556                     i = i_j[0]
excute 13:49:58.394678 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:58.398667 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.402656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 5, 0)
excute 13:49:58.406646 line       556                     i = i_j[0]
excute 13:49:58.410636 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:58.413627 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.418613 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 5, 0)
excute 13:49:58.421607 line       556                     i = i_j[0]
excute 13:49:58.425596 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:58.429584 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.433572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 5, 1)
excute 13:49:58.437563 line       556                     i = i_j[0]
excute 13:49:58.442548 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:58.446538 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.450529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 5, 1)
excute 13:49:58.454518 line       556                     i = i_j[0]
excute 13:49:58.458507 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:58.462497 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.466487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:49:58.469477 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:58.473467 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:58.477456 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.481445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:49:58.485435 line       556                     i = i_j[0]
excute 13:49:58.489424 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:58.493414 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.497404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:49:58.500395 line       556                     i = i_j[0]
excute 13:49:58.505391 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:58.508374 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.513361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:49:58.516351 line       556                     i = i_j[0]
excute 13:49:58.520342 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:58.524331 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.528320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:49:58.531312 line       556                     i = i_j[0]
excute 13:49:58.535302 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:58.539291 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.544278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:49:58.548267 line       556                     i = i_j[0]
excute 13:49:58.551258 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:58.555249 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.559237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:49:58.563227 line       556                     i = i_j[0]
excute 13:49:58.567216 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:58.570207 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.574198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 1)
excute 13:49:58.578187 line       556                     i = i_j[0]
excute 13:49:58.582177 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:58.585168 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.590156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 1)
excute 13:49:58.593147 line       556                     i = i_j[0]
excute 13:49:58.597136 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:58.601125 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:58.605114 line       555                 for i_j in i_j_list:
excute 13:49:58.609104 line       581             self.write_matrix(
excute 13:49:58.612095 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:58.616085 line       583                 result_file_path,
excute 13:49:58.619077 line       584                 mode='a'
excute 13:49:58.675810 line       488         for t in time_steps:
excute Modified var:.. t = 151
excute 13:49:58.684786 line       489             if (t != self.TIME + 1):
excute 13:49:58.689771 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:58.693760 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:58.701740 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:58.708723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:58.712710 line       494                         if (i == j):
excute 13:49:58.717701 line       495                             continue
excute 13:49:58.721688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:58.724678 line       494                         if (i == j):
excute 13:49:58.729676 line       496                         i_j_list.append((
excute 13:49:58.733688 line       497                             i, j,
excute 13:49:58.737642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.742629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:58.750610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:58.755595 line       494                         if (i == j):
excute 13:49:58.760584 line       496                         i_j_list.append((
excute 13:49:58.764574 line       497                             i, j,
excute 13:49:58.769558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.772550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:49:58.776540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:58.781525 line       494                         if (i == j):
excute 13:49:58.785515 line       496                         i_j_list.append((
excute 13:49:58.788507 line       497                             i, j,
excute 13:49:58.792500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.795489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:49:58.799479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:58.803469 line       494                         if (i == j):
excute 13:49:58.807458 line       496                         i_j_list.append((
excute 13:49:58.810449 line       497                             i, j,
excute 13:49:58.814438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.818428 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:49:58.822417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:58.826407 line       494                         if (i == j):
excute 13:49:58.830397 line       496                         i_j_list.append((
excute 13:49:58.834385 line       497                             i, j,
excute 13:49:58.837377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.841367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:49:58.844358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:58.848348 line       494                         if (i == j):
excute 13:49:58.852338 line       496                         i_j_list.append((
excute 13:49:58.856325 line       497                             i, j,
excute 13:49:58.860316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.864305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:49:58.867298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:58.871287 line       494                         if (i == j):
excute 13:49:58.876275 line       496                         i_j_list.append((
excute 13:49:58.882256 line       497                             i, j,
excute 13:49:58.889238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.893228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1)]
excute 13:49:58.896219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:58.901208 line       494                         if (i == j):
excute 13:49:58.908190 line       496                         i_j_list.append((
excute 13:49:58.911178 line       497                             i, j,
excute 13:49:58.915169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.919158 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0)]
excute 13:49:58.923148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:58.927138 line       494                         if (i == j):
excute 13:49:58.931125 line       496                         i_j_list.append((
excute 13:49:58.934119 line       497                             i, j,
excute 13:49:58.938107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.941099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2)]
excute 13:49:58.945089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:58.950075 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:58.953067 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:58.958055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:58.962042 line       494                         if (i == j):
excute 13:49:58.966034 line       496                         i_j_list.append((
excute 13:49:58.969024 line       497                             i, j,
excute 13:49:58.973013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:58.976006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0)]
excute 13:49:58.978998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:58.982989 line       494                         if (i == j):
excute 13:49:58.986976 line       495                             continue
excute 13:49:58.989969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:58.993992 line       494                         if (i == j):
excute 13:49:58.997980 line       496                         i_j_list.append((
excute 13:49:59.000970 line       497                             i, j,
excute 13:49:59.004928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.007951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:49:59.011911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:59.015900 line       494                         if (i == j):
excute 13:49:59.020888 line       496                         i_j_list.append((
excute 13:49:59.023879 line       497                             i, j,
excute 13:49:59.027868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.030860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:49:59.034849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:59.038837 line       494                         if (i == j):
excute 13:49:59.042829 line       496                         i_j_list.append((
excute 13:49:59.045820 line       497                             i, j,
excute 13:49:59.049810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.052802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:49:59.056791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:59.061778 line       494                         if (i == j):
excute 13:49:59.065767 line       496                         i_j_list.append((
excute 13:49:59.068758 line       497                             i, j,
excute 13:49:59.072749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.075739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:49:59.080736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:59.084714 line       494                         if (i == j):
excute 13:49:59.088703 line       496                         i_j_list.append((
excute 13:49:59.091696 line       497                             i, j,
excute 13:49:59.095685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.098679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:49:59.102668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:59.106658 line       494                         if (i == j):
excute 13:49:59.109649 line       496                         i_j_list.append((
excute 13:49:59.113671 line       497                             i, j,
excute 13:49:59.116663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.120626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1)]
excute 13:49:59.123642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:59.127604 line       494                         if (i == j):
excute 13:49:59.131623 line       496                         i_j_list.append((
excute 13:49:59.134612 line       497                             i, j,
excute 13:49:59.138602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.141594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0)]
excute 13:49:59.145552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:59.149542 line       494                         if (i == j):
excute 13:49:59.153531 line       496                         i_j_list.append((
excute 13:49:59.157522 line       497                             i, j,
excute 13:49:59.160513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.165500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2)]
excute 13:49:59.169489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:59.173480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:59.176471 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:59.180460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:59.184450 line       494                         if (i == j):
excute 13:49:59.187441 line       496                         i_j_list.append((
excute 13:49:59.191431 line       497                             i, j,
excute 13:49:59.195420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.199408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0)]
excute 13:49:59.202402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:59.206391 line       494                         if (i == j):
excute 13:49:59.210380 line       496                         i_j_list.append((
excute 13:49:59.214369 line       497                             i, j,
excute 13:49:59.218359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.222348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:59.226338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:59.230326 line       494                         if (i == j):
excute 13:49:59.234315 line       495                             continue
excute 13:49:59.238304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:59.241297 line       494                         if (i == j):
excute 13:49:59.246286 line       496                         i_j_list.append((
excute 13:49:59.250273 line       497                             i, j,
excute 13:49:59.254263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.258252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:59.261244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:59.267227 line       494                         if (i == j):
excute 13:49:59.270250 line       496                         i_j_list.append((
excute 13:49:59.274239 line       497                             i, j,
excute 13:49:59.278200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.282189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:59.285180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:59.289170 line       494                         if (i == j):
excute 13:49:59.293159 line       496                         i_j_list.append((
excute 13:49:59.297148 line       497                             i, j,
excute 13:49:59.301138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.304130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:59.308119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:59.312108 line       494                         if (i == j):
excute 13:49:59.316098 line       496                         i_j_list.append((
excute 13:49:59.320087 line       497                             i, j,
excute 13:49:59.324077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.330059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:49:59.337040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:59.341030 line       494                         if (i == j):
excute 13:49:59.345020 line       496                         i_j_list.append((
excute 13:49:59.349010 line       497                             i, j,
excute 13:49:59.352998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.356988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1)]
excute 13:49:59.359979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:59.363970 line       494                         if (i == j):
excute 13:49:59.369953 line       496                         i_j_list.append((
excute 13:49:59.372944 line       497                             i, j,
excute 13:49:59.376934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.379927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0)]
excute 13:49:59.384948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:59.392892 line       494                         if (i == j):
excute 13:49:59.398875 line       496                         i_j_list.append((
excute 13:49:59.404859 line       497                             i, j,
excute 13:49:59.410844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.417825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2)]
excute 13:49:59.421814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:59.425805 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:59.428826 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:59.432818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:59.436805 line       494                         if (i == j):
excute 13:49:59.440768 line       496                         i_j_list.append((
excute 13:49:59.443788 line       497                             i, j,
excute 13:49:59.446778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.450736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0)]
excute 13:49:59.455725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:59.458715 line       494                         if (i == j):
excute 13:49:59.464700 line       496                         i_j_list.append((
excute 13:49:59.471680 line       497                             i, j,
excute 13:49:59.475669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.480657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:49:59.484677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:59.488636 line       494                         if (i == j):
excute 13:49:59.492657 line       496                         i_j_list.append((
excute 13:49:59.495649 line       497                             i, j,
excute 13:49:59.499608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.503598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0)]
excute 13:49:59.507585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:59.511576 line       494                         if (i == j):
excute 13:49:59.515564 line       495                             continue
excute 13:49:59.519554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:59.522546 line       494                         if (i == j):
excute 13:49:59.526535 line       496                         i_j_list.append((
excute 13:49:59.530524 line       497                             i, j,
excute 13:49:59.534514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.538503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0)]
excute 13:49:59.542493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:59.546481 line       494                         if (i == j):
excute 13:49:59.549473 line       496                         i_j_list.append((
excute 13:49:59.553463 line       497                             i, j,
excute 13:49:59.556455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.560444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:49:59.563435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:59.567425 line       494                         if (i == j):
excute 13:49:59.571415 line       496                         i_j_list.append((
excute 13:49:59.576402 line       497                             i, j,
excute 13:49:59.580389 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.583381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:49:59.590362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:59.595350 line       494                         if (i == j):
excute 13:49:59.599338 line       496                         i_j_list.append((
excute 13:49:59.603328 line       497                             i, j,
excute 13:49:59.611307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.614299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1)]
excute 13:49:59.618289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:59.622278 line       494                         if (i == j):
excute 13:49:59.626269 line       496                         i_j_list.append((
excute 13:49:59.630258 line       497                             i, j,
excute 13:49:59.634247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.638269 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0)]
excute 13:49:59.641258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:59.645216 line       494                         if (i == j):
excute 13:49:59.649217 line       496                         i_j_list.append((
excute 13:49:59.652229 line       497                             i, j,
excute 13:49:59.656221 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.659212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2)]
excute 13:49:59.663201 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:59.667160 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:59.670180 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:59.674171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:59.680123 line       494                         if (i == j):
excute 13:49:59.684113 line       496                         i_j_list.append((
excute 13:49:59.691093 line       497                             i, j,
excute 13:49:59.695083 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.702065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0)]
excute 13:49:59.706053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:59.710045 line       494                         if (i == j):
excute 13:49:59.715030 line       496                         i_j_list.append((
excute 13:49:59.718023 line       497                             i, j,
excute 13:49:59.722012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.726002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0)]
excute 13:49:59.729989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:59.733980 line       494                         if (i == j):
excute 13:49:59.737971 line       496                         i_j_list.append((
excute 13:49:59.740962 line       497                             i, j,
excute 13:49:59.744951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.748941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0)]
excute 13:49:59.751965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:59.755952 line       494                         if (i == j):
excute 13:49:59.759943 line       496                         i_j_list.append((
excute 13:49:59.763931 line       497                             i, j,
excute 13:49:59.766922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.770914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0)]
excute 13:49:59.773904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:59.777863 line       494                         if (i == j):
excute 13:49:59.782849 line       495                             continue
excute 13:49:59.786839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:59.790828 line       494                         if (i == j):
excute 13:49:59.795814 line       496                         i_j_list.append((
excute 13:49:59.798807 line       497                             i, j,
excute 13:49:59.802797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.805789 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0)]
excute 13:49:59.809777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:59.814765 line       494                         if (i == j):
excute 13:49:59.818755 line       496                         i_j_list.append((
excute 13:49:59.821746 line       497                             i, j,
excute 13:49:59.825735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.829725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0)]
excute 13:49:59.833713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:59.837704 line       494                         if (i == j):
excute 13:49:59.841691 line       496                         i_j_list.append((
excute 13:49:59.844685 line       497                             i, j,
excute 13:49:59.847676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.851665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1)]
excute 13:49:59.856653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:59.860645 line       494                         if (i == j):
excute 13:49:59.864630 line       496                         i_j_list.append((
excute 13:49:59.867623 line       497                             i, j,
excute 13:49:59.871611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.874604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0)]
excute 13:49:59.877596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:59.883581 line       494                         if (i == j):
excute 13:49:59.888569 line       496                         i_j_list.append((
excute 13:49:59.892557 line       497                             i, j,
excute 13:49:59.896546 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.900535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2)]
excute 13:49:59.903527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:59.907517 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:59.911505 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:59.915507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:59.919484 line       494                         if (i == j):
excute 13:49:59.923475 line       496                         i_j_list.append((
excute 13:49:59.926466 line       497                             i, j,
excute 13:49:59.930455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.934442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0)]
excute 13:49:59.938432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:59.942438 line       494                         if (i == j):
excute 13:49:59.946413 line       496                         i_j_list.append((
excute 13:49:59.950403 line       497                             i, j,
excute 13:49:59.954391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.958389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:49:59.961373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:59.965362 line       494                         if (i == j):
excute 13:49:59.969351 line       496                         i_j_list.append((
excute 13:49:59.973340 line       497                             i, j,
excute 13:49:59.977330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:59.981319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:49:59.986305 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:59.990295 line       494                         if (i == j):
excute 13:49:59.994285 line       496                         i_j_list.append((
excute 13:49:59.998274 line       497                             i, j,
excute 13:50:00.005254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.012237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:00.017222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:00.026199 line       494                         if (i == j):
excute 13:50:00.031187 line       496                         i_j_list.append((
excute 13:50:00.035175 line       497                             i, j,
excute 13:50:00.038167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.042156 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:00.045147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:00.049139 line       494                         if (i == j):
excute 13:50:00.053128 line       495                             continue
excute 13:50:00.056118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:00.060108 line       494                         if (i == j):
excute 13:50:00.064097 line       496                         i_j_list.append((
excute 13:50:00.067088 line       497                             i, j,
excute 13:50:00.071079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.074071 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:00.078061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:00.082051 line       494                         if (i == j):
excute 13:50:00.086038 line       496                         i_j_list.append((
excute 13:50:00.090028 line       497                             i, j,
excute 13:50:00.094019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.097009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1)]
excute 13:50:00.101000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:00.104990 line       494                         if (i == j):
excute 13:50:00.107980 line       496                         i_j_list.append((
excute 13:50:00.111969 line       497                             i, j,
excute 13:50:00.114961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.118951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0)]
excute 13:50:00.121942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:00.125933 line       494                         if (i == j):
excute 13:50:00.129923 line       496                         i_j_list.append((
excute 13:50:00.132913 line       497                             i, j,
excute 13:50:00.136903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.139925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2)]
excute 13:50:00.143914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:00.147880 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:00.150898 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:00.154854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:00.158877 line       494                         if (i == j):
excute 13:50:00.162866 line       496                         i_j_list.append((
excute 13:50:00.165856 line       497                             i, j,
excute 13:50:00.169847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.172838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0)]
excute 13:50:00.176828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:00.180818 line       494                         if (i == j):
excute 13:50:00.184778 line       496                         i_j_list.append((
excute 13:50:00.187797 line       497                             i, j,
excute 13:50:00.192754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.195746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:50:00.199735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:00.204721 line       494                         if (i == j):
excute 13:50:00.207714 line       496                         i_j_list.append((
excute 13:50:00.211703 line       497                             i, j,
excute 13:50:00.214695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.218684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:50:00.222674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:00.226663 line       494                         if (i == j):
excute 13:50:00.230652 line       496                         i_j_list.append((
excute 13:50:00.233645 line       497                             i, j,
excute 13:50:00.237634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.241622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:50:00.244615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:00.248605 line       494                         if (i == j):
excute 13:50:00.252594 line       496                         i_j_list.append((
excute 13:50:00.256583 line       497                             i, j,
excute 13:50:00.260572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.264562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:50:00.267554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:00.272540 line       494                         if (i == j):
excute 13:50:00.277527 line       496                         i_j_list.append((
excute 13:50:00.280549 line       497                             i, j,
excute 13:50:00.284509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.287532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:50:00.291490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:00.296476 line       494                         if (i == j):
excute 13:50:00.299469 line       495                             continue
excute 13:50:00.303458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:00.307447 line       494                         if (i == j):
excute 13:50:00.311437 line       496                         i_j_list.append((
excute 13:50:00.314427 line       497                             i, j,
excute 13:50:00.318418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.321411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1)]
excute 13:50:00.325399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:00.332380 line       494                         if (i == j):
excute 13:50:00.338363 line       496                         i_j_list.append((
excute 13:50:00.342355 line       497                             i, j,
excute 13:50:00.346343 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.351330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0)]
excute 13:50:00.355319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:00.359307 line       494                         if (i == j):
excute 13:50:00.363296 line       496                         i_j_list.append((
excute 13:50:00.367288 line       497                             i, j,
excute 13:50:00.370280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.374268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2)]
excute 13:50:00.377260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:00.381250 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:00.386235 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:00.390232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:00.395212 line       494                         if (i == j):
excute 13:50:00.401197 line       496                         i_j_list.append((
excute 13:50:00.405186 line       497                             i, j,
excute 13:50:00.409174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.412167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0)]
excute 13:50:00.416156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:00.420146 line       494                         if (i == j):
excute 13:50:00.425131 line       496                         i_j_list.append((
excute 13:50:00.428125 line       497                             i, j,
excute 13:50:00.432114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.435106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:50:00.443382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:00.448324 line       494                         if (i == j):
excute 13:50:00.452314 line       496                         i_j_list.append((
excute 13:50:00.456305 line       497                             i, j,
excute 13:50:00.459295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.463286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:50:00.467276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:00.471265 line       494                         if (i == j):
excute 13:50:00.475252 line       496                         i_j_list.append((
excute 13:50:00.479243 line       497                             i, j,
excute 13:50:00.482235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.486224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:50:00.489218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:00.494204 line       494                         if (i == j):
excute 13:50:00.498192 line       496                         i_j_list.append((
excute 13:50:00.502182 line       497                             i, j,
excute 13:50:00.506170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.510160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:50:00.513154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:00.517141 line       494                         if (i == j):
excute 13:50:00.521132 line       496                         i_j_list.append((
excute 13:50:00.525120 line       497                             i, j,
excute 13:50:00.528113 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.532102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:50:00.536091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:00.541079 line       494                         if (i == j):
excute 13:50:00.545068 line       496                         i_j_list.append((
excute 13:50:00.548058 line       497                             i, j,
excute 13:50:00.552049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.555039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:50:00.559029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:00.563020 line       494                         if (i == j):
excute 13:50:00.567010 line       495                             continue
excute 13:50:00.570000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:00.573990 line       494                         if (i == j):
excute 13:50:00.577980 line       496                         i_j_list.append((
excute 13:50:00.580970 line       497                             i, j,
excute 13:50:00.584960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.587952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:50:00.591940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:00.600918 line       494                         if (i == j):
excute 13:50:00.605904 line       496                         i_j_list.append((
excute 13:50:00.609892 line       497                             i, j,
excute 13:50:00.612886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.616873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2)]
excute 13:50:00.620865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:00.624854 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:00.628844 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:00.632832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:00.636822 line       494                         if (i == j):
excute 13:50:00.641807 line       496                         i_j_list.append((
excute 13:50:00.644801 line       497                             i, j,
excute 13:50:00.648790 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.652791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0)]
excute 13:50:00.655771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:00.660757 line       494                         if (i == j):
excute 13:50:00.665746 line       496                         i_j_list.append((
excute 13:50:00.668736 line       497                             i, j,
excute 13:50:00.672726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.676716 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:00.680704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:00.684694 line       494                         if (i == j):
excute 13:50:00.689680 line       496                         i_j_list.append((
excute 13:50:00.693668 line       497                             i, j,
excute 13:50:00.697659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.701648 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:00.707633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:00.711634 line       494                         if (i == j):
excute 13:50:00.715610 line       496                         i_j_list.append((
excute 13:50:00.719601 line       497                             i, j,
excute 13:50:00.723590 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.727579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:00.731569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:00.735564 line       494                         if (i == j):
excute 13:50:00.739548 line       496                         i_j_list.append((
excute 13:50:00.743537 line       497                             i, j,
excute 13:50:00.747526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.751515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:00.756502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:00.760505 line       494                         if (i == j):
excute 13:50:00.764481 line       496                         i_j_list.append((
excute 13:50:00.768470 line       497                             i, j,
excute 13:50:00.771462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.775451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:00.779440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:00.783431 line       494                         if (i == j):
excute 13:50:00.786422 line       496                         i_j_list.append((
excute 13:50:00.790412 line       497                             i, j,
excute 13:50:00.794400 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.798391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:00.801382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:00.807366 line       494                         if (i == j):
excute 13:50:00.811355 line       496                         i_j_list.append((
excute 13:50:00.815345 line       497                             i, j,
excute 13:50:00.819334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.822326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1)]
excute 13:50:00.826316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:00.830305 line       494                         if (i == j):
excute 13:50:00.834294 line       495                             continue
excute 13:50:00.838283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:00.842272 line       494                         if (i == j):
excute 13:50:00.846262 line       496                         i_j_list.append((
excute 13:50:00.850251 line       497                             i, j,
excute 13:50:00.854241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.858231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2)]
excute 13:50:00.862220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:00.866207 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:00.870198 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:00.874191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:00.878176 line       494                         if (i == j):
excute 13:50:00.882167 line       496                         i_j_list.append((
excute 13:50:00.886156 line       497                             i, j,
excute 13:50:00.891141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.894133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0)]
excute 13:50:00.898123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:00.902114 line       494                         if (i == j):
excute 13:50:00.906114 line       496                         i_j_list.append((
excute 13:50:00.910091 line       497                             i, j,
excute 13:50:00.914080 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.918070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:00.922060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:00.926051 line       494                         if (i == j):
excute 13:50:00.930040 line       496                         i_j_list.append((
excute 13:50:00.936023 line       497                             i, j,
excute 13:50:00.939014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.943003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:00.946993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:00.951977 line       494                         if (i == j):
excute 13:50:00.956967 line       496                         i_j_list.append((
excute 13:50:00.960955 line       497                             i, j,
excute 13:50:00.966955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.971925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:00.974917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:00.978907 line       494                         if (i == j):
excute 13:50:00.983899 line       496                         i_j_list.append((
excute 13:50:00.987884 line       497                             i, j,
excute 13:50:00.990874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:00.994866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:00.997856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:01.002845 line       494                         if (i == j):
excute 13:50:01.006832 line       496                         i_j_list.append((
excute 13:50:01.011821 line       497                             i, j,
excute 13:50:01.015808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:01.018800 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:01.022790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:01.026780 line       494                         if (i == j):
excute 13:50:01.030768 line       496                         i_j_list.append((
excute 13:50:01.033791 line       497                             i, j,
excute 13:50:01.037780 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:01.040773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:01.044763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:01.048721 line       494                         if (i == j):
excute 13:50:01.052710 line       496                         i_j_list.append((
excute 13:50:01.056730 line       497                             i, j,
excute 13:50:01.059722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:01.063679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 1)]
excute 13:50:01.066703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:01.070660 line       494                         if (i == j):
excute 13:50:01.074682 line       496                         i_j_list.append((
excute 13:50:01.078671 line       497                             i, j,
excute 13:50:01.081664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:01.085653 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 1), (1, 8, 3, 0), (1, 9, 3, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 0), (2, 9, 2, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 1), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 7, 5, 1), (4, 8, 5, 0), (4, 9, 5, 2), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 0), (5, 9, 2, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 1), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 1), (9, 8, 2, 0)]
excute 13:50:01.088644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:01.092636 line       494                         if (i == j):
excute 13:50:01.096624 line       495                             continue
excute 13:50:01.100614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:01.103608 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:01.107594 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 8, 0, 0), (6, 7, 0, 1), (6, 9, 0, 2), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 8, 1, 0), (0, 7, 1, 1), (0, 9, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 8, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 8, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 8, 2, 0), (2, 7, 2, 1), (5, 7, 2, 1), (9, 7, 2, 1), (2, 9, 2, 2), (5, 9, 2, 2), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 8, 3, 0), (1, 7, 3, 1), (1, 9, 3, 2), (4, 0, 5, 0), (4, 1, 5, 0), (4, 2, 5, 0), (4, 3, 5, 0), (4, 5, 5, 0), (4, 6, 5, 0), (4, 8, 5, 0), (4, 7, 5, 1), (4, 9, 5, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 8, 6, 0), (3, 7, 6, 1), (3, 9, 6, 2)]
excute 13:50:01.111553 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:01.116541 line       505                     if (self.RELOCATE):
excute 13:50:01.119531 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:01.123521 line       505                     if (self.RELOCATE):
excute 13:50:01.128507 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:01.131499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:50:01.135489 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:01.140477 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:01.144466 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.148454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:50:01.152473 line       556                     i = i_j[0]
excute 13:50:01.156431 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:01.159458 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.163446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:50:01.169038 line       556                     i = i_j[0]
excute 13:50:01.173041 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:01.177020 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.182007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:50:01.185999 line       556                     i = i_j[0]
excute 13:50:01.189987 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:01.193976 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.198961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:50:01.202950 line       556                     i = i_j[0]
excute 13:50:01.207936 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:01.212923 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.220902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:50:01.226885 line       556                     i = i_j[0]
excute 13:50:01.234865 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:01.241845 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.247832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:50:01.254813 line       556                     i = i_j[0]
excute 13:50:01.259832 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:01.263789 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.271766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:50:01.275756 line       556                     i = i_j[0]
excute 13:50:01.284733 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:01.289718 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.294705 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 2)
excute 13:50:01.300687 line       556                     i = i_j[0]
excute 13:50:01.309664 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:01.312655 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.317644 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:01.322630 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:01.326621 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:01.338588 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.347563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:01.356540 line       556                     i = i_j[0]
excute 13:50:01.367511 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:01.374491 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.383468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:01.391446 line       556                     i = i_j[0]
excute 13:50:01.397432 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:01.401427 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.407404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:01.414385 line       556                     i = i_j[0]
excute 13:50:01.419373 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:01.426359 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.431340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:01.435328 line       556                     i = i_j[0]
excute 13:50:01.440316 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:01.448294 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.452285 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:01.457270 line       556                     i = i_j[0]
excute 13:50:01.462258 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:01.466246 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.471233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:01.480210 line       556                     i = i_j[0]
excute 13:50:01.488188 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:01.498161 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.506139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 1)
excute 13:50:01.515115 line       556                     i = i_j[0]
excute 13:50:01.523100 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:01.532070 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.538054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 2)
excute 13:50:01.546032 line       556                     i = i_j[0]
excute 13:50:01.553015 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:01.560993 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.569968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:50:01.577947 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:01.583932 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:01.589916 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.596899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:50:01.603878 line       556                     i = i_j[0]
excute 13:50:01.609862 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:01.614848 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.623826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:50:01.629810 line       556                     i = i_j[0]
excute 13:50:01.637788 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:01.645766 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.653745 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:50:01.660726 line       556                     i = i_j[0]
excute 13:50:01.668705 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:01.674688 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.681671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:50:01.689648 line       556                     i = i_j[0]
excute 13:50:01.697627 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:01.705606 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.714582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:50:01.720568 line       556                     i = i_j[0]
excute 13:50:01.729543 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:01.737522 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.744502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:50:01.749489 line       556                     i = i_j[0]
excute 13:50:01.758465 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:01.766452 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.775419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 1)
excute 13:50:01.782402 line       556                     i = i_j[0]
excute 13:50:01.788385 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:01.796364 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.808332 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 162
excute 13:50:01.815313 line       560                         if (t_tmp > self.TIME):
excute 13:50:01.821297 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:01.825287 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:01.829276 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 190
excute 13:50:01.833265 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:01.838251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 2)
excute 13:50:01.842240 line       556                     i = i_j[0]
excute 13:50:01.846229 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:01.849221 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.853210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:01.857200 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:01.861189 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:01.865180 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.869168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:50:01.872160 line       556                     i = i_j[0]
excute 13:50:01.876149 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:01.880138 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.884129 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:01.891111 line       556                     i = i_j[0]
excute 13:50:01.895100 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:01.898091 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.902080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:50:01.906071 line       556                     i = i_j[0]
excute 13:50:01.909062 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:01.913051 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.917041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:01.920032 line       556                     i = i_j[0]
excute 13:50:01.924022 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:01.928011 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.932001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:01.934992 line       556                     i = i_j[0]
excute 13:50:01.942972 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:01.946961 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.951948 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:01.954939 line       556                     i = i_j[0]
excute 13:50:01.959926 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:01.962917 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.966908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 1)
excute 13:50:01.970896 line       556                     i = i_j[0]
excute 13:50:01.974886 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:01.978875 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.982865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 2)
excute 13:50:01.985857 line       556                     i = i_j[0]
excute 13:50:01.989881 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:01.993867 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:01.997826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:50:02.000847 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:02.004837 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:02.009793 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.013782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:50:02.017772 line       556                     i = i_j[0]
excute 13:50:02.021760 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:02.024752 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.028742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:50:02.032730 line       556                     i = i_j[0]
excute 13:50:02.036722 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:02.039743 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.045697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:50:02.049686 line       556                     i = i_j[0]
excute 13:50:02.053675 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:02.056669 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.061654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:50:02.065644 line       556                     i = i_j[0]
excute 13:50:02.069635 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:02.072626 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.078609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:50:02.082631 line       556                     i = i_j[0]
excute 13:50:02.086620 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:02.090610 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.094567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:50:02.097590 line       556                     i = i_j[0]
excute 13:50:02.101582 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:02.105569 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.109560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:02.113548 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:02.117540 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:02.121526 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.125484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:02.128507 line       556                     i = i_j[0]
excute 13:50:02.132490 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:02.136485 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.140444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:02.143466 line       556                     i = i_j[0]
excute 13:50:02.149455 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:02.152443 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.157400 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:02.161389 line       556                     i = i_j[0]
excute 13:50:02.165376 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:02.169365 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.173358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:02.177357 line       556                     i = i_j[0]
excute 13:50:02.181335 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:02.185325 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.189313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:02.193302 line       556                     i = i_j[0]
excute 13:50:02.197292 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:02.201284 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.204305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:02.208294 line       556                     i = i_j[0]
excute 13:50:02.213270 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:02.217238 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.221227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:02.225218 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:02.230217 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:02.234192 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.238183 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:02.241174 line       556                     i = i_j[0]
excute 13:50:02.245163 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:02.250153 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.255140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:02.259128 line       556                     i = i_j[0]
excute 13:50:02.263117 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:02.267106 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.271096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:02.275085 line       556                     i = i_j[0]
excute 13:50:02.281070 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:02.284061 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.289049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:02.292038 line       556                     i = i_j[0]
excute 13:50:02.297025 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:02.308047 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.312041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:02.315063 line       556                     i = i_j[0]
excute 13:50:02.319053 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:02.323042 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.330991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:02.338970 line       556                     i = i_j[0]
excute 13:50:02.342959 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:02.346948 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.354926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:02.358914 line       556                     i = i_j[0]
excute 13:50:02.362936 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:02.366894 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.370883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:50:02.373874 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:02.377864 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:02.382850 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.387837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 1)
excute 13:50:02.392860 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:02.396818 line       557                     j = i_j[1]
excute 13:50:02.401801 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.404793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 1)
excute 13:50:02.408782 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:02.413774 line       557                     j = i_j[1]
excute 13:50:02.417759 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.421748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 2)
excute 13:50:02.425737 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:02.430724 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:02.434714 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.438703 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 157
excute 13:50:02.442690 line       560                         if (t_tmp > self.TIME):
excute 13:50:02.446680 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:02.454660 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 173
excute 13:50:02.458647 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:02.466627 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:02.470617 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 2)
excute 13:50:02.474605 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:02.478596 line       557                     j = i_j[1]
excute 13:50:02.482585 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.485576 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:50:02.489566 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:02.493556 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:02.497545 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.501536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:50:02.505524 line       556                     i = i_j[0]
excute 13:50:02.510511 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:02.514499 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.518522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:50:02.521511 line       556                     i = i_j[0]
excute 13:50:02.525470 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:02.529491 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.533448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:50:02.537437 line       556                     i = i_j[0]
excute 13:50:02.541427 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:02.545416 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.551401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:50:02.558382 line       556                     i = i_j[0]
excute 13:50:02.563369 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:02.566392 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.570349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:50:02.573374 line       556                     i = i_j[0]
excute 13:50:02.578329 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:02.581351 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.585310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:50:02.589298 line       556                     i = i_j[0]
excute 13:50:02.593288 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:02.596280 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.600269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 1)
excute 13:50:02.604261 line       556                     i = i_j[0]
excute 13:50:02.608248 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:02.612239 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.617225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 2)
excute 13:50:02.620218 line       556                     i = i_j[0]
excute 13:50:02.624207 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:02.628196 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.633184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 5, 0)
excute 13:50:02.637172 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:02.642158 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:02.646147 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.650136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 5, 0)
excute 13:50:02.654127 line       556                     i = i_j[0]
excute 13:50:02.659113 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:02.663134 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.667124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 5, 0)
excute 13:50:02.671082 line       556                     i = i_j[0]
excute 13:50:02.676069 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:02.680057 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.684047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 5, 0)
excute 13:50:02.688036 line       556                     i = i_j[0]
excute 13:50:02.693022 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:02.697012 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.701997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 5, 0)
excute 13:50:02.704991 line       556                     i = i_j[0]
excute 13:50:02.709979 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:02.713968 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.717956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 5, 0)
excute 13:50:02.721946 line       556                     i = i_j[0]
excute 13:50:02.725934 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:02.729922 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.733911 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 5, 0)
excute 13:50:02.737901 line       556                     i = i_j[0]
excute 13:50:02.741890 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:02.744882 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.748871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 5, 1)
excute 13:50:02.752861 line       556                     i = i_j[0]
excute 13:50:02.756859 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:02.760841 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.765827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 5, 2)
excute 13:50:02.768819 line       556                     i = i_j[0]
excute 13:50:02.772809 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:02.776798 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.780788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:50:02.783811 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:02.787800 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:02.791789 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.795783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:50:02.799768 line       556                     i = i_j[0]
excute 13:50:02.803726 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:02.806752 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.810739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 0)
excute 13:50:02.814728 line       556                     i = i_j[0]
excute 13:50:02.818719 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:02.821709 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.825698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:50:02.829688 line       556                     i = i_j[0]
excute 13:50:02.833647 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:02.836669 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.840658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:50:02.844616 line       556                     i = i_j[0]
excute 13:50:02.848636 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:02.852626 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.856616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:02.860605 line       556                     i = i_j[0]
excute 13:50:02.864565 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:02.868584 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.872572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:02.876562 line       556                     i = i_j[0]
excute 13:50:02.880553 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:02.884509 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.888499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 1)
excute 13:50:02.892521 line       556                     i = i_j[0]
excute 13:50:02.896477 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:02.899500 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.903491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 2)
excute 13:50:02.907479 line       556                     i = i_j[0]
excute 13:50:02.912499 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:02.917423 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:02.921411 line       555                 for i_j in i_j_list:
excute 13:50:02.925402 line       581             self.write_matrix(
excute 13:50:02.929390 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:02.932383 line       583                 result_file_path,
excute 13:50:02.936372 line       584                 mode='a'
excute 13:50:02.943354 line       488         for t in time_steps:
excute Modified var:.. t = 152
excute 13:50:02.948338 line       489             if (t != self.TIME + 1):
excute 13:50:02.954323 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:02.959309 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:02.963300 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:02.968286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:02.975266 line       494                         if (i == j):
excute 13:50:02.979256 line       495                             continue
excute 13:50:02.983245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:02.987236 line       494                         if (i == j):
excute 13:50:02.990227 line       496                         i_j_list.append((
excute 13:50:02.996210 line       497                             i, j,
excute 13:50:03.000201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.003192 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:03.011182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:03.019152 line       494                         if (i == j):
excute 13:50:03.024139 line       496                         i_j_list.append((
excute 13:50:03.027128 line       497                             i, j,
excute 13:50:03.031120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.036105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:50:03.039096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:03.045081 line       494                         if (i == j):
excute 13:50:03.049070 line       496                         i_j_list.append((
excute 13:50:03.055054 line       497                             i, j,
excute 13:50:03.059046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.062037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:50:03.066025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:03.070015 line       494                         if (i == j):
excute 13:50:03.076996 line       496                         i_j_list.append((
excute 13:50:03.084984 line       497                             i, j,
excute 13:50:03.088963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.091956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:50:03.094947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:03.099935 line       494                         if (i == j):
excute 13:50:03.103925 line       496                         i_j_list.append((
excute 13:50:03.107911 line       497                             i, j,
excute 13:50:03.110904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.114894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:50:03.117885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:03.121875 line       494                         if (i == j):
excute 13:50:03.125864 line       496                         i_j_list.append((
excute 13:50:03.128856 line       497                             i, j,
excute 13:50:03.132847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.135837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:03.139826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:03.143816 line       494                         if (i == j):
excute 13:50:03.147805 line       496                         i_j_list.append((
excute 13:50:03.150797 line       497                             i, j,
excute 13:50:03.153790 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.157779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:50:03.160771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:03.166754 line       494                         if (i == j):
excute 13:50:03.170745 line       496                         i_j_list.append((
excute 13:50:03.173736 line       497                             i, j,
excute 13:50:03.177727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.181714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:50:03.184706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:03.188696 line       494                         if (i == j):
excute 13:50:03.192685 line       496                         i_j_list.append((
excute 13:50:03.195677 line       497                             i, j,
excute 13:50:03.199670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.202659 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1)]
excute 13:50:03.205651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:03.209640 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:03.212632 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:03.216621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:03.220612 line       494                         if (i == j):
excute 13:50:03.224601 line       496                         i_j_list.append((
excute 13:50:03.227592 line       497                             i, j,
excute 13:50:03.231582 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.236569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0)]
excute 13:50:03.241555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:03.245544 line       494                         if (i == j):
excute 13:50:03.249534 line       495                             continue
excute 13:50:03.252525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:03.256515 line       494                         if (i == j):
excute 13:50:03.260505 line       496                         i_j_list.append((
excute 13:50:03.263496 line       497                             i, j,
excute 13:50:03.267486 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.270510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0)]
excute 13:50:03.274467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:03.278458 line       494                         if (i == j):
excute 13:50:03.283445 line       496                         i_j_list.append((
excute 13:50:03.286436 line       497                             i, j,
excute 13:50:03.290425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.294415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0)]
excute 13:50:03.298405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:03.302393 line       494                         if (i == j):
excute 13:50:03.307380 line       496                         i_j_list.append((
excute 13:50:03.311370 line       497                             i, j,
excute 13:50:03.315359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.319348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0)]
excute 13:50:03.323340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:03.328324 line       494                         if (i == j):
excute 13:50:03.337300 line       496                         i_j_list.append((
excute 13:50:03.341288 line       497                             i, j,
excute 13:50:03.344280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.347272 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0)]
excute 13:50:03.352260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:03.357246 line       494                         if (i == j):
excute 13:50:03.361238 line       496                         i_j_list.append((
excute 13:50:03.364229 line       497                             i, j,
excute 13:50:03.369214 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.372207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:50:03.376197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:03.381183 line       494                         if (i == j):
excute 13:50:03.388164 line       496                         i_j_list.append((
excute 13:50:03.392152 line       497                             i, j,
excute 13:50:03.396144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.400131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:50:03.406117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:03.411103 line       494                         if (i == j):
excute 13:50:03.416088 line       496                         i_j_list.append((
excute 13:50:03.420078 line       497                             i, j,
excute 13:50:03.423070 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.427060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:50:03.430052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:03.434042 line       494                         if (i == j):
excute 13:50:03.438030 line       496                         i_j_list.append((
excute 13:50:03.442021 line       497                             i, j,
excute 13:50:03.446010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.449999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1)]
excute 13:50:03.453988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:03.457979 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:03.461967 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:03.465957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:03.469946 line       494                         if (i == j):
excute 13:50:03.473934 line       496                         i_j_list.append((
excute 13:50:03.478921 line       497                             i, j,
excute 13:50:03.481911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.489891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0)]
excute 13:50:03.492882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:03.496874 line       494                         if (i == j):
excute 13:50:03.500862 line       496                         i_j_list.append((
excute 13:50:03.503854 line       497                             i, j,
excute 13:50:03.507844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.511833 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:50:03.514824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:03.518814 line       494                         if (i == j):
excute 13:50:03.522803 line       495                             continue
excute 13:50:03.525794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:03.528787 line       494                         if (i == j):
excute 13:50:03.532776 line       496                         i_j_list.append((
excute 13:50:03.535768 line       497                             i, j,
excute 13:50:03.539757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.542750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:50:03.546740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:03.549732 line       494                         if (i == j):
excute 13:50:03.554719 line       496                         i_j_list.append((
excute 13:50:03.557741 line       497                             i, j,
excute 13:50:03.561731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.564722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:50:03.568680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:03.572703 line       494                         if (i == j):
excute 13:50:03.575693 line       496                         i_j_list.append((
excute 13:50:03.579651 line       497                             i, j,
excute 13:50:03.583640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.587631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:50:03.591620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:03.594643 line       494                         if (i == j):
excute 13:50:03.598631 line       496                         i_j_list.append((
excute 13:50:03.602621 line       497                             i, j,
excute 13:50:03.605617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.609602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:50:03.612594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:03.616586 line       494                         if (i == j):
excute 13:50:03.620541 line       496                         i_j_list.append((
excute 13:50:03.624530 line       497                             i, j,
excute 13:50:03.627523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.630515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:50:03.635506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:03.638525 line       494                         if (i == j):
excute 13:50:03.642516 line       496                         i_j_list.append((
excute 13:50:03.646504 line       497                             i, j,
excute 13:50:03.649499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.653478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:50:03.656479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:03.661435 line       494                         if (i == j):
excute 13:50:03.665423 line       496                         i_j_list.append((
excute 13:50:03.668414 line       497                             i, j,
excute 13:50:03.672403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.676392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1)]
excute 13:50:03.679386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:03.684374 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:03.688361 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:03.694344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:03.697338 line       494                         if (i == j):
excute 13:50:03.701325 line       496                         i_j_list.append((
excute 13:50:03.704318 line       497                             i, j,
excute 13:50:03.708306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.712296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0)]
excute 13:50:03.715321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:03.720277 line       494                         if (i == j):
excute 13:50:03.724297 line       496                         i_j_list.append((
excute 13:50:03.727288 line       497                             i, j,
excute 13:50:03.731279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.734269 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:50:03.738228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:03.741251 line       494                         if (i == j):
excute 13:50:03.745240 line       496                         i_j_list.append((
excute 13:50:03.749229 line       497                             i, j,
excute 13:50:03.752222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.756211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0)]
excute 13:50:03.760169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:03.764158 line       494                         if (i == j):
excute 13:50:03.767149 line       495                             continue
excute 13:50:03.771138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:03.774131 line       494                         if (i == j):
excute 13:50:03.778121 line       496                         i_j_list.append((
excute 13:50:03.783230 line       497                             i, j,
excute 13:50:03.787126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.790119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0)]
excute 13:50:03.795107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:03.799095 line       494                         if (i == j):
excute 13:50:03.802086 line       496                         i_j_list.append((
excute 13:50:03.806075 line       497                             i, j,
excute 13:50:03.809102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.813057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:50:03.816081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:03.820040 line       494                         if (i == j):
excute 13:50:03.824030 line       496                         i_j_list.append((
excute 13:50:03.828019 line       497                             i, j,
excute 13:50:03.832009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.835001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:50:03.838989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:03.843977 line       494                         if (i == j):
excute 13:50:03.847971 line       496                         i_j_list.append((
excute 13:50:03.850958 line       497                             i, j,
excute 13:50:03.854947 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.860929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:50:03.864920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:03.872898 line       494                         if (i == j):
excute 13:50:03.876888 line       496                         i_j_list.append((
excute 13:50:03.879880 line       497                             i, j,
excute 13:50:03.883900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.886892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:50:03.890881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:03.894872 line       494                         if (i == j):
excute 13:50:03.899828 line       496                         i_j_list.append((
excute 13:50:03.902817 line       497                             i, j,
excute 13:50:03.909799 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.912791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1)]
excute 13:50:03.916780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:03.920772 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:03.923793 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:03.927784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:03.931740 line       494                         if (i == j):
excute 13:50:03.934767 line       496                         i_j_list.append((
excute 13:50:03.938753 line       497                             i, j,
excute 13:50:03.941748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.945736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0)]
excute 13:50:03.950690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:03.956673 line       494                         if (i == j):
excute 13:50:03.961661 line       496                         i_j_list.append((
excute 13:50:03.967645 line       497                             i, j,
excute 13:50:03.971647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.974627 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:03.978616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:03.983605 line       494                         if (i == j):
excute 13:50:03.987598 line       496                         i_j_list.append((
excute 13:50:03.990583 line       497                             i, j,
excute 13:50:03.994573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:03.998562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:50:04.002551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:04.006540 line       494                         if (i == j):
excute 13:50:04.010529 line       496                         i_j_list.append((
excute 13:50:04.014518 line       497                             i, j,
excute 13:50:04.018508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.021500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:50:04.024492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:04.028481 line       494                         if (i == j):
excute 13:50:04.032472 line       495                             continue
excute 13:50:04.036461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:04.039452 line       494                         if (i == j):
excute 13:50:04.043444 line       496                         i_j_list.append((
excute 13:50:04.046435 line       497                             i, j,
excute 13:50:04.050423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.053415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:04.057405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:04.061395 line       494                         if (i == j):
excute 13:50:04.065417 line       496                         i_j_list.append((
excute 13:50:04.068406 line       497                             i, j,
excute 13:50:04.072399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.075389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:04.079378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:04.083336 line       494                         if (i == j):
excute 13:50:04.088325 line       496                         i_j_list.append((
excute 13:50:04.093308 line       497                             i, j,
excute 13:50:04.097298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.101291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:04.105278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:04.109267 line       494                         if (i == j):
excute 13:50:04.114253 line       496                         i_j_list.append((
excute 13:50:04.117246 line       497                             i, j,
excute 13:50:04.121235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.125225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:04.128216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:04.133203 line       494                         if (i == j):
excute 13:50:04.137193 line       496                         i_j_list.append((
excute 13:50:04.141182 line       497                             i, j,
excute 13:50:04.144206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.147196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1)]
excute 13:50:04.151186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:04.155176 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:04.159164 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:04.163166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:04.166145 line       494                         if (i == j):
excute 13:50:04.170134 line       496                         i_j_list.append((
excute 13:50:04.174117 line       497                             i, j,
excute 13:50:04.177117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.181108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0)]
excute 13:50:04.184100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:04.188055 line       494                         if (i == j):
excute 13:50:04.192062 line       496                         i_j_list.append((
excute 13:50:04.195068 line       497                             i, j,
excute 13:50:04.200025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.204013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:04.208036 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:04.211993 line       494                         if (i == j):
excute 13:50:04.215982 line       496                         i_j_list.append((
excute 13:50:04.219004 line       497                             i, j,
excute 13:50:04.222972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.225986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:04.228979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:04.232966 line       494                         if (i == j):
excute 13:50:04.236959 line       496                         i_j_list.append((
excute 13:50:04.240945 line       497                             i, j,
excute 13:50:04.243937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.247929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:04.250919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:04.254908 line       494                         if (i == j):
excute 13:50:04.258897 line       496                         i_j_list.append((
excute 13:50:04.262887 line       497                             i, j,
excute 13:50:04.265878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.269868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:04.272860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:04.277817 line       494                         if (i == j):
excute 13:50:04.282805 line       495                             continue
excute 13:50:04.285795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:04.289785 line       494                         if (i == j):
excute 13:50:04.294773 line       496                         i_j_list.append((
excute 13:50:04.298759 line       497                             i, j,
excute 13:50:04.301753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.306738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:04.309729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:04.313718 line       494                         if (i == j):
excute 13:50:04.317708 line       496                         i_j_list.append((
excute 13:50:04.320700 line       497                             i, j,
excute 13:50:04.324690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.333676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:04.340681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:04.344649 line       494                         if (i == j):
excute 13:50:04.348626 line       496                         i_j_list.append((
excute 13:50:04.355610 line       497                             i, j,
excute 13:50:04.359602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.362590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:04.366579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:04.371564 line       494                         if (i == j):
excute 13:50:04.375554 line       496                         i_j_list.append((
excute 13:50:04.379542 line       497                             i, j,
excute 13:50:04.382535 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.387524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1)]
excute 13:50:04.391511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:04.395503 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:04.399490 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:04.403517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:04.407470 line       494                         if (i == j):
excute 13:50:04.412491 line       496                         i_j_list.append((
excute 13:50:04.418443 line       497                             i, j,
excute 13:50:04.422461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.426450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0)]
excute 13:50:04.429443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:04.433434 line       494                         if (i == j):
excute 13:50:04.437420 line       496                         i_j_list.append((
excute 13:50:04.441409 line       497                             i, j,
excute 13:50:04.444404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.449357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:50:04.453345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:04.458334 line       494                         if (i == j):
excute 13:50:04.462330 line       496                         i_j_list.append((
excute 13:50:04.466313 line       497                             i, j,
excute 13:50:04.470302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.474292 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:50:04.478280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:04.482283 line       494                         if (i == j):
excute 13:50:04.485262 line       496                         i_j_list.append((
excute 13:50:04.489251 line       497                             i, j,
excute 13:50:04.493241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.497230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:50:04.501219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:04.506205 line       494                         if (i == j):
excute 13:50:04.511193 line       496                         i_j_list.append((
excute 13:50:04.515212 line       497                             i, j,
excute 13:50:04.518205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.522193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:50:04.525186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:04.531140 line       494                         if (i == j):
excute 13:50:04.535128 line       496                         i_j_list.append((
excute 13:50:04.538119 line       497                             i, j,
excute 13:50:04.542108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.546099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:50:04.549089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:04.553080 line       494                         if (i == j):
excute 13:50:04.557070 line       495                             continue
excute 13:50:04.561058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:04.564049 line       494                         if (i == j):
excute 13:50:04.568039 line       496                         i_j_list.append((
excute 13:50:04.571031 line       497                             i, j,
excute 13:50:04.575020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.578044 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:50:04.582033 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:04.586024 line       494                         if (i == j):
excute 13:50:04.589982 line       496                         i_j_list.append((
excute 13:50:04.593004 line       497                             i, j,
excute 13:50:04.596993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.599986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:50:04.603945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:04.607935 line       494                         if (i == j):
excute 13:50:04.611923 line       496                         i_j_list.append((
excute 13:50:04.618905 line       497                             i, j,
excute 13:50:04.621894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.624887 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1)]
excute 13:50:04.628876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:04.632866 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:04.635859 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:04.639846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:04.643837 line       494                         if (i == j):
excute 13:50:04.647826 line       496                         i_j_list.append((
excute 13:50:04.650818 line       497                             i, j,
excute 13:50:04.655807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.659799 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0)]
excute 13:50:04.666777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:04.672760 line       494                         if (i == j):
excute 13:50:04.677746 line       496                         i_j_list.append((
excute 13:50:04.681737 line       497                             i, j,
excute 13:50:04.685724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.689714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:50:04.692706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:04.697694 line       494                         if (i == j):
excute 13:50:04.701682 line       496                         i_j_list.append((
excute 13:50:04.704674 line       497                             i, j,
excute 13:50:04.708664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.712662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:50:04.715644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:04.721629 line       494                         if (i == j):
excute 13:50:04.725618 line       496                         i_j_list.append((
excute 13:50:04.729607 line       497                             i, j,
excute 13:50:04.732599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.735591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:50:04.739580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:04.743571 line       494                         if (i == j):
excute 13:50:04.747559 line       496                         i_j_list.append((
excute 13:50:04.750552 line       497                             i, j,
excute 13:50:04.754541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.762519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:50:04.765511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:04.769502 line       494                         if (i == j):
excute 13:50:04.773490 line       496                         i_j_list.append((
excute 13:50:04.777512 line       497                             i, j,
excute 13:50:04.781501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.784493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:50:04.788451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:04.792473 line       494                         if (i == j):
excute 13:50:04.796431 line       496                         i_j_list.append((
excute 13:50:04.800418 line       497                             i, j,
excute 13:50:04.803411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.807401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:50:04.811390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:04.815380 line       494                         if (i == j):
excute 13:50:04.820367 line       495                             continue
excute 13:50:04.825354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:04.828345 line       494                         if (i == j):
excute 13:50:04.834328 line       496                         i_j_list.append((
excute 13:50:04.838318 line       497                             i, j,
excute 13:50:04.841310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.845299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:50:04.849289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:04.854277 line       494                         if (i == j):
excute 13:50:04.858289 line       496                         i_j_list.append((
excute 13:50:04.862252 line       497                             i, j,
excute 13:50:04.865278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.869235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1)]
excute 13:50:04.872225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:04.876215 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:04.879207 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:04.883196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:04.887185 line       494                         if (i == j):
excute 13:50:04.891176 line       496                         i_j_list.append((
excute 13:50:04.894168 line       497                             i, j,
excute 13:50:04.898157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.901149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0)]
excute 13:50:04.905137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:04.909127 line       494                         if (i == j):
excute 13:50:04.913117 line       496                         i_j_list.append((
excute 13:50:04.917108 line       497                             i, j,
excute 13:50:04.923093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.927112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:04.931102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:04.935060 line       494                         if (i == j):
excute 13:50:04.939048 line       496                         i_j_list.append((
excute 13:50:04.942073 line       497                             i, j,
excute 13:50:04.946028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.952013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:04.955039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:04.959026 line       494                         if (i == j):
excute 13:50:04.963018 line       496                         i_j_list.append((
excute 13:50:04.967006 line       497                             i, j,
excute 13:50:04.969997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.973988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:04.977944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:04.981969 line       494                         if (i == j):
excute 13:50:04.985923 line       496                         i_j_list.append((
excute 13:50:04.988914 line       497                             i, j,
excute 13:50:04.992904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:04.995895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:04.999898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:05.003876 line       494                         if (i == j):
excute 13:50:05.006897 line       496                         i_j_list.append((
excute 13:50:05.011859 line       497                             i, j,
excute 13:50:05.014876 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.018835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:05.021860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:05.025816 line       494                         if (i == j):
excute 13:50:05.030804 line       496                         i_j_list.append((
excute 13:50:05.033825 line       497                             i, j,
excute 13:50:05.037819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.040806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:05.044766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:05.049754 line       494                         if (i == j):
excute 13:50:05.053741 line       496                         i_j_list.append((
excute 13:50:05.057732 line       497                             i, j,
excute 13:50:05.061721 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.065709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:05.068702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:05.073688 line       494                         if (i == j):
excute 13:50:05.077677 line       495                             continue
excute 13:50:05.081677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:05.084660 line       494                         if (i == j):
excute 13:50:05.088649 line       496                         i_j_list.append((
excute 13:50:05.092638 line       497                             i, j,
excute 13:50:05.096627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.100618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1)]
excute 13:50:05.104607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:05.108595 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:05.111588 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:05.115583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:05.119573 line       494                         if (i == j):
excute 13:50:05.123556 line       496                         i_j_list.append((
excute 13:50:05.127545 line       497                             i, j,
excute 13:50:05.132531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.135553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0)]
excute 13:50:05.139544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:05.143503 line       494                         if (i == j):
excute 13:50:05.147490 line       496                         i_j_list.append((
excute 13:50:05.151511 line       497                             i, j,
excute 13:50:05.155483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.158493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:05.162472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:05.166439 line       494                         if (i == j):
excute 13:50:05.170430 line       496                         i_j_list.append((
excute 13:50:05.173455 line       497                             i, j,
excute 13:50:05.177411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.180433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:05.184423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:05.188382 line       494                         if (i == j):
excute 13:50:05.192371 line       496                         i_j_list.append((
excute 13:50:05.195393 line       497                             i, j,
excute 13:50:05.199384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.202378 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:05.206364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:05.210323 line       494                         if (i == j):
excute 13:50:05.214345 line       496                         i_j_list.append((
excute 13:50:05.217305 line       497                             i, j,
excute 13:50:05.221328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.225284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:05.228307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:05.233262 line       494                         if (i == j):
excute 13:50:05.237251 line       496                         i_j_list.append((
excute 13:50:05.241271 line       497                             i, j,
excute 13:50:05.244263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.248253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:05.251244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:05.256201 line       494                         if (i == j):
excute 13:50:05.260190 line       496                         i_j_list.append((
excute 13:50:05.263213 line       497                             i, j,
excute 13:50:05.267202 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.271192 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:05.274186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:05.279147 line       494                         if (i == j):
excute 13:50:05.283162 line       496                         i_j_list.append((
excute 13:50:05.286151 line       497                             i, j,
excute 13:50:05.290144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.294098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:05.297122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:05.301114 line       494                         if (i == j):
excute 13:50:05.305078 line       496                         i_j_list.append((
excute 13:50:05.309058 line       497                             i, j,
excute 13:50:05.312052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:05.316041 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:05.320031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:05.324021 line       494                         if (i == j):
excute 13:50:05.331997 line       495                             continue
excute 13:50:05.341970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:05.344962 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:05.348951 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 9, 2, 1), (5, 9, 2, 1), (1, 0, 3, 0), (1, 2, 3, 0), (1, 3, 3, 0), (1, 4, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (1, 9, 3, 1), (4, 9, 3, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1)]
excute 13:50:05.353941 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:05.358928 line       505                     if (self.RELOCATE):
excute 13:50:05.362924 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:05.366905 line       505                     if (self.RELOCATE):
excute 13:50:05.371891 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:05.375881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:50:05.379871 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:05.384856 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:05.388844 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.392834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:50:05.397822 line       556                     i = i_j[0]
excute 13:50:05.401813 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:05.405799 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.409796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:50:05.412782 line       556                     i = i_j[0]
excute 13:50:05.417782 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:05.421759 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.425747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:50:05.432728 line       556                     i = i_j[0]
excute 13:50:05.436719 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:05.441705 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.445693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:50:05.450680 line       556                     i = i_j[0]
excute 13:50:05.457661 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:05.462649 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.469629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:50:05.473620 line       556                     i = i_j[0]
excute 13:50:05.477610 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:05.480600 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.485588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:50:05.489576 line       556                     i = i_j[0]
excute 13:50:05.492568 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:05.496558 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.500547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:50:05.504537 line       556                     i = i_j[0]
excute 13:50:05.508525 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:05.512522 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.516506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 1)
excute 13:50:05.519496 line       556                     i = i_j[0]
excute 13:50:05.523486 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:05.527476 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.531463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:05.534456 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:05.539442 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:05.544433 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.549415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:05.553404 line       556                     i = i_j[0]
excute 13:50:05.558392 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:05.561385 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.566373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:05.570362 line       556                     i = i_j[0]
excute 13:50:05.574383 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:05.577347 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.581362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:05.585355 line       556                     i = i_j[0]
excute 13:50:05.589342 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:05.592333 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.596326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:05.600311 line       556                     i = i_j[0]
excute 13:50:05.604270 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:05.607293 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.611281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:05.615271 line       556                     i = i_j[0]
excute 13:50:05.619231 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:05.623219 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.626210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:05.630199 line       556                     i = i_j[0]
excute 13:50:05.634190 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:05.638210 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.642169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:05.647157 line       556                     i = i_j[0]
excute 13:50:05.651178 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:05.655134 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.659122 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 1)
excute 13:50:05.662145 line       556                     i = i_j[0]
excute 13:50:05.666105 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:05.670094 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.674083 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 165
excute 13:50:05.677105 line       560                         if (t_tmp > self.TIME):
excute 13:50:05.682064 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:05.686052 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:05.690040 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:05.693033 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:05.698020 line       569                                     available_vhecles[i][t],
excute 13:50:05.702009 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:05.705999 line       571                                     self.S_capacities[j],
excute 13:50:05.709988 line       572                                     demands[t][i][j],
excute 13:50:05.713978 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 4
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 152
calc_contract     13:50:05.717967 call       352     def caluculate_contract(
calc_contract     13:50:05.720973 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:05.721957 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:05.722952 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:05.722952 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:05.723952 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:50:05.723952 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:50:05.724949 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:05.725947 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute 13:50:05.726943 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 192
excute 13:50:05.731931 line       576                                 rse += rse_tmp
excute 13:50:05.735919 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 8
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 152
move_cars     Starting var:.. t_tmp = 165
move_cars     Starting var:.. can_contract = -1
move_cars     13:50:05.739908 call       388     def move_cars(
move_cars     13:50:05.744895 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:05.745924 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     13:50:05.747887 line       399         return available_vhecles
move_cars     13:50:05.749913 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:50:05.752888 line       579                                 success += can_contract
excute Modified var:.. success = 69
excute 13:50:05.756863 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:50:05.760866 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:05.764847 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:05.768830 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.772852 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:50:05.775841 line       556                     i = i_j[0]
excute 13:50:05.779833 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:05.783820 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.787780 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:50:05.791800 line       556                     i = i_j[0]
excute 13:50:05.795779 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:05.798781 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.802770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:50:05.806760 line       556                     i = i_j[0]
excute 13:50:05.810751 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:05.813741 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.817701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:50:05.821689 line       556                     i = i_j[0]
excute 13:50:05.825678 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:05.828700 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.832661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:50:05.835684 line       556                     i = i_j[0]
excute 13:50:05.839672 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:05.843663 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.847621 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:50:05.851609 line       556                     i = i_j[0]
excute 13:50:05.856631 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:05.860586 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.864575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:50:05.868564 line       556                     i = i_j[0]
excute 13:50:05.873560 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:05.877540 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.881529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 1)
excute 13:50:05.884521 line       556                     i = i_j[0]
excute 13:50:05.889509 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:05.892500 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.897486 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:05.900508 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:05.904500 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:05.908488 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.912465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:50:05.916467 line       556                     i = i_j[0]
excute 13:50:05.920459 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:05.923450 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.927437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:05.931429 line       556                     i = i_j[0]
excute 13:50:05.935384 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:05.940402 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.944393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:50:05.949346 line       556                     i = i_j[0]
excute 13:50:05.957326 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:05.960316 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.964306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:05.968295 line       556                     i = i_j[0]
excute 13:50:05.972286 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:05.976274 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.980263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:05.984253 line       556                     i = i_j[0]
excute 13:50:05.988243 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:05.991266 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:05.995224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:50:05.999213 line       556                     i = i_j[0]
excute 13:50:06.003202 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:06.006195 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.011182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:06.014173 line       556                     i = i_j[0]
excute 13:50:06.019161 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:06.022152 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.026141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 1)
excute 13:50:06.029133 line       556                     i = i_j[0]
excute 13:50:06.033122 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:06.037111 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.041103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:50:06.044093 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:06.049081 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:06.053070 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.059054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:50:06.062045 line       556                     i = i_j[0]
excute 13:50:06.066035 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:06.070025 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.073016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:50:06.077005 line       556                     i = i_j[0]
excute 13:50:06.080996 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:06.083986 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.087976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:50:06.091998 line       556                     i = i_j[0]
excute 13:50:06.095957 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:06.099946 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.104931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:50:06.107924 line       556                     i = i_j[0]
excute 13:50:06.112925 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:06.115932 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.119925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:50:06.123888 line       556                     i = i_j[0]
excute 13:50:06.127870 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:06.130895 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.134850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:50:06.138841 line       556                     i = i_j[0]
excute 13:50:06.142832 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:06.146821 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.150809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:50:06.154799 line       556                     i = i_j[0]
excute 13:50:06.159786 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:06.163805 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.167767 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:06.170788 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:06.174779 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:06.178767 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.182755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:06.186746 line       556                     i = i_j[0]
excute 13:50:06.190703 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:06.193729 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.198683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:06.202671 line       556                     i = i_j[0]
excute 13:50:06.206661 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:06.209652 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.213641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:06.217631 line       556                     i = i_j[0]
excute 13:50:06.221621 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:06.225610 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.229598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:06.232591 line       556                     i = i_j[0]
excute 13:50:06.237608 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:06.240599 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.244591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:06.248547 line       556                     i = i_j[0]
excute 13:50:06.251570 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:06.255562 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.259548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:06.264536 line       556                     i = i_j[0]
excute 13:50:06.268495 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:06.271519 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.276479 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:06.279497 line       556                     i = i_j[0]
excute 13:50:06.284452 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:06.287476 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.291464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:06.295455 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:06.299412 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:06.303435 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.307424 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:06.310383 line       556                     i = i_j[0]
excute 13:50:06.315369 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:06.318361 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.323355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:06.328336 line       556                     i = i_j[0]
excute 13:50:06.336313 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:06.341298 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.345290 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:06.349279 line       556                     i = i_j[0]
excute 13:50:06.356260 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:06.360250 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.369225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:06.373213 line       556                     i = i_j[0]
excute 13:50:06.379199 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:06.383187 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.389171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:06.393163 line       556                     i = i_j[0]
excute 13:50:06.400151 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:06.408120 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.417100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:06.420090 line       556                     i = i_j[0]
excute 13:50:06.426072 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:06.430064 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.435050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:06.442029 line       556                     i = i_j[0]
excute 13:50:06.447021 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:06.452003 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.460979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:06.471950 line       556                     i = i_j[0]
excute 13:50:06.476940 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:06.486909 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.494892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 1)
excute 13:50:06.503867 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:06.507854 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:06.516831 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.524808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 1)
excute 13:50:06.532787 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:06.541763 line       557                     j = i_j[1]
excute 13:50:06.548746 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.555726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:50:06.561710 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:06.566697 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:06.575674 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.582655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 0)
excute 13:50:06.587640 line       556                     i = i_j[0]
excute 13:50:06.596616 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:06.603598 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.610579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:50:06.616563 line       556                     i = i_j[0]
excute 13:50:06.622547 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:06.627534 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.633518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 0)
excute 13:50:06.641496 line       556                     i = i_j[0]
excute 13:50:06.649477 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:06.657455 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.666430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:50:06.675407 line       556                     i = i_j[0]
excute 13:50:06.682388 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:06.690366 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.698344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:50:06.704328 line       556                     i = i_j[0]
excute 13:50:06.712307 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:06.719289 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.728266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:50:06.736244 line       556                     i = i_j[0]
excute 13:50:06.744223 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:06.749208 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.758187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:50:06.764169 line       556                     i = i_j[0]
excute 13:50:06.772147 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:06.780126 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.788105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:06.796083 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:06.804063 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:06.810046 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.818025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:06.824009 line       556                     i = i_j[0]
excute 13:50:06.831988 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:06.837972 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.842959 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:50:06.846947 line       556                     i = i_j[0]
excute 13:50:06.850937 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:06.855923 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.860910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:06.863901 line       556                     i = i_j[0]
excute 13:50:06.867890 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:06.871880 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.875871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:06.880857 line       556                     i = i_j[0]
excute 13:50:06.884846 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:06.888835 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.892825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:06.895816 line       556                     i = i_j[0]
excute 13:50:06.899808 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:06.903796 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.907794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:06.910777 line       556                     i = i_j[0]
excute 13:50:06.914798 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:06.918787 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.922746 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:06.925769 line       556                     i = i_j[0]
excute 13:50:06.929760 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:06.933718 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.938704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 1)
excute 13:50:06.942692 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:06.948677 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:06.953667 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.957685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 1)
excute 13:50:06.963636 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:06.969619 line       557                     j = i_j[1]
excute 13:50:06.973608 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.977599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:50:06.980589 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:06.986583 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:06.990597 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:06.994553 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:50:06.998542 line       556                     i = i_j[0]
excute 13:50:07.002532 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:07.005523 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.010511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 0)
excute 13:50:07.013501 line       556                     i = i_j[0]
excute 13:50:07.017491 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:07.021480 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.025472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:50:07.028461 line       556                     i = i_j[0]
excute 13:50:07.032451 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:07.035443 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.039432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:50:07.043421 line       556                     i = i_j[0]
excute 13:50:07.047411 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:07.050402 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.054392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:07.058415 line       556                     i = i_j[0]
excute 13:50:07.062404 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:07.065394 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.069352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:50:07.073374 line       556                     i = i_j[0]
excute 13:50:07.077332 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:07.081322 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.086308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:07.089332 line       556                     i = i_j[0]
excute 13:50:07.093323 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:07.097309 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.101268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 1)
excute 13:50:07.104293 line       556                     i = i_j[0]
excute 13:50:07.109259 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:07.112240 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:07.116229 line       555                 for i_j in i_j_list:
excute 13:50:07.120218 line       581             self.write_matrix(
excute 13:50:07.124207 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:07.128197 line       583                 result_file_path,
excute 13:50:07.132186 line       584                 mode='a'
excute 13:50:07.138882 line       488         for t in time_steps:
excute Modified var:.. t = 153
excute 13:50:07.144863 line       489             if (t != self.TIME + 1):
excute 13:50:07.150848 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:07.154837 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:07.158826 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:07.162816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:07.166806 line       494                         if (i == j):
excute 13:50:07.171794 line       495                             continue
excute 13:50:07.175785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:07.178775 line       494                         if (i == j):
excute 13:50:07.183763 line       496                         i_j_list.append((
excute 13:50:07.188750 line       497                             i, j,
excute 13:50:07.193734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.204711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:07.211685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:07.217670 line       494                         if (i == j):
excute 13:50:07.222658 line       496                         i_j_list.append((
excute 13:50:07.226645 line       497                             i, j,
excute 13:50:07.231637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.235622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1)]
excute 13:50:07.241605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:07.245597 line       494                         if (i == j):
excute 13:50:07.249593 line       496                         i_j_list.append((
excute 13:50:07.259556 line       497                             i, j,
excute 13:50:07.265547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.271525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0)]
excute 13:50:07.274516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:07.278507 line       494                         if (i == j):
excute 13:50:07.283494 line       496                         i_j_list.append((
excute 13:50:07.286484 line       497                             i, j,
excute 13:50:07.290474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.295461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1)]
excute 13:50:07.298454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:07.302442 line       494                         if (i == j):
excute 13:50:07.306431 line       496                         i_j_list.append((
excute 13:50:07.310421 line       497                             i, j,
excute 13:50:07.314410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.317402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0)]
excute 13:50:07.321392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:07.324383 line       494                         if (i == j):
excute 13:50:07.334358 line       496                         i_j_list.append((
excute 13:50:07.342349 line       497                             i, j,
excute 13:50:07.346325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.349317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:07.354305 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:07.358293 line       494                         if (i == j):
excute 13:50:07.362282 line       496                         i_j_list.append((
excute 13:50:07.366272 line       497                             i, j,
excute 13:50:07.369264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.373257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:50:07.376245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:07.380234 line       494                         if (i == j):
excute 13:50:07.385227 line       496                         i_j_list.append((
excute 13:50:07.388213 line       497                             i, j,
excute 13:50:07.392204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.396193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:50:07.400181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:07.404172 line       494                         if (i == j):
excute 13:50:07.408160 line       496                         i_j_list.append((
excute 13:50:07.411152 line       497                             i, j,
excute 13:50:07.414143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.418134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:50:07.422123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:07.427111 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:07.430104 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:07.435090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:07.439080 line       494                         if (i == j):
excute 13:50:07.444065 line       496                         i_j_list.append((
excute 13:50:07.450049 line       497                             i, j,
excute 13:50:07.455038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.462016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0)]
excute 13:50:07.465008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:07.468997 line       494                         if (i == j):
excute 13:50:07.472987 line       495                             continue
excute 13:50:07.476976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:07.480966 line       494                         if (i == j):
excute 13:50:07.484956 line       496                         i_j_list.append((
excute 13:50:07.490940 line       497                             i, j,
excute 13:50:07.499918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.504902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1)]
excute 13:50:07.511882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:07.518865 line       494                         if (i == j):
excute 13:50:07.523851 line       496                         i_j_list.append((
excute 13:50:07.526842 line       497                             i, j,
excute 13:50:07.529834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.533823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0)]
excute 13:50:07.536815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:07.540805 line       494                         if (i == j):
excute 13:50:07.544794 line       496                         i_j_list.append((
excute 13:50:07.547786 line       497                             i, j,
excute 13:50:07.551776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.554768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1)]
excute 13:50:07.558757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:07.562748 line       494                         if (i == j):
excute 13:50:07.566736 line       496                         i_j_list.append((
excute 13:50:07.569728 line       497                             i, j,
excute 13:50:07.572719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.576710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0)]
excute 13:50:07.580698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:07.584689 line       494                         if (i == j):
excute 13:50:07.588691 line       496                         i_j_list.append((
excute 13:50:07.591668 line       497                             i, j,
excute 13:50:07.594660 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.598650 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0)]
excute 13:50:07.604667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:07.608647 line       494                         if (i == j):
excute 13:50:07.611650 line       496                         i_j_list.append((
excute 13:50:07.615636 line       497                             i, j,
excute 13:50:07.619599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.622617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0)]
excute 13:50:07.625610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:07.629601 line       494                         if (i == j):
excute 13:50:07.634558 line       496                         i_j_list.append((
excute 13:50:07.637548 line       497                             i, j,
excute 13:50:07.641537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.645527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0)]
excute 13:50:07.648519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:07.653506 line       494                         if (i == j):
excute 13:50:07.657494 line       496                         i_j_list.append((
excute 13:50:07.660517 line       497                             i, j,
excute 13:50:07.664474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.667497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0)]
excute 13:50:07.670491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:07.674480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:07.678468 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:07.682433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:07.685451 line       494                         if (i == j):
excute 13:50:07.689439 line       496                         i_j_list.append((
excute 13:50:07.693405 line       497                             i, j,
excute 13:50:07.696421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.700413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0)]
excute 13:50:07.703402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:07.708390 line       494                         if (i == j):
excute 13:50:07.713344 line       496                         i_j_list.append((
excute 13:50:07.716368 line       497                             i, j,
excute 13:50:07.720325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.723348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:50:07.726341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:07.731306 line       494                         if (i == j):
excute 13:50:07.734319 line       495                             continue
excute 13:50:07.738309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:07.741302 line       494                         if (i == j):
excute 13:50:07.745284 line       496                         i_j_list.append((
excute 13:50:07.748283 line       497                             i, j,
excute 13:50:07.752272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.756230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:50:07.760220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:07.764209 line       494                         if (i == j):
excute 13:50:07.768198 line       496                         i_j_list.append((
excute 13:50:07.771191 line       497                             i, j,
excute 13:50:07.775180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.779169 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1)]
excute 13:50:07.783159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:07.787146 line       494                         if (i == j):
excute 13:50:07.791168 line       496                         i_j_list.append((
excute 13:50:07.795125 line       497                             i, j,
excute 13:50:07.798117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.801109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0)]
excute 13:50:07.805098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:07.810111 line       494                         if (i == j):
excute 13:50:07.814076 line       496                         i_j_list.append((
excute 13:50:07.818065 line       497                             i, j,
excute 13:50:07.821058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.825044 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:50:07.828037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:07.832026 line       494                         if (i == j):
excute 13:50:07.836015 line       496                         i_j_list.append((
excute 13:50:07.840008 line       497                             i, j,
excute 13:50:07.842998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.846988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:50:07.850977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:07.854967 line       494                         if (i == j):
excute 13:50:07.859956 line       496                         i_j_list.append((
excute 13:50:07.863941 line       497                             i, j,
excute 13:50:07.866964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.869957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:50:07.873946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:07.877920 line       494                         if (i == j):
excute 13:50:07.881894 line       496                         i_j_list.append((
excute 13:50:07.884917 line       497                             i, j,
excute 13:50:07.888875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.891866 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:50:07.894858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:07.898847 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:07.901840 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:07.905829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:07.909819 line       494                         if (i == j):
excute 13:50:07.913839 line       496                         i_j_list.append((
excute 13:50:07.917830 line       497                             i, j,
excute 13:50:07.920820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.924816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0)]
excute 13:50:07.927805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:07.931763 line       494                         if (i == j):
excute 13:50:07.935750 line       496                         i_j_list.append((
excute 13:50:07.938775 line       497                             i, j,
excute 13:50:07.942762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.945755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:50:07.951707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:07.957691 line       494                         if (i == j):
excute 13:50:07.961681 line       496                         i_j_list.append((
excute 13:50:07.964704 line       497                             i, j,
excute 13:50:07.968661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:07.971653 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1)]
excute 13:50:07.975642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:07.979632 line       494                         if (i == j):
excute 13:50:07.983623 line       495                             continue
excute 13:50:07.986613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:07.990604 line       494                         if (i == j):
excute 13:50:07.993594 line       496                         i_j_list.append((
excute 13:50:07.997584 line       497                             i, j,
excute 13:50:08.000575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.003567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1)]
excute 13:50:08.007557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:08.011546 line       494                         if (i == j):
excute 13:50:08.017564 line       496                         i_j_list.append((
excute 13:50:08.020555 line       497                             i, j,
excute 13:50:08.023547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.027503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0)]
excute 13:50:08.030496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:08.034485 line       494                         if (i == j):
excute 13:50:08.038474 line       496                         i_j_list.append((
excute 13:50:08.042464 line       497                             i, j,
excute 13:50:08.045457 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.049447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:50:08.053436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:08.057425 line       494                         if (i == j):
excute 13:50:08.061413 line       496                         i_j_list.append((
excute 13:50:08.064437 line       497                             i, j,
excute 13:50:08.068428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.071418 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:50:08.075408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:08.079375 line       494                         if (i == j):
excute 13:50:08.083369 line       496                         i_j_list.append((
excute 13:50:08.086378 line       497                             i, j,
excute 13:50:08.090345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.093362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:50:08.096351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:08.100342 line       494                         if (i == j):
excute 13:50:08.104330 line       496                         i_j_list.append((
excute 13:50:08.108321 line       497                             i, j,
excute 13:50:08.111312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.116268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:50:08.119258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:08.123247 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:08.127237 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:08.131227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:08.134219 line       494                         if (i == j):
excute 13:50:08.138207 line       496                         i_j_list.append((
excute 13:50:08.142197 line       497                             i, j,
excute 13:50:08.145189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.149179 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0)]
excute 13:50:08.152170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:08.156160 line       494                         if (i == j):
excute 13:50:08.160148 line       496                         i_j_list.append((
excute 13:50:08.164172 line       497                             i, j,
excute 13:50:08.167163 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.171152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:08.174143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:08.178102 line       494                         if (i == j):
excute 13:50:08.182092 line       496                         i_j_list.append((
excute 13:50:08.185119 line       497                             i, j,
excute 13:50:08.189072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.192063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1)]
excute 13:50:08.196053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:08.200043 line       494                         if (i == j):
excute 13:50:08.204032 line       496                         i_j_list.append((
excute 13:50:08.207025 line       497                             i, j,
excute 13:50:08.211014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.215003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0)]
excute 13:50:08.218997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:08.222985 line       494                         if (i == j):
excute 13:50:08.226972 line       495                             continue
excute 13:50:08.229994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:08.233983 line       494                         if (i == j):
excute 13:50:08.237975 line       496                         i_j_list.append((
excute 13:50:08.240964 line       497                             i, j,
excute 13:50:08.244924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.247946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:08.250938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:08.255893 line       494                         if (i == j):
excute 13:50:08.259916 line       496                         i_j_list.append((
excute 13:50:08.263904 line       497                             i, j,
excute 13:50:08.266896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.269887 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:08.273878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:08.277866 line       494                         if (i == j):
excute 13:50:08.282822 line       496                         i_j_list.append((
excute 13:50:08.285814 line       497                             i, j,
excute 13:50:08.289802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.293792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:08.296784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:08.300773 line       494                         if (i == j):
excute 13:50:08.304762 line       496                         i_j_list.append((
excute 13:50:08.307754 line       497                             i, j,
excute 13:50:08.311743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.314736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:08.318725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:08.324711 line       494                         if (i == j):
excute 13:50:08.334684 line       496                         i_j_list.append((
excute 13:50:08.341664 line       497                             i, j,
excute 13:50:08.344656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.348647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:50:08.351637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:08.357621 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:08.361610 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:08.364602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:08.368591 line       494                         if (i == j):
excute 13:50:08.373581 line       496                         i_j_list.append((
excute 13:50:08.376570 line       497                             i, j,
excute 13:50:08.380561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.384549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:50:08.388539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:08.392529 line       494                         if (i == j):
excute 13:50:08.397514 line       496                         i_j_list.append((
excute 13:50:08.400506 line       497                             i, j,
excute 13:50:08.404496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.407487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:08.411477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:08.414469 line       494                         if (i == j):
excute 13:50:08.419456 line       496                         i_j_list.append((
excute 13:50:08.422448 line       497                             i, j,
excute 13:50:08.427435 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.431424 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1)]
excute 13:50:08.435414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:08.438405 line       494                         if (i == j):
excute 13:50:08.442395 line       496                         i_j_list.append((
excute 13:50:08.446384 line       497                             i, j,
excute 13:50:08.451372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.456358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0)]
excute 13:50:08.460346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:08.466333 line       494                         if (i == j):
excute 13:50:08.471318 line       496                         i_j_list.append((
excute 13:50:08.474309 line       497                             i, j,
excute 13:50:08.478298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.481322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1)]
excute 13:50:08.485312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:08.489301 line       494                         if (i == j):
excute 13:50:08.493291 line       495                             continue
excute 13:50:08.497249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:08.500273 line       494                         if (i == j):
excute 13:50:08.504261 line       496                         i_j_list.append((
excute 13:50:08.508251 line       497                             i, j,
excute 13:50:08.512208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.515202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0)]
excute 13:50:08.519198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:08.523180 line       494                         if (i == j):
excute 13:50:08.530161 line       496                         i_j_list.append((
excute 13:50:08.533151 line       497                             i, j,
excute 13:50:08.536144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.540133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:08.543125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:08.547115 line       494                         if (i == j):
excute 13:50:08.551106 line       496                         i_j_list.append((
excute 13:50:08.555121 line       497                             i, j,
excute 13:50:08.558117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.562108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:08.565098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:08.569090 line       494                         if (i == j):
excute 13:50:08.573045 line       496                         i_j_list.append((
excute 13:50:08.576068 line       497                             i, j,
excute 13:50:08.580058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.583051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:08.587041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:08.590999 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:08.594021 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:08.598012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:08.601969 line       494                         if (i == j):
excute 13:50:08.604960 line       496                         i_j_list.append((
excute 13:50:08.608950 line       497                             i, j,
excute 13:50:08.612938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.618924 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0)]
excute 13:50:08.621947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:08.631889 line       494                         if (i == j):
excute 13:50:08.637873 line       496                         i_j_list.append((
excute 13:50:08.640866 line       497                             i, j,
excute 13:50:08.644855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.648845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:50:08.651837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:08.656829 line       494                         if (i == j):
excute 13:50:08.660812 line       496                         i_j_list.append((
excute 13:50:08.664803 line       497                             i, j,
excute 13:50:08.667823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.671813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1)]
excute 13:50:08.674806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:08.678794 line       494                         if (i == j):
excute 13:50:08.682752 line       496                         i_j_list.append((
excute 13:50:08.685776 line       497                             i, j,
excute 13:50:08.689766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.692757 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0)]
excute 13:50:08.696745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:08.700703 line       494                         if (i == j):
excute 13:50:08.704693 line       496                         i_j_list.append((
excute 13:50:08.708682 line       497                             i, j,
excute 13:50:08.711674 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.715666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1)]
excute 13:50:08.718688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:08.722668 line       494                         if (i == j):
excute 13:50:08.726637 line       496                         i_j_list.append((
excute 13:50:08.730625 line       497                             i, j,
excute 13:50:08.734615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.738605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0)]
excute 13:50:08.741597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:08.746584 line       494                         if (i == j):
excute 13:50:08.750571 line       495                             continue
excute 13:50:08.754562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:08.758551 line       494                         if (i == j):
excute 13:50:08.763539 line       496                         i_j_list.append((
excute 13:50:08.766530 line       497                             i, j,
excute 13:50:08.770519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.774508 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:50:08.778498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:08.782487 line       494                         if (i == j):
excute 13:50:08.787473 line       496                         i_j_list.append((
excute 13:50:08.791462 line       497                             i, j,
excute 13:50:08.794456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.798445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:50:08.802432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:08.806423 line       494                         if (i == j):
excute 13:50:08.810412 line       496                         i_j_list.append((
excute 13:50:08.813404 line       497                             i, j,
excute 13:50:08.817393 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.821383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:50:08.825372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:08.829362 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:08.833351 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:08.839335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:08.847312 line       494                         if (i == j):
excute 13:50:08.854295 line       496                         i_j_list.append((
excute 13:50:08.859280 line       497                             i, j,
excute 13:50:08.866261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.870251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0)]
excute 13:50:08.875239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:08.879226 line       494                         if (i == j):
excute 13:50:08.883216 line       496                         i_j_list.append((
excute 13:50:08.887209 line       497                             i, j,
excute 13:50:08.890197 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.893189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:50:08.897178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:08.901180 line       494                         if (i == j):
excute 13:50:08.904160 line       496                         i_j_list.append((
excute 13:50:08.908149 line       497                             i, j,
excute 13:50:08.911141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.915130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1)]
excute 13:50:08.918123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:08.922112 line       494                         if (i == j):
excute 13:50:08.926102 line       496                         i_j_list.append((
excute 13:50:08.929093 line       497                             i, j,
excute 13:50:08.933082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.936075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0)]
excute 13:50:08.941095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:08.949042 line       494                         if (i == j):
excute 13:50:08.956024 line       496                         i_j_list.append((
excute 13:50:08.960012 line       497                             i, j,
excute 13:50:08.964011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.967024 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1)]
excute 13:50:08.971014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:08.974972 line       494                         if (i == j):
excute 13:50:08.978961 line       496                         i_j_list.append((
excute 13:50:08.981984 line       497                             i, j,
excute 13:50:08.985975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:08.988966 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0)]
excute 13:50:08.992954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:08.996945 line       494                         if (i == j):
excute 13:50:09.000902 line       496                         i_j_list.append((
excute 13:50:09.004891 line       497                             i, j,
excute 13:50:09.007882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.011874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:50:09.014897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:09.018886 line       494                         if (i == j):
excute 13:50:09.022875 line       495                             continue
excute 13:50:09.026864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:09.029856 line       494                         if (i == j):
excute 13:50:09.033814 line       496                         i_j_list.append((
excute 13:50:09.036838 line       497                             i, j,
excute 13:50:09.040827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.044817 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:50:09.048806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:09.052764 line       494                         if (i == j):
excute 13:50:09.056776 line       496                         i_j_list.append((
excute 13:50:09.060743 line       497                             i, j,
excute 13:50:09.064732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.067725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:50:09.071714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:09.075703 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:09.079692 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:09.083682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:09.088670 line       494                         if (i == j):
excute 13:50:09.092656 line       496                         i_j_list.append((
excute 13:50:09.095648 line       497                             i, j,
excute 13:50:09.098640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.102629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0)]
excute 13:50:09.105622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:09.109610 line       494                         if (i == j):
excute 13:50:09.113600 line       496                         i_j_list.append((
excute 13:50:09.117590 line       497                             i, j,
excute 13:50:09.120581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.123573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0)]
excute 13:50:09.127562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:09.131552 line       494                         if (i == j):
excute 13:50:09.135542 line       496                         i_j_list.append((
excute 13:50:09.138534 line       497                             i, j,
excute 13:50:09.142522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.146516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1)]
excute 13:50:09.150503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:09.154493 line       494                         if (i == j):
excute 13:50:09.158480 line       496                         i_j_list.append((
excute 13:50:09.162469 line       497                             i, j,
excute 13:50:09.165461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.169456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0)]
excute 13:50:09.172443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:09.176432 line       494                         if (i == j):
excute 13:50:09.180422 line       496                         i_j_list.append((
excute 13:50:09.184413 line       497                             i, j,
excute 13:50:09.187405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.191394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1)]
excute 13:50:09.195383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:09.200370 line       494                         if (i == j):
excute 13:50:09.204359 line       496                         i_j_list.append((
excute 13:50:09.207381 line       497                             i, j,
excute 13:50:09.211369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.214364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0)]
excute 13:50:09.218355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:09.222343 line       494                         if (i == j):
excute 13:50:09.226332 line       496                         i_j_list.append((
excute 13:50:09.229293 line       497                             i, j,
excute 13:50:09.233282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.237270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0)]
excute 13:50:09.241261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:09.245249 line       494                         if (i == j):
excute 13:50:09.250235 line       496                         i_j_list.append((
excute 13:50:09.254224 line       497                             i, j,
excute 13:50:09.258216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.262205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0)]
excute 13:50:09.266197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:09.270184 line       494                         if (i == j):
excute 13:50:09.274171 line       495                             continue
excute 13:50:09.278196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:09.282181 line       494                         if (i == j):
excute 13:50:09.286141 line       496                         i_j_list.append((
excute 13:50:09.289163 line       497                             i, j,
excute 13:50:09.293152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.297111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0)]
excute 13:50:09.300104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:09.305106 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:09.308112 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:09.313067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:09.316092 line       494                         if (i == j):
excute 13:50:09.320081 line       496                         i_j_list.append((
excute 13:50:09.324037 line       497                             i, j,
excute 13:50:09.329026 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.337005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0)]
excute 13:50:09.341990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:09.345979 line       494                         if (i == j):
excute 13:50:09.349970 line       496                         i_j_list.append((
excute 13:50:09.354955 line       497                             i, j,
excute 13:50:09.358945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.362934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:50:09.365926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:09.369916 line       494                         if (i == j):
excute 13:50:09.373936 line       496                         i_j_list.append((
excute 13:50:09.377925 line       497                             i, j,
excute 13:50:09.381919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.385872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1)]
excute 13:50:09.389863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:09.392853 line       494                         if (i == j):
excute 13:50:09.397858 line       496                         i_j_list.append((
excute 13:50:09.400865 line       497                             i, j,
excute 13:50:09.404853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.407845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0)]
excute 13:50:09.411835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:09.415817 line       494                         if (i == j):
excute 13:50:09.419782 line       496                         i_j_list.append((
excute 13:50:09.422773 line       497                             i, j,
excute 13:50:09.426763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.429755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 1)]
excute 13:50:09.433745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:09.436736 line       494                         if (i == j):
excute 13:50:09.441726 line       496                         i_j_list.append((
excute 13:50:09.445714 line       497                             i, j,
excute 13:50:09.450699 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.456684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0)]
excute 13:50:09.460705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:09.464695 line       494                         if (i == j):
excute 13:50:09.468684 line       496                         i_j_list.append((
excute 13:50:09.471675 line       497                             i, j,
excute 13:50:09.475665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.478656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:50:09.482645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:09.486610 line       494                         if (i == j):
excute 13:50:09.490594 line       496                         i_j_list.append((
excute 13:50:09.493616 line       497                             i, j,
excute 13:50:09.497606 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.501564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:50:09.504556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:09.509544 line       494                         if (i == j):
excute 13:50:09.513533 line       496                         i_j_list.append((
excute 13:50:09.517522 line       497                             i, j,
excute 13:50:09.521512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:09.525501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 3, 0), (1, 2, 3, 1), (1, 3, 3, 0), (1, 4, 3, 1), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 1), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 1), (6, 3, 0, 0), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 1), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:50:09.528493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:09.532482 line       494                         if (i == j):
excute 13:50:09.537467 line       495                             continue
excute 13:50:09.540459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:09.544448 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:09.547440 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 3, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 3, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (7, 2, -2, 1), (7, 4, -2, 1), (8, 2, -2, 1), (8, 4, -2, 1), (6, 0, 0, 0), (6, 1, 0, 0), (6, 3, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (6, 2, 0, 1), (6, 4, 0, 1), (0, 1, 1, 0), (0, 3, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 3, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (0, 2, 1, 1), (0, 4, 1, 1), (9, 2, 1, 1), (9, 4, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 3, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (2, 4, 2, 1), (5, 2, 2, 1), (5, 4, 2, 1), (1, 0, 3, 0), (1, 3, 3, 0), (1, 5, 3, 0), (1, 6, 3, 0), (1, 7, 3, 0), (1, 8, 3, 0), (1, 9, 3, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (1, 2, 3, 1), (1, 4, 3, 1), (4, 2, 3, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (3, 2, 6, 1), (3, 4, 6, 1)]
excute 13:50:09.551432 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:09.555419 line       505                     if (self.RELOCATE):
excute 13:50:09.561405 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:09.564426 line       505                     if (self.RELOCATE):
excute 13:50:09.568417 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:09.572406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:50:09.576376 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:09.580352 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:09.584343 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.588331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:50:09.591323 line       556                     i = i_j[0]
excute 13:50:09.595312 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:09.598304 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.603303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:50:09.606283 line       556                     i = i_j[0]
excute 13:50:09.610272 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:09.614262 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.618251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:50:09.622240 line       556                     i = i_j[0]
excute 13:50:09.626229 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:09.629221 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.634211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:50:09.637203 line       556                     i = i_j[0]
excute 13:50:09.641191 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:09.645181 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.650169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:50:09.653159 line       556                     i = i_j[0]
excute 13:50:09.657149 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:09.664129 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.672107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:50:09.677094 line       556                     i = i_j[0]
excute 13:50:09.681084 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:09.685072 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.691058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -2, 0)
excute 13:50:09.696044 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:09.701032 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:09.705019 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.709024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -2, 0)
excute 13:50:09.713001 line       556                     i = i_j[0]
excute 13:50:09.716988 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:09.720977 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.723968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -2, 0)
excute 13:50:09.727957 line       556                     i = i_j[0]
excute 13:50:09.731947 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:09.734939 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.738929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -2, 0)
excute 13:50:09.742919 line       556                     i = i_j[0]
excute 13:50:09.745910 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:09.749899 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.753895 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -2, 0)
excute 13:50:09.756880 line       556                     i = i_j[0]
excute 13:50:09.761868 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:09.767852 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.771840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -2, 0)
excute 13:50:09.776827 line       556                     i = i_j[0]
excute 13:50:09.780817 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:09.784806 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.788796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -2, 0)
excute 13:50:09.791787 line       556                     i = i_j[0]
excute 13:50:09.795776 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:09.799765 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.803755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 1)
excute 13:50:09.806747 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:09.810737 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:09.814741 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.818715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 1)
excute 13:50:09.822704 line       556                     i = i_j[0]
excute 13:50:09.826694 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:09.829686 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.833675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -2, 1)
excute 13:50:09.836667 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:09.840656 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:09.844646 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.848637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -2, 1)
excute 13:50:09.851627 line       556                     i = i_j[0]
excute 13:50:09.856615 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:09.860603 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.864593 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:50:09.869581 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:09.874569 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:09.878556 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.882545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:50:09.886534 line       556                     i = i_j[0]
excute 13:50:09.890524 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:09.894514 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.898504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:50:09.902493 line       556                     i = i_j[0]
excute 13:50:09.906482 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:09.910471 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.914461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:50:09.919446 line       556                     i = i_j[0]
excute 13:50:09.923438 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:09.926429 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.931414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:50:09.934407 line       556                     i = i_j[0]
excute 13:50:09.938397 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:09.942386 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.948370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:50:09.955352 line       556                     i = i_j[0]
excute 13:50:09.959373 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:09.964327 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.970311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:50:09.975330 line       556                     i = i_j[0]
excute 13:50:09.979526 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:09.983517 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:09.988507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 1)
excute 13:50:09.991498 line       556                     i = i_j[0]
excute 13:50:09.996483 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:09.999507 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.003496 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:50:10.007486 line       560                         if (t_tmp > self.TIME):
excute 13:50:10.010477 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:10.014466 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:10.018427 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 193
excute 13:50:10.022415 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:10.026404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 1)
excute 13:50:10.029429 line       556                     i = i_j[0]
excute 13:50:10.033386 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:10.036407 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.041364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:10.044388 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:10.048346 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:10.052343 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.056359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:10.060345 line       556                     i = i_j[0]
excute 13:50:10.064304 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:10.067325 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.071315 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:10.077267 line       556                     i = i_j[0]
excute 13:50:10.081266 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:10.085275 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.089235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:10.093225 line       556                     i = i_j[0]
excute 13:50:10.097214 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.100206 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.107188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:50:10.110212 line       556                     i = i_j[0]
excute 13:50:10.114200 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:10.118190 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.122147 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:10.125173 line       556                     i = i_j[0]
excute 13:50:10.129160 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:10.133152 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.137140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:50:10.141099 line       556                     i = i_j[0]
excute 13:50:10.145087 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:10.148080 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.152069 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:50:10.156058 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:10.161046 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:10.165036 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.169024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:50:10.173013 line       556                     i = i_j[0]
excute 13:50:10.177016 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:10.181988 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.186010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:50:10.189003 line       556                     i = i_j[0]
excute 13:50:10.192964 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:10.196948 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.200937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:50:10.203959 line       556                     i = i_j[0]
excute 13:50:10.207953 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:10.211939 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.215899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:50:10.218920 line       556                     i = i_j[0]
excute 13:50:10.222911 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.226899 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.230859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:50:10.233881 line       556                     i = i_j[0]
excute 13:50:10.237869 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:10.241860 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.245819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:50:10.248839 line       556                     i = i_j[0]
excute 13:50:10.252832 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:10.256789 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.261777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 1)
excute 13:50:10.264768 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:10.269752 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:10.273744 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.278730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 1)
excute 13:50:10.283718 line       556                     i = i_j[0]
excute 13:50:10.287707 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:10.291695 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.296682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 1)
excute 13:50:10.299704 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:10.303662 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:10.307652 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.311641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 1)
excute 13:50:10.314664 line       556                     i = i_j[0]
excute 13:50:10.318653 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:10.322643 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.328596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:50:10.336575 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:10.344553 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:10.348542 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.352531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:50:10.358517 line       556                     i = i_j[0]
excute 13:50:10.362504 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:10.365497 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.370485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:50:10.374474 line       556                     i = i_j[0]
excute 13:50:10.379461 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:10.383449 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.391428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:50:10.398409 line       556                     i = i_j[0]
excute 13:50:10.402398 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:10.406389 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.411376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:50:10.414368 line       556                     i = i_j[0]
excute 13:50:10.419355 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.422346 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.426335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:50:10.430325 line       556                     i = i_j[0]
excute 13:50:10.434314 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:10.438303 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.443291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:50:10.446281 line       556                     i = i_j[0]
excute 13:50:10.451268 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:10.455259 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.459247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:50:10.463236 line       556                     i = i_j[0]
excute 13:50:10.467226 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:10.470217 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.474206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:10.478197 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:10.482185 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:10.486175 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.491163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:10.495152 line       556                     i = i_j[0]
excute 13:50:10.500139 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:10.504128 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.508117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:10.512106 line       556                     i = i_j[0]
excute 13:50:10.517094 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:10.521082 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.525074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:10.528064 line       556                     i = i_j[0]
excute 13:50:10.532051 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.535044 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.539035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:10.543023 line       556                     i = i_j[0]
excute 13:50:10.547012 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:10.550005 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.554990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:10.557983 line       556                     i = i_j[0]
excute 13:50:10.561983 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:10.564995 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.568984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:10.572973 line       556                     i = i_j[0]
excute 13:50:10.576932 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:10.580923 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.584912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 1)
excute 13:50:10.588901 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:10.594897 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:10.598875 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.603862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 1)
excute 13:50:10.606853 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:10.610875 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:10.614867 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.618851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 1)
excute 13:50:10.622844 line       556                     i = i_j[0]
excute 13:50:10.626811 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:10.630789 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.634779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 3, 0)
excute 13:50:10.638802 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:10.642758 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:10.646746 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.650736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 3, 0)
excute 13:50:10.653758 line       556                     i = i_j[0]
excute 13:50:10.658714 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:10.661737 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.665695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 3, 0)
excute 13:50:10.669715 line       556                     i = i_j[0]
excute 13:50:10.673689 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:10.677663 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.681652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 3, 0)
excute 13:50:10.684675 line       556                     i = i_j[0]
excute 13:50:10.688635 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.691659 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.697610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 3, 0)
excute 13:50:10.701630 line       556                     i = i_j[0]
excute 13:50:10.705620 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:10.709609 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.714565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 3, 0)
excute 13:50:10.717587 line       556                     i = i_j[0]
excute 13:50:10.721569 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:10.725536 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.730523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 3, 0)
excute 13:50:10.734512 line       556                     i = i_j[0]
excute 13:50:10.742489 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:10.745481 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.753460 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:10.758448 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:10.762437 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:10.767425 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.771414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:10.774405 line       556                     i = i_j[0]
excute 13:50:10.779393 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:10.782384 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.787371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:10.791359 line       556                     i = i_j[0]
excute 13:50:10.795348 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:10.799369 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.804328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:10.807347 line       556                     i = i_j[0]
excute 13:50:10.811305 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:10.814332 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.819284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:10.822275 line       556                     i = i_j[0]
excute 13:50:10.826265 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.829289 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.833278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:10.837237 line       556                     i = i_j[0]
excute 13:50:10.841227 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:10.844248 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.848238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:10.852227 line       556                     i = i_j[0]
excute 13:50:10.857183 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:10.860176 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.864164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:50:10.868153 line       556                     i = i_j[0]
excute 13:50:10.871177 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:10.875168 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.879126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 3, 1)
excute 13:50:10.882147 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:10.887103 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:10.890126 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.894119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 3, 1)
excute 13:50:10.898105 line       556                     i = i_j[0]
excute 13:50:10.904060 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:10.907083 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.911071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 1)
excute 13:50:10.915063 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:10.919020 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:10.923009 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.926997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:50:10.930020 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:10.934012 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:10.937999 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.941991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:50:10.945977 line       556                     i = i_j[0]
excute 13:50:10.951930 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:10.958911 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.962899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:50:10.966889 line       556                     i = i_j[0]
excute 13:50:10.971878 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:10.974899 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.979855 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:10.982846 line       556                     i = i_j[0]
excute 13:50:10.986837 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:10.990826 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:10.995814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:50:10.999803 line       556                     i = i_j[0]
excute 13:50:11.004789 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:11.007811 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:11.012768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:11.015790 line       556                     i = i_j[0]
excute 13:50:11.019780 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:11.023770 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:11.027759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:50:11.031720 line       556                     i = i_j[0]
excute 13:50:11.034743 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:11.038729 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:11.042690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 1)
excute 13:50:11.046676 line       556                     i = i_j[0]
excute 13:50:11.049700 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:11.053692 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:11.058646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 1)
excute 13:50:11.061637 line       556                     i = i_j[0]
excute 13:50:11.065627 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:11.069616 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:11.073605 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 158
excute 13:50:11.077594 line       560                         if (t_tmp > self.TIME):
excute 13:50:11.081584 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:11.085573 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:11.089563 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:11.093552 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:11.097541 line       569                                     available_vhecles[i][t],
excute 13:50:11.101531 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:11.106517 line       571                                     self.S_capacities[j],
excute 13:50:11.109543 line       572                                     demands[t][i][j],
excute 13:50:11.113528 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -4
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 153
calc_contract     13:50:11.116520 call       352     def caluculate_contract(
calc_contract     13:50:11.119483 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:11.120480 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:11.121478 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:11.122476 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:11.122476 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 0
calc_contract     13:50:11.123472 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 5
calc_contract     13:50:11.124470 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:11.125467 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [0, 0, 5]
excute Modified var:.. can_contract = 0
excute Modified var:.. rsf_tmp = 0
excute Modified var:.. rse_tmp = 5
excute 13:50:11.126496 line       575                                 rsf += rsf_tmp
excute 13:50:11.130452 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 178
excute 13:50:11.134473 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 153
move_cars     Starting var:.. t_tmp = 158
move_cars     Starting var:.. can_contract = 0
move_cars     13:50:11.139428 call       388     def move_cars(
move_cars     13:50:11.143417 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:11.144448 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:11.146410 line       399         return available_vhecles
move_cars     13:50:11.147439 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:50:11.149437 line       579                                 success += can_contract
excute 13:50:11.153423 line       555                 for i_j in i_j_list:
excute 13:50:11.157381 line       581             self.write_matrix(
excute 13:50:11.160403 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:11.164393 line       583                 result_file_path,
excute 13:50:11.167385 line       584                 mode='a'
excute 13:50:11.174406 line       488         for t in time_steps:
excute Modified var:.. t = 154
excute 13:50:11.178383 line       489             if (t != self.TIME + 1):
excute 13:50:11.182374 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:11.185364 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:11.190352 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:11.194342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:11.199328 line       494                         if (i == j):
excute 13:50:11.203317 line       495                             continue
excute 13:50:11.207306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:11.212293 line       494                         if (i == j):
excute 13:50:11.219281 line       496                         i_j_list.append((
excute 13:50:11.223263 line       497                             i, j,
excute 13:50:11.230277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.237226 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:11.248196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:11.258170 line       494                         if (i == j):
excute 13:50:11.267148 line       496                         i_j_list.append((
excute 13:50:11.272135 line       497                             i, j,
excute 13:50:11.278119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.284100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2)]
excute 13:50:11.291082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:11.298063 line       494                         if (i == j):
excute 13:50:11.305046 line       496                         i_j_list.append((
excute 13:50:11.312027 line       497                             i, j,
excute 13:50:11.319007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.326991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0)]
excute 13:50:11.334965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:11.343942 line       494                         if (i == j):
excute 13:50:11.352942 line       496                         i_j_list.append((
excute 13:50:11.360896 line       497                             i, j,
excute 13:50:11.368874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.375855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:50:11.382837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:11.391813 line       494                         if (i == j):
excute 13:50:11.398795 line       496                         i_j_list.append((
excute 13:50:11.406774 line       497                             i, j,
excute 13:50:11.412756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.421733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2)]
excute 13:50:11.428714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:11.435696 line       494                         if (i == j):
excute 13:50:11.444672 line       496                         i_j_list.append((
excute 13:50:11.452650 line       497                             i, j,
excute 13:50:11.460630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.474592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0)]
excute 13:50:11.483568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:11.492545 line       494                         if (i == j):
excute 13:50:11.501521 line       496                         i_j_list.append((
excute 13:50:11.512490 line       497                             i, j,
excute 13:50:11.523463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.531439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:50:11.540416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:11.549392 line       494                         if (i == j):
excute 13:50:11.557371 line       496                         i_j_list.append((
excute 13:50:11.566346 line       497                             i, j,
excute 13:50:11.573327 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.581308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:50:11.589286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:11.598265 line       494                         if (i == j):
excute 13:50:11.607237 line       496                         i_j_list.append((
excute 13:50:11.615216 line       497                             i, j,
excute 13:50:11.622198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.630175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:50:11.639152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:11.647131 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:11.655108 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:11.663088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:11.671065 line       494                         if (i == j):
excute 13:50:11.680042 line       496                         i_j_list.append((
excute 13:50:11.688023 line       497                             i, j,
excute 13:50:11.696001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.703979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1)]
excute 13:50:11.711957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:11.719937 line       494                         if (i == j):
excute 13:50:11.729910 line       495                             continue
excute 13:50:11.737888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:11.745867 line       494                         if (i == j):
excute 13:50:11.754843 line       496                         i_j_list.append((
excute 13:50:11.762821 line       497                             i, j,
excute 13:50:11.770802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.778780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2)]
excute 13:50:11.786757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:11.795733 line       494                         if (i == j):
excute 13:50:11.805706 line       496                         i_j_list.append((
excute 13:50:11.813685 line       497                             i, j,
excute 13:50:11.821664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.829643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0)]
excute 13:50:11.837621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:11.844604 line       494                         if (i == j):
excute 13:50:11.852581 line       496                         i_j_list.append((
excute 13:50:11.857567 line       497                             i, j,
excute 13:50:11.861557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.864548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:11.867540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:11.871529 line       494                         if (i == j):
excute 13:50:11.876518 line       496                         i_j_list.append((
excute 13:50:11.879509 line       497                             i, j,
excute 13:50:11.883498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.887487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2)]
excute 13:50:11.890479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:11.894469 line       494                         if (i == j):
excute 13:50:11.898459 line       496                         i_j_list.append((
excute 13:50:11.901450 line       497                             i, j,
excute 13:50:11.905439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.908433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0)]
excute 13:50:11.911424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:11.915414 line       494                         if (i == j):
excute 13:50:11.919404 line       496                         i_j_list.append((
excute 13:50:11.923393 line       497                             i, j,
excute 13:50:11.926385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.930374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:11.934362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:11.939350 line       494                         if (i == j):
excute 13:50:11.942341 line       496                         i_j_list.append((
excute 13:50:11.946330 line       497                             i, j,
excute 13:50:11.951319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.954309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:11.958299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:11.961290 line       494                         if (i == j):
excute 13:50:11.965280 line       496                         i_j_list.append((
excute 13:50:11.969271 line       497                             i, j,
excute 13:50:11.972262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:11.976251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:11.980241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:11.984231 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:11.987221 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:11.991212 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:11.994236 line       494                         if (i == j):
excute 13:50:11.998192 line       496                         i_j_list.append((
excute 13:50:12.001215 line       497                             i, j,
excute 13:50:12.005204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.009164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1)]
excute 13:50:12.012186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:12.016144 line       494                         if (i == j):
excute 13:50:12.020134 line       496                         i_j_list.append((
excute 13:50:12.023158 line       497                             i, j,
excute 13:50:12.027134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.030137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0)]
excute 13:50:12.033129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:12.038086 line       494                         if (i == j):
excute 13:50:12.042110 line       495                             continue
excute 13:50:12.046063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:12.049087 line       494                         if (i == j):
excute 13:50:12.053046 line       496                         i_j_list.append((
excute 13:50:12.057034 line       497                             i, j,
excute 13:50:12.060058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.063051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:50:12.067038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:12.070997 line       494                         if (i == j):
excute 13:50:12.074023 line       496                         i_j_list.append((
excute 13:50:12.078009 line       497                             i, j,
excute 13:50:12.081002 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.083994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:50:12.087982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:12.091942 line       494                         if (i == j):
excute 13:50:12.095951 line       496                         i_j_list.append((
excute 13:50:12.098954 line       497                             i, j,
excute 13:50:12.102912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.105938 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2)]
excute 13:50:12.109892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:12.112916 line       494                         if (i == j):
excute 13:50:12.116905 line       496                         i_j_list.append((
excute 13:50:12.120864 line       497                             i, j,
excute 13:50:12.123887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.126881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0)]
excute 13:50:12.130870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:12.134827 line       494                         if (i == j):
excute 13:50:12.138817 line       496                         i_j_list.append((
excute 13:50:12.142804 line       497                             i, j,
excute 13:50:12.146796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.150785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:50:12.154775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:12.158764 line       494                         if (i == j):
excute 13:50:12.162753 line       496                         i_j_list.append((
excute 13:50:12.166742 line       497                             i, j,
excute 13:50:12.170731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.173723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:50:12.177713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:12.182698 line       494                         if (i == j):
excute 13:50:12.186688 line       496                         i_j_list.append((
excute 13:50:12.189681 line       497                             i, j,
excute 13:50:12.193670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.197660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:50:12.201649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:12.205637 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:12.208630 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:12.212619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:12.216609 line       494                         if (i == j):
excute 13:50:12.220600 line       496                         i_j_list.append((
excute 13:50:12.223590 line       497                             i, j,
excute 13:50:12.227580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.231569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1)]
excute 13:50:12.235557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:12.239548 line       494                         if (i == j):
excute 13:50:12.244533 line       496                         i_j_list.append((
excute 13:50:12.248523 line       497                             i, j,
excute 13:50:12.251516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.256501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0)]
excute 13:50:12.259495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:12.263484 line       494                         if (i == j):
excute 13:50:12.267473 line       496                         i_j_list.append((
excute 13:50:12.271462 line       497                             i, j,
excute 13:50:12.275452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.279440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2)]
excute 13:50:12.282433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:12.286422 line       494                         if (i == j):
excute 13:50:12.291409 line       495                             continue
excute 13:50:12.294433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:12.298390 line       494                         if (i == j):
excute 13:50:12.302379 line       496                         i_j_list.append((
excute 13:50:12.305371 line       497                             i, j,
excute 13:50:12.308363 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.312352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0)]
excute 13:50:12.315345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:12.319334 line       494                         if (i == j):
excute 13:50:12.324322 line       496                         i_j_list.append((
excute 13:50:12.332300 line       497                             i, j,
excute 13:50:12.336289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.341276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2)]
excute 13:50:12.347260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:12.351248 line       494                         if (i == j):
excute 13:50:12.356234 line       496                         i_j_list.append((
excute 13:50:12.359226 line       497                             i, j,
excute 13:50:12.363217 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.366208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0)]
excute 13:50:12.370198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:12.374186 line       494                         if (i == j):
excute 13:50:12.378183 line       496                         i_j_list.append((
excute 13:50:12.381168 line       497                             i, j,
excute 13:50:12.384160 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.388149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:50:12.392139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:12.395131 line       494                         if (i == j):
excute 13:50:12.399153 line       496                         i_j_list.append((
excute 13:50:12.403108 line       497                             i, j,
excute 13:50:12.406134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.410090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:50:12.413114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:12.417108 line       494                         if (i == j):
excute 13:50:12.421062 line       496                         i_j_list.append((
excute 13:50:12.424084 line       497                             i, j,
excute 13:50:12.428043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.431067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:50:12.435055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:12.439047 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:12.442036 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:12.445994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:12.450981 line       494                         if (i == j):
excute 13:50:12.455968 line       496                         i_j_list.append((
excute 13:50:12.459958 line       497                             i, j,
excute 13:50:12.463948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.466940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1)]
excute 13:50:12.470927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:12.475915 line       494                         if (i == j):
excute 13:50:12.481899 line       496                         i_j_list.append((
excute 13:50:12.489877 line       497                             i, j,
excute 13:50:12.496859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.502842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0)]
excute 13:50:12.508857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:12.512850 line       494                         if (i == j):
excute 13:50:12.516805 line       496                         i_j_list.append((
excute 13:50:12.519828 line       497                             i, j,
excute 13:50:12.523817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.526809 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2)]
excute 13:50:12.530800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:12.534758 line       494                         if (i == j):
excute 13:50:12.538765 line       496                         i_j_list.append((
excute 13:50:12.541772 line       497                             i, j,
excute 13:50:12.545728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.548751 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0)]
excute 13:50:12.553711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:12.557697 line       494                         if (i == j):
excute 13:50:12.561685 line       495                             continue
excute 13:50:12.564708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:12.567701 line       494                         if (i == j):
excute 13:50:12.571689 line       496                         i_j_list.append((
excute 13:50:12.575679 line       497                             i, j,
excute 13:50:12.582629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.586618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2)]
excute 13:50:12.593625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:12.597590 line       494                         if (i == j):
excute 13:50:12.602577 line       496                         i_j_list.append((
excute 13:50:12.605569 line       497                             i, j,
excute 13:50:12.609558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.613548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0)]
excute 13:50:12.616540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:12.621527 line       494                         if (i == j):
excute 13:50:12.625516 line       496                         i_j_list.append((
excute 13:50:12.629504 line       497                             i, j,
excute 13:50:12.632529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.636518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:12.639508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:12.643503 line       494                         if (i == j):
excute 13:50:12.647494 line       496                         i_j_list.append((
excute 13:50:12.651445 line       497                             i, j,
excute 13:50:12.655435 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.659425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:12.663431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:12.667403 line       494                         if (i == j):
excute 13:50:12.671393 line       496                         i_j_list.append((
excute 13:50:12.674416 line       497                             i, j,
excute 13:50:12.678405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.681396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:50:12.685368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:12.688381 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:12.692367 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:12.696326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:12.699348 line       494                         if (i == j):
excute 13:50:12.704303 line       496                         i_j_list.append((
excute 13:50:12.714651 line       497                             i, j,
excute 13:50:12.718653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.721672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1)]
excute 13:50:12.724663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:12.728650 line       494                         if (i == j):
excute 13:50:12.732637 line       496                         i_j_list.append((
excute 13:50:12.736630 line       497                             i, j,
excute 13:50:12.739618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.743577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0)]
excute 13:50:12.746570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:12.750559 line       494                         if (i == j):
excute 13:50:12.755548 line       496                         i_j_list.append((
excute 13:50:12.760562 line       497                             i, j,
excute 13:50:12.764521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.767516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2)]
excute 13:50:12.771503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:12.775493 line       494                         if (i == j):
excute 13:50:12.779481 line       496                         i_j_list.append((
excute 13:50:12.782474 line       497                             i, j,
excute 13:50:12.786463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.790453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0)]
excute 13:50:12.794442 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:12.798432 line       494                         if (i == j):
excute 13:50:12.802419 line       496                         i_j_list.append((
excute 13:50:12.806410 line       497                             i, j,
excute 13:50:12.809402 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.813391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:12.817380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:12.820408 line       494                         if (i == j):
excute 13:50:12.824395 line       495                             continue
excute 13:50:12.828381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:12.831376 line       494                         if (i == j):
excute 13:50:12.835363 line       496                         i_j_list.append((
excute 13:50:12.839327 line       497                             i, j,
excute 13:50:12.842348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.846304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:12.854281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:12.859268 line       494                         if (i == j):
excute 13:50:12.865250 line       496                         i_j_list.append((
excute 13:50:12.869242 line       497                             i, j,
excute 13:50:12.873231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.877220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:12.880213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:12.884203 line       494                         if (i == j):
excute 13:50:12.888191 line       496                         i_j_list.append((
excute 13:50:12.892178 line       497                             i, j,
excute 13:50:12.895173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.898165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:12.902154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:12.907139 line       494                         if (i == j):
excute 13:50:12.910131 line       496                         i_j_list.append((
excute 13:50:12.914122 line       497                             i, j,
excute 13:50:12.921024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.925025 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:12.928038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:12.931999 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:12.935021 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:12.938985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:12.942982 line       494                         if (i == j):
excute 13:50:12.946961 line       496                         i_j_list.append((
excute 13:50:12.950951 line       497                             i, j,
excute 13:50:12.954938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.957965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1)]
excute 13:50:12.961952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:12.970927 line       494                         if (i == j):
excute 13:50:12.974882 line       496                         i_j_list.append((
excute 13:50:12.978872 line       497                             i, j,
excute 13:50:12.982864 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:12.987850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0)]
excute 13:50:12.991869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:12.995828 line       494                         if (i == j):
excute 13:50:12.999832 line       496                         i_j_list.append((
excute 13:50:13.002840 line       497                             i, j,
excute 13:50:13.006829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.010819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2)]
excute 13:50:13.013810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:13.017800 line       494                         if (i == j):
excute 13:50:13.021789 line       496                         i_j_list.append((
excute 13:50:13.025779 line       497                             i, j,
excute 13:50:13.028770 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.032760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0)]
excute 13:50:13.035752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:13.039742 line       494                         if (i == j):
excute 13:50:13.043731 line       496                         i_j_list.append((
excute 13:50:13.047720 line       497                             i, j,
excute 13:50:13.050711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.054669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:50:13.057693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:13.061682 line       494                         if (i == j):
excute 13:50:13.066639 line       496                         i_j_list.append((
excute 13:50:13.070627 line       497                             i, j,
excute 13:50:13.074616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.077608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2)]
excute 13:50:13.081597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:13.085587 line       494                         if (i == j):
excute 13:50:13.089578 line       495                             continue
excute 13:50:13.092568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:13.096558 line       494                         if (i == j):
excute 13:50:13.099549 line       496                         i_j_list.append((
excute 13:50:13.103538 line       497                             i, j,
excute 13:50:13.106530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.110520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0)]
excute 13:50:13.113511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:13.117501 line       494                         if (i == j):
excute 13:50:13.121492 line       496                         i_j_list.append((
excute 13:50:13.124482 line       497                             i, j,
excute 13:50:13.127474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.131464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:50:13.134458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:13.139460 line       494                         if (i == j):
excute 13:50:13.143435 line       496                         i_j_list.append((
excute 13:50:13.147422 line       497                             i, j,
excute 13:50:13.150445 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.154435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:50:13.158394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:13.162382 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:13.166372 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:13.172388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:13.176375 line       494                         if (i == j):
excute 13:50:13.180367 line       496                         i_j_list.append((
excute 13:50:13.183357 line       497                             i, j,
excute 13:50:13.186350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.190338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1)]
excute 13:50:13.193330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:13.197320 line       494                         if (i == j):
excute 13:50:13.201312 line       496                         i_j_list.append((
excute 13:50:13.205300 line       497                             i, j,
excute 13:50:13.208290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.211282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0)]
excute 13:50:13.215273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:13.219232 line       494                         if (i == j):
excute 13:50:13.223233 line       496                         i_j_list.append((
excute 13:50:13.226242 line       497                             i, j,
excute 13:50:13.230232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.234189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2)]
excute 13:50:13.237181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:13.241170 line       494                         if (i == j):
excute 13:50:13.245159 line       496                         i_j_list.append((
excute 13:50:13.249149 line       497                             i, j,
excute 13:50:13.252141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.256130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0)]
excute 13:50:13.259122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:13.263111 line       494                         if (i == j):
excute 13:50:13.267105 line       496                         i_j_list.append((
excute 13:50:13.270093 line       497                             i, j,
excute 13:50:13.275091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.279071 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:50:13.282063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:13.286053 line       494                         if (i == j):
excute 13:50:13.290073 line       496                         i_j_list.append((
excute 13:50:13.295029 line       497                             i, j,
excute 13:50:13.298019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.301010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2)]
excute 13:50:13.305000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:13.309990 line       494                         if (i == j):
excute 13:50:13.313977 line       496                         i_j_list.append((
excute 13:50:13.317967 line       497                             i, j,
excute 13:50:13.321956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.329934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0)]
excute 13:50:13.342903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:13.349880 line       494                         if (i == j):
excute 13:50:13.356864 line       495                             continue
excute 13:50:13.364840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:13.367832 line       494                         if (i == j):
excute 13:50:13.372820 line       496                         i_j_list.append((
excute 13:50:13.377808 line       497                             i, j,
excute 13:50:13.382807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.386783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:50:13.390772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:13.394761 line       494                         if (i == j):
excute 13:50:13.398751 line       496                         i_j_list.append((
excute 13:50:13.401741 line       497                             i, j,
excute 13:50:13.405732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.408723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:50:13.411715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:13.415704 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:13.419694 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:13.423684 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:13.427673 line       494                         if (i == j):
excute 13:50:13.431662 line       496                         i_j_list.append((
excute 13:50:13.434654 line       497                             i, j,
excute 13:50:13.441635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.444627 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1)]
excute 13:50:13.448617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:13.453604 line       494                         if (i == j):
excute 13:50:13.457593 line       496                         i_j_list.append((
excute 13:50:13.462580 line       497                             i, j,
excute 13:50:13.465571 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.469561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0)]
excute 13:50:13.473550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:13.478539 line       494                         if (i == j):
excute 13:50:13.486517 line       496                         i_j_list.append((
excute 13:50:13.489507 line       497                             i, j,
excute 13:50:13.493496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.496488 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2)]
excute 13:50:13.500477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:13.503469 line       494                         if (i == j):
excute 13:50:13.507458 line       496                         i_j_list.append((
excute 13:50:13.511448 line       497                             i, j,
excute 13:50:13.515437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.518429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0)]
excute 13:50:13.521422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:13.525410 line       494                         if (i == j):
excute 13:50:13.529400 line       496                         i_j_list.append((
excute 13:50:13.532392 line       497                             i, j,
excute 13:50:13.536382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.540372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0)]
excute 13:50:13.544361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:13.548351 line       494                         if (i == j):
excute 13:50:13.553344 line       496                         i_j_list.append((
excute 13:50:13.557327 line       497                             i, j,
excute 13:50:13.560318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.565305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2)]
excute 13:50:13.569294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:13.573284 line       494                         if (i == j):
excute 13:50:13.577275 line       496                         i_j_list.append((
excute 13:50:13.580265 line       497                             i, j,
excute 13:50:13.586249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.589241 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0)]
excute 13:50:13.593230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:13.597219 line       494                         if (i == j):
excute 13:50:13.600210 line       496                         i_j_list.append((
excute 13:50:13.604200 line       497                             i, j,
excute 13:50:13.608191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.611183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0)]
excute 13:50:13.615172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:13.619162 line       494                         if (i == j):
excute 13:50:13.624149 line       495                             continue
excute 13:50:13.628138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:13.631130 line       494                         if (i == j):
excute 13:50:13.635119 line       496                         i_j_list.append((
excute 13:50:13.639108 line       497                             i, j,
excute 13:50:13.642100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.646089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0)]
excute 13:50:13.650078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:13.654068 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:13.658056 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:13.661048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:13.665037 line       494                         if (i == j):
excute 13:50:13.669026 line       496                         i_j_list.append((
excute 13:50:13.673016 line       497                             i, j,
excute 13:50:13.676008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.679997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1)]
excute 13:50:13.682989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:13.687977 line       494                         if (i == j):
excute 13:50:13.691998 line       496                         i_j_list.append((
excute 13:50:13.695987 line       497                             i, j,
excute 13:50:13.698979 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.702968 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0)]
excute 13:50:13.706927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:13.711915 line       494                         if (i == j):
excute 13:50:13.716901 line       496                         i_j_list.append((
excute 13:50:13.721886 line       497                             i, j,
excute 13:50:13.725876 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.729867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2)]
excute 13:50:13.733856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:13.737849 line       494                         if (i == j):
excute 13:50:13.742831 line       496                         i_j_list.append((
excute 13:50:13.745823 line       497                             i, j,
excute 13:50:13.749813 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.752805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2), (9, 3, -1, 0)]
excute 13:50:13.756794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:13.761782 line       494                         if (i == j):
excute 13:50:13.765769 line       496                         i_j_list.append((
excute 13:50:13.769757 line       497                             i, j,
excute 13:50:13.772749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.776739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2), (9, 3, -1, 0), (9, 4, -1, 0)]
excute 13:50:13.779731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:13.783720 line       494                         if (i == j):
excute 13:50:13.788708 line       496                         i_j_list.append((
excute 13:50:13.793696 line       497                             i, j,
excute 13:50:13.797682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.800677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2), (9, 3, -1, 0), (9, 4, -1, 0), (9, 5, -1, 2)]
excute 13:50:13.804666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:13.808653 line       494                         if (i == j):
excute 13:50:13.812648 line       496                         i_j_list.append((
excute 13:50:13.816634 line       497                             i, j,
excute 13:50:13.820624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.824613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2), (9, 3, -1, 0), (9, 4, -1, 0), (9, 5, -1, 2), (9, 6, -1, 0)]
excute 13:50:13.827605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:13.831594 line       494                         if (i == j):
excute 13:50:13.835583 line       496                         i_j_list.append((
excute 13:50:13.839573 line       497                             i, j,
excute 13:50:13.843562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.847551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2), (9, 3, -1, 0), (9, 4, -1, 0), (9, 5, -1, 2), (9, 6, -1, 0), (9, 7, -1, 0)]
excute 13:50:13.851541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:13.855531 line       494                         if (i == j):
excute 13:50:13.859519 line       496                         i_j_list.append((
excute 13:50:13.863508 line       497                             i, j,
excute 13:50:13.866500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:13.870489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 2), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 1), (1, 2, 2, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 2), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 1), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 2), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 1), (3, 1, 6, 0), (3, 2, 6, 2), (3, 4, 6, 0), (3, 5, 6, 2), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 1), (4, 1, 3, 0), (4, 2, 3, 2), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 1), (5, 1, 2, 0), (5, 2, 2, 2), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 0, 1), (6, 1, 0, 0), (6, 2, 0, 2), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 2), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 1), (7, 1, -2, 0), (7, 2, -2, 2), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, -2, 1), (8, 1, -2, 0), (8, 2, -2, 2), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 2), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (9, 0, -1, 1), (9, 1, -1, 0), (9, 2, -1, 2), (9, 3, -1, 0), (9, 4, -1, 0), (9, 5, -1, 2), (9, 6, -1, 0), (9, 7, -1, 0), (9, 8, -1, 0)]
excute 13:50:13.873481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:13.877471 line       494                         if (i == j):
excute 13:50:13.882456 line       495                             continue
excute 13:50:13.885449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:13.889440 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:13.893430 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 1, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 1, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 0), (7, 0, -2, 1), (8, 0, -2, 1), (7, 2, -2, 2), (7, 5, -2, 2), (8, 2, -2, 2), (8, 5, -2, 2), (9, 1, -1, 0), (9, 3, -1, 0), (9, 4, -1, 0), (9, 6, -1, 0), (9, 7, -1, 0), (9, 8, -1, 0), (9, 0, -1, 1), (9, 2, -1, 2), (9, 5, -1, 2), (6, 1, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (6, 0, 0, 1), (6, 2, 0, 2), (6, 5, 0, 2), (0, 1, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (2, 0, 1, 1), (0, 2, 1, 2), (0, 5, 1, 2), (2, 5, 1, 2), (1, 3, 2, 0), (1, 4, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (5, 1, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (1, 0, 2, 1), (5, 0, 2, 1), (1, 2, 2, 2), (1, 5, 2, 2), (5, 2, 2, 2), (4, 1, 3, 0), (4, 3, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (4, 0, 3, 1), (4, 2, 3, 2), (4, 5, 3, 2), (3, 1, 6, 0), (3, 4, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (3, 0, 6, 1), (3, 2, 6, 2), (3, 5, 6, 2)]
excute 13:50:13.896420 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:13.900410 line       505                     if (self.RELOCATE):
excute 13:50:13.904399 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:13.908419 line       505                     if (self.RELOCATE):
excute 13:50:13.912409 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:13.915401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:50:13.919389 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:13.923380 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:13.926370 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:13.930360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:50:13.934350 line       556                     i = i_j[0]
excute 13:50:13.938341 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:13.941332 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:13.946287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:50:13.951309 line       556                     i = i_j[0]
excute 13:50:13.956259 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:13.959285 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:13.963272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:50:13.966232 line       556                     i = i_j[0]
excute 13:50:13.970222 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:13.974210 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:13.978200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:50:13.982193 line       556                     i = i_j[0]
excute 13:50:13.987177 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:13.990201 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:13.995156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:50:13.999145 line       556                     i = i_j[0]
excute 13:50:14.003134 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:14.006158 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.011114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -2, 0)
excute 13:50:14.014136 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:14.018096 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:14.022084 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.026074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -2, 0)
excute 13:50:14.029064 line       556                     i = i_j[0]
excute 13:50:14.033053 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:14.036046 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.040034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -2, 0)
excute 13:50:14.044024 line       556                     i = i_j[0]
excute 13:50:14.048014 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:14.051006 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.054995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -2, 0)
excute 13:50:14.058984 line       556                     i = i_j[0]
excute 13:50:14.062974 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:14.065966 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.069956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -2, 0)
excute 13:50:14.073945 line       556                     i = i_j[0]
excute 13:50:14.077934 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:14.080927 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.085916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -2, 0)
excute 13:50:14.088906 line       556                     i = i_j[0]
excute 13:50:14.093894 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:14.097884 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.102869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 1)
excute 13:50:14.106857 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:14.110845 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:14.114835 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.118825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -2, 1)
excute 13:50:14.121816 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:14.125807 line       557                     j = i_j[1]
excute 13:50:14.129795 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.133817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 2)
excute 13:50:14.136808 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:14.140800 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:14.144757 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.149741 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 2)
excute 13:50:14.153737 line       556                     i = i_j[0]
excute 13:50:14.157723 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:14.161711 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.165701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -2, 2)
excute 13:50:14.169690 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:14.173685 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:14.178666 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.182657 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 162
excute 13:50:14.186644 line       560                         if (t_tmp > self.TIME):
excute 13:50:14.190635 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:14.194622 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:14.197616 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 194
excute 13:50:14.202601 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:14.206590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -2, 2)
excute 13:50:14.210579 line       556                     i = i_j[0]
excute 13:50:14.214569 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:14.217560 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.221550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, -1, 0)
excute 13:50:14.224541 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:14.228531 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:14.232520 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.236514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, -1, 0)
excute 13:50:14.239501 line       556                     i = i_j[0]
excute 13:50:14.243491 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:14.246483 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.250482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, -1, 0)
excute 13:50:14.254461 line       556                     i = i_j[0]
excute 13:50:14.262441 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:14.269421 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.276404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, -1, 0)
excute 13:50:14.280395 line       556                     i = i_j[0]
excute 13:50:14.284382 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:14.288371 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.293374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, -1, 0)
excute 13:50:14.297349 line       556                     i = i_j[0]
excute 13:50:14.301338 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:14.306323 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.310313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, -1, 0)
excute 13:50:14.314306 line       556                     i = i_j[0]
excute 13:50:14.317294 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:14.321283 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.325274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, -1, 1)
excute 13:50:14.334277 line       556                     i = i_j[0]
excute 13:50:14.339236 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:14.344222 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.348212 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:50:14.351203 line       560                         if (t_tmp > self.TIME):
excute 13:50:14.356192 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:14.360179 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:14.366165 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:14.374143 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:14.377134 line       569                                     available_vhecles[i][t],
excute 13:50:14.385113 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:14.392095 line       571                                     self.S_capacities[j],
excute 13:50:14.395087 line       572                                     demands[t][i][j],
excute 13:50:14.400073 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 154
calc_contract     13:50:14.403064 call       352     def caluculate_contract(
calc_contract     13:50:14.407054 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:14.408053 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:14.409050 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:14.410048 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:14.411045 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:14.411045 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:14.412042 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rse_tmp = 0
excute 13:50:14.413040 line       575                                 rsf += rsf_tmp
excute 13:50:14.417029 line       576                                 rse += rse_tmp
excute 13:50:14.421017 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 154
move_cars     Starting var:.. t_tmp = 161
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:14.424008 call       388     def move_cars(
move_cars     13:50:14.427999 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:50:14.429993 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:50:14.431988 line       399         return available_vhecles
move_cars     13:50:14.432986 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:14.435978 line       579                                 success += can_contract
excute Modified var:.. success = 70
excute 13:50:14.438969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, -1, 2)
excute 13:50:14.443957 line       556                     i = i_j[0]
excute 13:50:14.448947 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:14.451934 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.456921 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 160
excute 13:50:14.459912 line       560                         if (t_tmp > self.TIME):
excute 13:50:14.467893 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:14.474905 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:14.477867 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:14.482855 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:14.485843 line       569                                     available_vhecles[i][t],
excute 13:50:14.489832 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:14.493823 line       571                                     self.S_capacities[j],
excute 13:50:14.496814 line       572                                     demands[t][i][j],
excute 13:50:14.499806 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 154
calc_contract     13:50:14.503795 call       352     def caluculate_contract(
calc_contract     13:50:14.506787 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:14.507786 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:14.509780 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:14.510778 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:14.511776 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:14.512772 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:14.513769 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:14.514767 line       575                                 rsf += rsf_tmp
excute 13:50:14.517757 line       576                                 rse += rse_tmp
excute 13:50:14.520750 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 2
move_cars     Starting var:.. t = 154
move_cars     Starting var:.. t_tmp = 160
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:14.524739 call       388     def move_cars(
move_cars     13:50:14.528729 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     13:50:14.529727 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:14.531721 line       399         return available_vhecles
move_cars     13:50:14.532719 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:50:14.534713 line       579                                 success += can_contract
excute Modified var:.. success = 71
excute 13:50:14.538702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, -1, 2)
excute 13:50:14.542691 line       556                     i = i_j[0]
excute 13:50:14.546680 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:14.550671 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.553661 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 167
excute 13:50:14.557651 line       560                         if (t_tmp > self.TIME):
excute 13:50:14.561641 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:14.566628 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:14.570617 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:14.573608 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:14.577599 line       569                                     available_vhecles[i][t],
excute 13:50:14.580590 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:14.583582 line       571                                     self.S_capacities[j],
excute 13:50:14.587571 line       572                                     demands[t][i][j],
excute 13:50:14.590563 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 154
calc_contract     13:50:14.594553 call       352     def caluculate_contract(
calc_contract     13:50:14.597546 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:14.597546 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:14.598543 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:14.599541 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:14.599541 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:14.600538 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:14.601535 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:14.602532 line       575                                 rsf += rsf_tmp
excute 13:50:14.605524 line       576                                 rse += rse_tmp
excute 13:50:14.609513 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 154
move_cars     Starting var:.. t_tmp = 167
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:14.613504 call       388     def move_cars(
move_cars     13:50:14.618492 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     13:50:14.620484 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:14.621483 line       399         return available_vhecles
move_cars     13:50:14.623490 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute 13:50:14.625505 line       579                                 success += can_contract
excute Modified var:.. success = 72
excute 13:50:14.629495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:50:14.633449 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:14.637474 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:14.641460 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.645451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:50:14.649432 line       556                     i = i_j[0]
excute 13:50:14.653408 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:14.656420 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.660408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:50:14.664398 line       556                     i = i_j[0]
excute 13:50:14.669356 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:14.672346 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.676336 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:50:14.680325 line       556                     i = i_j[0]
excute 13:50:14.684314 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:14.688304 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.692293 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:50:14.696283 line       556                     i = i_j[0]
excute 13:50:14.700272 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:14.704261 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.709246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:50:14.713238 line       556                     i = i_j[0]
excute 13:50:14.718255 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:14.722239 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.726202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 1)
excute 13:50:14.729224 line       556                     i = i_j[0]
excute 13:50:14.733184 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:14.737171 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.740195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 2)
excute 13:50:14.744185 line       556                     i = i_j[0]
excute 13:50:14.748142 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:14.751165 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.756142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 2)
excute 13:50:14.759145 line       556                     i = i_j[0]
excute 13:50:14.763102 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:14.767091 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.771082 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 164
excute 13:50:14.774073 line       560                         if (t_tmp > self.TIME):
excute 13:50:14.778063 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:14.782052 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:14.785043 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:14.789032 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:14.792027 line       569                                     available_vhecles[i][t],
excute 13:50:14.796016 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:14.800006 line       571                                     self.S_capacities[j],
excute 13:50:14.802998 line       572                                     demands[t][i][j],
excute 13:50:14.806986 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 154
calc_contract     13:50:14.810976 call       352     def caluculate_contract(
calc_contract     13:50:14.813967 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:14.814965 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:14.815962 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:14.816992 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:14.816992 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:14.817958 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:14.819951 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:14.820948 line       575                                 rsf += rsf_tmp
excute 13:50:14.824936 line       576                                 rse += rse_tmp
excute 13:50:14.827929 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 154
move_cars     Starting var:.. t_tmp = 164
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:14.831917 call       388     def move_cars(
move_cars     13:50:14.835908 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:14.836906 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:14.837903 line       399         return available_vhecles
move_cars     13:50:14.839897 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute 13:50:14.841892 line       579                                 success += can_contract
excute Modified var:.. success = 73
excute 13:50:14.845880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:14.849902 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:14.853892 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:14.857881 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.861869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:14.865859 line       556                     i = i_j[0]
excute 13:50:14.869818 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:14.872840 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.876829 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:50:14.880805 line       556                     i = i_j[0]
excute 13:50:14.884777 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:14.887801 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.891760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:14.894782 line       556                     i = i_j[0]
excute 13:50:14.898771 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:14.902740 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.906719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:50:14.909741 line       556                     i = i_j[0]
excute 13:50:14.913731 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:14.917722 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.921680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:14.925700 line       556                     i = i_j[0]
excute 13:50:14.929688 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:14.933678 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.937668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:50:14.940659 line       556                     i = i_j[0]
excute 13:50:14.944652 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:14.949605 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.953592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:50:14.957583 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:14.961571 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:14.965561 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.969551 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:50:14.972542 line       556                     i = i_j[0]
excute 13:50:14.976531 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:14.980523 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:14.985507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:50:14.988499 line       556                     i = i_j[0]
excute 13:50:14.992488 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:14.996478 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.000468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:50:15.003459 line       556                     i = i_j[0]
excute 13:50:15.007449 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:15.011472 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.015461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:50:15.018451 line       556                     i = i_j[0]
excute 13:50:15.022445 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:15.027396 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.031387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:50:15.035376 line       556                     i = i_j[0]
excute 13:50:15.039365 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:15.043355 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.047344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:50:15.051333 line       556                     i = i_j[0]
excute 13:50:15.056321 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:15.059312 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.064298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 1)
excute 13:50:15.067291 line       556                     i = i_j[0]
excute 13:50:15.071280 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:15.075269 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.079258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 2)
excute 13:50:15.083248 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:15.087236 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:15.091225 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.095214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 2)
excute 13:50:15.098238 line       556                     i = i_j[0]
excute 13:50:15.102198 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:15.106212 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.109208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 2)
excute 13:50:15.113198 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:15.117157 line       557                     j = i_j[1]
excute 13:50:15.121182 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.124172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:15.128128 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:15.132148 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:15.137113 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.140126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:15.147077 line       556                     i = i_j[0]
excute 13:50:15.151066 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:15.156052 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.164031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:15.168019 line       556                     i = i_j[0]
excute 13:50:15.175999 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:15.179988 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.183977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:15.186970 line       556                     i = i_j[0]
excute 13:50:15.190960 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:15.194949 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.198938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:15.202928 line       556                     i = i_j[0]
excute 13:50:15.206918 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:15.210907 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.214897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:15.217888 line       556                     i = i_j[0]
excute 13:50:15.221877 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:15.225867 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.230861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:15.234872 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:15.238862 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:15.242851 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.247807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:15.254787 line       556                     i = i_j[0]
excute 13:50:15.262766 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:15.270746 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.274735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:15.277727 line       556                     i = i_j[0]
excute 13:50:15.283711 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:15.286702 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.290691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:15.294681 line       556                     i = i_j[0]
excute 13:50:15.298683 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:15.302660 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.305651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:15.309640 line       556                     i = i_j[0]
excute 13:50:15.313630 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:15.316623 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.320612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:15.324602 line       556                     i = i_j[0]
excute 13:50:15.332582 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:15.337570 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.343555 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:15.346574 line       556                     i = i_j[0]
excute 13:50:15.350531 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:15.356518 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.361503 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 1)
excute 13:50:15.364494 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:15.368486 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:15.372473 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.376462 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 1)
excute 13:50:15.380452 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:15.384441 line       557                     j = i_j[1]
excute 13:50:15.388431 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.392420 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 2)
excute 13:50:15.396409 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:15.400399 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:15.405385 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.409376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 2)
excute 13:50:15.412367 line       556                     i = i_j[0]
excute 13:50:15.416356 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:15.420345 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.424336 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 2)
excute 13:50:15.428325 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:15.432316 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:15.438299 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.443286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:15.448271 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:15.453260 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:15.457248 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.462241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:15.465226 line       556                     i = i_j[0]
excute 13:50:15.469215 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:15.472207 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.476197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:15.480185 line       556                     i = i_j[0]
excute 13:50:15.485174 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:15.488164 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.492154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:15.496142 line       556                     i = i_j[0]
excute 13:50:15.499135 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:15.503125 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.507114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:15.510106 line       556                     i = i_j[0]
excute 13:50:15.514096 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:15.518085 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.521076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:50:15.525066 line       556                     i = i_j[0]
excute 13:50:15.529056 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:15.532047 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.536036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 1)
excute 13:50:15.540025 line       556                     i = i_j[0]
excute 13:50:15.545012 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:15.549001 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.552991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 2)
excute 13:50:15.556981 line       556                     i = i_j[0]
excute 13:50:15.560970 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:15.564960 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.568950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 2)
excute 13:50:15.572938 line       556                     i = i_j[0]
excute 13:50:15.576928 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:15.580917 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.584908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:50:15.587899 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:15.591888 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:15.596877 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.600864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:50:15.604853 line       556                     i = i_j[0]
excute 13:50:15.608844 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:15.612830 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.615824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:15.619814 line       556                     i = i_j[0]
excute 13:50:15.623803 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:15.626794 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.630784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:50:15.634773 line       556                     i = i_j[0]
excute 13:50:15.638763 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:15.642752 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.646743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:15.650730 line       556                     i = i_j[0]
excute 13:50:15.654720 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:15.658709 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.661700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:50:15.665690 line       556                     i = i_j[0]
excute 13:50:15.669678 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:15.673670 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.677672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 1)
excute 13:50:15.680681 line       556                     i = i_j[0]
excute 13:50:15.684639 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:15.687662 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.691651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 2)
excute 13:50:15.695640 line       556                     i = i_j[0]
excute 13:50:15.699632 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:15.702625 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.706611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 2)
excute 13:50:15.710601 line       556                     i = i_j[0]
excute 13:50:15.715559 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:15.718549 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:15.722540 line       555                 for i_j in i_j_list:
excute 13:50:15.726528 line       581             self.write_matrix(
excute 13:50:15.729518 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:15.733521 line       583                 result_file_path,
excute 13:50:15.736500 line       584                 mode='a'
excute 13:50:15.744479 line       488         for t in time_steps:
excute Modified var:.. t = 155
excute 13:50:15.750465 line       489             if (t != self.TIME + 1):
excute 13:50:15.756450 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:15.761435 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:15.768417 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:15.774403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:15.778390 line       494                         if (i == j):
excute 13:50:15.785370 line       495                             continue
excute 13:50:15.790359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:15.794348 line       494                         if (i == j):
excute 13:50:15.801330 line       496                         i_j_list.append((
excute 13:50:15.807312 line       497                             i, j,
excute 13:50:15.813294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.823279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:15.827259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:15.832245 line       494                         if (i == j):
excute 13:50:15.836235 line       496                         i_j_list.append((
excute 13:50:15.841245 line       497                             i, j,
excute 13:50:15.847204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.854193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1)]
excute 13:50:15.858175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:15.863161 line       494                         if (i == j):
excute 13:50:15.867151 line       496                         i_j_list.append((
excute 13:50:15.873135 line       497                             i, j,
excute 13:50:15.879120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.884105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0)]
excute 13:50:15.888096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:15.896073 line       494                         if (i == j):
excute 13:50:15.900062 line       496                         i_j_list.append((
excute 13:50:15.903055 line       497                             i, j,
excute 13:50:15.908052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.911034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:50:15.915026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:15.919013 line       494                         if (i == j):
excute 13:50:15.923001 line       496                         i_j_list.append((
excute 13:50:15.926992 line       497                             i, j,
excute 13:50:15.929982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.933972 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:50:15.936964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:15.940957 line       494                         if (i == j):
excute 13:50:15.944943 line       496                         i_j_list.append((
excute 13:50:15.949929 line       497                             i, j,
excute 13:50:15.954919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.957909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:15.961929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:15.968882 line       494                         if (i == j):
excute 13:50:15.972870 line       496                         i_j_list.append((
excute 13:50:15.976888 line       497                             i, j,
excute 13:50:15.980879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:15.983870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2)]
excute 13:50:15.987828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:15.991818 line       494                         if (i == j):
excute 13:50:15.995809 line       496                         i_j_list.append((
excute 13:50:15.999798 line       497                             i, j,
excute 13:50:16.004787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.008771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0)]
excute 13:50:16.012763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:16.017751 line       494                         if (i == j):
excute 13:50:16.021737 line       496                         i_j_list.append((
excute 13:50:16.025729 line       497                             i, j,
excute 13:50:16.029718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.032708 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:50:16.037695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:16.045675 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:16.051659 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:16.058651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:16.061631 line       494                         if (i == j):
excute 13:50:16.065621 line       496                         i_j_list.append((
excute 13:50:16.068613 line       497                             i, j,
excute 13:50:16.072601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.075594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0)]
excute 13:50:16.078586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:16.082576 line       494                         if (i == j):
excute 13:50:16.086565 line       495                             continue
excute 13:50:16.089557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:16.093547 line       494                         if (i == j):
excute 13:50:16.096538 line       496                         i_j_list.append((
excute 13:50:16.100528 line       497                             i, j,
excute 13:50:16.103521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.107510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1)]
excute 13:50:16.111499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:16.115488 line       494                         if (i == j):
excute 13:50:16.119478 line       496                         i_j_list.append((
excute 13:50:16.123466 line       497                             i, j,
excute 13:50:16.130447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.134436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0)]
excute 13:50:16.139423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:16.142415 line       494                         if (i == j):
excute 13:50:16.146406 line       496                         i_j_list.append((
excute 13:50:16.149397 line       497                             i, j,
excute 13:50:16.153386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.157375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:16.161365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:16.165356 line       494                         if (i == j):
excute 13:50:16.169345 line       496                         i_j_list.append((
excute 13:50:16.173334 line       497                             i, j,
excute 13:50:16.177323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.180315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:16.184305 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:16.188294 line       494                         if (i == j):
excute 13:50:16.192284 line       496                         i_j_list.append((
excute 13:50:16.196273 line       497                             i, j,
excute 13:50:16.199265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.203254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:16.206246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:16.210235 line       494                         if (i == j):
excute 13:50:16.215225 line       496                         i_j_list.append((
excute 13:50:16.218213 line       497                             i, j,
excute 13:50:16.222203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.226193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2)]
excute 13:50:16.230181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:16.233174 line       494                         if (i == j):
excute 13:50:16.238159 line       496                         i_j_list.append((
excute 13:50:16.241153 line       497                             i, j,
excute 13:50:16.244144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.248133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0)]
excute 13:50:16.252123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:16.256113 line       494                         if (i == j):
excute 13:50:16.261099 line       496                         i_j_list.append((
excute 13:50:16.265087 line       497                             i, j,
excute 13:50:16.269077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.272069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:16.275061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:16.279050 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:16.283040 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:16.286031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:16.290021 line       494                         if (i == j):
excute 13:50:16.294011 line       496                         i_j_list.append((
excute 13:50:16.298000 line       497                             i, j,
excute 13:50:16.300992 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.303983 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:50:16.307973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:16.311962 line       494                         if (i == j):
excute 13:50:16.314954 line       496                         i_j_list.append((
excute 13:50:16.318974 line       497                             i, j,
excute 13:50:16.321966 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.326922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:50:16.333904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:16.340886 line       494                         if (i == j):
excute 13:50:16.346869 line       495                             continue
excute 13:50:16.349893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:16.353858 line       494                         if (i == j):
excute 13:50:16.360833 line       496                         i_j_list.append((
excute 13:50:16.366816 line       497                             i, j,
excute 13:50:16.371806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.376788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:50:16.384768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:16.392746 line       494                         if (i == j):
excute 13:50:16.399728 line       496                         i_j_list.append((
excute 13:50:16.407705 line       497                             i, j,
excute 13:50:16.412693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.419673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:50:16.423666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:16.430659 line       494                         if (i == j):
excute 13:50:16.435632 line       496                         i_j_list.append((
excute 13:50:16.440619 line       497                             i, j,
excute 13:50:16.444609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.449595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:50:16.457574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:16.461563 line       494                         if (i == j):
excute 13:50:16.466558 line       496                         i_j_list.append((
excute 13:50:16.474531 line       497                             i, j,
excute 13:50:16.479515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.487492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:50:16.494474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:16.505446 line       494                         if (i == j):
excute 13:50:16.514421 line       496                         i_j_list.append((
excute 13:50:16.520405 line       497                             i, j,
excute 13:50:16.527387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.533371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2)]
excute 13:50:16.541349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:16.547332 line       494                         if (i == j):
excute 13:50:16.553316 line       496                         i_j_list.append((
excute 13:50:16.558303 line       497                             i, j,
excute 13:50:16.566281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.574262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0)]
excute 13:50:16.580245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:16.589222 line       494                         if (i == j):
excute 13:50:16.595206 line       496                         i_j_list.append((
excute 13:50:16.603184 line       497                             i, j,
excute 13:50:16.611161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.618144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:50:16.626122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:16.634102 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:16.640086 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:16.647066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:16.655044 line       494                         if (i == j):
excute 13:50:16.661028 line       496                         i_j_list.append((
excute 13:50:16.668011 line       497                             i, j,
excute 13:50:16.674992 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.681974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0)]
excute 13:50:16.688954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:16.697930 line       494                         if (i == j):
excute 13:50:16.703914 line       496                         i_j_list.append((
excute 13:50:16.710896 line       497                             i, j,
excute 13:50:16.717877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.725854 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:50:16.731840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:16.738821 line       494                         if (i == j):
excute 13:50:16.746800 line       496                         i_j_list.append((
excute 13:50:16.752783 line       497                             i, j,
excute 13:50:16.758767 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.764752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1)]
excute 13:50:16.769739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:16.778714 line       494                         if (i == j):
excute 13:50:16.787691 line       495                             continue
excute 13:50:16.794671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:16.799658 line       494                         if (i == j):
excute 13:50:16.806639 line       496                         i_j_list.append((
excute 13:50:16.810630 line       497                             i, j,
excute 13:50:16.813620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.817610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0)]
excute 13:50:16.820601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:16.824591 line       494                         if (i == j):
excute 13:50:16.828581 line       496                         i_j_list.append((
excute 13:50:16.831572 line       497                             i, j,
excute 13:50:16.835562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.838553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:50:16.841546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:16.845535 line       494                         if (i == j):
excute 13:50:16.849525 line       496                         i_j_list.append((
excute 13:50:16.853515 line       497                             i, j,
excute 13:50:16.857503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.863487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:50:16.867476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:16.871465 line       494                         if (i == j):
excute 13:50:16.875455 line       496                         i_j_list.append((
excute 13:50:16.878447 line       497                             i, j,
excute 13:50:16.882436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.886427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2)]
excute 13:50:16.889418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:16.893408 line       494                         if (i == j):
excute 13:50:16.897397 line       496                         i_j_list.append((
excute 13:50:16.900389 line       497                             i, j,
excute 13:50:16.903380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.907370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0)]
excute 13:50:16.910361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:16.914351 line       494                         if (i == j):
excute 13:50:16.918341 line       496                         i_j_list.append((
excute 13:50:16.922330 line       497                             i, j,
excute 13:50:16.925322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.928313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0)]
excute 13:50:16.932314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:16.936294 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:16.939284 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:16.943274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:16.946266 line       494                         if (i == j):
excute 13:50:16.952250 line       496                         i_j_list.append((
excute 13:50:16.956272 line       497                             i, j,
excute 13:50:16.960261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.963252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0)]
excute 13:50:16.967241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:16.971199 line       494                         if (i == j):
excute 13:50:16.975191 line       496                         i_j_list.append((
excute 13:50:16.978212 line       497                             i, j,
excute 13:50:16.982171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:16.985194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:16.990184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:16.996133 line       494                         if (i == j):
excute 13:50:17.002118 line       496                         i_j_list.append((
excute 13:50:17.005140 line       497                             i, j,
excute 13:50:17.009129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.012095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1)]
excute 13:50:17.016112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:17.020070 line       494                         if (i == j):
excute 13:50:17.024059 line       496                         i_j_list.append((
excute 13:50:17.027081 line       497                             i, j,
excute 13:50:17.031070 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.034063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0)]
excute 13:50:17.038020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:17.041044 line       494                         if (i == j):
excute 13:50:17.045034 line       495                             continue
excute 13:50:17.049022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:17.052015 line       494                         if (i == j):
excute 13:50:17.056983 line       496                         i_j_list.append((
excute 13:50:17.059993 line       497                             i, j,
excute 13:50:17.063951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.066975 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:17.069967 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:17.074922 line       494                         if (i == j):
excute 13:50:17.077946 line       496                         i_j_list.append((
excute 13:50:17.081935 line       497                             i, j,
excute 13:50:17.084927 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.088916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:17.093873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:17.098861 line       494                         if (i == j):
excute 13:50:17.102854 line       496                         i_j_list.append((
excute 13:50:17.105871 line       497                             i, j,
excute 13:50:17.109860 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.112852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2)]
excute 13:50:17.116822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:17.119833 line       494                         if (i == j):
excute 13:50:17.123823 line       496                         i_j_list.append((
excute 13:50:17.127812 line       497                             i, j,
excute 13:50:17.130804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.134785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0)]
excute 13:50:17.138753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:17.142743 line       494                         if (i == j):
excute 13:50:17.147730 line       496                         i_j_list.append((
excute 13:50:17.151718 line       497                             i, j,
excute 13:50:17.155706 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.159696 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:50:17.162689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:17.167688 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:17.170667 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:17.174657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:17.178646 line       494                         if (i == j):
excute 13:50:17.182636 line       496                         i_j_list.append((
excute 13:50:17.186625 line       497                             i, j,
excute 13:50:17.190614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.195600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:50:17.199590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:17.202580 line       494                         if (i == j):
excute 13:50:17.206569 line       496                         i_j_list.append((
excute 13:50:17.209562 line       497                             i, j,
excute 13:50:17.213551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.216542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:17.219535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:17.223524 line       494                         if (i == j):
excute 13:50:17.227525 line       496                         i_j_list.append((
excute 13:50:17.231514 line       497                             i, j,
excute 13:50:17.234495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.237487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1)]
excute 13:50:17.241479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:17.244468 line       494                         if (i == j):
excute 13:50:17.248457 line       496                         i_j_list.append((
excute 13:50:17.252447 line       497                             i, j,
excute 13:50:17.256437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.259429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0)]
excute 13:50:17.263418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:17.267407 line       494                         if (i == j):
excute 13:50:17.270399 line       496                         i_j_list.append((
excute 13:50:17.274388 line       497                             i, j,
excute 13:50:17.277380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.280372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:17.284361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:17.288353 line       494                         if (i == j):
excute 13:50:17.293338 line       495                             continue
excute 13:50:17.296331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:17.301348 line       494                         if (i == j):
excute 13:50:17.305308 line       496                         i_j_list.append((
excute 13:50:17.309296 line       497                             i, j,
excute 13:50:17.312319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.315310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:17.319301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:17.323291 line       494                         if (i == j):
excute 13:50:17.328246 line       496                         i_j_list.append((
excute 13:50:17.335226 line       497                             i, j,
excute 13:50:17.340245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.345232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2)]
excute 13:50:17.348223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:17.352216 line       494                         if (i == j):
excute 13:50:17.357168 line       496                         i_j_list.append((
excute 13:50:17.361156 line       497                             i, j,
excute 13:50:17.364149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.368138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0)]
excute 13:50:17.371162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:17.376150 line       494                         if (i == j):
excute 13:50:17.380139 line       496                         i_j_list.append((
excute 13:50:17.384097 line       497                             i, j,
excute 13:50:17.387120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.390110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:17.394100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:17.398059 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:17.402049 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:17.406043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:17.409060 line       494                         if (i == j):
excute 13:50:17.413049 line       496                         i_j_list.append((
excute 13:50:17.417040 line       497                             i, j,
excute 13:50:17.420998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.424987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0)]
excute 13:50:17.428977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:17.431969 line       494                         if (i == j):
excute 13:50:17.436970 line       496                         i_j_list.append((
excute 13:50:17.440943 line       497                             i, j,
excute 13:50:17.443937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.447926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:50:17.452914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:17.456901 line       494                         if (i == j):
excute 13:50:17.460890 line       496                         i_j_list.append((
excute 13:50:17.466874 line       497                             i, j,
excute 13:50:17.470895 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.474887 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1)]
excute 13:50:17.478842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:17.483829 line       494                         if (i == j):
excute 13:50:17.487819 line       496                         i_j_list.append((
excute 13:50:17.492804 line       497                             i, j,
excute 13:50:17.497792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.505770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0)]
excute 13:50:17.510758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:17.514749 line       494                         if (i == j):
excute 13:50:17.518737 line       496                         i_j_list.append((
excute 13:50:17.522726 line       497                             i, j,
excute 13:50:17.526716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.529707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:50:17.533697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:17.538685 line       494                         if (i == j):
excute 13:50:17.542671 line       496                         i_j_list.append((
excute 13:50:17.545663 line       497                             i, j,
excute 13:50:17.549652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.552644 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:50:17.556634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:17.560624 line       494                         if (i == j):
excute 13:50:17.564613 line       495                             continue
excute 13:50:17.567604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:17.570597 line       494                         if (i == j):
excute 13:50:17.574586 line       496                         i_j_list.append((
excute 13:50:17.578575 line       497                             i, j,
excute 13:50:17.581567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.585558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2)]
excute 13:50:17.589546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:17.593537 line       494                         if (i == j):
excute 13:50:17.598525 line       496                         i_j_list.append((
excute 13:50:17.601516 line       497                             i, j,
excute 13:50:17.606505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.610492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0)]
excute 13:50:17.614481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:17.618471 line       494                         if (i == j):
excute 13:50:17.622459 line       496                         i_j_list.append((
excute 13:50:17.626455 line       497                             i, j,
excute 13:50:17.629439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.632431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:50:17.636420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:17.640409 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:17.644400 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:17.647391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:17.651380 line       494                         if (i == j):
excute 13:50:17.655370 line       496                         i_j_list.append((
excute 13:50:17.658362 line       497                             i, j,
excute 13:50:17.662351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.665345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0)]
excute 13:50:17.669335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:17.673322 line       494                         if (i == j):
excute 13:50:17.677314 line       496                         i_j_list.append((
excute 13:50:17.680303 line       497                             i, j,
excute 13:50:17.684292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.687285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:17.691275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:17.694265 line       494                         if (i == j):
excute 13:50:17.698256 line       496                         i_j_list.append((
excute 13:50:17.702244 line       497                             i, j,
excute 13:50:17.705236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.710261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1)]
excute 13:50:17.714214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:17.718235 line       494                         if (i == j):
excute 13:50:17.722226 line       496                         i_j_list.append((
excute 13:50:17.725219 line       497                             i, j,
excute 13:50:17.729205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.732197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0)]
excute 13:50:17.736186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:17.740177 line       494                         if (i == j):
excute 13:50:17.744166 line       496                         i_j_list.append((
excute 13:50:17.747157 line       497                             i, j,
excute 13:50:17.751114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.754139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:17.758127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:17.762086 line       494                         if (i == j):
excute 13:50:17.766086 line       496                         i_j_list.append((
excute 13:50:17.769098 line       497                             i, j,
excute 13:50:17.773087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.776079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:17.780068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:17.784060 line       494                         if (i == j):
excute 13:50:17.788049 line       496                         i_j_list.append((
excute 13:50:17.791040 line       497                             i, j,
excute 13:50:17.795029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.798020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:17.802010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:17.806001 line       494                         if (i == j):
excute 13:50:17.809958 line       495                             continue
excute 13:50:17.814943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:17.817935 line       494                         if (i == j):
excute 13:50:17.821924 line       496                         i_j_list.append((
excute 13:50:17.825913 line       497                             i, j,
excute 13:50:17.828906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.831898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:17.835887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:17.839876 line       494                         if (i == j):
excute 13:50:17.843865 line       496                         i_j_list.append((
excute 13:50:17.847855 line       497                             i, j,
excute 13:50:17.850847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.854836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:17.858828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:17.862817 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:17.866806 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:17.871791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:17.874783 line       494                         if (i == j):
excute 13:50:17.878773 line       496                         i_j_list.append((
excute 13:50:17.882762 line       497                             i, j,
excute 13:50:17.885754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.889744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0)]
excute 13:50:17.892735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:17.896726 line       494                         if (i == j):
excute 13:50:17.900714 line       496                         i_j_list.append((
excute 13:50:17.903738 line       497                             i, j,
excute 13:50:17.907695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.910719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0)]
excute 13:50:17.915677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:17.918697 line       494                         if (i == j):
excute 13:50:17.922687 line       496                         i_j_list.append((
excute 13:50:17.926676 line       497                             i, j,
excute 13:50:17.929668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.933657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1)]
excute 13:50:17.936650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:17.940639 line       494                         if (i == j):
excute 13:50:17.944629 line       496                         i_j_list.append((
excute 13:50:17.950581 line       497                             i, j,
excute 13:50:17.953573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.957562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0)]
excute 13:50:17.961552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:17.964543 line       494                         if (i == j):
excute 13:50:17.968532 line       496                         i_j_list.append((
excute 13:50:17.972522 line       497                             i, j,
excute 13:50:17.975514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:17.979503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0)]
excute 13:50:17.982495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:17.986484 line       494                         if (i == j):
excute 13:50:17.990474 line       496                         i_j_list.append((
excute 13:50:17.994464 line       497                             i, j,
excute 13:50:18.000448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.004437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0)]
excute 13:50:18.008427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:18.012417 line       494                         if (i == j):
excute 13:50:18.017404 line       496                         i_j_list.append((
excute 13:50:18.021392 line       497                             i, j,
excute 13:50:18.024383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.028373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0)]
excute 13:50:18.031364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:18.035354 line       494                         if (i == j):
excute 13:50:18.039344 line       496                         i_j_list.append((
excute 13:50:18.042335 line       497                             i, j,
excute 13:50:18.046325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.049317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2)]
excute 13:50:18.053338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:18.057328 line       494                         if (i == j):
excute 13:50:18.061317 line       495                             continue
excute 13:50:18.065306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:18.068298 line       494                         if (i == j):
excute 13:50:18.072287 line       496                         i_j_list.append((
excute 13:50:18.076247 line       497                             i, j,
excute 13:50:18.080236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.083228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0)]
excute 13:50:18.087217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:18.091207 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:18.095196 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:18.099185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:18.103175 line       494                         if (i == j):
excute 13:50:18.108160 line       496                         i_j_list.append((
excute 13:50:18.111154 line       497                             i, j,
excute 13:50:18.115143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.119131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0)]
excute 13:50:18.124120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:18.128107 line       494                         if (i == j):
excute 13:50:18.135088 line       496                         i_j_list.append((
excute 13:50:18.139078 line       497                             i, j,
excute 13:50:18.143066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.147057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:18.150047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:18.154037 line       494                         if (i == j):
excute 13:50:18.168325 line       496                         i_j_list.append((
excute 13:50:18.172312 line       497                             i, j,
excute 13:50:18.176302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.179292 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1)]
excute 13:50:18.183281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:18.187271 line       494                         if (i == j):
excute 13:50:18.190263 line       496                         i_j_list.append((
excute 13:50:18.194251 line       497                             i, j,
excute 13:50:18.197244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.201233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0)]
excute 13:50:18.204225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:18.208267 line       494                         if (i == j):
excute 13:50:18.212259 line       496                         i_j_list.append((
excute 13:50:18.215251 line       497                             i, j,
excute 13:50:18.218243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.224259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:18.228248 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:18.232208 line       494                         if (i == j):
excute 13:50:18.236197 line       496                         i_j_list.append((
excute 13:50:18.240184 line       497                             i, j,
excute 13:50:18.244175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.248164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:18.252155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:18.256143 line       494                         if (i == j):
excute 13:50:18.261131 line       496                         i_j_list.append((
excute 13:50:18.264122 line       497                             i, j,
excute 13:50:18.268111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.272100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:18.276090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:18.280080 line       494                         if (i == j):
excute 13:50:18.284069 line       496                         i_j_list.append((
excute 13:50:18.287061 line       497                             i, j,
excute 13:50:18.292046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.295069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 2)]
excute 13:50:18.299058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:18.303050 line       494                         if (i == j):
excute 13:50:18.307038 line       496                         i_j_list.append((
excute 13:50:18.310029 line       497                             i, j,
excute 13:50:18.313987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:18.317013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 1), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 2), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 2), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 1), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 2), (3, 8, 6, 0), (3, 9, 6, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 2), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 2), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 2), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -2, 0), (8, 1, -2, 0), (8, 2, -2, 1), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 2), (8, 9, -2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 2), (9, 8, 2, 0)]
excute 13:50:18.321000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:18.327951 line       494                         if (i == j):
excute 13:50:18.334933 line       495                             continue
excute 13:50:18.338951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:18.342913 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:18.347898 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -2, 0), (8, 1, -2, 0), (8, 3, -2, 0), (8, 4, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 9, -2, 0), (8, 2, -2, 1), (8, 7, -2, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (7, 2, 0, 1), (0, 1, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (0, 2, 1, 1), (6, 2, 1, 1), (0, 7, 1, 2), (2, 7, 1, 2), (6, 7, 1, 2), (1, 0, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 8, 2, 0), (1, 2, 2, 1), (5, 2, 2, 1), (9, 2, 2, 1), (1, 7, 2, 2), (5, 7, 2, 2), (9, 7, 2, 2), (4, 0, 3, 0), (4, 1, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (4, 2, 3, 1), (4, 7, 3, 2), (3, 0, 6, 0), (3, 1, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 8, 6, 0), (3, 9, 6, 0), (3, 2, 6, 1), (3, 7, 6, 2)]
excute 13:50:18.351886 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:18.355877 line       505                     if (self.RELOCATE):
excute 13:50:18.360865 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:18.364853 line       505                     if (self.RELOCATE):
excute 13:50:18.368856 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:18.372830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -2, 0)
excute 13:50:18.376821 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:18.380811 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:18.384799 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.389786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -2, 0)
excute 13:50:18.394771 line       556                     i = i_j[0]
excute 13:50:18.399758 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:18.403747 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.411729 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -2, 0)
excute 13:50:18.416714 line       556                     i = i_j[0]
excute 13:50:18.421701 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:18.427687 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.432670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -2, 0)
excute 13:50:18.436661 line       556                     i = i_j[0]
excute 13:50:18.443640 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:18.450622 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.455612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -2, 0)
excute 13:50:18.459599 line       556                     i = i_j[0]
excute 13:50:18.463588 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:18.467578 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.475569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -2, 0)
excute 13:50:18.480542 line       556                     i = i_j[0]
excute 13:50:18.484534 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:18.488522 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.493508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -2, 0)
excute 13:50:18.500489 line       556                     i = i_j[0]
excute 13:50:18.505476 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:18.509464 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.516447 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -2, 1)
excute 13:50:18.519438 line       556                     i = i_j[0]
excute 13:50:18.527417 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:18.531407 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.535397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -2, 2)
excute 13:50:18.539386 line       556                     i = i_j[0]
excute 13:50:18.544375 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:18.552350 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.557337 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:18.561327 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:18.566313 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:18.571300 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.575289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:18.579279 line       556                     i = i_j[0]
excute 13:50:18.586260 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:18.590248 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.594238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:18.598227 line       556                     i = i_j[0]
excute 13:50:18.604212 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:18.608201 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.613187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:18.617178 line       556                     i = i_j[0]
excute 13:50:18.623161 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:18.627150 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.636129 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:18.642110 line       556                     i = i_j[0]
excute 13:50:18.648094 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:18.652083 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.657077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:18.660062 line       556                     i = i_j[0]
excute 13:50:18.664051 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:18.669038 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.673037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:18.676019 line       556                     i = i_j[0]
excute 13:50:18.681006 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:18.683998 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.687987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:18.691978 line       556                     i = i_j[0]
excute 13:50:18.696965 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:18.699956 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.703945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 1)
excute 13:50:18.707934 line       556                     i = i_j[0]
excute 13:50:18.712920 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:18.715912 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.719902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:18.723890 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:18.727890 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:18.731872 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.736858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:18.740846 line       556                     i = i_j[0]
excute 13:50:18.744835 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:18.747827 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.751816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:50:18.755806 line       556                     i = i_j[0]
excute 13:50:18.759795 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:18.762787 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.766777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:18.770766 line       556                     i = i_j[0]
excute 13:50:18.773757 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:18.777747 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.781736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:18.784728 line       556                     i = i_j[0]
excute 13:50:18.788717 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:18.792706 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.796696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:18.799688 line       556                     i = i_j[0]
excute 13:50:18.803678 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:18.806670 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.810670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:50:18.814648 line       556                     i = i_j[0]
excute 13:50:18.818642 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:18.821630 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.825619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:50:18.829608 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:18.832600 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:18.836589 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.841577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:50:18.845566 line       556                     i = i_j[0]
excute 13:50:18.848558 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:18.852547 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.856537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:50:18.860526 line       556                     i = i_j[0]
excute 13:50:18.864516 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:18.867507 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.871498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:50:18.874488 line       556                     i = i_j[0]
excute 13:50:18.878478 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:18.882468 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.886457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:50:18.889449 line       556                     i = i_j[0]
excute 13:50:18.893470 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:18.897429 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.905408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:50:18.912387 line       556                     i = i_j[0]
excute 13:50:18.917375 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:18.924355 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.928345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:50:18.932366 line       556                     i = i_j[0]
excute 13:50:18.936359 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:18.939349 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.944304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:50:18.950287 line       556                     i = i_j[0]
excute 13:50:18.954276 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:18.957267 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.963252 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:50:18.968238 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:18.973225 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:18.977247 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:18.981235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:50:18.985192 line       556                     i = i_j[0]
excute 13:50:18.993172 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:19.000152 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.005140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:50:19.008165 line       556                     i = i_j[0]
excute 13:50:19.012122 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:19.016144 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.020132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:50:19.023123 line       556                     i = i_j[0]
excute 13:50:19.027114 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:19.031102 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.035094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:50:19.038083 line       556                     i = i_j[0]
excute 13:50:19.042073 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:19.047061 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.051052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:50:19.055006 line       556                     i = i_j[0]
excute 13:50:19.058996 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:19.062019 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.065981 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:50:19.069002 line       556                     i = i_j[0]
excute 13:50:19.072992 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:19.076978 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.080970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 1)
excute 13:50:19.083960 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:19.087952 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:19.091939 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.095910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 1)
excute 13:50:19.099888 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:19.102912 line       557                     j = i_j[1]
excute 13:50:19.107865 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.110856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 2)
excute 13:50:19.113849 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:19.117837 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:19.121827 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.125826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 2)
excute 13:50:19.129839 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:19.133796 line       557                     j = i_j[1]
excute 13:50:19.137785 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.140776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 2)
excute 13:50:19.144766 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:19.148761 line       557                     j = i_j[1]
excute 13:50:19.152744 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.156733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:19.159726 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:19.163715 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:19.167705 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.171697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:19.175684 line       556                     i = i_j[0]
excute 13:50:19.178675 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:19.182664 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.186655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:19.189646 line       556                     i = i_j[0]
excute 13:50:19.193636 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:19.196627 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.200616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:19.204605 line       556                     i = i_j[0]
excute 13:50:19.208595 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:19.211587 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.215577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:19.218568 line       556                     i = i_j[0]
excute 13:50:19.222558 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:19.225550 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.229539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:19.233528 line       556                     i = i_j[0]
excute 13:50:19.236520 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:19.240509 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.244499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:19.248489 line       556                     i = i_j[0]
excute 13:50:19.252479 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:19.256467 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.260457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:19.264446 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:19.268436 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:19.272425 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.277411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:19.281401 line       556                     i = i_j[0]
excute 13:50:19.284392 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:19.288381 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.293368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:19.297359 line       556                     i = i_j[0]
excute 13:50:19.301350 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:19.305338 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.308331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:19.312320 line       556                     i = i_j[0]
excute 13:50:19.316309 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:19.320298 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.324288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:19.332267 line       556                     i = i_j[0]
excute 13:50:19.340244 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:19.345232 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.349221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:19.354242 line       556                     i = i_j[0]
excute 13:50:19.359193 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:19.362185 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.366173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:19.370180 line       556                     i = i_j[0]
excute 13:50:19.374153 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:19.378144 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.382134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:19.386122 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:19.390112 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:19.395099 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.399087 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:19.403078 line       556                     i = i_j[0]
excute 13:50:19.407067 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:19.410058 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.415054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:19.418038 line       556                     i = i_j[0]
excute 13:50:19.422027 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:19.426015 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.430005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:19.433993 line       556                     i = i_j[0]
excute 13:50:19.437991 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:19.440975 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.444965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:19.448953 line       556                     i = i_j[0]
excute 13:50:19.453942 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:19.457930 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.461919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:19.465909 line       556                     i = i_j[0]
excute 13:50:19.469898 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:19.472889 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.476879 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:19.480868 line       556                     i = i_j[0]
excute 13:50:19.484858 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:19.487881 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.492836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 1)
excute 13:50:19.497825 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:19.503807 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:19.507797 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.512782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 1)
excute 13:50:19.516772 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:19.523815 line       557                     j = i_j[1]
excute 13:50:19.527830 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.531828 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 1)
excute 13:50:19.534820 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:19.538811 line       557                     j = i_j[1]
excute 13:50:19.542799 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.546790 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:50:19.549781 line       560                         if (t_tmp > self.TIME):
excute 13:50:19.553737 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:19.557727 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:19.561748 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 195
excute 13:50:19.565739 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:19.569695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 2)
excute 13:50:19.572718 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:19.576683 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:19.580665 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.584657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 2)
excute 13:50:19.587646 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:19.595625 line       557                     j = i_j[1]
excute 13:50:19.600613 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.603636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 2)
excute 13:50:19.607626 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:19.611616 line       557                     j = i_j[1]
excute 13:50:19.618567 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.622555 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 164
excute 13:50:19.625548 line       560                         if (t_tmp > self.TIME):
excute 13:50:19.630535 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:19.634522 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:19.637513 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 197
excute 13:50:19.641502 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:19.645495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:19.649481 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:19.653472 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:19.657462 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.662482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:19.665470 line       556                     i = i_j[0]
excute 13:50:19.669461 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:19.673449 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.677441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:19.681398 line       556                     i = i_j[0]
excute 13:50:19.686385 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:19.690373 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.694361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:19.698351 line       556                     i = i_j[0]
excute 13:50:19.701345 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:19.705334 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.710321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:19.714310 line       556                     i = i_j[0]
excute 13:50:19.719308 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:19.723285 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.727274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:19.730266 line       556                     i = i_j[0]
excute 13:50:19.734257 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:19.737248 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.741237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:50:19.745227 line       556                     i = i_j[0]
excute 13:50:19.749216 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:19.752207 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.756197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 1)
excute 13:50:19.760186 line       556                     i = i_j[0]
excute 13:50:19.765174 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:19.769163 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.774161 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 2)
excute 13:50:19.777142 line       556                     i = i_j[0]
excute 13:50:19.781131 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:19.785120 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.789108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:50:19.793099 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:19.797088 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:19.802084 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.806065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:50:19.810052 line       556                     i = i_j[0]
excute 13:50:19.813046 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:19.817035 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.821030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:50:19.825014 line       556                     i = i_j[0]
excute 13:50:19.829003 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:19.832992 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.837980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:50:19.840972 line       556                     i = i_j[0]
excute 13:50:19.845956 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:19.848950 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.853938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:19.857926 line       556                     i = i_j[0]
excute 13:50:19.861915 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:19.866904 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.870892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:19.874887 line       556                     i = i_j[0]
excute 13:50:19.878870 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:19.881861 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.885854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 0)
excute 13:50:19.889840 line       556                     i = i_j[0]
excute 13:50:19.892832 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:19.896821 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.900812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 1)
excute 13:50:19.903802 line       556                     i = i_j[0]
excute 13:50:19.907793 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:19.911781 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.915769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 2)
excute 13:50:19.918761 line       556                     i = i_j[0]
excute 13:50:19.922751 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:19.925743 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:19.929732 line       555                 for i_j in i_j_list:
excute 13:50:19.932724 line       581             self.write_matrix(
excute 13:50:19.936713 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:19.939706 line       583                 result_file_path,
excute 13:50:19.942697 line       584                 mode='a'
excute 13:50:19.950677 line       488         for t in time_steps:
excute Modified var:.. t = 156
excute 13:50:19.954665 line       489             if (t != self.TIME + 1):
excute 13:50:19.958654 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:19.962647 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:19.969628 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:19.974616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:19.979599 line       494                         if (i == j):
excute 13:50:19.986581 line       495                             continue
excute 13:50:19.992564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:19.996555 line       494                         if (i == j):
excute 13:50:20.000545 line       496                         i_j_list.append((
excute 13:50:20.004533 line       497                             i, j,
excute 13:50:20.007525 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.012512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1)]
excute 13:50:20.017499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:20.022486 line       494                         if (i == j):
excute 13:50:20.029467 line       496                         i_j_list.append((
excute 13:50:20.037446 line       497                             i, j,
excute 13:50:20.045423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.051408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0)]
excute 13:50:20.056394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:20.062378 line       494                         if (i == j):
excute 13:50:20.066367 line       496                         i_j_list.append((
excute 13:50:20.070358 line       497                             i, j,
excute 13:50:20.076340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.081329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:50:20.087311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:20.094294 line       494                         if (i == j):
excute 13:50:20.098283 line       496                         i_j_list.append((
excute 13:50:20.102273 line       497                             i, j,
excute 13:50:20.109261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.113242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1)]
excute 13:50:20.116233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:20.120223 line       494                         if (i == j):
excute 13:50:20.124214 line       496                         i_j_list.append((
excute 13:50:20.128202 line       497                             i, j,
excute 13:50:20.132191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.135183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0)]
excute 13:50:20.140170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:20.144165 line       494                         if (i == j):
excute 13:50:20.148148 line       496                         i_j_list.append((
excute 13:50:20.152137 line       497                             i, j,
excute 13:50:20.156127 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.159119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:20.163111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:20.166100 line       494                         if (i == j):
excute 13:50:20.170089 line       496                         i_j_list.append((
excute 13:50:20.174079 line       497                             i, j,
excute 13:50:20.178069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.182059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:50:20.185050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:20.190038 line       494                         if (i == j):
excute 13:50:20.194026 line       496                         i_j_list.append((
excute 13:50:20.197018 line       497                             i, j,
excute 13:50:20.201007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.204997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:50:20.207989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:20.211979 line       494                         if (i == j):
excute 13:50:20.215968 line       496                         i_j_list.append((
excute 13:50:20.218959 line       497                             i, j,
excute 13:50:20.222949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.225941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2)]
excute 13:50:20.229931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:20.233921 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:20.237909 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:20.241899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:20.244891 line       494                         if (i == j):
excute 13:50:20.248880 line       496                         i_j_list.append((
excute 13:50:20.252869 line       497                             i, j,
excute 13:50:20.257855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.264840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0)]
excute 13:50:20.269825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:20.274813 line       494                         if (i == j):
excute 13:50:20.282789 line       495                             continue
excute 13:50:20.285780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:20.288772 line       494                         if (i == j):
excute 13:50:20.293761 line       496                         i_j_list.append((
excute 13:50:20.296751 line       497                             i, j,
excute 13:50:20.300740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.303732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:20.307734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:20.310714 line       494                         if (i == j):
excute 13:50:20.314703 line       496                         i_j_list.append((
excute 13:50:20.317695 line       497                             i, j,
excute 13:50:20.321685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.325675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:20.332657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:20.339639 line       494                         if (i == j):
excute 13:50:20.345623 line       496                         i_j_list.append((
excute 13:50:20.348614 line       497                             i, j,
excute 13:50:20.352603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.358586 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1)]
excute 13:50:20.362575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:20.366564 line       494                         if (i == j):
excute 13:50:20.370555 line       496                         i_j_list.append((
excute 13:50:20.373577 line       497                             i, j,
excute 13:50:20.377567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.382523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0)]
excute 13:50:20.385514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:20.389503 line       494                         if (i == j):
excute 13:50:20.393492 line       496                         i_j_list.append((
excute 13:50:20.397482 line       497                             i, j,
excute 13:50:20.400474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.404472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:20.407455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:20.411445 line       494                         if (i == j):
excute 13:50:20.415434 line       496                         i_j_list.append((
excute 13:50:20.418426 line       497                             i, j,
excute 13:50:20.422415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.425407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:20.428399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:20.432389 line       494                         if (i == j):
excute 13:50:20.436377 line       496                         i_j_list.append((
excute 13:50:20.439370 line       497                             i, j,
excute 13:50:20.443359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.446351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:20.451339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:20.456326 line       494                         if (i == j):
excute 13:50:20.460316 line       496                         i_j_list.append((
excute 13:50:20.466299 line       497                             i, j,
excute 13:50:20.470293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.473311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2)]
excute 13:50:20.477270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:20.481258 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:20.485279 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:20.489271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:20.493258 line       494                         if (i == j):
excute 13:50:20.497247 line       496                         i_j_list.append((
excute 13:50:20.501239 line       497                             i, j,
excute 13:50:20.504230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.508217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0)]
excute 13:50:20.512178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:20.517162 line       494                         if (i == j):
excute 13:50:20.520154 line       496                         i_j_list.append((
excute 13:50:20.524143 line       497                             i, j,
excute 13:50:20.527135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.531124 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1)]
excute 13:50:20.534116 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:20.538106 line       494                         if (i == j):
excute 13:50:20.546085 line       495                             continue
excute 13:50:20.553066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:20.561046 line       494                         if (i == j):
excute 13:50:20.569023 line       496                         i_j_list.append((
excute 13:50:20.574011 line       497                             i, j,
excute 13:50:20.592961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.601935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0)]
excute 13:50:20.610911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:20.619887 line       494                         if (i == j):
excute 13:50:20.626869 line       496                         i_j_list.append((
excute 13:50:20.631855 line       497                             i, j,
excute 13:50:20.635844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.642826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1)]
excute 13:50:20.649807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:20.656789 line       494                         if (i == j):
excute 13:50:20.660778 line       496                         i_j_list.append((
excute 13:50:20.665764 line       497                             i, j,
excute 13:50:20.672747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.676735 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0)]
excute 13:50:20.680725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:20.688704 line       494                         if (i == j):
excute 13:50:20.695685 line       496                         i_j_list.append((
excute 13:50:20.703664 line       497                             i, j,
excute 13:50:20.707654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.712639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:50:20.719620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:20.723609 line       494                         if (i == j):
excute 13:50:20.727599 line       496                         i_j_list.append((
excute 13:50:20.731588 line       497                             i, j,
excute 13:50:20.735578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.742559 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:50:20.747547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:20.752534 line       494                         if (i == j):
excute 13:50:20.759516 line       496                         i_j_list.append((
excute 13:50:20.762506 line       497                             i, j,
excute 13:50:20.766497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.771482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:50:20.775472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:20.781456 line       494                         if (i == j):
excute 13:50:20.786442 line       496                         i_j_list.append((
excute 13:50:20.791428 line       497                             i, j,
excute 13:50:20.797415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.804396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2)]
excute 13:50:20.811375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:20.818357 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:20.822345 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:20.829327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:20.834313 line       494                         if (i == j):
excute 13:50:20.842292 line       496                         i_j_list.append((
excute 13:50:20.849275 line       497                             i, j,
excute 13:50:20.856256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.860246 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0)]
excute 13:50:20.867227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:20.875206 line       494                         if (i == j):
excute 13:50:20.882187 line       496                         i_j_list.append((
excute 13:50:20.889168 line       497                             i, j,
excute 13:50:20.893157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.900139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1)]
excute 13:50:20.906124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:20.911110 line       494                         if (i == j):
excute 13:50:20.916096 line       496                         i_j_list.append((
excute 13:50:20.922080 line       497                             i, j,
excute 13:50:20.929061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.935046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0)]
excute 13:50:20.939034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:20.945019 line       494                         if (i == j):
excute 13:50:20.951002 line       495                             continue
excute 13:50:20.956987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:20.961973 line       494                         if (i == j):
excute 13:50:20.968954 line       496                         i_j_list.append((
excute 13:50:20.974939 line       497                             i, j,
excute 13:50:20.980922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:20.984912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1)]
excute 13:50:20.989898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:20.998875 line       494                         if (i == j):
excute 13:50:21.007853 line       496                         i_j_list.append((
excute 13:50:21.013835 line       497                             i, j,
excute 13:50:21.020816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.027797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0)]
excute 13:50:21.032784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:21.037771 line       494                         if (i == j):
excute 13:50:21.043755 line       496                         i_j_list.append((
excute 13:50:21.046747 line       497                             i, j,
excute 13:50:21.051734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.056721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:50:21.064699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:21.068688 line       494                         if (i == j):
excute 13:50:21.075669 line       496                         i_j_list.append((
excute 13:50:21.083648 line       497                             i, j,
excute 13:50:21.089633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.095617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:50:21.103596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:21.111575 line       494                         if (i == j):
excute 13:50:21.117557 line       496                         i_j_list.append((
excute 13:50:21.122543 line       497                             i, j,
excute 13:50:21.127531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.130523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:50:21.135510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:21.140496 line       494                         if (i == j):
excute 13:50:21.145483 line       496                         i_j_list.append((
excute 13:50:21.150469 line       497                             i, j,
excute 13:50:21.154460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.159446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2)]
excute 13:50:21.163435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:21.168422 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:21.173410 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:21.177397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:21.180390 line       494                         if (i == j):
excute 13:50:21.184380 line       496                         i_j_list.append((
excute 13:50:21.191364 line       497                             i, j,
excute 13:50:21.196347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.200335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0)]
excute 13:50:21.204325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:21.208317 line       494                         if (i == j):
excute 13:50:21.212305 line       496                         i_j_list.append((
excute 13:50:21.217292 line       497                             i, j,
excute 13:50:21.221281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.225270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1)]
excute 13:50:21.230255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:21.237238 line       494                         if (i == j):
excute 13:50:21.243221 line       496                         i_j_list.append((
excute 13:50:21.247211 line       497                             i, j,
excute 13:50:21.253195 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.257184 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0)]
excute 13:50:21.262172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:21.268155 line       494                         if (i == j):
excute 13:50:21.276135 line       496                         i_j_list.append((
excute 13:50:21.280124 line       497                             i, j,
excute 13:50:21.286109 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.292091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:50:21.298078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:21.304060 line       494                         if (i == j):
excute 13:50:21.311041 line       495                             continue
excute 13:50:21.319019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:21.326998 line       494                         if (i == j):
excute 13:50:21.335976 line       496                         i_j_list.append((
excute 13:50:21.340961 line       497                             i, j,
excute 13:50:21.347942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.353930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:21.362903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:21.370880 line       494                         if (i == j):
excute 13:50:21.379858 line       496                         i_j_list.append((
excute 13:50:21.386837 line       497                             i, j,
excute 13:50:21.392822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.400801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:21.406786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:21.412768 line       494                         if (i == j):
excute 13:50:21.423739 line       496                         i_j_list.append((
excute 13:50:21.428726 line       497                             i, j,
excute 13:50:21.435707 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.444684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:21.449671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:21.455654 line       494                         if (i == j):
excute 13:50:21.460642 line       496                         i_j_list.append((
excute 13:50:21.464630 line       497                             i, j,
excute 13:50:21.472609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.488567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:21.497543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:21.506517 line       494                         if (i == j):
excute 13:50:21.523474 line       496                         i_j_list.append((
excute 13:50:21.535440 line       497                             i, j,
excute 13:50:21.545413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.552395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2)]
excute 13:50:21.560374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:21.567355 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:21.582315 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:21.602475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:21.611450 line       494                         if (i == j):
excute 13:50:21.620426 line       496                         i_j_list.append((
excute 13:50:21.627408 line       497                             i, j,
excute 13:50:21.633392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.641370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0)]
excute 13:50:21.649349 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:21.657330 line       494                         if (i == j):
excute 13:50:21.667302 line       496                         i_j_list.append((
excute 13:50:21.675280 line       497                             i, j,
excute 13:50:21.684254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.692233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1)]
excute 13:50:21.697221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:21.706197 line       494                         if (i == j):
excute 13:50:21.716170 line       496                         i_j_list.append((
excute 13:50:21.726142 line       497                             i, j,
excute 13:50:21.734124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.744095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0)]
excute 13:50:21.750080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:21.758058 line       494                         if (i == j):
excute 13:50:21.766037 line       496                         i_j_list.append((
excute 13:50:21.773019 line       497                             i, j,
excute 13:50:21.781994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.789972 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:50:21.799946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:21.809920 line       494                         if (i == j):
excute 13:50:21.818896 line       496                         i_j_list.append((
excute 13:50:21.825888 line       497                             i, j,
excute 13:50:21.833855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.841835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1)]
excute 13:50:21.850811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:21.859786 line       494                         if (i == j):
excute 13:50:21.868762 line       495                             continue
excute 13:50:21.875742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:21.883723 line       494                         if (i == j):
excute 13:50:21.890704 line       496                         i_j_list.append((
excute 13:50:21.898683 line       497                             i, j,
excute 13:50:21.902671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.907658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0)]
excute 13:50:21.912644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:21.916633 line       494                         if (i == j):
excute 13:50:21.920623 line       496                         i_j_list.append((
excute 13:50:21.924613 line       497                             i, j,
excute 13:50:21.927605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.931594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:50:21.935583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:21.940574 line       494                         if (i == j):
excute 13:50:21.944559 line       496                         i_j_list.append((
excute 13:50:21.949546 line       497                             i, j,
excute 13:50:21.952537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.956527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:50:21.960517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:21.968495 line       494                         if (i == j):
excute 13:50:21.972485 line       496                         i_j_list.append((
excute 13:50:21.976474 line       497                             i, j,
excute 13:50:21.980463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:21.984454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2)]
excute 13:50:21.987445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:21.995423 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:22.000411 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:22.004400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:22.008389 line       494                         if (i == j):
excute 13:50:22.013375 line       496                         i_j_list.append((
excute 13:50:22.017366 line       497                             i, j,
excute 13:50:22.020357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.024346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0)]
excute 13:50:22.027338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:22.031328 line       494                         if (i == j):
excute 13:50:22.035318 line       496                         i_j_list.append((
excute 13:50:22.038308 line       497                             i, j,
excute 13:50:22.042298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.047286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1)]
excute 13:50:22.050278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:22.055263 line       494                         if (i == j):
excute 13:50:22.058254 line       496                         i_j_list.append((
excute 13:50:22.062244 line       497                             i, j,
excute 13:50:22.065236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.069225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0)]
excute 13:50:22.072217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:22.076206 line       494                         if (i == j):
excute 13:50:22.080196 line       496                         i_j_list.append((
excute 13:50:22.084185 line       497                             i, j,
excute 13:50:22.087177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.091166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:50:22.094158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:22.098149 line       494                         if (i == j):
excute 13:50:22.102137 line       496                         i_j_list.append((
excute 13:50:22.105129 line       497                             i, j,
excute 13:50:22.109118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.112110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1)]
excute 13:50:22.116101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:22.119091 line       494                         if (i == j):
excute 13:50:22.123081 line       496                         i_j_list.append((
excute 13:50:22.127070 line       497                             i, j,
excute 13:50:22.130063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.134052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0)]
excute 13:50:22.137044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:22.141033 line       494                         if (i == j):
excute 13:50:22.146022 line       495                             continue
excute 13:50:22.150011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:22.154001 line       494                         if (i == j):
excute 13:50:22.157990 line       496                         i_j_list.append((
excute 13:50:22.161979 line       497                             i, j,
excute 13:50:22.165968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.169958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:50:22.173947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:22.177937 line       494                         if (i == j):
excute 13:50:22.181926 line       496                         i_j_list.append((
excute 13:50:22.184918 line       497                             i, j,
excute 13:50:22.188907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.192896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:50:22.196886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:22.200875 line       494                         if (i == j):
excute 13:50:22.204864 line       496                         i_j_list.append((
excute 13:50:22.208853 line       497                             i, j,
excute 13:50:22.212843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.216833 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2)]
excute 13:50:22.219825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:22.224809 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:22.227801 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:22.231790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:22.235779 line       494                         if (i == j):
excute 13:50:22.238772 line       496                         i_j_list.append((
excute 13:50:22.242761 line       497                             i, j,
excute 13:50:22.245753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.250741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0)]
excute 13:50:22.254731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:22.258719 line       494                         if (i == j):
excute 13:50:22.262709 line       496                         i_j_list.append((
excute 13:50:22.265701 line       497                             i, j,
excute 13:50:22.269691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.272682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1)]
excute 13:50:22.275674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:22.279695 line       494                         if (i == j):
excute 13:50:22.283686 line       496                         i_j_list.append((
excute 13:50:22.287673 line       497                             i, j,
excute 13:50:22.291632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.294623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0)]
excute 13:50:22.298612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:22.301604 line       494                         if (i == j):
excute 13:50:22.305593 line       496                         i_j_list.append((
excute 13:50:22.309583 line       497                             i, j,
excute 13:50:22.312574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.315567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:22.319557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:22.323545 line       494                         if (i == j):
excute 13:50:22.331526 line       496                         i_j_list.append((
excute 13:50:22.338505 line       497                             i, j,
excute 13:50:22.343496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.348511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1)]
excute 13:50:22.353467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:22.357457 line       494                         if (i == j):
excute 13:50:22.362442 line       496                         i_j_list.append((
excute 13:50:22.366431 line       497                             i, j,
excute 13:50:22.369424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.373414 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0)]
excute 13:50:22.377402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:22.381391 line       494                         if (i == j):
excute 13:50:22.385379 line       496                         i_j_list.append((
excute 13:50:22.389369 line       497                             i, j,
excute 13:50:22.392361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.396350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:22.400343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:22.404329 line       494                         if (i == j):
excute 13:50:22.408319 line       495                             continue
excute 13:50:22.411311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:22.415300 line       494                         if (i == j):
excute 13:50:22.419289 line       496                         i_j_list.append((
excute 13:50:22.422281 line       497                             i, j,
excute 13:50:22.426272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.429263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:22.432254 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:22.436244 line       494                         if (i == j):
excute 13:50:22.440245 line       496                         i_j_list.append((
excute 13:50:22.444226 line       497                             i, j,
excute 13:50:22.447215 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.451206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2)]
excute 13:50:22.456223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:22.460218 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:22.464202 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:22.468180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:22.472148 line       494                         if (i == j):
excute 13:50:22.476137 line       496                         i_j_list.append((
excute 13:50:22.480126 line       497                             i, j,
excute 13:50:22.483119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.487109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0)]
excute 13:50:22.490101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:22.494089 line       494                         if (i == j):
excute 13:50:22.498079 line       496                         i_j_list.append((
excute 13:50:22.501071 line       497                             i, j,
excute 13:50:22.505060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.508052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1)]
excute 13:50:22.514036 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:22.519024 line       494                         if (i == j):
excute 13:50:22.523013 line       496                         i_j_list.append((
excute 13:50:22.526004 line       497                             i, j,
excute 13:50:22.529994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.532985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0)]
excute 13:50:22.536976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:22.539966 line       494                         if (i == j):
excute 13:50:22.543956 line       496                         i_j_list.append((
excute 13:50:22.547945 line       497                             i, j,
excute 13:50:22.550937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.554927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0)]
excute 13:50:22.559914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:22.563903 line       494                         if (i == j):
excute 13:50:22.567894 line       496                         i_j_list.append((
excute 13:50:22.570918 line       497                             i, j,
excute 13:50:22.574908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.577897 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1)]
excute 13:50:22.581889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:22.585846 line       494                         if (i == j):
excute 13:50:22.589869 line       496                         i_j_list.append((
excute 13:50:22.592857 line       497                             i, j,
excute 13:50:22.596847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.599838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0)]
excute 13:50:22.603799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:22.607786 line       494                         if (i == j):
excute 13:50:22.610777 line       496                         i_j_list.append((
excute 13:50:22.614766 line       497                             i, j,
excute 13:50:22.617759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.621748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0)]
excute 13:50:22.625738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:22.629727 line       494                         if (i == j):
excute 13:50:22.632719 line       496                         i_j_list.append((
excute 13:50:22.636739 line       497                             i, j,
excute 13:50:22.640729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.643722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0)]
excute 13:50:22.647710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:22.651701 line       494                         if (i == j):
excute 13:50:22.655660 line       495                             continue
excute 13:50:22.659658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:22.663638 line       494                         if (i == j):
excute 13:50:22.669621 line       496                         i_j_list.append((
excute 13:50:22.672615 line       497                             i, j,
excute 13:50:22.676603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.680593 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2)]
excute 13:50:22.684582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:22.688572 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:22.692560 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:22.696551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:22.700539 line       494                         if (i == j):
excute 13:50:22.705525 line       496                         i_j_list.append((
excute 13:50:22.709515 line       497                             i, j,
excute 13:50:22.713503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.717493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0)]
excute 13:50:22.721482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:22.726468 line       494                         if (i == j):
excute 13:50:22.730459 line       496                         i_j_list.append((
excute 13:50:22.735444 line       497                             i, j,
excute 13:50:22.739439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.742457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1)]
excute 13:50:22.746416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:22.749441 line       494                         if (i == j):
excute 13:50:22.753428 line       496                         i_j_list.append((
excute 13:50:22.757420 line       497                             i, j,
excute 13:50:22.763373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.767360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0)]
excute 13:50:22.771350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:22.775351 line       494                         if (i == j):
excute 13:50:22.779329 line       496                         i_j_list.append((
excute 13:50:22.783318 line       497                             i, j,
excute 13:50:22.787308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.791297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:22.795286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:22.799275 line       494                         if (i == j):
excute 13:50:22.804263 line       496                         i_j_list.append((
excute 13:50:22.807254 line       497                             i, j,
excute 13:50:22.811243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.815231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 1)]
excute 13:50:22.819221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:22.823210 line       494                         if (i == j):
excute 13:50:22.827199 line       496                         i_j_list.append((
excute 13:50:22.831190 line       497                             i, j,
excute 13:50:22.834181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.838171 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 1), (9, 5, 2, 0)]
excute 13:50:22.842160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:22.846148 line       494                         if (i == j):
excute 13:50:22.849142 line       496                         i_j_list.append((
excute 13:50:22.853131 line       497                             i, j,
excute 13:50:22.857120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.860112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 1), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:22.864102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:22.869098 line       494                         if (i == j):
excute 13:50:22.873079 line       496                         i_j_list.append((
excute 13:50:22.877067 line       497                             i, j,
excute 13:50:22.881057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.885046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 1), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:22.888038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:22.893026 line       494                         if (i == j):
excute 13:50:22.897014 line       496                         i_j_list.append((
excute 13:50:22.901003 line       497                             i, j,
excute 13:50:22.904993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:22.907984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 1), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 2), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 0), (2, 4, 1, 1), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 6, 0), (3, 1, 6, 1), (3, 2, 6, 0), (3, 4, 6, 1), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 2), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 2), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 2), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 1), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 2), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -2, 0), (8, 1, -2, 1), (8, 2, -2, 0), (8, 3, -2, 0), (8, 4, -2, 1), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 9, -2, 2), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 1), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:22.911974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:22.915963 line       494                         if (i == j):
excute 13:50:22.919953 line       495                             continue
excute 13:50:22.923942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:22.927931 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:22.931920 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -2, 0), (8, 2, -2, 0), (8, 3, -2, 0), (8, 5, -2, 0), (8, 6, -2, 0), (8, 7, -2, 0), (8, 1, -2, 1), (8, 4, -2, 1), (8, 9, -2, 2), (7, 0, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 1, 0, 1), (7, 4, 0, 1), (7, 9, 0, 2), (0, 2, 1, 0), (0, 3, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (2, 0, 1, 0), (2, 3, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (5, 0, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (6, 0, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (0, 1, 1, 1), (0, 4, 1, 1), (2, 1, 1, 1), (2, 4, 1, 1), (5, 1, 1, 1), (5, 4, 1, 1), (6, 1, 1, 1), (6, 4, 1, 1), (0, 9, 1, 2), (2, 9, 1, 2), (5, 9, 1, 2), (6, 9, 1, 2), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (9, 0, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (1, 4, 2, 1), (9, 1, 2, 1), (9, 4, 2, 1), (1, 9, 2, 2), (4, 0, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 1, 3, 1), (4, 9, 3, 2), (3, 0, 6, 0), (3, 2, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 1, 6, 1), (3, 4, 6, 1), (3, 9, 6, 2)]
excute 13:50:22.934914 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:22.939898 line       505                     if (self.RELOCATE):
excute 13:50:22.943887 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:22.947879 line       505                     if (self.RELOCATE):
excute 13:50:22.951865 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:22.955857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -2, 0)
excute 13:50:22.959846 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:22.965830 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:22.971812 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:22.975802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -2, 0)
excute 13:50:22.979791 line       556                     i = i_j[0]
excute 13:50:22.982785 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:22.986774 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:22.990763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -2, 0)
excute 13:50:22.994752 line       556                     i = i_j[0]
excute 13:50:22.998742 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:23.002731 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.006721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -2, 0)
excute 13:50:23.013703 line       556                     i = i_j[0]
excute 13:50:23.017691 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:23.021680 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.025670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -2, 0)
excute 13:50:23.029659 line       556                     i = i_j[0]
excute 13:50:23.033649 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:23.036640 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.040630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -2, 0)
excute 13:50:23.044619 line       556                     i = i_j[0]
excute 13:50:23.048609 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:23.052598 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.056586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -2, 1)
excute 13:50:23.060577 line       556                     i = i_j[0]
excute 13:50:23.064566 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:23.069553 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.073575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -2, 1)
excute 13:50:23.077561 line       556                     i = i_j[0]
excute 13:50:23.081554 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:23.084545 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.088511 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 161
excute 13:50:23.092491 line       560                         if (t_tmp > self.TIME):
excute 13:50:23.096491 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:23.100470 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:23.104459 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:23.108449 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:23.112438 line       569                                     available_vhecles[i][t],
excute 13:50:23.116427 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:23.119419 line       571                                     self.S_capacities[j],
excute 13:50:23.123408 line       572                                     demands[t][i][j],
excute 13:50:23.127398 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 156
calc_contract     13:50:23.131387 call       352     def caluculate_contract(
calc_contract     13:50:23.135375 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:23.135375 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:23.136373 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:23.137370 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:23.138367 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:23.138367 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:23.139365 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:23.140362 line       575                                 rsf += rsf_tmp
excute 13:50:23.143353 line       576                                 rse += rse_tmp
excute 13:50:23.147343 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     Starting var:.. i = 8
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 156
move_cars     Starting var:.. t_tmp = 161
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:23.151332 call       388     def move_cars(
move_cars     13:50:23.156321 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:23.157319 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:23.159311 line       399         return available_vhecles
move_cars     13:50:23.160310 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute 13:50:23.163302 line       579                                 success += can_contract
excute Modified var:.. success = 74
excute 13:50:23.167292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -2, 2)
excute 13:50:23.172278 line       556                     i = i_j[0]
excute 13:50:23.177265 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:23.180255 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.184253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:23.187237 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:23.192226 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:23.196212 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.201200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:23.204193 line       556                     i = i_j[0]
excute 13:50:23.209178 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:23.212170 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.216174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:23.219152 line       556                     i = i_j[0]
excute 13:50:23.223142 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:23.227131 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.231121 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:23.234112 line       556                     i = i_j[0]
excute 13:50:23.238101 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:23.241093 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.245083 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:23.249072 line       556                     i = i_j[0]
excute 13:50:23.253062 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:23.256054 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.261040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:23.265030 line       556                     i = i_j[0]
excute 13:50:23.268021 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:23.272011 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.276997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 1)
excute 13:50:23.280987 line       556                     i = i_j[0]
excute 13:50:23.284977 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:23.288966 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.293951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 1)
excute 13:50:23.297941 line       556                     i = i_j[0]
excute 13:50:23.300932 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:23.304922 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.308911 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 2)
excute 13:50:23.311902 line       556                     i = i_j[0]
excute 13:50:23.315892 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:23.318884 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.323872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:50:23.328860 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:23.338832 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:23.342820 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.347809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:23.351796 line       556                     i = i_j[0]
excute 13:50:23.355821 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:23.359808 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.363765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:23.367754 line       556                     i = i_j[0]
excute 13:50:23.371743 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:23.374734 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.379737 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:23.383712 line       556                     i = i_j[0]
excute 13:50:23.388700 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:23.392687 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.396678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:50:23.400667 line       556                     i = i_j[0]
excute 13:50:23.405666 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:23.408679 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.412666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:23.416658 line       556                     i = i_j[0]
excute 13:50:23.420648 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:23.423637 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.427595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:50:23.431583 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:23.434575 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:23.438564 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.442564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:50:23.446576 line       556                     i = i_j[0]
excute 13:50:23.450534 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:23.455521 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.458513 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:50:23.464496 line       556                     i = i_j[0]
excute 13:50:23.472477 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:23.477461 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.484443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:50:23.488466 line       556                     i = i_j[0]
excute 13:50:23.492452 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:23.496410 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.500399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:50:23.504389 line       556                     i = i_j[0]
excute 13:50:23.508378 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:23.514362 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.519349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:50:23.522340 line       556                     i = i_j[0]
excute 13:50:23.526330 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:23.529322 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.533311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:50:23.537300 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:23.540292 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:23.545279 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.549268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:50:23.553261 line       556                     i = i_j[0]
excute 13:50:23.557250 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:23.561237 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.564228 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:50:23.568218 line       556                     i = i_j[0]
excute 13:50:23.572207 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:23.575199 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.579189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:50:23.583179 line       556                     i = i_j[0]
excute 13:50:23.588164 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:23.591157 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.596158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:50:23.599136 line       556                     i = i_j[0]
excute 13:50:23.604123 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:23.607115 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.626319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:50:23.630337 line       556                     i = i_j[0]
excute 13:50:23.634311 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:23.638284 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.641308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:50:23.645297 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:23.649265 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:23.653277 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.657235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:50:23.661224 line       556                     i = i_j[0]
excute 13:50:23.665213 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:23.670201 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.674188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:50:23.678179 line       556                     i = i_j[0]
excute 13:50:23.683167 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:23.687154 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.691175 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:50:23.695163 line       556                     i = i_j[0]
excute 13:50:23.699132 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:23.702145 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.706134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:50:23.710124 line       556                     i = i_j[0]
excute 13:50:23.714084 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:23.717075 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.722063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:50:23.725054 line       556                     i = i_j[0]
excute 13:50:23.730040 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:23.733032 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.737022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 1)
excute 13:50:23.741011 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:23.745001 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:23.748990 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.752977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 1)
excute 13:50:23.756968 line       556                     i = i_j[0]
excute 13:50:23.760958 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:23.763949 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.767939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 1)
excute 13:50:23.771928 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:23.775916 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:23.778908 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.782899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 1)
excute 13:50:23.786888 line       556                     i = i_j[0]
excute 13:50:23.792872 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:23.795862 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.799851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 1)
excute 13:50:23.803841 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:23.807831 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:23.811821 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.815811 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 166
excute 13:50:23.818802 line       560                         if (t_tmp > self.TIME):
excute 13:50:23.826780 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:23.834759 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:23.837752 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:23.845739 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:23.848721 line       569                                     available_vhecles[i][t],
excute 13:50:23.851713 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:23.855703 line       571                                     self.S_capacities[j],
excute 13:50:23.859692 line       572                                     demands[t][i][j],
excute 13:50:23.862683 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 156
calc_contract     13:50:23.865676 call       352     def caluculate_contract(
calc_contract     13:50:23.868668 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:23.869665 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:23.870663 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:23.871661 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:23.871661 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:23.872658 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:23.873655 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:23.874653 line       575                                 rsf += rsf_tmp
excute 13:50:23.877644 line       576                                 rse += rse_tmp
excute 13:50:23.880636 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 156
move_cars     Starting var:.. t_tmp = 166
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:23.884625 call       388     def move_cars(
move_cars     13:50:23.888616 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:23.889614 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:23.891609 line       399         return available_vhecles
move_cars     13:50:23.893614 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute 13:50:23.896593 line       579                                 success += can_contract
excute Modified var:.. success = 75
excute 13:50:23.899586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 1)
excute 13:50:23.903575 line       556                     i = i_j[0]
excute 13:50:23.908563 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:23.911585 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.915544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 1)
excute 13:50:23.919533 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:23.923529 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:23.927512 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.931534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 1)
excute 13:50:23.934523 line       556                     i = i_j[0]
excute 13:50:23.938499 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:23.942471 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.946463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 2)
excute 13:50:23.950450 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:23.953441 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:23.958429 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.962451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 2)
excute 13:50:23.966408 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:23.972428 line       557                     j = i_j[1]
excute 13:50:23.978374 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.982364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 2)
excute 13:50:23.985356 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:23.989356 line       557                     j = i_j[1]
excute 13:50:23.993367 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:23.998323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 2)
excute 13:50:24.001346 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:24.005313 line       557                     j = i_j[1]
excute 13:50:24.010295 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.015280 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 167
excute 13:50:24.019265 line       560                         if (t_tmp > self.TIME):
excute 13:50:24.023268 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:24.026279 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:24.029271 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:24.033259 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:24.036251 line       569                                     available_vhecles[i][t],
excute 13:50:24.040243 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:24.043233 line       571                                     self.S_capacities[j],
excute 13:50:24.047222 line       572                                     demands[t][i][j],
excute 13:50:24.050215 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 156
calc_contract     13:50:24.054204 call       352     def caluculate_contract(
calc_contract     13:50:24.057198 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:24.058197 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:24.059159 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:24.059159 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:24.060157 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 2
calc_contract     13:50:24.061154 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:24.061154 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 0]
excute Modified var:.. can_contract = 2
excute 13:50:24.062151 line       575                                 rsf += rsf_tmp
excute 13:50:24.066140 line       576                                 rse += rse_tmp
excute 13:50:24.070129 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 156
move_cars     Starting var:.. t_tmp = 167
move_cars     Starting var:.. can_contract = 2
move_cars     13:50:24.073122 call       388     def move_cars(
move_cars     13:50:24.077111 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:24.079138 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:50:24.080136 line       399         return available_vhecles
move_cars     13:50:24.084822 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:24.087849 line       579                                 success += can_contract
excute Modified var:.. success = 77
excute 13:50:24.091807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:24.095804 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:24.101780 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:24.106769 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.110757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:24.113749 line       556                     i = i_j[0]
excute 13:50:24.117738 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:24.121727 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.125717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:24.129706 line       556                     i = i_j[0]
excute 13:50:24.134692 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:24.138682 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.142671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:24.146661 line       556                     i = i_j[0]
excute 13:50:24.151648 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:24.155637 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.159626 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:24.163615 line       556                     i = i_j[0]
excute 13:50:24.167604 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:24.171594 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.175581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:24.179572 line       556                     i = i_j[0]
excute 13:50:24.182565 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:24.186554 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.190544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:24.194532 line       556                     i = i_j[0]
excute 13:50:24.198521 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:24.203507 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.207496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:24.210488 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:24.214477 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:24.218468 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.222456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:24.225448 line       556                     i = i_j[0]
excute 13:50:24.229439 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:24.232429 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.236418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:24.240408 line       556                     i = i_j[0]
excute 13:50:24.244398 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:24.247389 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.251379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:24.255371 line       556                     i = i_j[0]
excute 13:50:24.259358 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:24.262349 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.266339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:24.269331 line       556                     i = i_j[0]
excute 13:50:24.273320 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:24.276312 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.280301 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:24.284290 line       556                     i = i_j[0]
excute 13:50:24.288281 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:24.292269 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.296259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:24.299251 line       556                     i = i_j[0]
excute 13:50:24.304241 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:24.308261 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.312252 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 1)
excute 13:50:24.316212 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:24.319229 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:24.324220 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.329173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 1)
excute 13:50:24.334158 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:24.338147 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:24.346126 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.354107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 1)
excute 13:50:24.357097 line       556                     i = i_j[0]
excute 13:50:24.362085 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:24.365075 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.369065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 2)
excute 13:50:24.373054 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:24.377047 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:24.382030 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.389013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:24.394995 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:24.406964 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:24.417934 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.423917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:50:24.429902 line       556                     i = i_j[0]
excute 13:50:24.435890 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:24.441883 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.449851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:24.456832 line       556                     i = i_j[0]
excute 13:50:24.460820 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:24.464809 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.468798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:24.471790 line       556                     i = i_j[0]
excute 13:50:24.475778 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:24.479768 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.483758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:24.486749 line       556                     i = i_j[0]
excute 13:50:24.490739 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:24.494728 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.498726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:24.501710 line       556                     i = i_j[0]
excute 13:50:24.505709 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:24.509689 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.517667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:24.520659 line       556                     i = i_j[0]
excute 13:50:24.524648 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:24.527640 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.531629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 1)
excute 13:50:24.534622 line       556                     i = i_j[0]
excute 13:50:24.538610 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:24.542600 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.547588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 2)
excute 13:50:24.550580 line       556                     i = i_j[0]
excute 13:50:24.555567 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:24.559556 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.563544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:50:24.566537 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:24.570526 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:24.574515 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.578505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 0)
excute 13:50:24.582495 line       556                     i = i_j[0]
excute 13:50:24.586484 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:24.590473 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.594463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:50:24.598452 line       556                     i = i_j[0]
excute 13:50:24.602442 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:24.606430 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.610419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:24.613413 line       556                     i = i_j[0]
excute 13:50:24.622389 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:24.628371 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.632363 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:50:24.636382 line       556                     i = i_j[0]
excute 13:50:24.640341 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:24.643365 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.647353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:24.651344 line       556                     i = i_j[0]
excute 13:50:24.655301 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:24.658323 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.662312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 1)
excute 13:50:24.666270 line       556                     i = i_j[0]
excute 13:50:24.670259 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:24.673282 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.677272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 1)
excute 13:50:24.681261 line       556                     i = i_j[0]
excute 13:50:24.685252 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:24.688242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.692201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 2)
excute 13:50:24.695225 line       556                     i = i_j[0]
excute 13:50:24.699216 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:24.703203 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:24.707163 line       555                 for i_j in i_j_list:
excute 13:50:24.711151 line       581             self.write_matrix(
excute 13:50:24.715141 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:24.720128 line       583                 result_file_path,
excute 13:50:24.724117 line       584                 mode='a'
excute 13:50:24.731097 line       488         for t in time_steps:
excute Modified var:.. t = 157
excute 13:50:24.735086 line       489             if (t != self.TIME + 1):
excute 13:50:24.740073 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:24.744064 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:24.748054 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:24.751045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:24.755035 line       494                         if (i == j):
excute 13:50:24.759026 line       495                             continue
excute 13:50:24.763013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:24.766006 line       494                         if (i == j):
excute 13:50:24.769995 line       496                         i_j_list.append((
excute 13:50:24.773984 line       497                             i, j,
excute 13:50:24.776977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.783956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:24.787946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:24.801909 line       494                         if (i == j):
excute 13:50:24.809887 line       496                         i_j_list.append((
excute 13:50:24.813876 line       497                             i, j,
excute 13:50:24.820857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.826860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:50:24.832857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:24.836814 line       494                         if (i == j):
excute 13:50:24.840803 line       496                         i_j_list.append((
excute 13:50:24.844792 line       497                             i, j,
excute 13:50:24.849779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.853771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:50:24.859756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:24.864739 line       494                         if (i == j):
excute 13:50:24.870724 line       496                         i_j_list.append((
excute 13:50:24.876711 line       497                             i, j,
excute 13:50:24.880696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.885684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:50:24.889673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:24.894661 line       494                         if (i == j):
excute 13:50:24.898650 line       496                         i_j_list.append((
excute 13:50:24.902639 line       497                             i, j,
excute 13:50:24.906628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.909620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:50:24.913611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:24.917599 line       494                         if (i == j):
excute 13:50:24.921589 line       496                         i_j_list.append((
excute 13:50:24.925578 line       497                             i, j,
excute 13:50:24.929567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.933557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:24.936548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:24.940538 line       494                         if (i == j):
excute 13:50:24.944528 line       496                         i_j_list.append((
excute 13:50:24.948515 line       497                             i, j,
excute 13:50:24.951507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.955497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:50:24.959486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:24.967465 line       494                         if (i == j):
excute 13:50:24.971456 line       496                         i_j_list.append((
excute 13:50:24.975443 line       497                             i, j,
excute 13:50:24.980430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:24.983422 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:50:24.987411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:24.991401 line       494                         if (i == j):
excute 13:50:24.995392 line       496                         i_j_list.append((
excute 13:50:24.998414 line       497                             i, j,
excute 13:50:25.002405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.005394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1)]
excute 13:50:25.011348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:25.018343 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:25.024312 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:25.029304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:25.033288 line       494                         if (i == j):
excute 13:50:25.037278 line       496                         i_j_list.append((
excute 13:50:25.040270 line       497                             i, j,
excute 13:50:25.044259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.047251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0)]
excute 13:50:25.051248 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:25.055252 line       494                         if (i == j):
excute 13:50:25.058255 line       495                             continue
excute 13:50:25.062243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:25.065203 line       494                         if (i == j):
excute 13:50:25.069193 line       496                         i_j_list.append((
excute 13:50:25.073183 line       497                             i, j,
excute 13:50:25.076174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.079165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:25.083155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:25.086147 line       494                         if (i == j):
excute 13:50:25.090137 line       496                         i_j_list.append((
excute 13:50:25.094127 line       497                             i, j,
excute 13:50:25.097118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.100110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:25.104099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:25.108089 line       494                         if (i == j):
excute 13:50:25.112078 line       496                         i_j_list.append((
excute 13:50:25.115069 line       497                             i, j,
excute 13:50:25.118062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.122051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:25.125043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:25.129033 line       494                         if (i == j):
excute 13:50:25.134021 line       496                         i_j_list.append((
excute 13:50:25.138008 line       497                             i, j,
excute 13:50:25.141000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.143993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:25.147982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:25.151973 line       494                         if (i == j):
excute 13:50:25.155961 line       496                         i_j_list.append((
excute 13:50:25.158952 line       497                             i, j,
excute 13:50:25.161944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.165935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:25.168925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:25.172915 line       494                         if (i == j):
excute 13:50:25.175907 line       496                         i_j_list.append((
excute 13:50:25.179896 line       497                             i, j,
excute 13:50:25.182888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.185880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:25.189871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:25.192862 line       494                         if (i == j):
excute 13:50:25.196851 line       496                         i_j_list.append((
excute 13:50:25.200841 line       497                             i, j,
excute 13:50:25.203832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.206825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:25.210813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:25.214818 line       494                         if (i == j):
excute 13:50:25.217795 line       496                         i_j_list.append((
excute 13:50:25.221784 line       497                             i, j,
excute 13:50:25.224776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.227769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1)]
excute 13:50:25.231767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:25.235749 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:25.239737 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:25.243727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:25.246718 line       494                         if (i == j):
excute 13:50:25.250707 line       496                         i_j_list.append((
excute 13:50:25.254697 line       497                             i, j,
excute 13:50:25.258686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.261679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0)]
excute 13:50:25.265668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:25.269657 line       494                         if (i == j):
excute 13:50:25.273647 line       496                         i_j_list.append((
excute 13:50:25.277638 line       497                             i, j,
excute 13:50:25.281624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.284618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:50:25.288607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:25.292598 line       494                         if (i == j):
excute 13:50:25.296585 line       495                             continue
excute 13:50:25.300574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:25.303566 line       494                         if (i == j):
excute 13:50:25.307562 line       496                         i_j_list.append((
excute 13:50:25.310548 line       497                             i, j,
excute 13:50:25.314537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.317528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:50:25.320521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:25.324510 line       494                         if (i == j):
excute 13:50:25.332493 line       496                         i_j_list.append((
excute 13:50:25.336478 line       497                             i, j,
excute 13:50:25.345455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.352436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:50:25.357424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:25.363407 line       494                         if (i == j):
excute 13:50:25.369390 line       496                         i_j_list.append((
excute 13:50:25.374378 line       497                             i, j,
excute 13:50:25.379366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.384350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:50:25.390334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:25.395322 line       494                         if (i == j):
excute 13:50:25.400308 line       496                         i_j_list.append((
excute 13:50:25.405294 line       497                             i, j,
excute 13:50:25.410281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.414270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:50:25.419258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:25.423246 line       494                         if (i == j):
excute 13:50:25.429230 line       496                         i_j_list.append((
excute 13:50:25.433219 line       497                             i, j,
excute 13:50:25.438206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.444192 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:50:25.449179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:25.453167 line       494                         if (i == j):
excute 13:50:25.459151 line       496                         i_j_list.append((
excute 13:50:25.464137 line       497                             i, j,
excute 13:50:25.468126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.472116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:50:25.477102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:25.483087 line       494                         if (i == j):
excute 13:50:25.488073 line       496                         i_j_list.append((
excute 13:50:25.492062 line       497                             i, j,
excute 13:50:25.496051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.501038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1)]
excute 13:50:25.506025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:25.512009 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:25.515998 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:25.519987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:25.523977 line       494                         if (i == j):
excute 13:50:25.528964 line       496                         i_j_list.append((
excute 13:50:25.535946 line       497                             i, j,
excute 13:50:25.540931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.546916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0)]
excute 13:50:25.552900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:25.557889 line       494                         if (i == j):
excute 13:50:25.561876 line       496                         i_j_list.append((
excute 13:50:25.565865 line       497                             i, j,
excute 13:50:25.570851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.574840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0)]
excute 13:50:25.578830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:25.582819 line       494                         if (i == j):
excute 13:50:25.587806 line       496                         i_j_list.append((
excute 13:50:25.591797 line       497                             i, j,
excute 13:50:25.594787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.597779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0)]
excute 13:50:25.601768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:25.605758 line       494                         if (i == j):
excute 13:50:25.609747 line       495                             continue
excute 13:50:25.612740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:25.616729 line       494                         if (i == j):
excute 13:50:25.620719 line       496                         i_j_list.append((
excute 13:50:25.624708 line       497                             i, j,
excute 13:50:25.627700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.631690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0)]
excute 13:50:25.634681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:25.638671 line       494                         if (i == j):
excute 13:50:25.642660 line       496                         i_j_list.append((
excute 13:50:25.646650 line       497                             i, j,
excute 13:50:25.650638 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.654628 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0)]
excute 13:50:25.658618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:25.662607 line       494                         if (i == j):
excute 13:50:25.666597 line       496                         i_j_list.append((
excute 13:50:25.670586 line       497                             i, j,
excute 13:50:25.674576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.678564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0)]
excute 13:50:25.682554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:25.687551 line       494                         if (i == j):
excute 13:50:25.691530 line       496                         i_j_list.append((
excute 13:50:25.694552 line       497                             i, j,
excute 13:50:25.697544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.701534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0)]
excute 13:50:25.704528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:25.708485 line       494                         if (i == j):
excute 13:50:25.713471 line       496                         i_j_list.append((
excute 13:50:25.717461 line       497                             i, j,
excute 13:50:25.722479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.726437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0)]
excute 13:50:25.729459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:25.733429 line       494                         if (i == j):
excute 13:50:25.737407 line       496                         i_j_list.append((
excute 13:50:25.740398 line       497                             i, j,
excute 13:50:25.744387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.747379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1)]
excute 13:50:25.751370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:25.755359 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:25.759347 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:25.763337 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:25.766328 line       494                         if (i == j):
excute 13:50:25.770318 line       496                         i_j_list.append((
excute 13:50:25.773310 line       497                             i, j,
excute 13:50:25.776302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.780291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0)]
excute 13:50:25.783283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:25.787273 line       494                         if (i == j):
excute 13:50:25.791262 line       496                         i_j_list.append((
excute 13:50:25.794254 line       497                             i, j,
excute 13:50:25.798243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.801235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:25.805225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:25.809229 line       494                         if (i == j):
excute 13:50:25.813206 line       496                         i_j_list.append((
excute 13:50:25.817194 line       497                             i, j,
excute 13:50:25.820217 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.824175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:50:25.827198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:25.831158 line       494                         if (i == j):
excute 13:50:25.835146 line       496                         i_j_list.append((
excute 13:50:25.838169 line       497                             i, j,
excute 13:50:25.842158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.845149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:50:25.849139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:25.853100 line       494                         if (i == j):
excute 13:50:25.858086 line       495                             continue
excute 13:50:25.861107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:25.865100 line       494                         if (i == j):
excute 13:50:25.869088 line       496                         i_j_list.append((
excute 13:50:25.872080 line       497                             i, j,
excute 13:50:25.876037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.879059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:25.882051 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:25.886041 line       494                         if (i == j):
excute 13:50:25.890030 line       496                         i_j_list.append((
excute 13:50:25.894019 line       497                             i, j,
excute 13:50:25.897012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.900969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:25.903995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:25.907951 line       494                         if (i == j):
excute 13:50:25.911940 line       496                         i_j_list.append((
excute 13:50:25.915962 line       497                             i, j,
excute 13:50:25.918954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.922942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:25.925934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:25.929901 line       494                         if (i == j):
excute 13:50:25.933884 line       496                         i_j_list.append((
excute 13:50:25.936904 line       497                             i, j,
excute 13:50:25.940894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.943888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:25.947844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:25.952831 line       494                         if (i == j):
excute 13:50:25.956821 line       496                         i_j_list.append((
excute 13:50:25.960841 line       497                             i, j,
excute 13:50:25.964798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:25.968788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1)]
excute 13:50:25.971811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:25.975770 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:25.979792 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:25.983784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:25.986776 line       494                         if (i == j):
excute 13:50:25.990763 line       496                         i_j_list.append((
excute 13:50:25.994750 line       497                             i, j,
excute 13:50:25.997742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.001721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0)]
excute 13:50:26.004723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:26.008683 line       494                         if (i == j):
excute 13:50:26.012702 line       496                         i_j_list.append((
excute 13:50:26.016692 line       497                             i, j,
excute 13:50:26.019684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.023675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:26.026664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:26.030633 line       494                         if (i == j):
excute 13:50:26.034614 line       496                         i_j_list.append((
excute 13:50:26.037606 line       497                             i, j,
excute 13:50:26.042592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.046581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:26.050570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:26.055592 line       494                         if (i == j):
excute 13:50:26.059547 line       496                         i_j_list.append((
excute 13:50:26.063536 line       497                             i, j,
excute 13:50:26.067525 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.071515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:26.075504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:26.079493 line       494                         if (i == j):
excute 13:50:26.084491 line       496                         i_j_list.append((
excute 13:50:26.087473 line       497                             i, j,
excute 13:50:26.091461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.095451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:26.099440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:26.103429 line       494                         if (i == j):
excute 13:50:26.108417 line       495                             continue
excute 13:50:26.111408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:26.115397 line       494                         if (i == j):
excute 13:50:26.119387 line       496                         i_j_list.append((
excute 13:50:26.123376 line       497                             i, j,
excute 13:50:26.127365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.131355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:26.134345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:26.139333 line       494                         if (i == j):
excute 13:50:26.144319 line       496                         i_j_list.append((
excute 13:50:26.151315 line       497                             i, j,
excute 13:50:26.155290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.159280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:26.162302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:26.167260 line       494                         if (i == j):
excute 13:50:26.171247 line       496                         i_j_list.append((
excute 13:50:26.175238 line       497                             i, j,
excute 13:50:26.179227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.183215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:26.186208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:26.190197 line       494                         if (i == j):
excute 13:50:26.194188 line       496                         i_j_list.append((
excute 13:50:26.198176 line       497                             i, j,
excute 13:50:26.202166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.205158 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1)]
excute 13:50:26.208149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:26.213143 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:26.216128 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:26.220118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:26.224106 line       494                         if (i == j):
excute 13:50:26.229092 line       496                         i_j_list.append((
excute 13:50:26.232085 line       497                             i, j,
excute 13:50:26.236074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.239067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0)]
excute 13:50:26.243055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:26.248041 line       494                         if (i == j):
excute 13:50:26.251034 line       496                         i_j_list.append((
excute 13:50:26.255024 line       497                             i, j,
excute 13:50:26.259013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.262004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:50:26.265994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:26.270981 line       494                         if (i == j):
excute 13:50:26.274971 line       496                         i_j_list.append((
excute 13:50:26.277962 line       497                             i, j,
excute 13:50:26.281957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.284943 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:50:26.288932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:26.292921 line       494                         if (i == j):
excute 13:50:26.296910 line       496                         i_j_list.append((
excute 13:50:26.299902 line       497                             i, j,
excute 13:50:26.303891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.306884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:50:26.310873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:26.314864 line       494                         if (i == j):
excute 13:50:26.317854 line       496                         i_j_list.append((
excute 13:50:26.321844 line       497                             i, j,
excute 13:50:26.325833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.334812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:50:26.339796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:26.343786 line       494                         if (i == j):
excute 13:50:26.349771 line       496                         i_j_list.append((
excute 13:50:26.353791 line       497                             i, j,
excute 13:50:26.357748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.364736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:50:26.370714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:26.376698 line       494                         if (i == j):
excute 13:50:26.384709 line       495                             continue
excute 13:50:26.392686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:26.398639 line       494                         if (i == j):
excute 13:50:26.407617 line       496                         i_j_list.append((
excute 13:50:26.411605 line       497                             i, j,
excute 13:50:26.415595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.420581 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:50:26.426564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:26.431551 line       494                         if (i == j):
excute 13:50:26.436538 line       496                         i_j_list.append((
excute 13:50:26.440529 line       497                             i, j,
excute 13:50:26.449504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.453493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:50:26.458481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:26.469453 line       494                         if (i == j):
excute 13:50:26.475434 line       496                         i_j_list.append((
excute 13:50:26.480421 line       497                             i, j,
excute 13:50:26.489396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.496379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1)]
excute 13:50:26.506353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:26.515328 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:26.521313 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:26.528292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:26.536271 line       494                         if (i == j):
excute 13:50:26.543252 line       496                         i_j_list.append((
excute 13:50:26.551232 line       497                             i, j,
excute 13:50:26.556219 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.563199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0)]
excute 13:50:26.570181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:26.577163 line       494                         if (i == j):
excute 13:50:26.585143 line       496                         i_j_list.append((
excute 13:50:26.593121 line       497                             i, j,
excute 13:50:26.600100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.605087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:26.611071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:26.618054 line       494                         if (i == j):
excute 13:50:26.624036 line       496                         i_j_list.append((
excute 13:50:26.630021 line       497                             i, j,
excute 13:50:26.637998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.644987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:26.650965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:26.658944 line       494                         if (i == j):
excute 13:50:26.664928 line       496                         i_j_list.append((
excute 13:50:26.671908 line       497                             i, j,
excute 13:50:26.676898 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.682878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:26.689861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:26.696842 line       494                         if (i == j):
excute 13:50:26.704820 line       496                         i_j_list.append((
excute 13:50:26.712799 line       497                             i, j,
excute 13:50:26.718783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.726762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:26.733743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:26.740726 line       494                         if (i == j):
excute 13:50:26.748704 line       496                         i_j_list.append((
excute 13:50:26.754688 line       497                             i, j,
excute 13:50:26.760672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.768649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:26.774635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:26.782613 line       494                         if (i == j):
excute 13:50:26.791589 line       496                         i_j_list.append((
excute 13:50:26.796577 line       497                             i, j,
excute 13:50:26.802578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.807547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:26.811534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:26.815524 line       494                         if (i == j):
excute 13:50:26.819514 line       495                             continue
excute 13:50:26.823504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:26.827492 line       494                         if (i == j):
excute 13:50:26.831482 line       496                         i_j_list.append((
excute 13:50:26.834474 line       497                             i, j,
excute 13:50:26.838463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.841455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:26.845445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:26.849434 line       494                         if (i == j):
excute 13:50:26.853424 line       496                         i_j_list.append((
excute 13:50:26.857413 line       497                             i, j,
excute 13:50:26.860405 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.864394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1)]
excute 13:50:26.868384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:26.872374 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:26.875365 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:26.880352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:26.886335 line       494                         if (i == j):
excute 13:50:26.890324 line       496                         i_j_list.append((
excute 13:50:26.893316 line       497                             i, j,
excute 13:50:26.897305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.900297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0)]
excute 13:50:26.904286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:26.908276 line       494                         if (i == j):
excute 13:50:26.912266 line       496                         i_j_list.append((
excute 13:50:26.916255 line       497                             i, j,
excute 13:50:26.919247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.922239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:26.926227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:26.930217 line       494                         if (i == j):
excute 13:50:26.934207 line       496                         i_j_list.append((
excute 13:50:26.937198 line       497                             i, j,
excute 13:50:26.940191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.944180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:26.948171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:26.952159 line       494                         if (i == j):
excute 13:50:26.957146 line       496                         i_j_list.append((
excute 13:50:26.962133 line       497                             i, j,
excute 13:50:26.968116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.972105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:26.976094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:26.980085 line       494                         if (i == j):
excute 13:50:26.984074 line       496                         i_j_list.append((
excute 13:50:26.989060 line       497                             i, j,
excute 13:50:26.993049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:26.996041 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:27.000030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:27.004020 line       494                         if (i == j):
excute 13:50:27.008011 line       496                         i_j_list.append((
excute 13:50:27.011998 line       497                             i, j,
excute 13:50:27.014991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.018980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:27.022969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:27.026960 line       494                         if (i == j):
excute 13:50:27.030949 line       496                         i_j_list.append((
excute 13:50:27.034937 line       497                             i, j,
excute 13:50:27.037929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.041919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:27.047904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:27.050894 line       494                         if (i == j):
excute 13:50:27.055882 line       496                         i_j_list.append((
excute 13:50:27.058873 line       497                             i, j,
excute 13:50:27.062863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.065855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:27.069845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:27.073835 line       494                         if (i == j):
excute 13:50:27.077833 line       495                             continue
excute 13:50:27.080815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:27.083807 line       494                         if (i == j):
excute 13:50:27.088796 line       496                         i_j_list.append((
excute 13:50:27.092783 line       497                             i, j,
excute 13:50:27.095775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.099765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1)]
excute 13:50:27.102756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:27.106778 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:27.110766 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:27.114725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:27.118716 line       494                         if (i == j):
excute 13:50:27.122703 line       496                         i_j_list.append((
excute 13:50:27.126692 line       497                             i, j,
excute 13:50:27.129685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.133703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0)]
excute 13:50:27.137665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:27.141653 line       494                         if (i == j):
excute 13:50:27.145643 line       496                         i_j_list.append((
excute 13:50:27.149633 line       497                             i, j,
excute 13:50:27.153622 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.157611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:27.161601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:27.165596 line       494                         if (i == j):
excute 13:50:27.169611 line       496                         i_j_list.append((
excute 13:50:27.172603 line       497                             i, j,
excute 13:50:27.175593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.179583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:27.182574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:27.186563 line       494                         if (i == j):
excute 13:50:27.190554 line       496                         i_j_list.append((
excute 13:50:27.195518 line       497                             i, j,
excute 13:50:27.198532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.202521 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:27.205513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:27.209502 line       494                         if (i == j):
excute 13:50:27.213492 line       496                         i_j_list.append((
excute 13:50:27.217481 line       497                             i, j,
excute 13:50:27.221441 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.224462 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:27.228421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:27.232410 line       494                         if (i == j):
excute 13:50:27.235433 line       496                         i_j_list.append((
excute 13:50:27.239422 line       497                             i, j,
excute 13:50:27.242415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.246404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:27.249396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:27.253385 line       494                         if (i == j):
excute 13:50:27.258374 line       496                         i_j_list.append((
excute 13:50:27.261364 line       497                             i, j,
excute 13:50:27.265353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.268347 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:27.272303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:27.276292 line       494                         if (i == j):
excute 13:50:27.280282 line       496                         i_j_list.append((
excute 13:50:27.283305 line       497                             i, j,
excute 13:50:27.287294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.291285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:27.296241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:27.300228 line       494                         if (i == j):
excute 13:50:27.304217 line       496                         i_j_list.append((
excute 13:50:27.308207 line       497                             i, j,
excute 13:50:27.311199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:27.315188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:27.318180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:27.322169 line       494                         if (i == j):
excute 13:50:27.329153 line       495                             continue
excute 13:50:27.336169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:27.340122 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:27.343145 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (0, 9, 1, 1), (2, 9, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (1, 9, 2, 1), (5, 9, 2, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (4, 9, 3, 1), (6, 9, 3, 1), (3, 0, 6, 0), (3, 1, 6, 0), (3, 2, 6, 0), (3, 4, 6, 0), (3, 5, 6, 0), (3, 6, 6, 0), (3, 7, 6, 0), (3, 8, 6, 0), (3, 9, 6, 1)]
excute 13:50:27.349099 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:27.353103 line       505                     if (self.RELOCATE):
excute 13:50:27.357076 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:27.361065 line       505                     if (self.RELOCATE):
excute 13:50:27.365055 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:27.369044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:27.372036 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:27.376025 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:27.381013 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.385004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:27.388994 line       556                     i = i_j[0]
excute 13:50:27.392982 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:27.397969 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.402987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:27.405977 line       556                     i = i_j[0]
excute 13:50:27.409968 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:27.413956 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.417920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:27.421903 line       556                     i = i_j[0]
excute 13:50:27.424894 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:27.428885 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.432876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:27.436864 line       556                     i = i_j[0]
excute 13:50:27.439854 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:27.443844 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.447835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:27.452853 line       556                     i = i_j[0]
excute 13:50:27.456812 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:27.460801 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.465792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:27.468779 line       556                     i = i_j[0]
excute 13:50:27.473767 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:27.477754 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.481744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:27.485734 line       556                     i = i_j[0]
excute 13:50:27.489725 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:27.492716 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.497703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 1)
excute 13:50:27.501693 line       556                     i = i_j[0]
excute 13:50:27.506677 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:27.510697 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.514657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:27.517679 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:27.521667 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:27.525657 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.529647 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:27.533635 line       556                     i = i_j[0]
excute 13:50:27.537595 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:27.540588 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.545573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:27.549562 line       556                     i = i_j[0]
excute 13:50:27.553551 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:27.557540 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.561542 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:27.565519 line       556                     i = i_j[0]
excute 13:50:27.568511 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:27.572500 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.576490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:27.579482 line       556                     i = i_j[0]
excute 13:50:27.583471 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:27.586463 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.590452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:27.594441 line       556                     i = i_j[0]
excute 13:50:27.598432 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:27.601423 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.606415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:27.610430 line       556                     i = i_j[0]
excute 13:50:27.614388 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:27.617412 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.622382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:27.625391 line       556                     i = i_j[0]
excute 13:50:27.629381 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:27.633370 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.637330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 1)
excute 13:50:27.641318 line       556                     i = i_j[0]
excute 13:50:27.645308 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:27.648300 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.652290 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:27.657275 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:27.661266 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:27.665255 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.669243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:50:27.673232 line       556                     i = i_j[0]
excute 13:50:27.678221 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:27.682209 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.686198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:27.689220 line       556                     i = i_j[0]
excute 13:50:27.693209 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:27.697199 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.701158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:50:27.706145 line       556                     i = i_j[0]
excute 13:50:27.712130 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:27.718111 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.726090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:27.730079 line       556                     i = i_j[0]
excute 13:50:27.738058 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:27.742048 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.746037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:27.749029 line       556                     i = i_j[0]
excute 13:50:27.753019 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:27.757009 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.760998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:50:27.764988 line       556                     i = i_j[0]
excute 13:50:27.768977 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:27.772966 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.776955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:27.780945 line       556                     i = i_j[0]
excute 13:50:27.784934 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:27.788924 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.792914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:50:27.795905 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:27.800893 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:27.804881 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.809870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:50:27.814854 line       556                     i = i_j[0]
excute 13:50:27.818843 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:27.822831 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.826822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:50:27.829813 line       556                     i = i_j[0]
excute 13:50:27.833802 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:27.837793 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.841790 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:50:27.845772 line       556                     i = i_j[0]
excute 13:50:27.849760 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:27.852752 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.856742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:50:27.860731 line       556                     i = i_j[0]
excute 13:50:27.864721 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:27.867712 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.871701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:50:27.875690 line       556                     i = i_j[0]
excute 13:50:27.879681 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:27.882672 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.886660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:50:27.890652 line       556                     i = i_j[0]
excute 13:50:27.893642 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:27.897663 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.901622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:50:27.904644 line       556                     i = i_j[0]
excute 13:50:27.908633 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:27.912622 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.917578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 1)
excute 13:50:27.921570 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:27.925557 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:27.928580 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:27.932569 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 164
excute 13:50:27.936559 line       560                         if (t_tmp > self.TIME):
excute 13:50:27.940518 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:27.943540 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:27.948495 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:27.952484 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:27.956475 line       569                                     available_vhecles[i][t],
excute 13:50:27.959465 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:27.967447 line       571                                     self.S_capacities[j],
excute 13:50:27.972464 line       572                                     demands[t][i][j],
excute 13:50:27.975454 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 157
calc_contract     13:50:27.979417 call       352     def caluculate_contract(
calc_contract     13:50:27.982407 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:27.983405 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:27.984400 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:27.985398 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:27.985398 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:27.986404 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:27.986404 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute 13:50:27.987394 line       575                                 rsf += rsf_tmp
excute 13:50:27.991412 line       576                                 rse += rse_tmp
excute 13:50:27.995401 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 0
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 157
move_cars     Starting var:.. t_tmp = 164
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:27.999394 call       388     def move_cars(
move_cars     13:50:28.004379 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:50:28.005381 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     13:50:28.007349 line       399         return available_vhecles
move_cars     13:50:28.009333 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:50:28.012328 line       579                                 success += can_contract
excute Modified var:.. success = 78
excute 13:50:28.017314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 1)
excute 13:50:28.021332 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:28.025290 line       557                     j = i_j[1]
excute 13:50:28.029279 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.033279 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:28.036260 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:28.040250 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:28.044242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.048230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:28.052219 line       556                     i = i_j[0]
excute 13:50:28.058237 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:28.063188 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.067178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:28.070170 line       556                     i = i_j[0]
excute 13:50:28.074159 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:28.078148 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.082138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:28.085166 line       556                     i = i_j[0]
excute 13:50:28.089120 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:28.093108 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.096132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:28.100122 line       556                     i = i_j[0]
excute 13:50:28.104089 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:28.107104 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.111093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:28.115049 line       556                     i = i_j[0]
excute 13:50:28.121035 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:28.125054 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.129014 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:28.132036 line       556                     i = i_j[0]
excute 13:50:28.136991 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:28.139983 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.143972 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:28.147961 line       556                     i = i_j[0]
excute 13:50:28.151951 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:28.154943 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.158932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:28.162921 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:28.166913 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:28.170901 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.174890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:28.177882 line       556                     i = i_j[0]
excute 13:50:28.181871 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:28.185860 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.189855 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:28.192873 line       556                     i = i_j[0]
excute 13:50:28.196831 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:28.200821 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.204810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:28.207833 line       556                     i = i_j[0]
excute 13:50:28.211792 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:28.214814 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.218804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:28.223760 line       556                     i = i_j[0]
excute 13:50:28.227780 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:28.231771 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.235729 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:28.238751 line       556                     i = i_j[0]
excute 13:50:28.243712 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:28.246733 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.250700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:28.254702 line       556                     i = i_j[0]
excute 13:50:28.258681 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:28.261690 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.265683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:28.269671 line       556                     i = i_j[0]
excute 13:50:28.273627 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:28.276649 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.280639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:28.284628 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:28.288587 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:28.292607 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.296596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:28.300591 line       556                     i = i_j[0]
excute 13:50:28.304546 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:28.307567 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.311556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:28.315545 line       556                     i = i_j[0]
excute 13:50:28.319505 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:28.323495 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.333468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:28.339463 line       556                     i = i_j[0]
excute 13:50:28.344439 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:28.350421 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.356406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:28.359397 line       556                     i = i_j[0]
excute 13:50:28.368373 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:28.374382 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.378347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:28.382367 line       556                     i = i_j[0]
excute 13:50:28.386326 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:28.390316 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.395303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:28.399292 line       556                     i = i_j[0]
excute 13:50:28.403281 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:28.407270 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.412256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:28.416247 line       556                     i = i_j[0]
excute 13:50:28.420234 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:28.423226 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.428215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:28.432204 line       556                     i = i_j[0]
excute 13:50:28.437191 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:28.441180 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.445170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 1)
excute 13:50:28.450156 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:28.454144 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:28.458133 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.462122 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 1)
excute 13:50:28.466111 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:28.470101 line       557                     j = i_j[1]
excute 13:50:28.474097 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.477082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:28.481074 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:28.485063 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:28.489052 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.494039 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:28.498026 line       556                     i = i_j[0]
excute 13:50:28.502025 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:28.505042 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.509995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:50:28.512986 line       556                     i = i_j[0]
excute 13:50:28.516976 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:28.520965 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.524954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:28.527946 line       556                     i = i_j[0]
excute 13:50:28.532933 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:28.535924 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.539914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:28.543903 line       556                     i = i_j[0]
excute 13:50:28.547893 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:28.551882 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.556871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:28.562853 line       556                     i = i_j[0]
excute 13:50:28.566843 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:28.570832 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.574835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:28.577813 line       556                     i = i_j[0]
excute 13:50:28.581803 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:28.585791 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.589781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:28.592773 line       556                     i = i_j[0]
excute 13:50:28.596763 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:28.599754 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.603744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:50:28.607733 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:28.611723 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:28.615745 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.619711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:50:28.622724 line       556                     i = i_j[0]
excute 13:50:28.626684 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:28.630673 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.636658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:50:28.640647 line       556                     i = i_j[0]
excute 13:50:28.644636 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:28.648625 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.652615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:50:28.657601 line       556                     i = i_j[0]
excute 13:50:28.660593 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:28.665588 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.669570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:50:28.673558 line       556                     i = i_j[0]
excute 13:50:28.676550 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:28.680540 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.685526 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:50:28.688518 line       556                     i = i_j[0]
excute 13:50:28.692508 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:28.696497 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.701484 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:50:28.705473 line       556                     i = i_j[0]
excute 13:50:28.709463 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:28.713450 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.717440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:50:28.721430 line       556                     i = i_j[0]
excute 13:50:28.725419 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:28.728410 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.732399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 1)
excute 13:50:28.737388 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:28.741377 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:28.746362 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.750353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 1)
excute 13:50:28.754342 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:28.758330 line       557                     j = i_j[1]
excute 13:50:28.762329 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.766310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 6, 0)
excute 13:50:28.769332 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:28.773290 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:28.777282 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.781269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 6, 0)
excute 13:50:28.785258 line       556                     i = i_j[0]
excute 13:50:28.788283 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:28.792276 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.796261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 6, 0)
excute 13:50:28.800219 line       556                     i = i_j[0]
excute 13:50:28.804209 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:28.807201 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.811191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 6, 0)
excute 13:50:28.815180 line       556                     i = i_j[0]
excute 13:50:28.820165 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:28.823188 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.827182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 6, 0)
excute 13:50:28.831167 line       556                     i = i_j[0]
excute 13:50:28.835163 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:28.839146 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.843112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 6, 0)
excute 13:50:28.846127 line       556                     i = i_j[0]
excute 13:50:28.850117 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:28.854107 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.858098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 6, 0)
excute 13:50:28.862085 line       556                     i = i_j[0]
excute 13:50:28.866054 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:28.869068 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.873056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 6, 0)
excute 13:50:28.877044 line       556                     i = i_j[0]
excute 13:50:28.881004 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:28.884992 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.887983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 6, 1)
excute 13:50:28.891972 line       556                     i = i_j[0]
excute 13:50:28.895974 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:28.898985 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:28.902975 line       555                 for i_j in i_j_list:
excute 13:50:28.906935 line       581             self.write_matrix(
excute 13:50:28.910924 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:28.914913 line       583                 result_file_path,
excute 13:50:28.918902 line       584                 mode='a'
excute 13:50:28.927893 line       488         for t in time_steps:
excute Modified var:.. t = 158
excute 13:50:28.932863 line       489             if (t != self.TIME + 1):
excute 13:50:28.940844 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:28.947826 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:28.955806 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:28.962785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:28.969766 line       494                         if (i == j):
excute 13:50:28.976749 line       495                             continue
excute 13:50:28.981736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:28.987717 line       494                         if (i == j):
excute 13:50:28.994702 line       496                         i_j_list.append((
excute 13:50:29.003708 line       497                             i, j,
excute 13:50:29.010656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.017640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:50:29.023627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:29.031604 line       494                         if (i == j):
excute 13:50:29.038582 line       496                         i_j_list.append((
excute 13:50:29.047558 line       497                             i, j,
excute 13:50:29.051547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.056534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:50:29.061521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:29.071494 line       494                         if (i == j):
excute 13:50:29.078476 line       496                         i_j_list.append((
excute 13:50:29.086454 line       497                             i, j,
excute 13:50:29.093436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.099422 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:50:29.106400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:29.111387 line       494                         if (i == j):
excute 13:50:29.117371 line       496                         i_j_list.append((
excute 13:50:29.122359 line       497                             i, j,
excute 13:50:29.126348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.129338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:50:29.133333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:29.137318 line       494                         if (i == j):
excute 13:50:29.141306 line       496                         i_j_list.append((
excute 13:50:29.145296 line       497                             i, j,
excute 13:50:29.149286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.153275 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:50:29.157265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:29.160256 line       494                         if (i == j):
excute 13:50:29.164245 line       496                         i_j_list.append((
excute 13:50:29.168235 line       497                             i, j,
excute 13:50:29.171226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.175217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:50:29.178208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:29.182198 line       494                         if (i == j):
excute 13:50:29.185189 line       496                         i_j_list.append((
excute 13:50:29.189180 line       497                             i, j,
excute 13:50:29.192171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.196191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:50:29.200151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:29.204141 line       494                         if (i == j):
excute 13:50:29.208130 line       496                         i_j_list.append((
excute 13:50:29.211122 line       497                             i, j,
excute 13:50:29.215111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.219100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:50:29.223090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:29.227079 line       494                         if (i == j):
excute 13:50:29.233067 line       496                         i_j_list.append((
excute 13:50:29.240068 line       497                             i, j,
excute 13:50:29.243035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.247023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:50:29.251015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:29.256002 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:29.258993 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:29.262990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:29.266972 line       494                         if (i == j):
excute 13:50:29.270961 line       496                         i_j_list.append((
excute 13:50:29.274951 line       497                             i, j,
excute 13:50:29.278940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.281931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0)]
excute 13:50:29.285921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:29.289910 line       494                         if (i == j):
excute 13:50:29.293901 line       495                             continue
excute 13:50:29.297890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:29.301879 line       494                         if (i == j):
excute 13:50:29.305867 line       496                         i_j_list.append((
excute 13:50:29.309858 line       497                             i, j,
excute 13:50:29.312850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.316849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:29.319831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:29.323821 line       494                         if (i == j):
excute 13:50:29.328806 line       496                         i_j_list.append((
excute 13:50:29.336787 line       497                             i, j,
excute 13:50:29.341772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.344763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:29.349751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:29.355737 line       494                         if (i == j):
excute 13:50:29.359723 line       496                         i_j_list.append((
excute 13:50:29.362716 line       497                             i, j,
excute 13:50:29.366705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.370695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:29.373686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:29.377674 line       494                         if (i == j):
excute 13:50:29.382661 line       496                         i_j_list.append((
excute 13:50:29.385654 line       497                             i, j,
excute 13:50:29.389644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.393634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:29.396625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:29.401611 line       494                         if (i == j):
excute 13:50:29.405603 line       496                         i_j_list.append((
excute 13:50:29.408594 line       497                             i, j,
excute 13:50:29.412583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.416573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:29.420568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:29.424552 line       494                         if (i == j):
excute 13:50:29.428540 line       496                         i_j_list.append((
excute 13:50:29.432528 line       497                             i, j,
excute 13:50:29.435520 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.439509 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:29.442501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:29.446490 line       494                         if (i == j):
excute 13:50:29.451481 line       496                         i_j_list.append((
excute 13:50:29.456465 line       497                             i, j,
excute 13:50:29.460453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.466440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:29.470427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:29.473420 line       494                         if (i == j):
excute 13:50:29.478408 line       496                         i_j_list.append((
excute 13:50:29.482395 line       497                             i, j,
excute 13:50:29.486385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.489377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:29.493367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:29.497357 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:29.501344 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:29.505333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:29.509324 line       494                         if (i == j):
excute 13:50:29.514310 line       496                         i_j_list.append((
excute 13:50:29.517303 line       497                             i, j,
excute 13:50:29.521292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.525282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:50:29.528274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:29.533263 line       494                         if (i == j):
excute 13:50:29.537250 line       496                         i_j_list.append((
excute 13:50:29.540242 line       497                             i, j,
excute 13:50:29.544231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.548221 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:50:29.552209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:29.556199 line       494                         if (i == j):
excute 13:50:29.561185 line       495                             continue
excute 13:50:29.565175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:29.568166 line       494                         if (i == j):
excute 13:50:29.572156 line       496                         i_j_list.append((
excute 13:50:29.576148 line       497                             i, j,
excute 13:50:29.580133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.583125 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:50:29.586117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:29.590106 line       494                         if (i == j):
excute 13:50:29.594096 line       496                         i_j_list.append((
excute 13:50:29.598086 line       497                             i, j,
excute 13:50:29.601078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.605067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:50:29.608059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:29.612049 line       494                         if (i == j):
excute 13:50:29.616038 line       496                         i_j_list.append((
excute 13:50:29.620058 line       497                             i, j,
excute 13:50:29.623050 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.627040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:50:29.630998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:29.634992 line       494                         if (i == j):
excute 13:50:29.638977 line       496                         i_j_list.append((
excute 13:50:29.642967 line       497                             i, j,
excute 13:50:29.646955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.649949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:50:29.653938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:29.657927 line       494                         if (i == j):
excute 13:50:29.663913 line       496                         i_j_list.append((
excute 13:50:29.670017 line       497                             i, j,
excute 13:50:29.673924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.677913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:50:29.681904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:29.685893 line       494                         if (i == j):
excute 13:50:29.689882 line       496                         i_j_list.append((
excute 13:50:29.693871 line       497                             i, j,
excute 13:50:29.697861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.701849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:50:29.704843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:29.708832 line       494                         if (i == j):
excute 13:50:29.713817 line       496                         i_j_list.append((
excute 13:50:29.716808 line       497                             i, j,
excute 13:50:29.720798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.723790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:50:29.727779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:29.731768 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:29.734762 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:29.738751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:29.742741 line       494                         if (i == j):
excute 13:50:29.746731 line       496                         i_j_list.append((
excute 13:50:29.750719 line       497                             i, j,
excute 13:50:29.754709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.758699 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0)]
excute 13:50:29.762688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:29.767675 line       494                         if (i == j):
excute 13:50:29.771664 line       496                         i_j_list.append((
excute 13:50:29.774655 line       497                             i, j,
excute 13:50:29.778645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.781636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:50:29.784628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:29.788618 line       494                         if (i == j):
excute 13:50:29.792608 line       496                         i_j_list.append((
excute 13:50:29.796617 line       497                             i, j,
excute 13:50:29.800585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.803578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:50:29.809562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:29.813552 line       494                         if (i == j):
excute 13:50:29.821538 line       495                             continue
excute 13:50:29.828510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:29.833499 line       494                         if (i == j):
excute 13:50:29.839481 line       496                         i_j_list.append((
excute 13:50:29.843504 line       497                             i, j,
excute 13:50:29.847492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.850482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:50:29.854472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:29.858429 line       494                         if (i == j):
excute 13:50:29.862419 line       496                         i_j_list.append((
excute 13:50:29.865411 line       497                             i, j,
excute 13:50:29.870398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.873390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:50:29.876382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:29.880371 line       494                         if (i == j):
excute 13:50:29.884361 line       496                         i_j_list.append((
excute 13:50:29.887354 line       497                             i, j,
excute 13:50:29.891344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.895333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:50:29.899322 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:29.903312 line       494                         if (i == j):
excute 13:50:29.908297 line       496                         i_j_list.append((
excute 13:50:29.912287 line       497                             i, j,
excute 13:50:29.917276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.922261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:50:29.930238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:29.936223 line       494                         if (i == j):
excute 13:50:29.940211 line       496                         i_j_list.append((
excute 13:50:29.943203 line       497                             i, j,
excute 13:50:29.947194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.951182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:50:29.955171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:29.959161 line       494                         if (i == j):
excute 13:50:29.963151 line       496                         i_j_list.append((
excute 13:50:29.967139 line       497                             i, j,
excute 13:50:29.971130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:29.975118 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:50:29.979108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:29.983098 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:29.986088 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:29.990078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:29.994081 line       494                         if (i == j):
excute 13:50:29.997059 line       496                         i_j_list.append((
excute 13:50:30.001049 line       497                             i, j,
excute 13:50:30.004041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.008030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0)]
excute 13:50:30.012020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:30.015042 line       494                         if (i == j):
excute 13:50:30.019034 line       496                         i_j_list.append((
excute 13:50:30.023022 line       497                             i, j,
excute 13:50:30.026014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.030003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:30.032996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:30.036985 line       494                         if (i == j):
excute 13:50:30.040974 line       496                         i_j_list.append((
excute 13:50:30.044963 line       497                             i, j,
excute 13:50:30.047957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.051944 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:50:30.055936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:30.059893 line       494                         if (i == j):
excute 13:50:30.063921 line       496                         i_j_list.append((
excute 13:50:30.066906 line       497                             i, j,
excute 13:50:30.070898 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.076846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:50:30.080835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:30.084831 line       494                         if (i == j):
excute 13:50:30.088815 line       495                             continue
excute 13:50:30.091806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:30.094798 line       494                         if (i == j):
excute 13:50:30.098787 line       496                         i_j_list.append((
excute 13:50:30.102777 line       497                             i, j,
excute 13:50:30.105801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.109790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:30.112782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:30.116771 line       494                         if (i == j):
excute 13:50:30.120729 line       496                         i_j_list.append((
excute 13:50:30.124718 line       497                             i, j,
excute 13:50:30.127710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.131699 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:30.135690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:30.139679 line       494                         if (i == j):
excute 13:50:30.142701 line       496                         i_j_list.append((
excute 13:50:30.146692 line       497                             i, j,
excute 13:50:30.149683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.153673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:30.157661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:30.161653 line       494                         if (i == j):
excute 13:50:30.165642 line       496                         i_j_list.append((
excute 13:50:30.168601 line       497                             i, j,
excute 13:50:30.172592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.175583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:30.180568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:30.184562 line       494                         if (i == j):
excute 13:50:30.188548 line       496                         i_j_list.append((
excute 13:50:30.191573 line       497                             i, j,
excute 13:50:30.195529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.198553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:50:30.202511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:30.206501 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:30.209524 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:30.213486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:30.216504 line       494                         if (i == j):
excute 13:50:30.220495 line       496                         i_j_list.append((
excute 13:50:30.224484 line       497                             i, j,
excute 13:50:30.227476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.231467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:50:30.236421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:30.244399 line       494                         if (i == j):
excute 13:50:30.248388 line       496                         i_j_list.append((
excute 13:50:30.252376 line       497                             i, j,
excute 13:50:30.256366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.259358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:30.263347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:30.266339 line       494                         if (i == j):
excute 13:50:30.270328 line       496                         i_j_list.append((
excute 13:50:30.274318 line       497                             i, j,
excute 13:50:30.277310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.283296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:30.286286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:30.290276 line       494                         if (i == j):
excute 13:50:30.294264 line       496                         i_j_list.append((
excute 13:50:30.298254 line       497                             i, j,
excute 13:50:30.301246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.305235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:30.308227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:30.312217 line       494                         if (i == j):
excute 13:50:30.316206 line       496                         i_j_list.append((
excute 13:50:30.319198 line       497                             i, j,
excute 13:50:30.323188 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.327180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:30.335158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:30.339146 line       494                         if (i == j):
excute 13:50:30.343136 line       495                             continue
excute 13:50:30.346126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:30.351113 line       494                         if (i == j):
excute 13:50:30.356101 line       496                         i_j_list.append((
excute 13:50:30.359091 line       497                             i, j,
excute 13:50:30.363081 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.366073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:30.370062 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:30.374052 line       494                         if (i == j):
excute 13:50:30.378041 line       496                         i_j_list.append((
excute 13:50:30.382031 line       497                             i, j,
excute 13:50:30.386019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.390019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:30.393001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:30.396990 line       494                         if (i == j):
excute 13:50:30.400980 line       496                         i_j_list.append((
excute 13:50:30.404969 line       497                             i, j,
excute 13:50:30.407961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.411951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:30.414942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:30.418931 line       494                         if (i == j):
excute 13:50:30.422922 line       496                         i_j_list.append((
excute 13:50:30.426910 line       497                             i, j,
excute 13:50:30.430900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.433891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:30.437882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:30.440904 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:30.444894 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:30.449883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:30.453870 line       494                         if (i == j):
excute 13:50:30.457861 line       496                         i_j_list.append((
excute 13:50:30.461848 line       497                             i, j,
excute 13:50:30.464842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.468830 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0)]
excute 13:50:30.471822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:30.475812 line       494                         if (i == j):
excute 13:50:30.480767 line       496                         i_j_list.append((
excute 13:50:30.485786 line       497                             i, j,
excute 13:50:30.489743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.492734 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:50:30.496725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:30.499715 line       494                         if (i == j):
excute 13:50:30.503704 line       496                         i_j_list.append((
excute 13:50:30.507694 line       497                             i, j,
excute 13:50:30.511683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.514676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:50:30.518664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:30.522654 line       494                         if (i == j):
excute 13:50:30.526644 line       496                         i_j_list.append((
excute 13:50:30.529635 line       497                             i, j,
excute 13:50:30.533626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.536617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:50:30.540607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:30.544596 line       494                         if (i == j):
excute 13:50:30.548585 line       496                         i_j_list.append((
excute 13:50:30.552574 line       497                             i, j,
excute 13:50:30.556566 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.560555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:50:30.564543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:30.568543 line       494                         if (i == j):
excute 13:50:30.572525 line       496                         i_j_list.append((
excute 13:50:30.575515 line       497                             i, j,
excute 13:50:30.579502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.582494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:50:30.587482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:30.592468 line       494                         if (i == j):
excute 13:50:30.596458 line       495                             continue
excute 13:50:30.600447 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:30.607427 line       494                         if (i == j):
excute 13:50:30.611419 line       496                         i_j_list.append((
excute 13:50:30.614409 line       497                             i, j,
excute 13:50:30.618398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.621391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:50:30.625380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:30.635355 line       494                         if (i == j):
excute 13:50:30.639355 line       496                         i_j_list.append((
excute 13:50:30.643331 line       497                             i, j,
excute 13:50:30.646325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.650324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:50:30.653306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:30.658293 line       494                         if (i == j):
excute 13:50:30.662283 line       496                         i_j_list.append((
excute 13:50:30.667270 line       497                             i, j,
excute 13:50:30.670261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.674251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:50:30.677242 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:30.681233 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:30.685221 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:30.691205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:30.694235 line       494                         if (i == j):
excute 13:50:30.698217 line       496                         i_j_list.append((
excute 13:50:30.702208 line       497                             i, j,
excute 13:50:30.705199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.709188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0)]
excute 13:50:30.713179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:30.717166 line       494                         if (i == j):
excute 13:50:30.721124 line       496                         i_j_list.append((
excute 13:50:30.724148 line       497                             i, j,
excute 13:50:30.728105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.732095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:30.735086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:30.739076 line       494                         if (i == j):
excute 13:50:30.743065 line       496                         i_j_list.append((
excute 13:50:30.746057 line       497                             i, j,
excute 13:50:30.749049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.753038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:30.757059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:30.761052 line       494                         if (i == j):
excute 13:50:30.765009 line       496                         i_j_list.append((
excute 13:50:30.768030 line       497                             i, j,
excute 13:50:30.771998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.774979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:30.777971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:30.781961 line       494                         if (i == j):
excute 13:50:30.785950 line       496                         i_j_list.append((
excute 13:50:30.789939 line       497                             i, j,
excute 13:50:30.794929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.797920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:30.801909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:30.806897 line       494                         if (i == j):
excute 13:50:30.810885 line       496                         i_j_list.append((
excute 13:50:30.814883 line       497                             i, j,
excute 13:50:30.817867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.821856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:30.825846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:30.829835 line       494                         if (i == j):
excute 13:50:30.833823 line       496                         i_j_list.append((
excute 13:50:30.837814 line       497                             i, j,
excute 13:50:30.840804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.844796 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:30.847785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:30.851774 line       494                         if (i == j):
excute 13:50:30.855764 line       495                             continue
excute 13:50:30.858756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:30.862745 line       494                         if (i == j):
excute 13:50:30.866734 line       496                         i_j_list.append((
excute 13:50:30.869726 line       497                             i, j,
excute 13:50:30.872719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.876708 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:30.879700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:30.884687 line       494                         if (i == j):
excute 13:50:30.887678 line       496                         i_j_list.append((
excute 13:50:30.891668 line       497                             i, j,
excute 13:50:30.897652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.904633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:30.908623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:30.913609 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:30.917598 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:30.920590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:30.924579 line       494                         if (i == j):
excute 13:50:30.928569 line       496                         i_j_list.append((
excute 13:50:30.932559 line       497                             i, j,
excute 13:50:30.935550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.938543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:50:30.942532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:30.946522 line       494                         if (i == j):
excute 13:50:30.951509 line       496                         i_j_list.append((
excute 13:50:30.955499 line       497                             i, j,
excute 13:50:30.958489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.966469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:30.970458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:30.974448 line       494                         if (i == j):
excute 13:50:30.978436 line       496                         i_j_list.append((
excute 13:50:30.982426 line       497                             i, j,
excute 13:50:30.986415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:30.990404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:30.994394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:31.000377 line       494                         if (i == j):
excute 13:50:31.004366 line       496                         i_j_list.append((
excute 13:50:31.008356 line       497                             i, j,
excute 13:50:31.012345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.015337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:31.019327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:31.023317 line       494                         if (i == j):
excute 13:50:31.027305 line       496                         i_j_list.append((
excute 13:50:31.030297 line       497                             i, j,
excute 13:50:31.034286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.037278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:31.041267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:31.045257 line       494                         if (i == j):
excute 13:50:31.049246 line       496                         i_j_list.append((
excute 13:50:31.052238 line       497                             i, j,
excute 13:50:31.056228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.060218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:31.063209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:31.067200 line       494                         if (i == j):
excute 13:50:31.071190 line       496                         i_j_list.append((
excute 13:50:31.075177 line       497                             i, j,
excute 13:50:31.079166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.082159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:31.086148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:31.090146 line       494                         if (i == j):
excute 13:50:31.094127 line       496                         i_j_list.append((
excute 13:50:31.097119 line       497                             i, j,
excute 13:50:31.102106 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.105098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:31.109087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:31.113077 line       494                         if (i == j):
excute 13:50:31.117066 line       495                             continue
excute 13:50:31.120057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:31.124046 line       494                         if (i == j):
excute 13:50:31.128036 line       496                         i_j_list.append((
excute 13:50:31.131028 line       497                             i, j,
excute 13:50:31.135017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.139006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:50:31.141998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:31.145989 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:31.148980 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:31.153969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:31.157957 line       494                         if (i == j):
excute 13:50:31.161947 line       496                         i_j_list.append((
excute 13:50:31.164937 line       497                             i, j,
excute 13:50:31.168927 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.171918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0)]
excute 13:50:31.175909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:31.179898 line       494                         if (i == j):
excute 13:50:31.183890 line       496                         i_j_list.append((
excute 13:50:31.186878 line       497                             i, j,
excute 13:50:31.190868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.193860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:31.197849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:31.202838 line       494                         if (i == j):
excute 13:50:31.206828 line       496                         i_j_list.append((
excute 13:50:31.210816 line       497                             i, j,
excute 13:50:31.214806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.217798 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:31.221785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:31.225803 line       494                         if (i == j):
excute 13:50:31.228800 line       496                         i_j_list.append((
excute 13:50:31.232758 line       497                             i, j,
excute 13:50:31.236747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.240749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:31.244729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:31.248716 line       494                         if (i == j):
excute 13:50:31.253700 line       496                         i_j_list.append((
excute 13:50:31.257691 line       497                             i, j,
excute 13:50:31.261681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.264672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:31.268661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:31.272652 line       494                         if (i == j):
excute 13:50:31.276672 line       496                         i_j_list.append((
excute 13:50:31.280659 line       497                             i, j,
excute 13:50:31.284617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.291599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:31.295587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:31.299578 line       494                         if (i == j):
excute 13:50:31.304566 line       496                         i_j_list.append((
excute 13:50:31.308587 line       497                             i, j,
excute 13:50:31.311578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.315566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:31.318558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:31.322547 line       494                         if (i == j):
excute 13:50:31.328502 line       496                         i_j_list.append((
excute 13:50:31.337491 line       497                             i, j,
excute 13:50:31.342462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.345455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:31.350459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:31.355428 line       494                         if (i == j):
excute 13:50:31.361414 line       496                         i_j_list.append((
excute 13:50:31.367395 line       497                             i, j,
excute 13:50:31.372384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:31.376372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:31.383353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:31.392331 line       494                         if (i == j):
excute 13:50:31.398314 line       495                             continue
excute 13:50:31.403300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:31.408288 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:31.416266 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:50:31.424244 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:31.431226 line       505                     if (self.RELOCATE):
excute 13:50:31.439204 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:31.446186 line       505                     if (self.RELOCATE):
excute 13:50:31.455164 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:31.462143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:31.470122 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:31.482090 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:31.491066 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.500043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:31.511013 line       556                     i = i_j[0]
excute 13:50:31.520986 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:31.529963 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.537941 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:31.543925 line       556                     i = i_j[0]
excute 13:50:31.553898 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:31.558885 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.567862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:31.575839 line       556                     i = i_j[0]
excute 13:50:31.583818 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:31.589802 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.598781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:31.603765 line       556                     i = i_j[0]
excute 13:50:31.612740 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:31.620718 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.627701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:31.633685 line       556                     i = i_j[0]
excute 13:50:31.639669 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:31.648644 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.654631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:31.661609 line       556                     i = i_j[0]
excute 13:50:31.667596 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:31.673577 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.680559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:31.687540 line       556                     i = i_j[0]
excute 13:50:31.693526 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:31.700508 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.709482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:50:31.716463 line       556                     i = i_j[0]
excute 13:50:31.725441 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:31.731426 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.737407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:31.746385 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:31.753364 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:31.762341 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.771317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:31.777300 line       556                     i = i_j[0]
excute 13:50:31.784282 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:31.795261 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.803232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:31.809215 line       556                     i = i_j[0]
excute 13:50:31.815199 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:31.821185 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.828165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:31.832154 line       556                     i = i_j[0]
excute 13:50:31.836143 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:31.839135 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.843125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:31.847114 line       556                     i = i_j[0]
excute 13:50:31.851104 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:31.854095 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.858084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:31.862073 line       556                     i = i_j[0]
excute 13:50:31.866063 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:31.869055 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.873044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:31.876036 line       556                     i = i_j[0]
excute 13:50:31.880025 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:31.884015 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.888004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:31.890996 line       556                     i = i_j[0]
excute 13:50:31.894985 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:31.897978 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.901966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:31.905956 line       556                     i = i_j[0]
excute 13:50:31.909945 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:31.913936 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.917925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:50:31.920916 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:31.924906 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:31.929894 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.933882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:50:31.936873 line       556                     i = i_j[0]
excute 13:50:31.940863 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:31.944852 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.949840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:50:31.952831 line       556                     i = i_j[0]
excute 13:50:31.957818 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:31.960809 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.965799 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:50:31.969787 line       556                     i = i_j[0]
excute 13:50:31.973778 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:31.977766 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.981756 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:50:31.984747 line       556                     i = i_j[0]
excute 13:50:31.989737 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:31.992726 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:31.996717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:50:32.000703 line       556                     i = i_j[0]
excute 13:50:32.003697 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:32.007686 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.012674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:50:32.016662 line       556                     i = i_j[0]
excute 13:50:32.020649 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.024641 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.028632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:50:32.033627 line       556                     i = i_j[0]
excute 13:50:32.037607 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.041595 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.045583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:50:32.048575 line       556                     i = i_j[0]
excute 13:50:32.052576 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:32.056553 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.060548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:50:32.063535 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:32.067525 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:32.071514 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.075503 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:50:32.079524 line       556                     i = i_j[0]
excute 13:50:32.083513 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.087503 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.091494 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:50:32.094484 line       556                     i = i_j[0]
excute 13:50:32.098443 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:32.102433 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.105454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:50:32.109445 line       556                     i = i_j[0]
excute 13:50:32.113403 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:32.116426 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.120416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:50:32.124403 line       556                     i = i_j[0]
excute 13:50:32.128395 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:32.131385 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.137372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:50:32.140361 line       556                     i = i_j[0]
excute 13:50:32.144350 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:32.148340 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.152329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:50:32.156320 line       556                     i = i_j[0]
excute 13:50:32.160276 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.164266 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.168255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:50:32.171249 line       556                     i = i_j[0]
excute 13:50:32.175238 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.179227 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.183216 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:50:32.187206 line       556                     i = i_j[0]
excute 13:50:32.192191 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:32.195184 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.199174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:32.203163 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:32.208149 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:32.212138 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.216129 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:32.220117 line       556                     i = i_j[0]
excute 13:50:32.224105 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.228095 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.232087 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:32.237073 line       556                     i = i_j[0]
excute 13:50:32.241062 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:32.245051 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.248074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:32.252062 line       556                     i = i_j[0]
excute 13:50:32.257018 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:32.260041 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.264001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:32.267989 line       556                     i = i_j[0]
excute 13:50:32.271012 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:32.275001 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.278960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:32.281984 line       556                     i = i_j[0]
excute 13:50:32.285972 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:32.289963 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.293919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:32.297909 line       556                     i = i_j[0]
excute 13:50:32.301898 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.305888 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.309876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:32.313900 line       556                     i = i_j[0]
excute 13:50:32.317862 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.320879 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.325869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:32.333815 line       556                     i = i_j[0]
excute 13:50:32.340795 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:32.344783 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.348775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:32.353759 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:32.358749 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:32.361738 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.366727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:32.370716 line       556                     i = i_j[0]
excute 13:50:32.374706 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:32.377697 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.381704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:32.385673 line       556                     i = i_j[0]
excute 13:50:32.389663 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.393688 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.397675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:32.400634 line       556                     i = i_j[0]
excute 13:50:32.404623 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:32.408612 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.412602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:32.415594 line       556                     i = i_j[0]
excute 13:50:32.419583 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:32.423572 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.427562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:32.430554 line       556                     i = i_j[0]
excute 13:50:32.434543 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:32.437535 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.441524 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:32.446545 line       556                     i = i_j[0]
excute 13:50:32.450500 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.454489 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.459477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:32.464466 line       556                     i = i_j[0]
excute 13:50:32.470447 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.473439 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.477428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:32.481420 line       556                     i = i_j[0]
excute 13:50:32.485409 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:32.489398 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.493387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:32.497379 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:32.501373 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:32.505355 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.509344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:32.513332 line       556                     i = i_j[0]
excute 13:50:32.517323 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:32.520314 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.525300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:32.529291 line       556                     i = i_j[0]
excute 13:50:32.533279 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.536271 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.540260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:32.544254 line       556                     i = i_j[0]
excute 13:50:32.549237 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:32.553226 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.558215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:32.561204 line       556                     i = i_j[0]
excute 13:50:32.565194 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:32.568186 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.572179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:32.577162 line       556                     i = i_j[0]
excute 13:50:32.580154 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:32.584144 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.588134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:32.591125 line       556                     i = i_j[0]
excute 13:50:32.596113 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:32.600102 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.604090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:32.607082 line       556                     i = i_j[0]
excute 13:50:32.611072 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.615061 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.619051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:32.623040 line       556                     i = i_j[0]
excute 13:50:32.627029 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.631018 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.635008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:32.638997 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:32.642987 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:32.646977 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.651995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:32.655983 line       556                     i = i_j[0]
excute 13:50:32.659974 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:32.663952 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.667955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:50:32.670943 line       556                     i = i_j[0]
excute 13:50:32.674932 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.678922 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.682912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:32.685903 line       556                     i = i_j[0]
excute 13:50:32.689893 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:32.692884 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.697840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:32.700862 line       556                     i = i_j[0]
excute 13:50:32.704822 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:32.707846 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.712800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:32.716790 line       556                     i = i_j[0]
excute 13:50:32.720781 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:32.724767 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.728757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:32.732748 line       556                     i = i_j[0]
excute 13:50:32.736738 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.739729 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.743719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:32.747708 line       556                     i = i_j[0]
excute 13:50:32.751696 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.756713 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.760705 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:50:32.764692 line       556                     i = i_j[0]
excute 13:50:32.768651 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:32.771675 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.775663 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:50:32.779654 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:32.783609 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:32.787599 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.792586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:50:32.796576 line       556                     i = i_j[0]
excute 13:50:32.800565 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:32.803590 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.808557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:50:32.812564 line       556                     i = i_j[0]
excute 13:50:32.816522 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.820512 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.828491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:50:32.835471 line       556                     i = i_j[0]
excute 13:50:32.840459 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:32.843451 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.847439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:50:32.851428 line       556                     i = i_j[0]
excute 13:50:32.856417 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:32.860407 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.864396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:50:32.868385 line       556                     i = i_j[0]
excute 13:50:32.872374 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:32.876364 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.880353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:50:32.884342 line       556                     i = i_j[0]
excute 13:50:32.888330 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:32.892319 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.895311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:50:32.899301 line       556                     i = i_j[0]
excute 13:50:32.903290 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:32.906282 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.910271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:50:32.913263 line       556                     i = i_j[0]
excute 13:50:32.918250 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:32.921243 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.928223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:50:32.931215 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:32.935206 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:32.939195 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.943185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:50:32.947207 line       556                     i = i_j[0]
excute 13:50:32.952161 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:32.956180 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.961136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:50:32.965126 line       556                     i = i_j[0]
excute 13:50:32.969116 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:32.973105 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.977095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:50:32.981084 line       556                     i = i_j[0]
excute 13:50:32.985073 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:32.989062 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:32.994048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:50:32.998038 line       556                     i = i_j[0]
excute 13:50:33.002029 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:33.006017 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:33.010006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:50:33.014028 line       556                     i = i_j[0]
excute 13:50:33.017992 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:33.021007 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:33.024965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:50:33.027991 line       556                     i = i_j[0]
excute 13:50:33.031980 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:33.035968 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:33.039927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:50:33.042917 line       556                     i = i_j[0]
excute 13:50:33.046905 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:33.050895 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:33.054885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:50:33.057877 line       556                     i = i_j[0]
excute 13:50:33.063864 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:33.066855 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:33.071843 line       555                 for i_j in i_j_list:
excute 13:50:33.074833 line       581             self.write_matrix(
excute 13:50:33.079817 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:33.082810 line       583                 result_file_path,
excute 13:50:33.086800 line       584                 mode='a'
excute 13:50:33.092731 line       488         for t in time_steps:
excute Modified var:.. t = 159
excute 13:50:33.098714 line       489             if (t != self.TIME + 1):
excute 13:50:33.105695 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:33.112677 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:33.116667 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:33.122650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:33.129633 line       494                         if (i == j):
excute 13:50:33.136615 line       495                             continue
excute 13:50:33.142597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:33.146587 line       494                         if (i == j):
excute 13:50:33.152603 line       496                         i_j_list.append((
excute 13:50:33.157558 line       497                             i, j,
excute 13:50:33.162545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.170522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:50:33.180496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:33.187477 line       494                         if (i == j):
excute 13:50:33.191470 line       496                         i_j_list.append((
excute 13:50:33.194457 line       497                             i, j,
excute 13:50:33.200442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.206425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:50:33.210415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:33.217397 line       494                         if (i == j):
excute 13:50:33.223381 line       496                         i_j_list.append((
excute 13:50:33.229365 line       497                             i, j,
excute 13:50:33.235348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.242354 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:50:33.246319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:33.251306 line       494                         if (i == j):
excute 13:50:33.255295 line       496                         i_j_list.append((
excute 13:50:33.259284 line       497                             i, j,
excute 13:50:33.262276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.267264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:50:33.271255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:33.276255 line       494                         if (i == j):
excute 13:50:33.280230 line       496                         i_j_list.append((
excute 13:50:33.284218 line       497                             i, j,
excute 13:50:33.287210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.291199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:50:33.295189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:33.299178 line       494                         if (i == j):
excute 13:50:33.303167 line       496                         i_j_list.append((
excute 13:50:33.307156 line       497                             i, j,
excute 13:50:33.311146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.315136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:50:33.318128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:33.323115 line       494                         if (i == j):
excute 13:50:33.330098 line       496                         i_j_list.append((
excute 13:50:33.337076 line       497                             i, j,
excute 13:50:33.340068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.344059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:50:33.347049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:33.352039 line       494                         if (i == j):
excute 13:50:33.357023 line       496                         i_j_list.append((
excute 13:50:33.360016 line       497                             i, j,
excute 13:50:33.364007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.367995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:50:33.372980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:33.376970 line       494                         if (i == j):
excute 13:50:33.380959 line       496                         i_j_list.append((
excute 13:50:33.384948 line       497                             i, j,
excute 13:50:33.388940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.395920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:50:33.399908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:33.404895 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:33.409882 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:33.414869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:33.418857 line       494                         if (i == j):
excute 13:50:33.422847 line       496                         i_j_list.append((
excute 13:50:33.426836 line       497                             i, j,
excute 13:50:33.432821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.435813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0)]
excute 13:50:33.441796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:33.445787 line       494                         if (i == j):
excute 13:50:33.451769 line       495                             continue
excute 13:50:33.456756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:33.461744 line       494                         if (i == j):
excute 13:50:33.466730 line       496                         i_j_list.append((
excute 13:50:33.472715 line       497                             i, j,
excute 13:50:33.477702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.481690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:33.486679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:33.491663 line       494                         if (i == j):
excute 13:50:33.495652 line       496                         i_j_list.append((
excute 13:50:33.498644 line       497                             i, j,
excute 13:50:33.502633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.505625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:33.509615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:33.513605 line       494                         if (i == j):
excute 13:50:33.516596 line       496                         i_j_list.append((
excute 13:50:33.520585 line       497                             i, j,
excute 13:50:33.523578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.526570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:33.530558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:33.534549 line       494                         if (i == j):
excute 13:50:33.538537 line       496                         i_j_list.append((
excute 13:50:33.541529 line       497                             i, j,
excute 13:50:33.544522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.548511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:33.551503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:33.559536 line       494                         if (i == j):
excute 13:50:33.563530 line       496                         i_j_list.append((
excute 13:50:33.567518 line       497                             i, j,
excute 13:50:33.571507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.578489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:33.585471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:33.592452 line       494                         if (i == j):
excute 13:50:33.597439 line       496                         i_j_list.append((
excute 13:50:33.600430 line       497                             i, j,
excute 13:50:33.604419 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.608409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:33.611401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:33.615390 line       494                         if (i == j):
excute 13:50:33.619380 line       496                         i_j_list.append((
excute 13:50:33.622372 line       497                             i, j,
excute 13:50:33.626361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.630350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:33.633343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:33.637332 line       494                         if (i == j):
excute 13:50:33.641321 line       496                         i_j_list.append((
excute 13:50:33.645310 line       497                             i, j,
excute 13:50:33.648302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.652291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:33.656281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:33.660272 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:33.664259 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:33.667251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:33.671240 line       494                         if (i == j):
excute 13:50:33.675232 line       496                         i_j_list.append((
excute 13:50:33.681216 line       497                             i, j,
excute 13:50:33.685205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.688197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0)]
excute 13:50:33.692184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:33.695177 line       494                         if (i == j):
excute 13:50:33.699168 line       496                         i_j_list.append((
excute 13:50:33.703157 line       497                             i, j,
excute 13:50:33.706148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.710138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:50:33.713129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:33.717127 line       494                         if (i == j):
excute 13:50:33.721107 line       495                             continue
excute 13:50:33.724130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:33.728113 line       494                         if (i == j):
excute 13:50:33.732078 line       496                         i_j_list.append((
excute 13:50:33.735101 line       497                             i, j,
excute 13:50:33.739094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.743049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0)]
excute 13:50:33.746072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:33.750030 line       494                         if (i == j):
excute 13:50:33.754052 line       496                         i_j_list.append((
excute 13:50:33.758044 line       497                             i, j,
excute 13:50:33.761031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.765022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0)]
excute 13:50:33.768014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:33.772002 line       494                         if (i == j):
excute 13:50:33.775992 line       496                         i_j_list.append((
excute 13:50:33.779982 line       497                             i, j,
excute 13:50:33.784939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.787961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:50:33.791952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:33.795909 line       494                         if (i == j):
excute 13:50:33.799929 line       496                         i_j_list.append((
excute 13:50:33.802922 line       497                             i, j,
excute 13:50:33.806911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.809902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:50:33.813865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:33.817850 line       494                         if (i == j):
excute 13:50:33.820872 line       496                         i_j_list.append((
excute 13:50:33.824831 line       497                             i, j,
excute 13:50:33.828820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.833806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:50:33.837807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:33.841785 line       494                         if (i == j):
excute 13:50:33.845777 line       496                         i_j_list.append((
excute 13:50:33.849765 line       497                             i, j,
excute 13:50:33.852789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.856779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:50:33.860767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:33.864756 line       494                         if (i == j):
excute 13:50:33.868745 line       496                         i_j_list.append((
excute 13:50:33.871738 line       497                             i, j,
excute 13:50:33.874730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.878718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:50:33.881710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:33.886668 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:33.890655 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:33.894645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:33.898634 line       494                         if (i == j):
excute 13:50:33.902624 line       496                         i_j_list.append((
excute 13:50:33.906613 line       497                             i, j,
excute 13:50:33.910602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.914592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0)]
excute 13:50:33.918580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:33.921571 line       494                         if (i == j):
excute 13:50:33.925560 line       496                         i_j_list.append((
excute 13:50:33.928553 line       497                             i, j,
excute 13:50:33.932541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.935534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:50:33.939525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:33.943512 line       494                         if (i == j):
excute 13:50:33.947502 line       496                         i_j_list.append((
excute 13:50:33.951522 line       497                             i, j,
excute 13:50:33.955482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.958504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:50:33.965457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:33.970442 line       494                         if (i == j):
excute 13:50:33.974431 line       495                             continue
excute 13:50:33.978424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:33.981446 line       494                         if (i == j):
excute 13:50:33.986398 line       496                         i_j_list.append((
excute 13:50:33.990390 line       497                             i, j,
excute 13:50:33.994378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:33.998367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:50:34.002357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:34.007342 line       494                         if (i == j):
excute 13:50:34.011343 line       496                         i_j_list.append((
excute 13:50:34.015322 line       497                             i, j,
excute 13:50:34.019311 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.023301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:50:34.027290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:34.031280 line       494                         if (i == j):
excute 13:50:34.036267 line       496                         i_j_list.append((
excute 13:50:34.039259 line       497                             i, j,
excute 13:50:34.043247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.047237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:50:34.051226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:34.055217 line       494                         if (i == j):
excute 13:50:34.060203 line       496                         i_j_list.append((
excute 13:50:34.063194 line       497                             i, j,
excute 13:50:34.067184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.071173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:50:34.075161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:34.078155 line       494                         if (i == j):
excute 13:50:34.083146 line       496                         i_j_list.append((
excute 13:50:34.086133 line       497                             i, j,
excute 13:50:34.093114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.096106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:50:34.100096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:34.104085 line       494                         if (i == j):
excute 13:50:34.109070 line       496                         i_j_list.append((
excute 13:50:34.112064 line       497                             i, j,
excute 13:50:34.116053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.119045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:50:34.123034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:34.127026 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:34.131013 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:34.136001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:34.139991 line       494                         if (i == j):
excute 13:50:34.143979 line       496                         i_j_list.append((
excute 13:50:34.146969 line       497                             i, j,
excute 13:50:34.150960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.153952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0)]
excute 13:50:34.157940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:34.161931 line       494                         if (i == j):
excute 13:50:34.165920 line       496                         i_j_list.append((
excute 13:50:34.168910 line       497                             i, j,
excute 13:50:34.172899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.175891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:34.178883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:34.182872 line       494                         if (i == j):
excute 13:50:34.186861 line       496                         i_j_list.append((
excute 13:50:34.190851 line       497                             i, j,
excute 13:50:34.194843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.198835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:50:34.201856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:34.205812 line       494                         if (i == j):
excute 13:50:34.209802 line       496                         i_j_list.append((
excute 13:50:34.212828 line       497                             i, j,
excute 13:50:34.216814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.219806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:50:34.223771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:34.227753 line       494                         if (i == j):
excute 13:50:34.232739 line       495                             continue
excute 13:50:34.236730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:34.241717 line       494                         if (i == j):
excute 13:50:34.247700 line       496                         i_j_list.append((
excute 13:50:34.250691 line       497                             i, j,
excute 13:50:34.254713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.257672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:34.261661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:34.265651 line       494                         if (i == j):
excute 13:50:34.269642 line       496                         i_j_list.append((
excute 13:50:34.272632 line       497                             i, j,
excute 13:50:34.275625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.279614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:34.282606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:34.286595 line       494                         if (i == j):
excute 13:50:34.290584 line       496                         i_j_list.append((
excute 13:50:34.294574 line       497                             i, j,
excute 13:50:34.298597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.302585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:34.305578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:34.309556 line       494                         if (i == j):
excute 13:50:34.313524 line       496                         i_j_list.append((
excute 13:50:34.316550 line       497                             i, j,
excute 13:50:34.320537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.324495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:34.331477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:34.338458 line       494                         if (i == j):
excute 13:50:34.343445 line       496                         i_j_list.append((
excute 13:50:34.347434 line       497                             i, j,
excute 13:50:34.352420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.356430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:50:34.359403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:34.364390 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:34.368377 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:34.372369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:34.376356 line       494                         if (i == j):
excute 13:50:34.380346 line       496                         i_j_list.append((
excute 13:50:34.384367 line       497                             i, j,
excute 13:50:34.387358 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.391349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:50:34.394339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:34.400304 line       494                         if (i == j):
excute 13:50:34.403283 line       496                         i_j_list.append((
excute 13:50:34.407272 line       497                             i, j,
excute 13:50:34.410265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.414254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:34.418244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:34.421235 line       494                         if (i == j):
excute 13:50:34.425239 line       496                         i_j_list.append((
excute 13:50:34.428217 line       497                             i, j,
excute 13:50:34.432206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.435198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:34.439188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:34.442179 line       494                         if (i == j):
excute 13:50:34.446168 line       496                         i_j_list.append((
excute 13:50:34.451157 line       497                             i, j,
excute 13:50:34.455147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.458139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:34.462128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:34.466118 line       494                         if (i == j):
excute 13:50:34.470107 line       496                         i_j_list.append((
excute 13:50:34.474096 line       497                             i, j,
excute 13:50:34.478085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.482086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:34.485096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:34.489055 line       494                         if (i == j):
excute 13:50:34.493044 line       495                             continue
excute 13:50:34.496068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:34.501024 line       494                         if (i == j):
excute 13:50:34.505022 line       496                         i_j_list.append((
excute 13:50:34.508006 line       497                             i, j,
excute 13:50:34.511994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.526978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:34.531017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:34.534984 line       494                         if (i == j):
excute 13:50:34.538965 line       496                         i_j_list.append((
excute 13:50:34.541989 line       497                             i, j,
excute 13:50:34.545981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.548969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:34.552961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:34.556950 line       494                         if (i == j):
excute 13:50:34.560906 line       496                         i_j_list.append((
excute 13:50:34.564895 line       497                             i, j,
excute 13:50:34.568884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.571878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:34.575865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:34.579855 line       494                         if (i == j):
excute 13:50:34.583845 line       496                         i_j_list.append((
excute 13:50:34.586836 line       497                             i, j,
excute 13:50:34.590827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.596812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:34.599802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:34.604808 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:34.607780 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:34.611769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:34.615759 line       494                         if (i == j):
excute 13:50:34.619749 line       496                         i_j_list.append((
excute 13:50:34.622772 line       497                             i, j,
excute 13:50:34.626761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.630720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0)]
excute 13:50:34.633742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:34.638698 line       494                         if (i == j):
excute 13:50:34.642687 line       496                         i_j_list.append((
excute 13:50:34.645679 line       497                             i, j,
excute 13:50:34.648671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.652661 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:50:34.656649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:34.660639 line       494                         if (i == j):
excute 13:50:34.664629 line       496                         i_j_list.append((
excute 13:50:34.667620 line       497                             i, j,
excute 13:50:34.671609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.674602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:50:34.678592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:34.681583 line       494                         if (i == j):
excute 13:50:34.685572 line       496                         i_j_list.append((
excute 13:50:34.689561 line       497                             i, j,
excute 13:50:34.692554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.696543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:50:34.699535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:34.703524 line       494                         if (i == j):
excute 13:50:34.708512 line       496                         i_j_list.append((
excute 13:50:34.712501 line       497                             i, j,
excute 13:50:34.716490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.719482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:50:34.723471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:34.727461 line       494                         if (i == j):
excute 13:50:34.731450 line       496                         i_j_list.append((
excute 13:50:34.734441 line       497                             i, j,
excute 13:50:34.737433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.741423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:50:34.744415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:34.748405 line       494                         if (i == j):
excute 13:50:34.752395 line       495                             continue
excute 13:50:34.756397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:34.760376 line       494                         if (i == j):
excute 13:50:34.763364 line       496                         i_j_list.append((
excute 13:50:34.767354 line       497                             i, j,
excute 13:50:34.770345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.774335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:50:34.777327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:34.781317 line       494                         if (i == j):
excute 13:50:34.785306 line       496                         i_j_list.append((
excute 13:50:34.789295 line       497                             i, j,
excute 13:50:34.792287 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.796277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:50:34.799268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:34.803258 line       494                         if (i == j):
excute 13:50:34.808249 line       496                         i_j_list.append((
excute 13:50:34.812266 line       497                             i, j,
excute 13:50:34.816256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.819249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:50:34.823236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:34.827194 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:34.830217 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:34.834206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:34.838196 line       494                         if (i == j):
excute 13:50:34.842155 line       496                         i_j_list.append((
excute 13:50:34.845177 line       497                             i, j,
excute 13:50:34.849167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.852159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0)]
excute 13:50:34.856151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:34.860106 line       494                         if (i == j):
excute 13:50:34.864096 line       496                         i_j_list.append((
excute 13:50:34.867121 line       497                             i, j,
excute 13:50:34.871108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.874099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:34.878089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:34.882050 line       494                         if (i == j):
excute 13:50:34.886037 line       496                         i_j_list.append((
excute 13:50:34.889064 line       497                             i, j,
excute 13:50:34.893050 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.896043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:34.900030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:34.903990 line       494                         if (i == j):
excute 13:50:34.908011 line       496                         i_j_list.append((
excute 13:50:34.912966 line       497                             i, j,
excute 13:50:34.916955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.920943 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:34.923935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:34.927924 line       494                         if (i == j):
excute 13:50:34.931914 line       496                         i_j_list.append((
excute 13:50:34.934906 line       497                             i, j,
excute 13:50:34.938896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.941887 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:34.944879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:34.949867 line       494                         if (i == j):
excute 13:50:34.953888 line       496                         i_j_list.append((
excute 13:50:34.957876 line       497                             i, j,
excute 13:50:34.961834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.965827 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:34.968815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:34.972804 line       494                         if (i == j):
excute 13:50:34.976793 line       496                         i_j_list.append((
excute 13:50:34.980816 line       497                             i, j,
excute 13:50:34.983809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:34.987797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:34.990790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:34.994780 line       494                         if (i == j):
excute 13:50:34.998768 line       495                             continue
excute 13:50:35.002759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:35.005748 line       494                         if (i == j):
excute 13:50:35.009738 line       496                         i_j_list.append((
excute 13:50:35.016689 line       497                             i, j,
excute 13:50:35.020678 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.024665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:35.027660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:35.032646 line       494                         if (i == j):
excute 13:50:35.036636 line       496                         i_j_list.append((
excute 13:50:35.041621 line       497                             i, j,
excute 13:50:35.044612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.047604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:35.051593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:35.055584 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:35.059573 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:35.063576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:35.067558 line       494                         if (i == j):
excute 13:50:35.071576 line       496                         i_j_list.append((
excute 13:50:35.074567 line       497                             i, j,
excute 13:50:35.078553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.081545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:50:35.085535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:35.091489 line       494                         if (i == j):
excute 13:50:35.097472 line       496                         i_j_list.append((
excute 13:50:35.100463 line       497                             i, j,
excute 13:50:35.104452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.107445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:35.111434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:35.115423 line       494                         if (i == j):
excute 13:50:35.119415 line       496                         i_j_list.append((
excute 13:50:35.123404 line       497                             i, j,
excute 13:50:35.127393 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.135388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:35.138364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:35.143349 line       494                         if (i == j):
excute 13:50:35.147370 line       496                         i_j_list.append((
excute 13:50:35.150361 line       497                             i, j,
excute 13:50:35.154353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.158310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:35.161332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:35.165322 line       494                         if (i == j):
excute 13:50:35.170311 line       496                         i_j_list.append((
excute 13:50:35.173300 line       497                             i, j,
excute 13:50:35.177264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.180282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:35.184240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:35.187263 line       494                         if (i == j):
excute 13:50:35.191254 line       496                         i_j_list.append((
excute 13:50:35.195242 line       497                             i, j,
excute 13:50:35.199233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.202225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:35.206213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:35.210171 line       494                         if (i == j):
excute 13:50:35.214160 line       496                         i_j_list.append((
excute 13:50:35.217183 line       497                             i, j,
excute 13:50:35.222139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.225130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:35.228122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:35.232111 line       494                         if (i == j):
excute 13:50:35.236100 line       496                         i_j_list.append((
excute 13:50:35.240089 line       497                             i, j,
excute 13:50:35.243082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.246074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:35.250063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:35.255050 line       494                         if (i == j):
excute 13:50:35.259040 line       495                             continue
excute 13:50:35.263028 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:35.266054 line       494                         if (i == j):
excute 13:50:35.270042 line       496                         i_j_list.append((
excute 13:50:35.274034 line       497                             i, j,
excute 13:50:35.277023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.281013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:50:35.284004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:35.287994 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:35.291983 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:35.295977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:35.299961 line       494                         if (i == j):
excute 13:50:35.303951 line       496                         i_j_list.append((
excute 13:50:35.307940 line       497                             i, j,
excute 13:50:35.310934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.314921 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0)]
excute 13:50:35.317913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:35.322873 line       494                         if (i == j):
excute 13:50:35.327857 line       496                         i_j_list.append((
excute 13:50:35.335836 line       497                             i, j,
excute 13:50:35.341839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.344842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:35.348832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:35.353788 line       494                         if (i == j):
excute 13:50:35.358781 line       496                         i_j_list.append((
excute 13:50:35.361764 line       497                             i, j,
excute 13:50:35.365753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.369748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:35.372735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:35.376727 line       494                         if (i == j):
excute 13:50:35.380723 line       496                         i_j_list.append((
excute 13:50:35.384703 line       497                             i, j,
excute 13:50:35.388694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.392681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:35.395674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:35.399663 line       494                         if (i == j):
excute 13:50:35.403652 line       496                         i_j_list.append((
excute 13:50:35.407642 line       497                             i, j,
excute 13:50:35.410634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.414623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:35.418627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:35.422603 line       494                         if (i == j):
excute 13:50:35.427590 line       496                         i_j_list.append((
excute 13:50:35.430614 line       497                             i, j,
excute 13:50:35.434601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.437594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:35.441586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:35.445542 line       494                         if (i == j):
excute 13:50:35.449564 line       496                         i_j_list.append((
excute 13:50:35.454532 line       497                             i, j,
excute 13:50:35.457509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.462503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:35.467515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:35.471503 line       494                         if (i == j):
excute 13:50:35.475492 line       496                         i_j_list.append((
excute 13:50:35.479482 line       497                             i, j,
excute 13:50:35.483441 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.487430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:35.490453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:35.494426 line       494                         if (i == j):
excute 13:50:35.498417 line       496                         i_j_list.append((
excute 13:50:35.502424 line       497                             i, j,
excute 13:50:35.505414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:35.509403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:35.513359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:35.517349 line       494                         if (i == j):
excute 13:50:35.521338 line       495                             continue
excute 13:50:35.525329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:35.529352 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:35.533307 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:50:35.537296 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:35.544277 line       505                     if (self.RELOCATE):
excute 13:50:35.548268 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:35.552257 line       505                     if (self.RELOCATE):
excute 13:50:35.558241 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:35.562229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:35.565221 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:35.569210 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:35.573232 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.577223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:35.581209 line       556                     i = i_j[0]
excute 13:50:35.585169 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:35.589163 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.596139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:35.600140 line       556                     i = i_j[0]
excute 13:50:35.604119 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:35.608137 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.612097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:35.615120 line       556                     i = i_j[0]
excute 13:50:35.619108 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:35.623097 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.627058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:35.633040 line       556                     i = i_j[0]
excute 13:50:35.637030 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:35.640052 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.644041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:35.648031 line       556                     i = i_j[0]
excute 13:50:35.651990 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:35.655979 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.659968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:35.662991 line       556                     i = i_j[0]
excute 13:50:35.666981 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:35.670972 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.674960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:35.678949 line       556                     i = i_j[0]
excute 13:50:35.682939 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:35.686929 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.690886 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:50:35.693877 line       556                     i = i_j[0]
excute 13:50:35.697866 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:35.701855 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.705845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:35.708837 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:35.712827 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:35.717813 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.721804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:35.725825 line       556                     i = i_j[0]
excute 13:50:35.729784 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:35.734800 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.738758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:35.741783 line       556                     i = i_j[0]
excute 13:50:35.745770 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:35.749762 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.753718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:35.756740 line       556                     i = i_j[0]
excute 13:50:35.761728 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:35.764718 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.768711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:35.772698 line       556                     i = i_j[0]
excute 13:50:35.776659 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:35.779679 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.783668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:35.787628 line       556                     i = i_j[0]
excute 13:50:35.790650 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:35.794640 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.798596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:35.802618 line       556                     i = i_j[0]
excute 13:50:35.806577 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:35.809599 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.813591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:35.817578 line       556                     i = i_j[0]
excute 13:50:35.821537 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:35.825527 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.829515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:35.832506 line       556                     i = i_j[0]
excute 13:50:35.839520 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:35.843509 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.847467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:50:35.850489 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:35.854479 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:35.859434 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.863423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:50:35.866415 line       556                     i = i_j[0]
excute 13:50:35.870405 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:35.874395 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.877386 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:50:35.881408 line       556                     i = i_j[0]
excute 13:50:35.886365 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:35.890383 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.894342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:50:35.897366 line       556                     i = i_j[0]
excute 13:50:35.901356 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:35.905343 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.909302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:50:35.912327 line       556                     i = i_j[0]
excute 13:50:35.916315 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:35.920306 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.924262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:50:35.927284 line       556                     i = i_j[0]
excute 13:50:35.931274 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:35.935264 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.940219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:50:35.943241 line       556                     i = i_j[0]
excute 13:50:35.948197 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:35.952220 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.956176 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:50:35.960166 line       556                     i = i_j[0]
excute 13:50:35.964154 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:35.968144 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.971135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:50:35.975125 line       556                     i = i_j[0]
excute 13:50:35.979114 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:35.983104 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:35.986127 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:50:35.990116 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:35.994075 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:35.998064 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.002054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:50:36.005080 line       556                     i = i_j[0]
excute 13:50:36.010033 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:36.013057 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.017045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:50:36.021036 line       556                     i = i_j[0]
excute 13:50:36.024992 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:36.028015 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.032007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:50:36.035993 line       556                     i = i_j[0]
excute 13:50:36.039953 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:36.043941 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.047930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:50:36.051931 line       556                     i = i_j[0]
excute 13:50:36.055909 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:36.058901 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.062890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:50:36.066881 line       556                     i = i_j[0]
excute 13:50:36.069872 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:36.073861 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.077850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:50:36.080842 line       556                     i = i_j[0]
excute 13:50:36.084831 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:36.088821 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.095814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:50:36.099808 line       556                     i = i_j[0]
excute 13:50:36.102783 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:36.106773 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.110763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:50:36.113754 line       556                     i = i_j[0]
excute 13:50:36.117744 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:36.121732 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.125722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:36.128714 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:36.132704 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:36.136693 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.140682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:36.144673 line       556                     i = i_j[0]
excute 13:50:36.149663 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:36.152650 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.156639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:36.160628 line       556                     i = i_j[0]
excute 13:50:36.164618 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:36.168608 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.172605 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:36.175589 line       556                     i = i_j[0]
excute 13:50:36.179579 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:36.183569 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.186559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:36.190549 line       556                     i = i_j[0]
excute 13:50:36.194539 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:36.198528 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.202518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:36.205509 line       556                     i = i_j[0]
excute 13:50:36.209508 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:36.212490 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.216479 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:36.220469 line       556                     i = i_j[0]
excute 13:50:36.224459 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:36.227451 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.231440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:36.235429 line       556                     i = i_j[0]
excute 13:50:36.239418 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:36.242410 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.248399 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:36.252418 line       556                     i = i_j[0]
excute 13:50:36.256405 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:36.260397 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.264353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:36.267375 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:36.271367 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:36.275354 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.279346 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:36.283332 line       556                     i = i_j[0]
excute 13:50:36.287292 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:36.290314 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.295271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:36.299291 line       556                     i = i_j[0]
excute 13:50:36.303265 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:36.306272 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.310250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:36.314218 line       556                     i = i_j[0]
excute 13:50:36.317242 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:36.321231 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.326188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:36.334166 line       556                     i = i_j[0]
excute 13:50:36.342147 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:36.346133 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.355110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:36.360096 line       556                     i = i_j[0]
excute 13:50:36.368075 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:36.373061 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.381049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:36.386060 line       556                     i = i_j[0]
excute 13:50:36.390016 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:36.395004 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.400988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:36.404977 line       556                     i = i_j[0]
excute 13:50:36.409968 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:36.413955 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.419938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:36.423927 line       556                     i = i_j[0]
excute 13:50:36.429910 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:36.434898 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.438888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:36.443876 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:36.450854 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:36.461826 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.469803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:36.476784 line       556                     i = i_j[0]
excute 13:50:36.485761 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:36.492741 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.501718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:36.509699 line       556                     i = i_j[0]
excute 13:50:36.519671 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:36.528645 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.537623 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:36.546598 line       556                     i = i_j[0]
excute 13:50:36.555574 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:36.563553 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.569537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:36.575520 line       556                     i = i_j[0]
excute 13:50:36.581506 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:36.590480 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.598459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:36.605442 line       556                     i = i_j[0]
excute 13:50:36.614416 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:36.620401 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.628380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:36.635360 line       556                     i = i_j[0]
excute 13:50:36.644336 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:36.650320 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.658303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:36.665280 line       556                     i = i_j[0]
excute 13:50:36.672263 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:36.679243 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.688220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:36.695205 line       556                     i = i_j[0]
excute 13:50:36.704177 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:36.709163 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.717142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:36.724123 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:36.731104 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:36.740082 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.749056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:36.756038 line       556                     i = i_j[0]
excute 13:50:36.764016 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:36.771995 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.778977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:50:36.786956 line       556                     i = i_j[0]
excute 13:50:36.793937 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:36.800918 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.806904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:36.809893 line       556                     i = i_j[0]
excute 13:50:36.814881 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:36.817872 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.821861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:36.825851 line       556                     i = i_j[0]
excute 13:50:36.829850 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:36.833829 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.837821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:36.840810 line       556                     i = i_j[0]
excute 13:50:36.844801 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:36.848790 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.852778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:36.856768 line       556                     i = i_j[0]
excute 13:50:36.860757 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:36.864746 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.868739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:36.872726 line       556                     i = i_j[0]
excute 13:50:36.876714 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:36.880704 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.884694 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:50:36.888682 line       556                     i = i_j[0]
excute 13:50:36.892672 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:36.895664 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.899654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:50:36.902645 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:36.906634 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:36.910624 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.914613 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:50:36.918602 line       556                     i = i_j[0]
excute 13:50:36.922593 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:36.925583 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.929573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:50:36.932565 line       556                     i = i_j[0]
excute 13:50:36.936555 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:36.939547 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.943535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:50:36.948524 line       556                     i = i_j[0]
excute 13:50:36.952513 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:36.956502 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.960491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:50:36.968471 line       556                     i = i_j[0]
excute 13:50:36.973457 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:36.977445 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.981435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:50:36.985424 line       556                     i = i_j[0]
excute 13:50:36.989414 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:36.992405 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:36.996395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:50:37.000385 line       556                     i = i_j[0]
excute 13:50:37.004374 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:37.007366 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.012353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:50:37.015344 line       556                     i = i_j[0]
excute 13:50:37.019333 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:37.023323 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.027313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:50:37.030304 line       556                     i = i_j[0]
excute 13:50:37.034294 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:37.038283 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.042273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:50:37.045265 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:37.049253 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:37.053242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.057231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:50:37.061222 line       556                     i = i_j[0]
excute 13:50:37.065221 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:37.068202 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.073192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:50:37.077178 line       556                     i = i_j[0]
excute 13:50:37.081168 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:37.084160 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.088150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:50:37.095132 line       556                     i = i_j[0]
excute 13:50:37.100118 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:37.103109 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.107098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:50:37.111087 line       556                     i = i_j[0]
excute 13:50:37.115077 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:37.118069 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.122058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:50:37.126047 line       556                     i = i_j[0]
excute 13:50:37.130038 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:37.133029 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.138016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:50:37.141008 line       556                     i = i_j[0]
excute 13:50:37.144999 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:37.148988 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.152980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:50:37.155968 line       556                     i = i_j[0]
excute 13:50:37.159957 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:37.163946 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.167937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:50:37.170928 line       556                     i = i_j[0]
excute 13:50:37.174918 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:37.179906 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:37.183894 line       555                 for i_j in i_j_list:
excute 13:50:37.186885 line       581             self.write_matrix(
excute 13:50:37.190878 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:37.193867 line       583                 result_file_path,
excute 13:50:37.197856 line       584                 mode='a'
excute 13:50:37.203841 line       488         for t in time_steps:
excute Modified var:.. t = 160
excute 13:50:37.208827 line       489             if (t != self.TIME + 1):
excute 13:50:37.212818 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:37.216806 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:37.220795 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:37.224784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:37.229771 line       494                         if (i == j):
excute 13:50:37.233761 line       495                             continue
excute 13:50:37.237751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:37.241739 line       494                         if (i == j):
excute 13:50:37.246728 line       496                         i_j_list.append((
excute 13:50:37.250715 line       497                             i, j,
excute 13:50:37.256700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.264679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0)]
excute 13:50:37.270663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:37.277643 line       494                         if (i == j):
excute 13:50:37.283628 line       496                         i_j_list.append((
excute 13:50:37.290609 line       497                             i, j,
excute 13:50:37.293600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.296593 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0)]
excute 13:50:37.301579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:37.305568 line       494                         if (i == j):
excute 13:50:37.309557 line       496                         i_j_list.append((
excute 13:50:37.313547 line       497                             i, j,
excute 13:50:37.318534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.323522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0)]
excute 13:50:37.337485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:37.346461 line       494                         if (i == j):
excute 13:50:37.350452 line       496                         i_j_list.append((
excute 13:50:37.357430 line       497                             i, j,
excute 13:50:37.363413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.370396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0)]
excute 13:50:37.374385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:37.378374 line       494                         if (i == j):
excute 13:50:37.381366 line       496                         i_j_list.append((
excute 13:50:37.387350 line       497                             i, j,
excute 13:50:37.391338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.394331 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0)]
excute 13:50:37.398322 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:37.401312 line       494                         if (i == j):
excute 13:50:37.405301 line       496                         i_j_list.append((
excute 13:50:37.409290 line       497                             i, j,
excute 13:50:37.412283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.416272 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0)]
excute 13:50:37.419264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:37.423264 line       494                         if (i == j):
excute 13:50:37.427244 line       496                         i_j_list.append((
excute 13:50:37.430235 line       497                             i, j,
excute 13:50:37.434225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.437216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0)]
excute 13:50:37.441206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:37.445195 line       494                         if (i == j):
excute 13:50:37.449186 line       496                         i_j_list.append((
excute 13:50:37.453173 line       497                             i, j,
excute 13:50:37.456165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.460155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0)]
excute 13:50:37.463147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:37.467141 line       494                         if (i == j):
excute 13:50:37.471126 line       496                         i_j_list.append((
excute 13:50:37.474117 line       497                             i, j,
excute 13:50:37.478106 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.484091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0)]
excute 13:50:37.491075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:37.495062 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:37.498053 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:37.502042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:37.505035 line       494                         if (i == j):
excute 13:50:37.510024 line       496                         i_j_list.append((
excute 13:50:37.513013 line       497                             i, j,
excute 13:50:37.516005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.519996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0)]
excute 13:50:37.522987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:37.526978 line       494                         if (i == j):
excute 13:50:37.530966 line       495                             continue
excute 13:50:37.534956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:37.537947 line       494                         if (i == j):
excute 13:50:37.541936 line       496                         i_j_list.append((
excute 13:50:37.544928 line       497                             i, j,
excute 13:50:37.548917 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.551909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:37.555899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:37.558891 line       494                         if (i == j):
excute 13:50:37.562880 line       496                         i_j_list.append((
excute 13:50:37.566870 line       497                             i, j,
excute 13:50:37.569861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.572854 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:37.576843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:37.580832 line       494                         if (i == j):
excute 13:50:37.583824 line       496                         i_j_list.append((
excute 13:50:37.587813 line       497                             i, j,
excute 13:50:37.591805 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.595794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:37.598785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:37.603771 line       494                         if (i == j):
excute 13:50:37.607761 line       496                         i_j_list.append((
excute 13:50:37.610753 line       497                             i, j,
excute 13:50:37.614742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.617733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:37.620725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:37.624717 line       494                         if (i == j):
excute 13:50:37.628704 line       496                         i_j_list.append((
excute 13:50:37.631696 line       497                             i, j,
excute 13:50:37.635685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.638678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:37.641670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:37.645658 line       494                         if (i == j):
excute 13:50:37.649651 line       496                         i_j_list.append((
excute 13:50:37.652640 line       497                             i, j,
excute 13:50:37.656630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.659622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:37.663611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:37.667601 line       494                         if (i == j):
excute 13:50:37.670592 line       496                         i_j_list.append((
excute 13:50:37.673585 line       497                             i, j,
excute 13:50:37.677574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.681563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:37.684555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:37.688545 line       494                         if (i == j):
excute 13:50:37.692536 line       496                         i_j_list.append((
excute 13:50:37.697522 line       497                             i, j,
excute 13:50:37.700512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.703504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:37.707494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:37.710486 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:37.714474 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:37.718464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:37.721456 line       494                         if (i == j):
excute 13:50:37.725446 line       496                         i_j_list.append((
excute 13:50:37.728438 line       497                             i, j,
excute 13:50:37.732427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.735418 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0)]
excute 13:50:37.738411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:37.742400 line       494                         if (i == j):
excute 13:50:37.746391 line       496                         i_j_list.append((
excute 13:50:37.749381 line       497                             i, j,
excute 13:50:37.753372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.756363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:50:37.760353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:37.764342 line       494                         if (i == j):
excute 13:50:37.767333 line       495                             continue
excute 13:50:37.771323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:37.774315 line       494                         if (i == j):
excute 13:50:37.778305 line       496                         i_j_list.append((
excute 13:50:37.781296 line       497                             i, j,
excute 13:50:37.785286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.788277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:50:37.792270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:37.797256 line       494                         if (i == j):
excute 13:50:37.801243 line       496                         i_j_list.append((
excute 13:50:37.804234 line       497                             i, j,
excute 13:50:37.807227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.811216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:50:37.814208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:37.818198 line       494                         if (i == j):
excute 13:50:37.822190 line       496                         i_j_list.append((
excute 13:50:37.825179 line       497                             i, j,
excute 13:50:37.829168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.832160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:50:37.836150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:37.840159 line       494                         if (i == j):
excute 13:50:37.844129 line       496                         i_j_list.append((
excute 13:50:37.847155 line       497                             i, j,
excute 13:50:37.851110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.854103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:50:37.858091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:37.862081 line       494                         if (i == j):
excute 13:50:37.866070 line       496                         i_j_list.append((
excute 13:50:37.869062 line       497                             i, j,
excute 13:50:37.872053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.876044 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:50:37.879035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:37.883025 line       494                         if (i == j):
excute 13:50:37.887014 line       496                         i_j_list.append((
excute 13:50:37.890005 line       497                             i, j,
excute 13:50:37.893996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.896987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:50:37.900977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:37.904965 line       494                         if (i == j):
excute 13:50:37.908956 line       496                         i_j_list.append((
excute 13:50:37.911947 line       497                             i, j,
excute 13:50:37.915939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.918928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:50:37.922919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:37.925909 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:37.929899 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:37.932890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:37.936880 line       494                         if (i == j):
excute 13:50:37.939872 line       496                         i_j_list.append((
excute 13:50:37.943861 line       497                             i, j,
excute 13:50:37.947851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.951840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0)]
excute 13:50:37.955831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:37.959820 line       494                         if (i == j):
excute 13:50:37.963809 line       496                         i_j_list.append((
excute 13:50:37.966800 line       497                             i, j,
excute 13:50:37.970789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.973782 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:50:37.977772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:37.981761 line       494                         if (i == j):
excute 13:50:37.985749 line       496                         i_j_list.append((
excute 13:50:37.989740 line       497                             i, j,
excute 13:50:37.992731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:37.995723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:50:37.999713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:38.004700 line       494                         if (i == j):
excute 13:50:38.008689 line       495                             continue
excute 13:50:38.012679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:38.015670 line       494                         if (i == j):
excute 13:50:38.019661 line       496                         i_j_list.append((
excute 13:50:38.022651 line       497                             i, j,
excute 13:50:38.026641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.029632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:50:38.033621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:38.036614 line       494                         if (i == j):
excute 13:50:38.040603 line       496                         i_j_list.append((
excute 13:50:38.044593 line       497                             i, j,
excute 13:50:38.047584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.050576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:50:38.054597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:38.058555 line       494                         if (i == j):
excute 13:50:38.062545 line       496                         i_j_list.append((
excute 13:50:38.065570 line       497                             i, j,
excute 13:50:38.069526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.072550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:50:38.076539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:38.080521 line       494                         if (i == j):
excute 13:50:38.083520 line       496                         i_j_list.append((
excute 13:50:38.088507 line       497                             i, j,
excute 13:50:38.094461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.097451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:50:38.101441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:38.106463 line       494                         if (i == j):
excute 13:50:38.110417 line       496                         i_j_list.append((
excute 13:50:38.113409 line       497                             i, j,
excute 13:50:38.117404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.120389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:50:38.124381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:38.128369 line       494                         if (i == j):
excute 13:50:38.132359 line       496                         i_j_list.append((
excute 13:50:38.135384 line       497                             i, j,
excute 13:50:38.139371 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.142363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:50:38.146321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:38.150326 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:38.153334 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:38.158289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:38.161312 line       494                         if (i == j):
excute 13:50:38.165277 line       496                         i_j_list.append((
excute 13:50:38.168293 line       497                             i, j,
excute 13:50:38.172282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.175277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0)]
excute 13:50:38.179239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:38.182256 line       494                         if (i == j):
excute 13:50:38.186248 line       496                         i_j_list.append((
excute 13:50:38.190235 line       497                             i, j,
excute 13:50:38.193226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.196220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:50:38.200208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:38.204167 line       494                         if (i == j):
excute 13:50:38.209153 line       496                         i_j_list.append((
excute 13:50:38.212144 line       497                             i, j,
excute 13:50:38.215137 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.219125 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:50:38.222118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:38.227106 line       494                         if (i == j):
excute 13:50:38.231094 line       496                         i_j_list.append((
excute 13:50:38.235086 line       497                             i, j,
excute 13:50:38.238075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.242066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:50:38.249050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:38.254036 line       494                         if (i == j):
excute 13:50:38.258022 line       495                             continue
excute 13:50:38.261014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:38.265003 line       494                         if (i == j):
excute 13:50:38.268993 line       496                         i_j_list.append((
excute 13:50:38.271984 line       497                             i, j,
excute 13:50:38.274976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.277969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:50:38.281958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:38.285947 line       494                         if (i == j):
excute 13:50:38.289944 line       496                         i_j_list.append((
excute 13:50:38.293958 line       497                             i, j,
excute 13:50:38.296949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.300922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:50:38.303931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:38.307899 line       494                         if (i == j):
excute 13:50:38.312875 line       496                         i_j_list.append((
excute 13:50:38.315867 line       497                             i, j,
excute 13:50:38.318859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.323848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:50:38.336813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:38.343794 line       494                         if (i == j):
excute 13:50:38.347782 line       496                         i_j_list.append((
excute 13:50:38.351774 line       497                             i, j,
excute 13:50:38.356762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.359750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:50:38.363755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:38.366732 line       494                         if (i == j):
excute 13:50:38.371719 line       496                         i_j_list.append((
excute 13:50:38.374711 line       497                             i, j,
excute 13:50:38.378708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.381692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:50:38.385681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:38.389670 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:38.392662 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:38.396651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:38.400641 line       494                         if (i == j):
excute 13:50:38.404630 line       496                         i_j_list.append((
excute 13:50:38.407622 line       497                             i, j,
excute 13:50:38.411611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.416599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:50:38.419590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:38.423580 line       494                         if (i == j):
excute 13:50:38.427570 line       496                         i_j_list.append((
excute 13:50:38.430561 line       497                             i, j,
excute 13:50:38.434550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.437542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:38.441531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:38.445522 line       494                         if (i == j):
excute 13:50:38.451505 line       496                         i_j_list.append((
excute 13:50:38.455495 line       497                             i, j,
excute 13:50:38.458490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.464474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:38.469460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:38.473447 line       494                         if (i == j):
excute 13:50:38.476439 line       496                         i_j_list.append((
excute 13:50:38.481425 line       497                             i, j,
excute 13:50:38.484417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.488405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:38.491398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:38.495387 line       494                         if (i == j):
excute 13:50:38.499379 line       496                         i_j_list.append((
excute 13:50:38.502369 line       497                             i, j,
excute 13:50:38.506390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.510381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:38.514338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:38.519323 line       494                         if (i == j):
excute 13:50:38.522315 line       495                             continue
excute 13:50:38.526304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:38.529296 line       494                         if (i == j):
excute 13:50:38.533286 line       496                         i_j_list.append((
excute 13:50:38.536278 line       497                             i, j,
excute 13:50:38.540267 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.543260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:38.547249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:38.551238 line       494                         if (i == j):
excute 13:50:38.555228 line       496                         i_j_list.append((
excute 13:50:38.559217 line       497                             i, j,
excute 13:50:38.562208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.566198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:38.569190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:38.573179 line       494                         if (i == j):
excute 13:50:38.577169 line       496                         i_j_list.append((
excute 13:50:38.580161 line       497                             i, j,
excute 13:50:38.584151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.587142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:38.594124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:38.598113 line       494                         if (i == j):
excute 13:50:38.602101 line       496                         i_j_list.append((
excute 13:50:38.624242 line       497                             i, j,
excute 13:50:38.628230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.633217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:38.638203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:38.642194 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:38.646183 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:38.650172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:38.655159 line       494                         if (i == j):
excute 13:50:38.659148 line       496                         i_j_list.append((
excute 13:50:38.663137 line       497                             i, j,
excute 13:50:38.667126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.671115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0)]
excute 13:50:38.675104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:38.680093 line       494                         if (i == j):
excute 13:50:38.684081 line       496                         i_j_list.append((
excute 13:50:38.688070 line       497                             i, j,
excute 13:50:38.692060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.696049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0)]
excute 13:50:38.700038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:38.704029 line       494                         if (i == j):
excute 13:50:38.708016 line       496                         i_j_list.append((
excute 13:50:38.712005 line       497                             i, j,
excute 13:50:38.715997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.720982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0)]
excute 13:50:38.724004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:38.727963 line       494                         if (i == j):
excute 13:50:38.731951 line       496                         i_j_list.append((
excute 13:50:38.734977 line       497                             i, j,
excute 13:50:38.738964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.741958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0)]
excute 13:50:38.745950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:38.749907 line       494                         if (i == j):
excute 13:50:38.753894 line       496                         i_j_list.append((
excute 13:50:38.756884 line       497                             i, j,
excute 13:50:38.760885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.763865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0)]
excute 13:50:38.766858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:38.770847 line       494                         if (i == j):
excute 13:50:38.774837 line       496                         i_j_list.append((
excute 13:50:38.777828 line       497                             i, j,
excute 13:50:38.781817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.784810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0)]
excute 13:50:38.788799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:38.792790 line       494                         if (i == j):
excute 13:50:38.796779 line       495                             continue
excute 13:50:38.800768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:38.804758 line       494                         if (i == j):
excute 13:50:38.808747 line       496                         i_j_list.append((
excute 13:50:38.812737 line       497                             i, j,
excute 13:50:38.816725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.819748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0)]
excute 13:50:38.824703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:38.827727 line       494                         if (i == j):
excute 13:50:38.831717 line       496                         i_j_list.append((
excute 13:50:38.835706 line       497                             i, j,
excute 13:50:38.838699 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.842668 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0)]
excute 13:50:38.845679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:38.849639 line       494                         if (i == j):
excute 13:50:38.853627 line       496                         i_j_list.append((
excute 13:50:38.857646 line       497                             i, j,
excute 13:50:38.860639 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.864630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0)]
excute 13:50:38.867621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:38.871609 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:38.875576 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:38.878592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:38.882580 line       494                         if (i == j):
excute 13:50:38.886572 line       496                         i_j_list.append((
excute 13:50:38.890528 line       497                             i, j,
excute 13:50:38.893552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.896542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0)]
excute 13:50:38.900532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:38.904527 line       494                         if (i == j):
excute 13:50:38.908482 line       496                         i_j_list.append((
excute 13:50:38.911473 line       497                             i, j,
excute 13:50:38.916459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.919451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:38.923441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:38.928427 line       494                         if (i == j):
excute 13:50:38.932415 line       496                         i_j_list.append((
excute 13:50:38.935439 line       497                             i, j,
excute 13:50:38.939430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.942423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:38.946411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:38.950402 line       494                         if (i == j):
excute 13:50:38.955355 line       496                         i_j_list.append((
excute 13:50:38.958346 line       497                             i, j,
excute 13:50:38.962335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.967323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:38.970314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:38.974303 line       494                         if (i == j):
excute 13:50:38.978292 line       496                         i_j_list.append((
excute 13:50:38.982281 line       497                             i, j,
excute 13:50:38.985274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:38.988266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:38.992255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:38.996246 line       494                         if (i == j):
excute 13:50:39.000234 line       496                         i_j_list.append((
excute 13:50:39.003226 line       497                             i, j,
excute 13:50:39.006218 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.010208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:39.014230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:39.018188 line       494                         if (i == j):
excute 13:50:39.022211 line       496                         i_j_list.append((
excute 13:50:39.025203 line       497                             i, j,
excute 13:50:39.030154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.033182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:39.036171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:39.041156 line       494                         if (i == j):
excute 13:50:39.045145 line       495                             continue
excute 13:50:39.049139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:39.052127 line       494                         if (i == j):
excute 13:50:39.056116 line       496                         i_j_list.append((
excute 13:50:39.060106 line       497                             i, j,
excute 13:50:39.063097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.067087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:39.070082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:39.074068 line       494                         if (i == j):
excute 13:50:39.078061 line       496                         i_j_list.append((
excute 13:50:39.081054 line       497                             i, j,
excute 13:50:39.085039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.088998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:39.093986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:39.098970 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:39.101964 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:39.105953 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:39.110938 line       494                         if (i == j):
excute 13:50:39.114928 line       496                         i_j_list.append((
excute 13:50:39.117953 line       497                             i, j,
excute 13:50:39.121941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.124932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:50:39.128895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:39.132879 line       494                         if (i == j):
excute 13:50:39.137866 line       496                         i_j_list.append((
excute 13:50:39.140858 line       497                             i, j,
excute 13:50:39.143850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.147839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:39.150831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:39.154831 line       494                         if (i == j):
excute 13:50:39.158848 line       496                         i_j_list.append((
excute 13:50:39.162831 line       497                             i, j,
excute 13:50:39.165826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.169812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:39.172805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:39.176793 line       494                         if (i == j):
excute 13:50:39.180752 line       496                         i_j_list.append((
excute 13:50:39.183776 line       497                             i, j,
excute 13:50:39.187766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.190756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:39.194747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:39.198704 line       494                         if (i == j):
excute 13:50:39.202695 line       496                         i_j_list.append((
excute 13:50:39.205718 line       497                             i, j,
excute 13:50:39.209706 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.212697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:39.216657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:39.220647 line       494                         if (i == j):
excute 13:50:39.224636 line       496                         i_j_list.append((
excute 13:50:39.227627 line       497                             i, j,
excute 13:50:39.231618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.237601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:39.242626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:39.246607 line       494                         if (i == j):
excute 13:50:39.250597 line       496                         i_j_list.append((
excute 13:50:39.254586 line       497                             i, j,
excute 13:50:39.258575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.262533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:39.265525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:39.269514 line       494                         if (i == j):
excute 13:50:39.273503 line       496                         i_j_list.append((
excute 13:50:39.277494 line       497                             i, j,
excute 13:50:39.281484 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.285473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:39.289463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:39.293449 line       494                         if (i == j):
excute 13:50:39.297439 line       495                             continue
excute 13:50:39.301431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:39.304421 line       494                         if (i == j):
excute 13:50:39.308410 line       496                         i_j_list.append((
excute 13:50:39.312399 line       497                             i, j,
excute 13:50:39.315391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.319381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:50:39.322404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:39.328357 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:39.342319 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:39.350298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:39.357281 line       494                         if (i == j):
excute 13:50:39.361301 line       496                         i_j_list.append((
excute 13:50:39.365293 line       497                             i, j,
excute 13:50:39.369280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.373238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0)]
excute 13:50:39.376265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:39.380239 line       494                         if (i == j):
excute 13:50:39.384240 line       496                         i_j_list.append((
excute 13:50:39.389196 line       497                             i, j,
excute 13:50:39.393189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.397175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:39.401163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:39.405154 line       494                         if (i == j):
excute 13:50:39.409143 line       496                         i_j_list.append((
excute 13:50:39.413133 line       497                             i, j,
excute 13:50:39.416124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.420113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:39.424102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:39.428092 line       494                         if (i == j):
excute 13:50:39.433078 line       496                         i_j_list.append((
excute 13:50:39.436071 line       497                             i, j,
excute 13:50:39.441059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.445046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:39.449036 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:39.454022 line       494                         if (i == j):
excute 13:50:39.457012 line       496                         i_j_list.append((
excute 13:50:39.461002 line       497                             i, j,
excute 13:50:39.463994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.467983 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:39.470975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:39.474965 line       494                         if (i == j):
excute 13:50:39.478954 line       496                         i_j_list.append((
excute 13:50:39.481946 line       497                             i, j,
excute 13:50:39.485935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.488927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:39.492918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:39.495908 line       494                         if (i == j):
excute 13:50:39.499898 line       496                         i_j_list.append((
excute 13:50:39.503887 line       497                             i, j,
excute 13:50:39.506879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.510869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:39.513861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:39.517850 line       494                         if (i == j):
excute 13:50:39.521840 line       496                         i_j_list.append((
excute 13:50:39.525829 line       497                             i, j,
excute 13:50:39.528820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.531813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:39.535802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:39.539792 line       494                         if (i == j):
excute 13:50:39.544815 line       496                         i_j_list.append((
excute 13:50:39.547802 line       497                             i, j,
excute 13:50:39.551759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:39.555750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:39.558742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:39.564726 line       494                         if (i == j):
excute 13:50:39.568714 line       495                             continue
excute 13:50:39.571706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:39.575695 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:39.578687 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 1, 2, 0), (0, 2, 2, 0), (0, 3, 2, 0), (0, 4, 2, 0), (0, 5, 2, 0), (0, 6, 2, 0), (0, 7, 2, 0), (0, 8, 2, 0), (0, 9, 2, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (6, 0, 3, 0), (6, 1, 3, 0), (6, 2, 3, 0), (6, 3, 3, 0), (6, 4, 3, 0), (6, 5, 3, 0), (6, 7, 3, 0), (6, 8, 3, 0), (6, 9, 3, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:50:39.582677 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:39.585668 line       505                     if (self.RELOCATE):
excute 13:50:39.589658 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:39.595643 line       505                     if (self.RELOCATE):
excute 13:50:39.600629 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:39.603621 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:39.607610 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:39.611609 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:39.615590 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.619579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:39.623568 line       556                     i = i_j[0]
excute 13:50:39.628555 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:39.631546 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.635536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:39.639526 line       556                     i = i_j[0]
excute 13:50:39.643517 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:39.648502 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.652506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:39.656481 line       556                     i = i_j[0]
excute 13:50:39.660471 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:39.664460 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.668449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:39.672438 line       556                     i = i_j[0]
excute 13:50:39.676429 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:39.680416 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.684407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:39.687432 line       556                     i = i_j[0]
excute 13:50:39.691418 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:39.695377 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.699368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:39.702358 line       556                     i = i_j[0]
excute 13:50:39.706347 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:39.709339 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.714325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:39.717319 line       556                     i = i_j[0]
excute 13:50:39.721308 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:39.725297 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.730282 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:50:39.733276 line       556                     i = i_j[0]
excute 13:50:39.738264 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:39.741255 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.745244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:50:39.750231 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:39.754234 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:39.758210 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.762203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:50:39.766188 line       556                     i = i_j[0]
excute 13:50:39.770178 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:39.773170 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.777160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:50:39.781149 line       556                     i = i_j[0]
excute 13:50:39.785151 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:39.788130 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.793117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:50:39.796108 line       556                     i = i_j[0]
excute 13:50:39.800099 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:39.804087 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.808077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:50:39.811067 line       556                     i = i_j[0]
excute 13:50:39.815056 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:39.818049 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.822039 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:50:39.826027 line       556                     i = i_j[0]
excute 13:50:39.830018 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:39.833008 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.836998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:50:39.840986 line       556                     i = i_j[0]
excute 13:50:39.843978 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:39.847967 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.852968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:50:39.856952 line       556                     i = i_j[0]
excute 13:50:39.859936 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:39.863957 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.867919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:50:39.870937 line       556                     i = i_j[0]
excute 13:50:39.874927 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:39.878921 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.882908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:39.885898 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:39.889855 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:39.893845 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.897834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:39.900858 line       556                     i = i_j[0]
excute 13:50:39.904815 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:39.908805 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.911830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:39.915820 line       556                     i = i_j[0]
excute 13:50:39.919807 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:39.923800 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.927755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:39.930779 line       556                     i = i_j[0]
excute 13:50:39.934736 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:39.937760 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.941749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:39.945738 line       556                     i = i_j[0]
excute 13:50:39.950696 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:39.955717 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.959669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:39.966651 line       556                     i = i_j[0]
excute 13:50:39.973632 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:39.976624 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.981612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:39.984603 line       556                     i = i_j[0]
excute 13:50:39.988591 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:39.992582 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:39.996570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:39.999562 line       556                     i = i_j[0]
excute 13:50:40.003552 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.007541 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.011530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:40.015519 line       556                     i = i_j[0]
excute 13:50:40.019515 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:40.022537 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.026522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 2, 0)
excute 13:50:40.030490 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:40.033503 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:40.037461 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.041450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 2, 0)
excute 13:50:40.045439 line       556                     i = i_j[0]
excute 13:50:40.049430 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.052421 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.058412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 2, 0)
excute 13:50:40.062394 line       556                     i = i_j[0]
excute 13:50:40.065418 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:40.069409 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.073398 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 2, 0)
excute 13:50:40.077364 line       556                     i = i_j[0]
excute 13:50:40.080379 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:40.084367 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.088327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 2, 0)
excute 13:50:40.095307 line       556                     i = i_j[0]
excute 13:50:40.099330 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:40.103285 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.107311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 2, 0)
excute 13:50:40.110266 line       556                     i = i_j[0]
excute 13:50:40.114256 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:40.117248 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.122234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 2, 0)
excute 13:50:40.126224 line       556                     i = i_j[0]
excute 13:50:40.132208 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:40.136199 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.144204 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 2, 0)
excute 13:50:40.147202 line       556                     i = i_j[0]
excute 13:50:40.151191 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.155182 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.160136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 2, 0)
excute 13:50:40.163159 line       556                     i = i_j[0]
excute 13:50:40.167146 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:40.171138 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.175093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:40.178116 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:40.182106 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:40.186096 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.190090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:40.194075 line       556                     i = i_j[0]
excute 13:50:40.198065 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.201055 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.205044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:40.209003 line       556                     i = i_j[0]
excute 13:50:40.212993 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:40.219998 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.223962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:40.227952 line       556                     i = i_j[0]
excute 13:50:40.231941 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:40.235930 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.239920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:40.242946 line       556                     i = i_j[0]
excute 13:50:40.246902 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:40.249924 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.254881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:40.258871 line       556                     i = i_j[0]
excute 13:50:40.262891 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:40.266857 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.269871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:40.273861 line       556                     i = i_j[0]
excute 13:50:40.277851 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:40.280845 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.284832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:40.288822 line       556                     i = i_j[0]
excute 13:50:40.292810 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.296800 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.300792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:40.303780 line       556                     i = i_j[0]
excute 13:50:40.307771 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:40.311761 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.315717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:40.318740 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:40.322700 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:40.329682 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.339654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:40.343675 line       556                     i = i_j[0]
excute 13:50:40.347663 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:40.351653 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.357608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:40.362594 line       556                     i = i_j[0]
excute 13:50:40.366592 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.370606 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.374592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:40.378583 line       556                     i = i_j[0]
excute 13:50:40.382540 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:40.386531 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.391515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:40.395506 line       556                     i = i_j[0]
excute 13:50:40.399495 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:40.403484 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.408469 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:40.411463 line       556                     i = i_j[0]
excute 13:50:40.416449 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:40.419440 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.423429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:40.427418 line       556                     i = i_j[0]
excute 13:50:40.431409 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:40.434435 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.438391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:40.441413 line       556                     i = i_j[0]
excute 13:50:40.445407 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.449392 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.454381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:40.457370 line       556                     i = i_j[0]
excute 13:50:40.461365 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:40.465318 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.469343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:40.473327 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:40.477318 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:40.481307 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.485301 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:40.489274 line       556                     i = i_j[0]
excute 13:50:40.493281 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:40.496266 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.500225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:40.503248 line       556                     i = i_j[0]
excute 13:50:40.507237 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.511226 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.515187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:40.518207 line       556                     i = i_j[0]
excute 13:50:40.523164 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:40.527160 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.531144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:40.534135 line       556                     i = i_j[0]
excute 13:50:40.539121 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:40.542114 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.547102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:40.550092 line       556                     i = i_j[0]
excute 13:50:40.555081 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:40.559068 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.564056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:40.568043 line       556                     i = i_j[0]
excute 13:50:40.572068 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:40.576053 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.580011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:40.583034 line       556                     i = i_j[0]
excute 13:50:40.586996 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:40.593973 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.597964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:40.601953 line       556                     i = i_j[0]
excute 13:50:40.605943 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.608933 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.612922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:50:40.615914 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:40.619904 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:40.623893 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.627883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:50:40.631873 line       556                     i = i_j[0]
excute 13:50:40.635861 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:40.638884 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.642874 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:50:40.646864 line       556                     i = i_j[0]
excute 13:50:40.650856 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.653845 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.657837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:50:40.661823 line       556                     i = i_j[0]
excute 13:50:40.665817 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:40.669773 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.673794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:50:40.677781 line       556                     i = i_j[0]
excute 13:50:40.681740 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:40.684766 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.688752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:50:40.692740 line       556                     i = i_j[0]
excute 13:50:40.697699 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:40.700690 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.705678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:50:40.709663 line       556                     i = i_j[0]
excute 13:50:40.713656 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:40.717645 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.721634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:50:40.725623 line       556                     i = i_j[0]
excute 13:50:40.732615 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.736592 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.740581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:50:40.744571 line       556                     i = i_j[0]
excute 13:50:40.748560 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:40.752550 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.756575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 3, 0)
excute 13:50:40.760559 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:40.764533 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:40.768508 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.772499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 3, 0)
excute 13:50:40.777482 line       556                     i = i_j[0]
excute 13:50:40.781472 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:40.784464 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.788453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 3, 0)
excute 13:50:40.792445 line       556                     i = i_j[0]
excute 13:50:40.797433 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.801421 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.805411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 3, 0)
excute 13:50:40.809399 line       556                     i = i_j[0]
excute 13:50:40.813393 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:40.816381 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.821366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 3, 0)
excute 13:50:40.824359 line       556                     i = i_j[0]
excute 13:50:40.829345 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:40.832338 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.836327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 3, 0)
excute 13:50:40.840316 line       556                     i = i_j[0]
excute 13:50:40.845303 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:40.849290 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.853280 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 3, 0)
excute 13:50:40.857271 line       556                     i = i_j[0]
excute 13:50:40.860261 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:40.864250 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.867243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 3, 0)
excute 13:50:40.871232 line       556                     i = i_j[0]
excute 13:50:40.875222 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:40.879242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.883232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 3, 0)
excute 13:50:40.887221 line       556                     i = i_j[0]
excute 13:50:40.891180 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:40.894202 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.898193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:50:40.902181 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:40.906172 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:40.910128 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.913154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:50:40.917140 line       556                     i = i_j[0]
excute 13:50:40.921099 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:40.924126 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.928112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:50:40.932100 line       556                     i = i_j[0]
excute 13:50:40.936092 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:40.939082 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.943079 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:50:40.947063 line       556                     i = i_j[0]
excute 13:50:40.951051 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:40.955041 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.959996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:50:40.964982 line       556                     i = i_j[0]
excute 13:50:40.969971 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:40.973964 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.977950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:50:40.981968 line       556                     i = i_j[0]
excute 13:50:40.985926 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:40.988953 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:40.992942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:50:40.996927 line       556                     i = i_j[0]
excute 13:50:41.000887 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:41.003913 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:41.008865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:50:41.011856 line       556                     i = i_j[0]
excute 13:50:41.015845 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:41.018837 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:41.022827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:50:41.026816 line       556                     i = i_j[0]
excute 13:50:41.030805 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:41.033797 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:41.037787 line       555                 for i_j in i_j_list:
excute 13:50:41.041777 line       581             self.write_matrix(
excute 13:50:41.044768 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:41.048757 line       583                 result_file_path,
excute 13:50:41.051749 line       584                 mode='a'
excute 13:50:41.057734 line       488         for t in time_steps:
excute Modified var:.. t = 161
excute 13:50:41.062724 line       489             if (t != self.TIME + 1):
excute 13:50:41.066711 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:41.070701 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:41.074691 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:41.078681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:41.084662 line       494                         if (i == j):
excute 13:50:41.090651 line       495                             continue
excute 13:50:41.097627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:41.104643 line       494                         if (i == j):
excute 13:50:41.109597 line       496                         i_j_list.append((
excute 13:50:41.113586 line       497                             i, j,
excute 13:50:41.122576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.132534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:41.139515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:41.144513 line       494                         if (i == j):
excute 13:50:41.148493 line       496                         i_j_list.append((
excute 13:50:41.153479 line       497                             i, j,
excute 13:50:41.157468 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.160460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:50:41.164450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:41.170435 line       494                         if (i == j):
excute 13:50:41.174424 line       496                         i_j_list.append((
excute 13:50:41.181407 line       497                             i, j,
excute 13:50:41.185394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.190381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:50:41.193371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:41.198358 line       494                         if (i == j):
excute 13:50:41.202348 line       496                         i_j_list.append((
excute 13:50:41.206337 line       497                             i, j,
excute 13:50:41.209330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.213319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:50:41.216311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:41.221299 line       494                         if (i == j):
excute 13:50:41.225287 line       496                         i_j_list.append((
excute 13:50:41.228278 line       497                             i, j,
excute 13:50:41.232268 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.235260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:50:41.239250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:41.243243 line       494                         if (i == j):
excute 13:50:41.246231 line       496                         i_j_list.append((
excute 13:50:41.250221 line       497                             i, j,
excute 13:50:41.253212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.257201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:41.261191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:41.265181 line       494                         if (i == j):
excute 13:50:41.269170 line       496                         i_j_list.append((
excute 13:50:41.272161 line       497                             i, j,
excute 13:50:41.275154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.279174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:50:41.282165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:41.286156 line       494                         if (i == j):
excute 13:50:41.291134 line       496                         i_j_list.append((
excute 13:50:41.295131 line       497                             i, j,
excute 13:50:41.298122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.302113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:50:41.305104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:41.309093 line       494                         if (i == j):
excute 13:50:41.313052 line       496                         i_j_list.append((
excute 13:50:41.316074 line       497                             i, j,
excute 13:50:41.320066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.323060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:50:41.330009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:41.339981 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:41.344967 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:41.348955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:41.351947 line       494                         if (i == j):
excute 13:50:41.356935 line       496                         i_j_list.append((
excute 13:50:41.361924 line       497                             i, j,
excute 13:50:41.367905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.373893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0)]
excute 13:50:41.382868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:41.387861 line       494                         if (i == j):
excute 13:50:41.395830 line       495                             continue
excute 13:50:41.401818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:41.408810 line       494                         if (i == j):
excute 13:50:41.413783 line       496                         i_j_list.append((
excute 13:50:41.418771 line       497                             i, j,
excute 13:50:41.423755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.427746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:41.431735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:41.436722 line       494                         if (i == j):
excute 13:50:41.440711 line       496                         i_j_list.append((
excute 13:50:41.444701 line       497                             i, j,
excute 13:50:41.449688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.454674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:41.466643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:41.474620 line       494                         if (i == j):
excute 13:50:41.479608 line       496                         i_j_list.append((
excute 13:50:41.487585 line       497                             i, j,
excute 13:50:41.496561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.505545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:41.513516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:41.522493 line       494                         if (i == j):
excute 13:50:41.530473 line       496                         i_j_list.append((
excute 13:50:41.534459 line       497                             i, j,
excute 13:50:41.542439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.548423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:41.554407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:41.562385 line       494                         if (i == j):
excute 13:50:41.571363 line       496                         i_j_list.append((
excute 13:50:41.578342 line       497                             i, j,
excute 13:50:41.583329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.589313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:41.595297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:41.603276 line       494                         if (i == j):
excute 13:50:41.609260 line       496                         i_j_list.append((
excute 13:50:41.617237 line       497                             i, j,
excute 13:50:41.623223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.629206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:41.637184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:41.643169 line       494                         if (i == j):
excute 13:50:41.652147 line       496                         i_j_list.append((
excute 13:50:41.658130 line       497                             i, j,
excute 13:50:41.664112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.671095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:41.679073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:41.685059 line       494                         if (i == j):
excute 13:50:41.692039 line       496                         i_j_list.append((
excute 13:50:41.699021 line       497                             i, j,
excute 13:50:41.706004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.711986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:41.719964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:41.725948 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:41.732929 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:41.740908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:41.748901 line       494                         if (i == j):
excute 13:50:41.755868 line       496                         i_j_list.append((
excute 13:50:41.762849 line       497                             i, j,
excute 13:50:41.769830 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.774816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0)]
excute 13:50:41.781799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:41.789777 line       494                         if (i == j):
excute 13:50:41.797757 line       496                         i_j_list.append((
excute 13:50:41.805735 line       497                             i, j,
excute 13:50:41.813713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.821692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:50:41.827676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:41.832662 line       494                         if (i == j):
excute 13:50:41.837650 line       495                             continue
excute 13:50:41.843632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:41.847623 line       494                         if (i == j):
excute 13:50:41.851613 line       496                         i_j_list.append((
excute 13:50:41.855601 line       497                             i, j,
excute 13:50:41.859589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.862582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:50:41.866571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:41.870561 line       494                         if (i == j):
excute 13:50:41.874550 line       496                         i_j_list.append((
excute 13:50:41.877542 line       497                             i, j,
excute 13:50:41.881531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.884524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:50:41.888512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:41.892515 line       494                         if (i == j):
excute 13:50:41.895493 line       496                         i_j_list.append((
excute 13:50:41.899483 line       497                             i, j,
excute 13:50:41.902475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.907463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:50:41.911452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:41.915442 line       494                         if (i == j):
excute 13:50:41.919430 line       496                         i_j_list.append((
excute 13:50:41.923436 line       497                             i, j,
excute 13:50:41.926411 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.929403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:50:41.933393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:41.937382 line       494                         if (i == j):
excute 13:50:41.941384 line       496                         i_j_list.append((
excute 13:50:41.944363 line       497                             i, j,
excute 13:50:41.948354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.952343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:50:41.956333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:41.960322 line       494                         if (i == j):
excute 13:50:41.965309 line       496                         i_j_list.append((
excute 13:50:41.969312 line       497                             i, j,
excute 13:50:41.972288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.976278 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:50:41.980268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:41.984258 line       494                         if (i == j):
excute 13:50:41.988249 line       496                         i_j_list.append((
excute 13:50:41.991238 line       497                             i, j,
excute 13:50:41.995227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:41.999217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:50:42.003206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:42.007196 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:42.012186 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:42.017170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:42.020162 line       494                         if (i == j):
excute 13:50:42.025150 line       496                         i_j_list.append((
excute 13:50:42.028141 line       497                             i, j,
excute 13:50:42.032131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.036134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0)]
excute 13:50:42.039112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:42.044100 line       494                         if (i == j):
excute 13:50:42.048094 line       496                         i_j_list.append((
excute 13:50:42.052076 line       497                             i, j,
excute 13:50:42.055069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.059058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:50:42.063048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:42.067037 line       494                         if (i == j):
excute 13:50:42.071026 line       496                         i_j_list.append((
excute 13:50:42.075015 line       497                             i, j,
excute 13:50:42.079005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.081997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:50:42.085986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:42.089975 line       494                         if (i == j):
excute 13:50:42.094961 line       495                             continue
excute 13:50:42.097953 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:42.101942 line       494                         if (i == j):
excute 13:50:42.105933 line       496                         i_j_list.append((
excute 13:50:42.108924 line       497                             i, j,
excute 13:50:42.112916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.116903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:50:42.119895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:42.123885 line       494                         if (i == j):
excute 13:50:42.127874 line       496                         i_j_list.append((
excute 13:50:42.131863 line       497                             i, j,
excute 13:50:42.134855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.138843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0)]
excute 13:50:42.141835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:42.145824 line       494                         if (i == j):
excute 13:50:42.149815 line       496                         i_j_list.append((
excute 13:50:42.152841 line       497                             i, j,
excute 13:50:42.156829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.160821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0)]
excute 13:50:42.163776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:42.167766 line       494                         if (i == j):
excute 13:50:42.171755 line       496                         i_j_list.append((
excute 13:50:42.174747 line       497                             i, j,
excute 13:50:42.177739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.181728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0)]
excute 13:50:42.184720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:42.188716 line       494                         if (i == j):
excute 13:50:42.192699 line       496                         i_j_list.append((
excute 13:50:42.195723 line       497                             i, j,
excute 13:50:42.199713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.202704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:50:42.206662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:42.210653 line       494                         if (i == j):
excute 13:50:42.213678 line       496                         i_j_list.append((
excute 13:50:42.219630 line       497                             i, j,
excute 13:50:42.222621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.226610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0)]
excute 13:50:42.230600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:42.234589 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:42.238578 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:42.242567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:42.246557 line       494                         if (i == j):
excute 13:50:42.250545 line       496                         i_j_list.append((
excute 13:50:42.253571 line       497                             i, j,
excute 13:50:42.257558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.260552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0)]
excute 13:50:42.264543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:42.268530 line       494                         if (i == j):
excute 13:50:42.272489 line       496                         i_j_list.append((
excute 13:50:42.275479 line       497                             i, j,
excute 13:50:42.279469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.282461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:50:42.286450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:42.290440 line       494                         if (i == j):
excute 13:50:42.296422 line       496                         i_j_list.append((
excute 13:50:42.299414 line       497                             i, j,
excute 13:50:42.303403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.306395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:50:42.310384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:42.314374 line       494                         if (i == j):
excute 13:50:42.319366 line       496                         i_j_list.append((
excute 13:50:42.322385 line       497                             i, j,
excute 13:50:42.327341 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.334325 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:50:42.339310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:42.344296 line       494                         if (i == j):
excute 13:50:42.348298 line       495                             continue
excute 13:50:42.351307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:42.356265 line       494                         if (i == j):
excute 13:50:42.360253 line       496                         i_j_list.append((
excute 13:50:42.363245 line       497                             i, j,
excute 13:50:42.367234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.373218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:50:42.378235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:42.382198 line       494                         if (i == j):
excute 13:50:42.387184 line       496                         i_j_list.append((
excute 13:50:42.390204 line       497                             i, j,
excute 13:50:42.394161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.397152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:50:42.400145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:42.405134 line       494                         if (i == j):
excute 13:50:42.408123 line       496                         i_j_list.append((
excute 13:50:42.412113 line       497                             i, j,
excute 13:50:42.415104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.418097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:50:42.424085 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:42.428104 line       494                         if (i == j):
excute 13:50:42.432060 line       496                         i_j_list.append((
excute 13:50:42.435083 line       497                             i, j,
excute 13:50:42.438075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.442064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:50:42.445059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:42.450014 line       494                         if (i == j):
excute 13:50:42.454999 line       496                         i_j_list.append((
excute 13:50:42.457992 line       497                             i, j,
excute 13:50:42.461981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.465970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:50:42.468962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:42.473955 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:42.476939 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:42.480928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:42.484918 line       494                         if (i == j):
excute 13:50:42.487910 line       496                         i_j_list.append((
excute 13:50:42.491899 line       497                             i, j,
excute 13:50:42.494891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.497883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0)]
excute 13:50:42.501872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:42.505862 line       494                         if (i == j):
excute 13:50:42.509851 line       496                         i_j_list.append((
excute 13:50:42.513841 line       497                             i, j,
excute 13:50:42.516832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.519825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:42.523814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:42.528802 line       494                         if (i == j):
excute 13:50:42.532826 line       496                         i_j_list.append((
excute 13:50:42.535818 line       497                             i, j,
excute 13:50:42.539772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.542795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:42.546754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:42.549777 line       494                         if (i == j):
excute 13:50:42.553766 line       496                         i_j_list.append((
excute 13:50:42.557755 line       497                             i, j,
excute 13:50:42.561713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.564739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:42.568715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:42.572720 line       494                         if (i == j):
excute 13:50:42.576676 line       496                         i_j_list.append((
excute 13:50:42.579696 line       497                             i, j,
excute 13:50:42.582689 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.586678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:42.589641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:42.595655 line       494                         if (i == j):
excute 13:50:42.599648 line       495                             continue
excute 13:50:42.603633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:42.606595 line       494                         if (i == j):
excute 13:50:42.611580 line       496                         i_j_list.append((
excute 13:50:42.614573 line       497                             i, j,
excute 13:50:42.618562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.622563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:42.626544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:42.630531 line       494                         if (i == j):
excute 13:50:42.635529 line       496                         i_j_list.append((
excute 13:50:42.639516 line       497                             i, j,
excute 13:50:42.642529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.646487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:42.649513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:42.653468 line       494                         if (i == j):
excute 13:50:42.657489 line       496                         i_j_list.append((
excute 13:50:42.661479 line       497                             i, j,
excute 13:50:42.664470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.668463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:42.672426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:42.676407 line       494                         if (i == j):
excute 13:50:42.679429 line       496                         i_j_list.append((
excute 13:50:42.683419 line       497                             i, j,
excute 13:50:42.687408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.690401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:42.694359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:42.706705 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:42.709723 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:42.714716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:42.717706 line       494                         if (i == j):
excute 13:50:42.721697 line       496                         i_j_list.append((
excute 13:50:42.725684 line       497                             i, j,
excute 13:50:42.729644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.733663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0)]
excute 13:50:42.736655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:42.740645 line       494                         if (i == j):
excute 13:50:42.744634 line       496                         i_j_list.append((
excute 13:50:42.748623 line       497                             i, j,
excute 13:50:42.751618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.755605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:50:42.759563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:42.763554 line       494                         if (i == j):
excute 13:50:42.767546 line       496                         i_j_list.append((
excute 13:50:42.770565 line       497                             i, j,
excute 13:50:42.774554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.777546 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:50:42.781536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:42.785525 line       494                         if (i == j):
excute 13:50:42.789516 line       496                         i_j_list.append((
excute 13:50:42.792506 line       497                             i, j,
excute 13:50:42.796463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.799487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:50:42.803446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:42.806469 line       494                         if (i == j):
excute 13:50:42.810459 line       496                         i_j_list.append((
excute 13:50:42.814447 line       497                             i, j,
excute 13:50:42.817439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.821430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:50:42.824421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:42.828411 line       494                         if (i == j):
excute 13:50:42.833366 line       496                         i_j_list.append((
excute 13:50:42.837355 line       497                             i, j,
excute 13:50:42.840378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.844367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:50:42.847359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:42.851349 line       494                         if (i == j):
excute 13:50:42.856341 line       495                             continue
excute 13:50:42.859331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:42.863317 line       494                         if (i == j):
excute 13:50:42.867308 line       496                         i_j_list.append((
excute 13:50:42.870298 line       497                             i, j,
excute 13:50:42.874256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.877280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:50:42.881238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:42.885229 line       494                         if (i == j):
excute 13:50:42.889230 line       496                         i_j_list.append((
excute 13:50:42.893207 line       497                             i, j,
excute 13:50:42.896199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.900188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:50:42.904177 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:42.908167 line       494                         if (i == j):
excute 13:50:42.912157 line       496                         i_j_list.append((
excute 13:50:42.916147 line       497                             i, j,
excute 13:50:42.920133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.923127 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:50:42.927116 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:42.932102 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:42.936093 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:42.940111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:42.944104 line       494                         if (i == j):
excute 13:50:42.948061 line       496                         i_j_list.append((
excute 13:50:42.952080 line       497                             i, j,
excute 13:50:42.956037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.959029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:50:42.969004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:42.973989 line       494                         if (i == j):
excute 13:50:42.977979 line       496                         i_j_list.append((
excute 13:50:42.981967 line       497                             i, j,
excute 13:50:42.984959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:42.990943 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:42.994934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:42.998923 line       494                         if (i == j):
excute 13:50:43.002928 line       496                         i_j_list.append((
excute 13:50:43.006912 line       497                             i, j,
excute 13:50:43.010893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.014882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:43.018871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:43.022860 line       494                         if (i == j):
excute 13:50:43.027848 line       496                         i_j_list.append((
excute 13:50:43.030839 line       497                             i, j,
excute 13:50:43.034828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.039813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:43.043802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:43.047792 line       494                         if (i == j):
excute 13:50:43.051799 line       496                         i_j_list.append((
excute 13:50:43.054774 line       497                             i, j,
excute 13:50:43.058762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.061754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:43.065743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:43.072727 line       494                         if (i == j):
excute 13:50:43.076716 line       496                         i_j_list.append((
excute 13:50:43.079738 line       497                             i, j,
excute 13:50:43.083727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.086722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:43.093669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:43.097691 line       494                         if (i == j):
excute 13:50:43.101680 line       496                         i_j_list.append((
excute 13:50:43.105669 line       497                             i, j,
excute 13:50:43.108662 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.112651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:43.116608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:43.120598 line       494                         if (i == j):
excute 13:50:43.124586 line       495                             continue
excute 13:50:43.127578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:43.131567 line       494                         if (i == j):
excute 13:50:43.135558 line       496                         i_j_list.append((
excute 13:50:43.138549 line       497                             i, j,
excute 13:50:43.143568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.146559 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:43.150549 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:43.154507 line       494                         if (i == j):
excute 13:50:43.158495 line       496                         i_j_list.append((
excute 13:50:43.162485 line       497                             i, j,
excute 13:50:43.165509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.169498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:43.172490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:43.176480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:43.180469 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:43.184460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:43.188449 line       494                         if (i == j):
excute 13:50:43.192438 line       496                         i_j_list.append((
excute 13:50:43.195429 line       497                             i, j,
excute 13:50:43.199387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.202410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:50:43.206368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:43.210363 line       494                         if (i == j):
excute 13:50:43.213380 line       496                         i_j_list.append((
excute 13:50:43.217371 line       497                             i, j,
excute 13:50:43.220363 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.224353 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:43.227345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:43.231333 line       494                         if (i == j):
excute 13:50:43.235323 line       496                         i_j_list.append((
excute 13:50:43.239312 line       497                             i, j,
excute 13:50:43.243270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.247290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:43.251249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:43.255240 line       494                         if (i == j):
excute 13:50:43.260226 line       496                         i_j_list.append((
excute 13:50:43.264215 line       497                             i, j,
excute 13:50:43.267207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.271196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:43.275186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:43.279176 line       494                         if (i == j):
excute 13:50:43.283165 line       496                         i_j_list.append((
excute 13:50:43.287154 line       497                             i, j,
excute 13:50:43.292140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.295132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:43.299122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:43.303111 line       494                         if (i == j):
excute 13:50:43.308097 line       496                         i_j_list.append((
excute 13:50:43.311089 line       497                             i, j,
excute 13:50:43.315079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.319068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:43.323087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:43.330038 line       494                         if (i == j):
excute 13:50:43.340012 line       496                         i_j_list.append((
excute 13:50:43.344031 line       497                             i, j,
excute 13:50:43.348025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.352010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:43.356967 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:43.361959 line       494                         if (i == j):
excute 13:50:43.365944 line       496                         i_j_list.append((
excute 13:50:43.368965 line       497                             i, j,
excute 13:50:43.372955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.376912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:43.379936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:43.384891 line       494                         if (i == j):
excute 13:50:43.388880 line       495                             continue
excute 13:50:43.392870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:43.395861 line       494                         if (i == j):
excute 13:50:43.400849 line       496                         i_j_list.append((
excute 13:50:43.403840 line       497                             i, j,
excute 13:50:43.407829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.410821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:50:43.414810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:43.418800 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:43.422789 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:43.425781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:43.429770 line       494                         if (i == j):
excute 13:50:43.433759 line       496                         i_j_list.append((
excute 13:50:43.437749 line       497                             i, j,
excute 13:50:43.440741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.443733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0)]
excute 13:50:43.448722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:43.453706 line       494                         if (i == j):
excute 13:50:43.458693 line       496                         i_j_list.append((
excute 13:50:43.461687 line       497                             i, j,
excute 13:50:43.465676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.469665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:43.473655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:43.478640 line       494                         if (i == j):
excute 13:50:43.482630 line       496                         i_j_list.append((
excute 13:50:43.486620 line       497                             i, j,
excute 13:50:43.490607 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.493602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:43.497591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:43.501579 line       494                         if (i == j):
excute 13:50:43.506566 line       496                         i_j_list.append((
excute 13:50:43.509560 line       497                             i, j,
excute 13:50:43.513580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.516571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:43.520560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:43.524521 line       494                         if (i == j):
excute 13:50:43.528509 line       496                         i_j_list.append((
excute 13:50:43.531498 line       497                             i, j,
excute 13:50:43.535488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.538513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:43.542503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:43.546459 line       494                         if (i == j):
excute 13:50:43.550450 line       496                         i_j_list.append((
excute 13:50:43.554470 line       497                             i, j,
excute 13:50:43.558458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.561450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:50:43.565409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:43.569430 line       494                         if (i == j):
excute 13:50:43.574392 line       496                         i_j_list.append((
excute 13:50:43.577407 line       497                             i, j,
excute 13:50:43.581365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.584389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0)]
excute 13:50:43.588347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:43.595362 line       494                         if (i == j):
excute 13:50:43.599320 line       496                         i_j_list.append((
excute 13:50:43.603309 line       497                             i, j,
excute 13:50:43.606300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.610290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:43.614279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:43.618269 line       494                         if (i == j):
excute 13:50:43.622274 line       496                         i_j_list.append((
excute 13:50:43.626247 line       497                             i, j,
excute 13:50:43.630236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:43.633228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:43.637217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:43.642212 line       494                         if (i == j):
excute 13:50:43.646195 line       495                             continue
excute 13:50:43.650184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:43.655179 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:43.658192 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:50:43.662149 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:43.666150 line       505                     if (self.RELOCATE):
excute 13:50:43.670130 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:43.674118 line       505                     if (self.RELOCATE):
excute 13:50:43.678107 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:43.682097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:43.687083 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:43.695062 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:43.701046 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.705046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:43.708028 line       556                     i = i_j[0]
excute 13:50:43.713025 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:43.717005 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.720994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:43.724983 line       556                     i = i_j[0]
excute 13:50:43.729971 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:43.732962 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.736952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:43.740940 line       556                     i = i_j[0]
excute 13:50:43.744930 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:43.748919 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.753906 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:43.758891 line       556                     i = i_j[0]
excute 13:50:43.763878 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:43.766869 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.777861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:43.790808 line       556                     i = i_j[0]
excute 13:50:43.794796 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:43.798786 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.802776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:43.806770 line       556                     i = i_j[0]
excute 13:50:43.810755 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:43.814743 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.818733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:43.822722 line       556                     i = i_j[0]
excute 13:50:43.826716 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:43.830701 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.834690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:50:43.838679 line       556                     i = i_j[0]
excute 13:50:43.842668 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:43.846658 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.850647 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:50:43.854637 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:43.860620 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:43.864610 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.868598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:50:43.871590 line       556                     i = i_j[0]
excute 13:50:43.875579 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:43.879569 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.882559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:50:43.886549 line       556                     i = i_j[0]
excute 13:50:43.890539 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:43.893531 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.897520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:50:43.901509 line       556                     i = i_j[0]
excute 13:50:43.905507 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:43.908491 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.912480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:50:43.915472 line       556                     i = i_j[0]
excute 13:50:43.919461 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:43.923450 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.927440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:50:43.930432 line       556                     i = i_j[0]
excute 13:50:43.934421 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:43.937413 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.941403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:50:43.945392 line       556                     i = i_j[0]
excute 13:50:43.949381 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:43.953370 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.958358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:50:43.962347 line       556                     i = i_j[0]
excute 13:50:43.968331 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:43.971325 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.975344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:50:43.979334 line       556                     i = i_j[0]
excute 13:50:43.983292 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:43.986314 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:43.990305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:43.994293 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:43.998258 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:44.002242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.006231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:44.010219 line       556                     i = i_j[0]
excute 13:50:44.014209 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:44.017200 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.021190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:44.024181 line       556                     i = i_j[0]
excute 13:50:44.028170 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.032160 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.036150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:44.039141 line       556                     i = i_j[0]
excute 13:50:44.043131 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:44.047120 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.051110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:44.054102 line       556                     i = i_j[0]
excute 13:50:44.058092 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:44.061083 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.067070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:44.071088 line       556                     i = i_j[0]
excute 13:50:44.075079 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:44.079058 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.083052 line       555                 for i_j in i_j_list: